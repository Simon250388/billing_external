//
#Область СлужебныйИнтерфейс

// Процедура - Начислить
//
// Параметры:
//
// Получаемые наборы данных
Процедура Начислить(Делегат) Экспорт
	
	ПолучаемыеНаборы 	= Новый Массив;
	ПолучаемыеНаборы.Добавить(Новый Структура("ИмяНабора,ТаблицаДляПомещения","СпособыРасчетаПоНаправлениям",				"СпособыРасчетаПоНаправлениям"));
	ПолучаемыеНаборы.Добавить(Новый Структура("ИмяНабора,ТаблицаДляПомещения","ПоставщикиНеНачислять",						"ПоставщикиНеНачислять"));
	ПолучаемыеНаборы.Добавить(Новый Структура("ИмяНабора,ТаблицаДляПомещения","ЗначенияПовышающихКоэффициентов",			"ЗначенияПовышающихКоэффициентов"));
	ПолучаемыеНаборы.Добавить(Новый Структура("ИмяНабора,ТаблицаДляПомещения","ЗначенияТекущихНормПотребления",				"ЗначенияТекущихНормПотребления"));
	ПолучаемыеНаборы.Добавить(Новый Структура("ИмяНабора,ТаблицаДляПомещения","ЗначенияТекущихСоциальныхНормПотребления",	"ЗначенияТекущихСоциальныхНормПотребления"));
	ПолучаемыеНаборы.Добавить(Новый Структура("ИмяНабора,ТаблицаДляПомещения","ЗначенияТекущихТарифов",						"ЗначенияТекущихТарифов"));
	ПолучаемыеНаборы.Добавить(Новый Структура("ИмяНабора,ТаблицаДляПомещения","ИзменениеТарифовВПериоде",					"ИзменениеТарифовВПериоде"));
	ПолучаемыеНаборы.Добавить(Новый Структура("ИмяНабора,ТаблицаДляПомещения","НастройкаНачисленияГВСМКД",					"НастройкаНачисленияГВСМКД"));
	ПолучаемыеНаборы.Добавить(Новый Структура("ИмяНабора,ТаблицаДляПомещения","ТипСхемыГВС",								"ТипСхемыГВС"));
	ПолучаемыеНаборы.Добавить(Новый Структура("ИмяНабора,ТаблицаДляПомещения","ТипПринадлежностиМКД",						"ВидыТепловыхПунктов"));
	ПолучаемыеНаборы.Добавить(Новый Структура("ИмяНабора,ТаблицаДляПомещения","НастройкаСезонностиУслуг",					"НастройкаСезонностиУслуг"));
	ПолучаемыеНаборы.Добавить(Новый Структура("ИмяНабора,ТаблицаДляПомещения","НормаСкоростиДвиженияВоды",					"НормаСкоростиДвиженияВоды"));
	ПолучаемыеНаборы.Добавить(Новый Структура("ИмяНабора,ТаблицаДляПомещения","ПериодыСезонности",							"ПериодыСезонности"));
	ПолучаемыеНаборы.Добавить(Новый Структура("ИмяНабора,ТаблицаДляПомещения","ДокументыНачислений",						"ДокументыНачислений"));
	ПолучаемыеНаборы.Добавить(Новый Структура("ИмяНабора,ТаблицаДляПомещения","СреднийОбъемПотребленияАбонентов",			"СреднееПотреблениеАбонентов"));
	ПолучаемыеНаборы.Добавить(Новый Структура("ИмяНабора,ТаблицаДляПомещения","СтабильныеПериодыШкалы",						"СтабильныеПериодыШкалы"));
	ПолучаемыеНаборы.Добавить(Новый Структура("ИмяНабора,ТаблицаДляПомещения","СтабильныеПериодыИзмерителиНаправлений",		"СтабильныеПериодыИзмерителиНаправлений"));
	ПолучаемыеНаборы.Добавить(Новый Структура("ИмяНабора,ТаблицаДляПомещения","МаксимальныеПоказанияСрезПредыдущийПериод",	"МаксимальныеПоказанияСрезПредыдущийПериод"));
	ПолучаемыеНаборы.Добавить(Новый Структура("ИмяНабора,ТаблицаДляПомещения","МаксимальныеПоказанияСрез",					"МаксимальныеПоказания"));
	ПолучаемыеНаборы.Добавить(Новый Структура("ИмяНабора,ТаблицаДляПомещения","ПредоставленныеПоказания",					"ПредоставленныеПоказания"));
	ПолучаемыеНаборы.Добавить(Новый Структура("ИмяНабора,ТаблицаДляПомещения","ЗначениеПлощадейМКД",						"ЗначениеПлощадейМКД"));
	ПолучаемыеНаборы.Добавить(Новый Структура("ИмяНабора,ТаблицаДляПомещения","ЗначениеИндивидуальныхПлощадей",				"ЗначениеИндивидуальныхПлощадей"));
	ПолучаемыеНаборы.Добавить(Новый Структура("ИмяНабора,ТаблицаДляПомещения","НаличиеПриборовУчетаСНачалаГода",			"НаличиеПриборовУчетаСНачалаГода"));
	ПолучаемыеНаборы.Добавить(Новый Структура("ИмяНабора,ТаблицаДляПомещения","ДанныеСтабильныхПериодов",					"СтабильныеПериодыНачало"));
	ПолучаемыеНаборы.Добавить(Новый Структура("ИмяНабора,ТаблицаДляПомещения","НастройкиРасчетаСреднегоПотребления",		"НастройкиРасчетаСреднегоПотребления"));
	ПолучаемыеНаборы.Добавить(Новый Структура("ИмяНабора,ТаблицаДляПомещения","ДниИспользованияУслугПриОтсутствии",			"ДниИспользованияУслугПриОтсутствии"));
	ПолучаемыеНаборы.Добавить(Новый Структура("ИмяНабора,ТаблицаДляПомещения","ПроцентВетхостиСтроений",					"ПроцентВетхостиСтроений"));
	ПолучаемыеНаборы.Добавить(Новый Структура("ИмяНабора,ТаблицаДляПомещения","ДеньНачалаНачисленияПоСреднему",				"ДеньНачалаНачисленияПоСреднему"));
	ПолучаемыеНаборы.Добавить(Новый Структура("ИмяНабора,ТаблицаДляПомещения","ВидыДифференцированностиТарифныеЗоны",		"ВидыДифференцированностиТарифныеЗоны"));
	
	МВТ  								= Новый МенеджерВременныхТаблиц; 	
	Делегат.Инициализировать(МВТ,ПолучаемыеНаборы);
	ДокументНачисленияПустаяСсылка  	= Делегат.ДокументНачисленияПустаяСсылка();
	РезультатЗапроса 					= РезультатЗапросаИндивидуальныеНачисления(МВТ, ДокументНачисленияПустаяСсылка); 	
		
	ОбработатьРезультатЗапросаНачислений(РезультатЗапроса, Делегат);
		
КонецПроцедуры

Процедура РаспредениеОбъемаМКД(Организация,ПериодНачисления, Район, Строение, Документ)  Экспорт 
	Перем ТекСтроение, ТекУслуга, НаборЗаписей, НаборОтрицательныйОбъемРаспределения, НаборЗаписейПомещений, НаборЗаписейНП, НаборЗаписейСверхНорма, ТекМКДАбонентов, ТекУслугаАбонентов,
	ДокументОбъект, ДанныеПоУслуге, НаборВыполненные, ПараметрыРасчетаНорматива, РассчитыватьНорматив, НачисленияПоУслугам;
	
	СтруктураМКД_УК = Новый Соответствие;
	
	РаспредениеОбъемаМКД_УК(Организация, ПериодНачисления, Район, Строение, Документ, СтруктураМКД_УК);
		
	ГраницыПериода  						= Обработки.энргГраницыПериодаНачисленияМенеджер.ГраницыРасчетногоПериода(Организация,Район,ПериодНачисления,Ложь);	
	
	ВспомогательныеПараметры 				= Новый Структура("КонецПериодаРасчета", ГраницыПериода.ЗавершениеОП);
	МВТ 									= Новый МенеджерВременныхТаблиц;
	ПрочитатьНормативныеДанныеРаспределения(МВТ,Организация,ПериодНачисления,Район,ГраницыПериода);
	ПрочитатьДокументыДляРаспределения(МВТ,Организация,ПериодНачисления,Район,Строение,ГраницыПериода);
	ПрочитатьСозданныеДокументыИндивидуальныхНачислений(МВТ,Организация,ПериодНачисления,Район,Строение);
	ПрочитатьОбъемыНачисленийМКДДляРаспределения(МВТ,Организация,ПериодНачисления,Район,Строение,ГраницыПериода);
	ПрочитатьВспомогательныеДанныеРаспределениеМКД(МВТ,Организация,ПериодНачисления,Район,Строение,ВспомогательныеПараметры);
	
	Запрос 									= Новый Запрос;
	Запрос.МенеджерВременныхТаблиц 			= МВТ;
	Запрос.Текст 							= ТекстЗапросаДанныеДляРаспределения(Строение);
	
	Результат  								= Запрос.ВыполнитьПакет();
	ВыборкаЗначенияТарифов 					= Результат[1].Выбрать();
	ВыборкаОбъемМКД							= Результат[2].Выбрать();
	ВыборкаАбоненты							= Результат[3].Выбрать();
	ВыборкаОбъемПоПриборуКорректировать		= Результат[4].Выбрать();
	ВыборкаРазделенныеЛицевыеСчета			= Результат[5].Выбрать();
	ВыборкаОбъемПоПриборуНПКорректировать	= Результат[6].Выбрать();
	ВыборкаОтрицательныйОбъемРаспределения	= Результат[7].Выбрать();
    тзЗначенияСоциальныхНормативов 			= Результат[8].Выгрузить();
	
	РазделенныеЛицевыеСчета 				= Новый Соответствие;
	КлючРазделенныеЛицевыеСчета 			= "Абонент,ЗначениеПлощади,СпособРаспределенияОбъемаПомещения,ФиксированныйОбъемПотребления,
	|ДоляПотребленияЧислитель,ДоляПотребленияЗнаменатель,КоличествоПроживающих,КоличествоПрописанных,КоличествоСобственников,КоличествоЧеловек,ТарифнаяГруппа,Поставщик,ЗначениеСоциальнойНормы,ДопСоциальнаяНормаПотребления";
			
	Если ВыборкаОбъемМКД.Количество() = 0 Тогда
		Набор 								= РегистрыСведений.энргОтложенныеДвиженияДокументов.СоздатьНаборЗаписей();
		Набор.Отбор.Организация.Установить(Организация);
		Набор.Отбор.ПериодНачисления.Установить(ПериодНачисления);
		Набор.Отбор.Район.Установить(Район);
		Набор.Отбор.РазделЗаписи.Установить(Перечисления.энргРазделыЗаписи.РаспределениеМКД);
		Если Не Строение = Неопределено Тогда
			ЧастныйСектор 					= НЕ ЗначениеЗаполнено(Строение);
			Набор.Отбор.ЧастныйСектор.Установить(ЧастныйСектор);
			Если Не ЧастныйСектор Тогда
				Набор.Отбор.Строение.Установить(Строение);
			КонецЕсли; 			
		КонецЕсли;
		Набор.Записать();
		Возврат;
	КонецЕсли;
	
	ЗначенияТарифов 						= Новый Соответствие;
	Если ВыборкаЗначенияТарифов.Количество() > 0 Тогда
		Пока ВыборкаЗначенияТарифов.Следующий() Цикл
			ХэшСтроки 						= ХэшСтрокиТарифа(ВыборкаЗначенияТарифов.ГруппаПотребителей,ВыборкаЗначенияТарифов.Услуга,ВыборкаЗначенияТарифов.Поставщик,ВыборкаЗначенияТарифов.ТарифнаяЗона);
			ОписаниеЗначения 				= Новый Структура("Значение,ЗначениеТарифаРЭК,ЗначениеСверхНорматива,СтавкаНДС,НДСВнутри,ГруппаПотребителей,Услуга,Поставщик,ТарифнаяЗона");
			ЗаполнитьЗначенияСвойств(ОписаниеЗначения, ВыборкаЗначенияТарифов);			
			ЗначенияТарифов.Вставить(ХэшСтроки,ОписаниеЗначения); 			
		КонецЦикла;		
	КонецЕсли;
	
	ВыборкаАбоненты.следующий();
	ВыборкаОбъемПоПриборуНПКорректировать.Следующий();
	ВыборкаОтрицательныйОбъемРаспределения.Следующий();
	
	ЕстьРазделенныеЛицевыеСчета 				= ВыборкаРазделенныеЛицевыеСчета.Следующий();
	
	Отказ 										= Ложь;
	ТипыНачислений 								= энргНачисления.ТипыРасходовВФормулахРасчета();
	ТекстИсключения		 						= "";
	ИспользоватьТарифРек 						= Ложь;
	Если РегистрыСведений.энргИспользованиеТарифовРЭК.ПолучитьПоследнее(ГраницыПериода.ЗавершениеОП-1,Новый Структура("Организация,Район",Организация, Район)).ПрименятьТарифРЭК Тогда
		ИспользоватьТарифРек 					= Истина;
	КонецЕсли;  	
	
	РаспределениеОбъемаПоУслугам 				= Новый Соответствие;
	РаспределениеОбъемаПоУслугамПотребленный 	= Новый Соответствие;
	
	Пока ВыборкаОбъемМКД.Следующий() Цикл
		
		//Если СтруктураМКД_УК.Получить(ВыборкаОбъемМКД.Строение)<> Неопределено и СтруктураМКД_УК.Получить(ВыборкаОбъемМКД.Строение).Найти(ВыборкаОбъемМКД.Услуга) <>  Неопределено Тогда
		//	Продолжить;	
		//КонецЕсли;
		
		Если НЕ ТекСтроение = ВыборкаОбъемМКД.Строение 
			ИЛИ НЕ ТекУслуга = ВыборкаОбъемМКД.Услуга Тогда
												
			Если Не ТекУслуга  = Неопределено Тогда
				Если ПустаяСтрока(ДанныеПоУслуге.ФормулаРасчетаНорматива) Тогда
					РаспределитьОбъемПоУслугеМКД(ПериодНачисления, Организация, Район, ТекСтроение, ТекУслуга, ГраницыПериода, ЗначенияТарифов, ДанныеПоУслуге, ДокументОбъект, РаспределениеОбъемаПоУслугам, НаборОтрицательныйОбъемРаспределения, НаборЗаписей, НаборЗаписейПомещений, НаборЗаписейНП, НаборЗаписейСверхНорма,ИспользоватьТарифРек);
					РаспределитьОбъемПотребленныйПоУслугеМКД(ПериодНачисления, Организация, Район, ТекСтроение, ТекУслуга, ГраницыПериода, ЗначенияТарифов, ДанныеПоУслуге, ДокументОбъект, РаспределениеОбъемаПоУслугамПотребленный, НаборОтрицательныйОбъемРаспределения, НаборЗаписей, НаборЗаписейПомещений, НаборЗаписейНП, НаборЗаписейСверхНорма, ИспользоватьТарифРек);	
				КонецЕсли;
				ЗаполнитьПараметрыРасчетаНорматива(ДанныеПоУслуге, ПараметрыРасчетаНорматива, РассчитыватьНорматив, ТипыНачислений, ТекУслуга, НачисленияПоУслугам);
			КонецЕсли;
			
			Если НЕ ТекСтроение = ВыборкаОбъемМКД.Строение Тогда
				Если НЕ ТекСтроение = Неопределено Тогда
					// Рассчитываем норматив
					РассчитатьНормативПоФормуле(ПараметрыРасчетаНорматива, РассчитыватьНорматив,НачисленияПоУслугам,ЗначенияТарифов,ГраницыПериода,Отказ,НаборЗаписей, НаборЗаписейПомещений, НаборЗаписейНП);
					ЗаписатьНаборыЗаписейПриРаспределении(Отказ, ДокументОбъект, ТекстИсключения, НаборВыполненные, НаборОтрицательныйОбъемРаспределения,НаборЗаписей, НаборЗаписейНП, НаборЗаписейПомещений, НаборЗаписейСверхНорма);
				КонецЕсли;
				НачатьТранзакцию();
				// запоминаем свойства разделенных лицевых счетов по услугам
				РаспределениеОбъемаПоУслугам 	= Новый Соответствие;
				Отказ 							= Ложь;
				РассчитыватьНорматив 			= Новый Массив;
				ПараметрыРасчетаНорматива 		= Новый Соответствие;
				РазделенныеЛицевыеСчета 		= Новый Соответствие;
				НачисленияПоУслугам 			= Новый Соответствие;
				Если ЕстьРазделенныеЛицевыеСчета Тогда
					ЗаполнитьРазделенныеЛицевыеСчета(КлючРазделенныеЛицевыеСчета, РазделенныеЛицевыеСчета, ВыборкаРазделенныеЛицевыеСчета, ВыборкаОбъемМКД, тзЗначенияСоциальныхНормативов);					
				КонецЕсли; 				
			КонецЕсли;			
						
			ДанныеПоУслуге 					= ДанныеПоУслугиДляРаспределения(ВыборкаОбъемМКД, РазделенныеЛицевыеСчета);
			
			ЗаполнитьДанныеАбонентовДляРаспределения(ДанныеПоУслуге, ВыборкаАбоненты, ВыборкаОбъемМКД, ВыборкаОтрицательныйОбъемРаспределения, ВыборкаОбъемПоПриборуКорректировать, ВыборкаОбъемПоПриборуНПКорректировать);
						
			Если НЕ ТекСтроение = ВыборкаОбъемМКД.Строение Тогда
				ПрочитатьНаборыДляЗаписиПриРаспределении(ВыборкаОбъемМКД, ДокументОбъект, НаборВыполненные, НаборЗаписей, НаборОтрицательныйОбъемРаспределения, НаборЗаписейПомещений, НаборЗаписейНП, НаборЗаписейСверхНорма, ГраницыПериода);
			КонецЕсли;		
		КонецЕсли;
		
		ЗаполнитьОбъемыМКДПриРаспределении(ВыборкаОбъемМКД, ДанныеПоУслуге);
		
		ТекСтроение							= ВыборкаОбъемМКД.Строение;
		ТекУслуга 							= ВыборкаОбъемМКД.Услуга;
	КонецЦикла; 	
	
	Если Не ТекСтроение = Неопределено Тогда		
		Если ПустаяСтрока(ДанныеПоУслуге.ФормулаРасчетаНорматива) Тогда
			РаспределитьОбъемПоУслугеМКД(ПериодНачисления, Организация, Район, ТекСтроение, ТекУслуга, ГраницыПериода, ЗначенияТарифов, ДанныеПоУслуге, ДокументОбъект, РаспределениеОбъемаПоУслугам, НаборОтрицательныйОбъемРаспределения, НаборЗаписей, НаборЗаписейПомещений, НаборЗаписейНП, НаборЗаписейСверхНорма, ИспользоватьТарифРек);
			РаспределитьОбъемПотребленныйПоУслугеМКД(ПериодНачисления, Организация, Район, ТекСтроение, ТекУслуга, ГраницыПериода, ЗначенияТарифов, ДанныеПоУслуге, ДокументОбъект, РаспределениеОбъемаПоУслугамПотребленный, НаборОтрицательныйОбъемРаспределения, НаборЗаписей, НаборЗаписейПомещений, НаборЗаписейНП, НаборЗаписейСверхНорма, ИспользоватьТарифРек);
		КонецЕсли;		
		ЗаполнитьПараметрыРасчетаНорматива(ДанныеПоУслуге, ПараметрыРасчетаНорматива, РассчитыватьНорматив, ТипыНачислений, ТекУслуга, НачисленияПоУслугам);
		РассчитатьНормативПоФормуле(ПараметрыРасчетаНорматива, РассчитыватьНорматив, НачисленияПоУслугам, ЗначенияТарифов, ГраницыПериода, Отказ, НаборЗаписей, НаборЗаписейПомещений, НаборЗаписейНП);
		ЗаписатьНаборыЗаписейПриРаспределении(Отказ, ДокументОбъект, ТекстИсключения, НаборВыполненные, НаборОтрицательныйОбъемРаспределения,НаборЗаписей, НаборЗаписейНП, НаборЗаписейПомещений, НаборЗаписейСверхНорма);
	КонецЕсли;
		
КонецПроцедуры

Процедура РаспредениеОбъемаМКД_УК(Организация,ПериодНачисления, Район,МКД, Документ,СтруктураМКД_УК)  Экспорт 
	
	ГраницыПериода  				= Обработки.энргГраницыПериодаНачисленияМенеджер.ГраницыРасчетногоПериода(Организация,Район,ПериодНачисления,Ложь);
	МВТ 							= Новый МенеджерВременныхТаблиц;
	Запрос  						= Новый Запрос;
	Запрос.МенеджерВременныхТаблиц 	= МВТ;
	Запрос.УстановитьПараметр("Организация",		Организация);
	Запрос.УстановитьПараметр("ПериодНачисления",	ПериодНачисления);  
	Запрос.УстановитьПараметр("Дата",				ГраницыПериода.ЗавершениеОП-1);
	Запрос.УстановитьПараметр("Район",				Район);
	Запрос.УстановитьПараметр("Строение",			МКД);
	Запрос.УстановитьПараметр("НачалоПериода",		ГраницыПериода.НачалоОП);
	Запрос.УстановитьПараметр("КонецПериода",		ГраницыПериода.ЗавершениеОП);
	Запрос.УстановитьПараметр("Поставщик",			Константы.энргПоставщикПоУмолчанию.Получить());
	Запрос.Текст = "ВЫБРАТЬ
	               |	энргФормыУправленияМКДСрезПоследних.МКД КАК МКД,
	               |	энргФормыУправленияМКДСрезПоследних.УК КАК УК,
	               |	НАЧАЛОПЕРИОДА(энргФормыУправленияМКДСрезПоследних.Период, ДЕНЬ) КАК Период
	               |ПОМЕСТИТЬ СменаУК
	               |ИЗ
	               |	РегистрСведений.энргФормыУправленияМКД.СрезПоследних(
	               |			&НачалоПериода,
	               |			Организация = &Организация
	               |				И Район = &Район
	               |				И МКД = &Строение) КАК энргФормыУправленияМКДСрезПоследних
	               |ГДЕ
	               |	энргФормыУправленияМКДСрезПоследних.ФормаУправления = ЗНАЧЕНИЕ(Перечисление.энргФормыУправленияМКД.УК)
	               |
	               |ОБЪЕДИНИТЬ
	               |
	               |ВЫБРАТЬ
	               |	энргФормыУправленияМКД.МКД,
	               |	энргФормыУправленияМКД.УК,
	               |	НАЧАЛОПЕРИОДА(энргФормыУправленияМКД.Период, ДЕНЬ)
	               |ИЗ
	               |	РегистрСведений.энргФормыУправленияМКД КАК энргФормыУправленияМКД
	               |ГДЕ
	               |	энргФормыУправленияМКД.Период МЕЖДУ &НачалоПериода И &КонецПериода
	               |	И энргФормыУправленияМКД.ФормаУправления = ЗНАЧЕНИЕ(Перечисление.энргФормыУправленияМКД.УК)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СменаУК.МКД КАК МКД,
	               |	СменаУК.УК КАК УК,
	               |	СменаУК.Период КАК Период,
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СменаУК1.Период) КАК НомерПозиции
	               |ПОМЕСТИТЬ СменаУКНомерПозиции
	               |ИЗ
	               |	СменаУК КАК СменаУК
	               |		ЛЕВОЕ СОЕДИНЕНИЕ СменаУК КАК СменаУК1
	               |		ПО СменаУК.МКД = СменаУК1.МКД
	               |			И СменаУК.Период > СменаУК1.Период
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	СменаУК.МКД,
	               |	СменаУК.УК,
	               |	СменаУК.Период
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СменаУКНомерПозиции.МКД КАК МКД,
	               |	СменаУКНомерПозиции.УК КАК УК,
	               |	СменаУКНомерПозиции.Период КАК Период,
	               |	ВЫБОР
	               |		КОГДА СменаУКНомерПозиции.Период < &НачалоПериода
	               |			ТОГДА &НачалоПериода
	               |		ИНАЧЕ СменаУКНомерПозиции.Период
	               |	КОНЕЦ КАК НачалоУК,
	               |	ВЫБОР
	               |		КОГДА СменаУКНомерПозиции1.Период ЕСТЬ NULL
	               |			ТОГДА &КОНЕЦПериода
	               |		ИНАЧЕ СменаУКНомерПозиции1.Период
	               |	КОНЕЦ КАК КонецУК
	               |ПОМЕСТИТЬ СменаУК_СтабПер
	               |ИЗ
	               |	СменаУКНомерПозиции КАК СменаУКНомерПозиции
	               |		ЛЕВОЕ СОЕДИНЕНИЕ СменаУКНомерПозиции КАК СменаУКНомерПозиции1
	               |		ПО СменаУКНомерПозиции.МКД = СменаУКНомерПозиции1.МКД
	               |			И (СменаУКНомерПозиции1.НомерПозиции = СменаУКНомерПозиции.НомерПозиции + 1)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СменаУК_СтабПер.МКД КАК МКД,
	               |	СменаУК_СтабПер.УК КАК УК,
	               |	РАЗНОСТЬДАТ(СменаУК_СтабПер.НачалоУК, СменаУК_СтабПер.КонецУК, ДЕНЬ) / РАЗНОСТЬДАТ(&НачалоПериода, &КонецПериода, ДЕНЬ) КАК Коэф
	               |ПОМЕСТИТЬ СменаУК_Конец
	               |ИЗ
	               |	СменаУК_СтабПер КАК СменаУК_СтабПер
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	энргСостояниеМКДСрезПоследних.МКД КАК МКД
	               |ПОМЕСТИТЬ АктивныеМКД
	               |ИЗ
	               |	РегистрСведений.энргСостояниеМКД.СрезПоследних(
	               |			&КонецПериода,
	               |			Район = &Район
	               |				И Организация = &Организация
	               |				И МКД В
	               |					(ВЫБРАТЬ
	               |						СменаУК_Конец.МКД КАК МКД
	               |					ИЗ
	               |						СменаУК_Конец КАК СменаУК_Конец)) КАК энргСостояниеМКДСрезПоследних
	               |ГДЕ
	               |	энргСостояниеМКДСрезПоследних.Состояние
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	энргСостояниеМКДСрезПоследних.МКД
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	энргНастройкиРасчетаСреднегоПотребленияСрезПоследних.Услуга КАК Услуга,
	               |	энргНастройкиРасчетаСреднегоПотребленияСрезПоследних.КоличествоПоказаний КАК КоличествоПоказаний
	               |ПОМЕСТИТЬ НастройкаСреднего
	               |ИЗ
	               |	РегистрСведений.энргНастройкиРасчетаСреднегоПотребления.СрезПоследних(
	               |			&ПериодНачисления,
	               |			Организация = &Организация
	               |				И Район = &Район
	               |				И НаправлениеИспользованияТУ = ЗНАЧЕНИЕ(Справочник.энргНаправлениеИспользованияТочекУчета.ОсновноеНаправление)) КАК энргНастройкиРасчетаСреднегоПотребленияСрезПоследних
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	энргОтложенныеДвиженияДокументов.Организация КАК Организация,
	               |	энргОтложенныеДвиженияДокументов.ПериодНачисления КАК ПериодНачисления,
	               |	энргОтложенныеДвиженияДокументов.Район КАК Район,
	               |	энргОтложенныеДвиженияДокументов.Строение КАК Строение
	               |ПОМЕСТИТЬ ДокументыДляРаспределения
	               |ИЗ
	               |	РегистрСведений.энргОтложенныеДвиженияДокументов КАК энргОтложенныеДвиженияДокументов
	               |ГДЕ
	               |	энргОтложенныеДвиженияДокументов.Организация = &Организация
	               |	И энргОтложенныеДвиженияДокументов.ПериодНачисления = &ПериодНачисления
	               |	И энргОтложенныеДвиженияДокументов.Район = &Район
	               |	И энргОтложенныеДвиженияДокументов.РазделЗаписи = ЗНАЧЕНИЕ(Перечисление.энргРазделыЗаписи.РаспределениеМКД)
	               |	И НЕ энргОтложенныеДвиженияДокументов.ЧастныйСектор
	               |	И энргОтложенныеДвиженияДокументов.Строение = &Строение
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	энргСтабильныеПериодыМКД.Организация КАК Организация,
	               |	энргСтабильныеПериодыМКД.Район КАК Район,
	               |	энргСтабильныеПериодыМКД.МКД КАК МКД,
	               |	энргСтабильныеПериодыМКД.Услуга КАК Услуга,
	               |	энргСтабильныеПериодыМКД.ТочкаУчета КАК ТочкаУчета,
	               |	энргСтабильныеПериодыМКД.ЗначениеПлощади КАК ПлощадьМОП,
	               |	энргСтабильныеПериодыМКД.СоставнаяУслуга КАК СоставнаяУслуга,
	               |	энргСтабильныеПериодыМКД.КлючНорматива КАК КлючНорматива
	               |ПОМЕСТИТЬ УслугиМКДРаспределять
	               |ИЗ
	               |	ДокументыДляРаспределения КАК ДокументыДляРаспределения
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.энргСтабильныеПериодыМКД КАК энргСтабильныеПериодыМКД
	               |		ПО ДокументыДляРаспределения.Организация = энргСтабильныеПериодыМКД.Организация
	               |			И (энргСтабильныеПериодыМКД.ПериодНачисления = &ПериодНачисления)
	               |			И ДокументыДляРаспределения.Район = энргСтабильныеПериодыМКД.Район
	               |			И ДокументыДляРаспределения.Строение = энргСтабильныеПериодыМКД.МКД
	               |			И (энргСтабильныеПериодыМКД.НомерПозиции = 0)
	               |			И (энргСтабильныеПериодыМКД.НеРаспределятьНаАбонентов)
	               |			И (энргСтабильныеПериодыМКД.Организация = &Организация)
	               |			И (энргСтабильныеПериодыМКД.Район = &Район)
	               |			И (энргСтабильныеПериодыМКД.МКД = &Строение)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	бестДоговорыТочекУчетаСрезПоследних.ТочкаУчета КАК ТочкаУчета,
	               |	бестДоговорыТочекУчетаСрезПоследних.ОбъектРасчета КАК ОбъектРасчета,
	               |	бестДоговорыТочекУчетаСрезПоследних.Договор КАК Договор,
	               |	бестДоговорыТочекУчетаСрезПоследних.Организация КАК Организация,
	               |	бестДоговорыТочекУчетаСрезПоследних.Район КАК Район,
	               |	бестОбъектыРасчета.МКД КАК МКД,
	               |	УслугиМКДРаспределять.Услуга КАК Услуга,
	               |	энргДоговорыКонтрагентов.Контрагент КАК Контрагент
	               |ПОМЕСТИТЬ ОбъектыРасчетаТУ
	               |ИЗ
	               |	РегистрСведений.бестДоговорыТочекУчета.СрезПоследних(
	               |			&КонецПериода,
	               |			Организация = &Организация
	               |				И Район = &Район) КАК бестДоговорыТочекУчетаСрезПоследних
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ УслугиМКДРаспределять КАК УслугиМКДРаспределять
	               |		ПО бестДоговорыТочекУчетаСрезПоследних.Организация = УслугиМКДРаспределять.Организация
	               |			И бестДоговорыТочекУчетаСрезПоследних.Район = УслугиМКДРаспределять.Район
	               |			И бестДоговорыТочекУчетаСрезПоследних.ТочкаУчета = УслугиМКДРаспределять.ТочкаУчета
	               |			И бестДоговорыТочекУчетаСрезПоследних.Услуга = УслугиМКДРаспределять.Услуга
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.бестОбъектыРасчета КАК бестОбъектыРасчета
	               |		ПО бестДоговорыТочекУчетаСрезПоследних.ОбъектРасчета = бестОбъектыРасчета.Ссылка
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.энргДоговорыКонтрагентов КАК энргДоговорыКонтрагентов
	               |		ПО бестДоговорыТочекУчетаСрезПоследних.Договор = энргДоговорыКонтрагентов.Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОбъектыРасчетаТУ.ТочкаУчета КАК ТочкаУчета,
	               |	ОбъектыРасчетаТУ.ОбъектРасчета КАК ОбъектРасчета,
	               |	ОбъектыРасчетаТУ.Договор КАК Договор,
	               |	ОбъектыРасчетаТУ.Организация КАК Организация,
	               |	ОбъектыРасчетаТУ.Район КАК Район,
	               |	СменаУК_Конец.Коэф КАК Коэф,
	               |	ОбъектыРасчетаТУ.МКД КАК МКД,
	               |	ОбъектыРасчетаТУ.Услуга КАК Услуга,
	               |	ОбъектыРасчетаТУ.Контрагент КАК Контрагент
	               |ПОМЕСТИТЬ ОбъектыРасчетаКоэф
	               |ИЗ
	               |	ОбъектыРасчетаТУ КАК ОбъектыРасчетаТУ
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СменаУК_Конец КАК СменаУК_Конец
	               |		ПО ОбъектыРасчетаТУ.МКД = СменаУК_Конец.МКД
	               |			И ОбъектыРасчетаТУ.Контрагент = СменаУК_Конец.УК
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	энргОбъемНачисленийМКД.МКД КАК МКД,
	               |	энргОбъемНачисленийМКД.Услуга КАК Услуга,
	               |	СУММА(энргОбъемНачисленийМКД.ОбъемУслуги) КАК ОбъемУслуги,
	               |	МАКСИМУМ(ВЫБОР
	               |			КОГДА энргОбъемНачисленийМКД.СпособНачисления = ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.ПоНормативу)
	               |					ИЛИ энргОбъемНачисленийМКД.СпособНачисления = ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.СреднееПоНормативу)
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ ЛОЖЬ
	               |		КОНЕЦ) КАК НачислятьПоНорме,
	               |	энргОбъемНачисленийМКД.ТочкаУчета КАК ТочкаУчета,
	               |	ВЫБОР
	               |		КОГДА энргОбъемНачисленийМКД.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.энргВидыНачислений.Перерасчет)
	               |			ТОГДА ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.ПоПриборам)
	               |		ИНАЧЕ энргОбъемНачисленийМКД.СпособНачисления
	               |	КОНЕЦ КАК СпособНачисления,
	               |	МАКСИМУМ(энргОбъемНачисленийМКД.РаспределятьНаТочку) КАК РаспределятьНаТочку,
	               |	МАКСИМУМ(энргОбъемНачисленийМКД.НормаПотребления) КАК НормаПотребления,
	               |	МАКСИМУМ(энргОбъемНачисленийМКД.ОбъемУслугиНорматив) КАК ОбъемУслугиНорматив,
	               |	энргОбъемНачисленийМКД.ТарифнаяЗона КАК ТарифнаяЗона,
	               |	энргОбъемНачисленийМКД.Поставщик КАК Поставщик,
	               |	МАКСИМУМ(энргСтроенияВидыБлагоустройстваТарифныеКатегории.ТарифнаяКатегория) КАК ТарифнаяКатегория,
	               |	энргОбъемНачисленийМКД.Организация КАК Организация,
	               |	энргОбъемНачисленийМКД.Район КАК Район
	               |ПОМЕСТИТЬ ОбъемыМКД
	               |ИЗ
	               |	РегистрНакопления.энргОбъемНачисленийМКД КАК энргОбъемНачисленийМКД
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргСтроения.ВидыБлагоустройстваТарифныеКатегории КАК энргСтроенияВидыБлагоустройстваТарифныеКатегории
	               |		ПО энргОбъемНачисленийМКД.МКД = энргСтроенияВидыБлагоустройстваТарифныеКатегории.Ссылка
	               |			И энргОбъемНачисленийМКД.Услуга = энргСтроенияВидыБлагоустройстваТарифныеКатегории.Услуга
	               |ГДЕ
	               |	энргОбъемНачисленийМКД.Период МЕЖДУ &НачалоПериода И &КонецПериода
	               |	И энргОбъемНачисленийМКД.Организация = &Организация
	               |	И энргОбъемНачисленийМКД.Район = &Район
	               |	И (энргОбъемНачисленийМКД.СпособНачисления = ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.ПоПриборам)
	               |			ИЛИ энргОбъемНачисленийМКД.СпособНачисления = ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.НачислениеПоСреднему)
	               |			ИЛИ энргОбъемНачисленийМКД.СпособНачисления = ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.ПоНормативу)
	               |			ИЛИ энргОбъемНачисленийМКД.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.энргВидыНачислений.Перерасчет))
	               |	И энргОбъемНачисленийМКД.МКД В
	               |			(ВЫБРАТЬ
	               |				АктивныеМКД.МКД КАК МКД
	               |			ИЗ
	               |				АктивныеМКД КАК АктивныеМКД)
	               |	И энргОбъемНачисленийМКД.ОбъемУслуги <> 0
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	энргОбъемНачисленийМКД.МКД,
	               |	энргОбъемНачисленийМКД.Услуга,
	               |	энргОбъемНачисленийМКД.ТочкаУчета,
	               |	ВЫБОР
	               |		КОГДА энргОбъемНачисленийМКД.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.энргВидыНачислений.Перерасчет)
	               |			ТОГДА ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.ПоПриборам)
	               |		ИНАЧЕ энргОбъемНачисленийМКД.СпособНачисления
	               |	КОНЕЦ,
	               |	энргОбъемНачисленийМКД.ТарифнаяЗона,
	               |	энргОбъемНачисленийМКД.Поставщик,
	               |	энргОбъемНачисленийМКД.Организация,
	               |	энргОбъемНачисленийМКД.Район
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОбъемыМКД.МКД КАК МКД,
	               |	ОбъемыМКД.Услуга КАК Услуга,
	               |	СУММА(ВЫБОР
	               |			КОГДА ОбъемыМКД1.ОбъемУслуги ЕСТЬ NULL
	               |				ТОГДА ОбъемыМКД.ОбъемУслуги
	               |			ИНАЧЕ ОбъемыМКД1.ОбъемУслуги + ОбъемыМКД.ОбъемУслуги
	               |		КОНЕЦ) КАК ОбъемУслуги,
	               |	МАКСИМУМ(ОбъемыМКД.НачислятьПоНорме) КАК НачислятьПоНорме,
	               |	ВЫБОР
	               |		КОГДА ОбъемыМКД1.ТочкаУчета ЕСТЬ NULL
	               |			ТОГДА ОбъемыМКД.ТочкаУчета
	               |		ИНАЧЕ ОбъемыМКД1.ТочкаУчета
	               |	КОНЕЦ КАК ТочкаУчета,
	               |	МАКСИМУМ(ОбъемыМКД.СпособНачисления) КАК СпособНачисления,
	               |	МАКСИМУМ(ОбъемыМКД.НормаПотребления) КАК НормаПотребления,
	               |	МАКСИМУМ(ОбъемыМКД.ОбъемУслугиНорматив) КАК ОбъемУслугиНорматив,
	               |	ОбъемыМКД.Поставщик КАК Поставщик,
	               |	ОбъемыМКД.ТарифнаяКатегория КАК ТарифнаяКатегория,
	               |	ОбъемыМКД.ТарифнаяЗона КАК ТарифнаяЗона,
	               |	ОбъемыМКД.Организация КАК Организация,
	               |	ОбъемыМКД.Район КАК Район
	               |ПОМЕСТИТЬ ОбъемМКД_РаспределениеТУ
	               |ИЗ
	               |	ОбъемыМКД КАК ОбъемыМКД
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОбъемыМКД КАК ОбъемыМКД1
	               |		ПО ОбъемыМКД.МКД = ОбъемыМКД1.МКД
	               |			И ОбъемыМКД.Услуга = ОбъемыМКД1.Услуга
	               |			И (ОбъемыМКД1.РаспределятьНаТочку)
	               |			И (НЕ ОбъемыМКД.РаспределятьНаТочку)
	               |			И ОбъемыМКД.ТарифнаяЗона = ОбъемыМКД1.ТарифнаяЗона
	               |			И ОбъемыМКД.Поставщик = ОбъемыМКД1.Поставщик
	               |			И ОбъемыМКД.ТарифнаяКатегория = ОбъемыМКД1.ТарифнаяКатегория
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ОбъемыМКД.МКД,
	               |	ОбъемыМКД.Услуга,
	               |	ВЫБОР
	               |		КОГДА ОбъемыМКД1.ТочкаУчета ЕСТЬ NULL
	               |			ТОГДА ОбъемыМКД.ТочкаУчета
	               |		ИНАЧЕ ОбъемыМКД1.ТочкаУчета
	               |	КОНЕЦ,
	               |	ОбъемыМКД.Поставщик,
	               |	ОбъемыМКД.ТарифнаяКатегория,
	               |	ОбъемыМКД.ТарифнаяЗона,
	               |	ОбъемыМКД.Организация,
	               |	ОбъемыМКД.Район
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ОбъемыМКД.МКД,
	               |	ОбъемыМКД.Услуга,
	               |	СУММА(ОбъемыМКД.ОбъемУслуги),
	               |	МАКСИМУМ(ОбъемыМКД.НачислятьПоНорме),
	               |	ОбъемыМКД.ТочкаУчета,
	               |	МАКСИМУМ(ОбъемыМКД.СпособНачисления),
	               |	МАКСИМУМ(ОбъемыМКД.НормаПотребления),
	               |	МАКСИМУМ(ОбъемыМКД.ОбъемУслугиНорматив),
	               |	ОбъемыМКД.Поставщик,
	               |	ОбъемыМКД.ТарифнаяКатегория,
	               |	ОбъемыМКД.ТарифнаяЗона,
	               |	ОбъемыМКД.Организация,
	               |	ОбъемыМКД.Район
	               |ИЗ
	               |	ОбъемыМКД КАК ОбъемыМКД
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ОбъемыМКД КАК ОбъемыМКД1
	               |		ПО ОбъемыМКД.МКД = ОбъемыМКД1.МКД
	               |			И ОбъемыМКД.Услуга = ОбъемыМКД1.Услуга
	               |			И (ОбъемыМКД1.РаспределятьНаТочку)
	               |			И ОбъемыМКД.Поставщик = ОбъемыМКД1.Поставщик
	               |			И ОбъемыМКД.ТарифнаяКатегория = ОбъемыМКД1.ТарифнаяКатегория
	               |			И ОбъемыМКД.ТарифнаяЗона = ОбъемыМКД1.ТарифнаяЗона
	               |ГДЕ
	               |	ОбъемыМКД1.Услуга ЕСТЬ NULL
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ОбъемыМКД.МКД,
	               |	ОбъемыМКД.Услуга,
	               |	ОбъемыМКД.ТочкаУчета,
	               |	ОбъемыМКД.ТарифнаяЗона,
	               |	ОбъемыМКД.Поставщик,
	               |	ОбъемыМКД.ТарифнаяКатегория,
	               |	ОбъемыМКД.Организация,
	               |	ОбъемыМКД.Район
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОбъемМКД_РаспределениеТУ.МКД КАК МКД,
	               |	ОбъемМКД_РаспределениеТУ.Услуга КАК Услуга,
	               |	ОбъемМКД_РаспределениеТУ.ОбъемУслуги КАК ОбъемУслуги,
	               |	ОбъемМКД_РаспределениеТУ.НачислятьПоНорме КАК НачислятьПоНорме,
	               |	ОбъемМКД_РаспределениеТУ.ТочкаУчета КАК ТочкаУчета,
	               |	ОбъемМКД_РаспределениеТУ.СпособНачисления КАК СпособНачисления,
	               |	ОбъемМКД_РаспределениеТУ.НормаПотребления КАК НормаПотребления,
	               |	ОбъемМКД_РаспределениеТУ.ОбъемУслугиНорматив КАК ОбъемУслугиНорматив,
	               |	ОбъемМКД_РаспределениеТУ.Поставщик КАК Поставщик,
	               |	ОбъемМКД_РаспределениеТУ.ТарифнаяКатегория КАК ТарифнаяКатегория,
	               |	ОбъемМКД_РаспределениеТУ.ТарифнаяЗона КАК ТарифнаяЗона,
	               |	ЕСТЬNULL(энргЗначенияТарифовСрезПоследних.Значение, 0) КАК Значение,
	               |	ЕСТЬNULL(энргЗначенияТарифовСрезПоследних.СтавкаНДС, 0) КАК СтавкаНДС,
	               |	ЕСТЬNULL(энргЗначенияТарифовСрезПоследних.НДСВнутри, ЛОЖЬ) КАК НДСВнутри
	               |ПОМЕСТИТЬ ОбъемМКД_РаспределениеТУ_Итог
	               |ИЗ
	               |	ОбъемМКД_РаспределениеТУ КАК ОбъемМКД_РаспределениеТУ
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.энргЗначенияТарифов.СрезПоследних(&НачалоПериода, ) КАК энргЗначенияТарифовСрезПоследних
	               |		ПО ОбъемМКД_РаспределениеТУ.ТарифнаяКатегория = энргЗначенияТарифовСрезПоследних.ГруппаПотребителей
	               |			И ОбъемМКД_РаспределениеТУ.Услуга = энргЗначенияТарифовСрезПоследних.Услуга
	               |			И ОбъемМКД_РаспределениеТУ.Поставщик = энргЗначенияТарифовСрезПоследних.Поставщик
	               |			И ОбъемМКД_РаспределениеТУ.ТарифнаяЗона = энргЗначенияТарифовСрезПоследних.ТарифнаяЗона
	               |			И ОбъемМКД_РаспределениеТУ.Организация = энргЗначенияТарифовСрезПоследних.Организация
	               |			И ОбъемМКД_РаспределениеТУ.Район = энргЗначенияТарифовСрезПоследних.Район
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОбъемМКД_РаспределениеТУ.Услуга КАК Услуга,
	               |	ОбъемМКД_РаспределениеТУ.МКД КАК МКД,
	               |	МАКСИМУМ(ОбъемМКД_РаспределениеТУ.НормаПотребления) КАК НормаПотребления
	               |ПОМЕСТИТЬ УслугиМКД
	               |ИЗ
	               |	ОбъемМКД_РаспределениеТУ КАК ОбъемМКД_РаспределениеТУ
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ОбъемМКД_РаспределениеТУ.Услуга,
	               |	ОбъемМКД_РаспределениеТУ.МКД
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	энргОбъемНачисленийОбороты.Строение КАК МКД,
	               |	энргОбъемНачисленийОбороты.Услуга КАК Услуга,
	               |	энргОбъемНачисленийОбороты.ОбъемУслугиОборот КАК ОбъемУслуги,
	               |	ВЫБОР
	               |		КОГДА энргОбъемНачисленийОбороты.СпособНачисления = ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.ПоНормативу)
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК НачислятьПоНорме
	               |ПОМЕСТИТЬ ОбъемыПотребителей
	               |ИЗ
	               |	РегистрНакопления.энргОбъемНачислений.Обороты(
	               |			&НачалоПериода,
	               |			&КонецПериода,
	               |			,
	               |			Организация = &Организация
	               |				И Район = &Район
	               |				И Строение В
	               |					(ВЫБРАТЬ
	               |						АктивныеМКД.МКД КАК МКД
	               |					ИЗ
	               |						АктивныеМКД КАК АктивныеМКД)
	               |				И НЕ Распределение) КАК энргОбъемНачисленийОбороты
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ УслугиМКД КАК УслугиМКД
	               |		ПО энргОбъемНачисленийОбороты.Услуга = УслугиМКД.Услуга
	               |			И энргОбъемНачисленийОбороты.Строение = УслугиМКД.МКД
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	бестОбъемНачисленийНПОбороты.МКД,
	               |	бестОбъемНачисленийНПОбороты.Услуга,
	               |	бестОбъемНачисленийНПОбороты.ОбъемУслугиОборот,
	               |	ВЫБОР
	               |		КОГДА бестОбъемНачисленийНПОбороты.СпособНачисления = ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.ПоНормативу)
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ
	               |ИЗ
	               |	РегистрНакопления.бестОбъемНачисленийНП.Обороты(
	               |			&НачалоПериода,
	               |			&КонецПериода,
	               |			,
	               |			Организация = &Организация
	               |				И Район = &Район
	               |				И МКД В
	               |					(ВЫБРАТЬ
	               |						АктивныеМКД.МКД КАК МКД
	               |					ИЗ
	               |						АктивныеМКД КАК АктивныеМКД)
	               |				И НЕ Распределение) КАК бестОбъемНачисленийНПОбороты
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	энргОбъемНачисленийОбороты.Строение,
	               |	УслугиМКД1.Услуга,
	               |	энргОбъемНачисленийОбороты.ОбъемУслугиОборот * УслугиМКД1.НормаПотребления,
	               |	ВЫБОР
	               |		КОГДА энргОбъемНачисленийОбороты.СпособНачисления = ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.ПоНормативу)
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ
	               |ИЗ
	               |	РегистрНакопления.энргОбъемНачислений.Обороты(
	               |			&НачалоПериода,
	               |			&КонецПериода,
	               |			,
	               |			Организация = &Организация
	               |				И Район = &Район
	               |				И Строение В
	               |					(ВЫБРАТЬ
	               |						АктивныеМКД.МКД КАК МКД
	               |					ИЗ
	               |						АктивныеМКД КАК АктивныеМКД)
	               |				И НЕ Распределение) КАК энргОбъемНачисленийОбороты
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ УслугиМКД КАК УслугиМКД1
	               |		ПО энргОбъемНачисленийОбороты.Услуга = УслугиМКД1.Услуга.ЗависитОтУслуги
	               |			И (НЕ УслугиМКД1.Услуга В
	               |					(ВЫБРАТЬ
	               |						энргОбъемНачисленийОбороты.Услуга
	               |					ИЗ
	               |						РегистрНакопления.энргОбъемНачислений.Обороты(&НачалоПериода, &КонецПериода, , Организация = &Организация
	               |							И Район = &Район
	               |							И Строение В
	               |								(ВЫБРАТЬ
	               |									АктивныеМКД.МКД КАК МКД
	               |								ИЗ
	               |									АктивныеМКД КАК АктивныеМКД)
	               |							И НЕ Распределение) КАК энргОбъемНачисленийОбороты))
	               |			И энргОбъемНачисленийОбороты.Строение = УслугиМКД1.МКД
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОбъемыПотребителей.МКД КАК МКД,
	               |	ОбъемыПотребителей.Услуга КАК Услуга,
	               |	СУММА(ОбъемыПотребителей.ОбъемУслуги) КАК ОбъемУслуги,
	               |	МАКСИМУМ(ОбъемыПотребителей.НачислятьПоНорме) КАК НачислятьПоНорме
	               |ПОМЕСТИТЬ ОбъемыПотребителейСгруппированные
	               |ИЗ
	               |	ОбъемыПотребителей КАК ОбъемыПотребителей
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ОбъемыПотребителей.МКД,
	               |	ОбъемыПотребителей.Услуга
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	бестОбъемНачисленийНП.ОбъектРасчета КАК ОбъектРасчета,
	               |	бестОбъемНачисленийНП.Договор КАК Договор,
	               |	бестОбъемНачисленийНП.ТочкаУчета КАК ТочкаУчета,
	               |	СУММА(бестОбъемНачисленийНП.ОбъемУслуги) КАК ОбъемУслуги,
	               |	МИНИМУМ(бестОбъемНачисленийНП.ПериодНачисления) КАК ПериодНачисленияМин,
	               |	МАКСИМУМ(бестОбъемНачисленийНП.ПериодНачисления) КАК ПериодНачисленияМакс,
	               |	бестОбъемНачисленийНП.Услуга КАК Услуга,
	               |	МАКСИМУМ(ОбъемМКД_РаспределениеТУ.ОбъемУслугиНорматив) КАК ОбъемУслугиНорматив,
	               |	ОбъемМКД_РаспределениеТУ.МКД КАК МКД,
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ бестОбъемНачисленийНП.ПериодНачисления) КАК ПериодНачисленияКолвоРазличных,
	               |	МАКСИМУМ(бестОбъемНачисленийНП.ЗначениеТарифа) КАК ЗначениеТарифа,
	               |	МАКСИМУМ(бестОбъемНачисленийНП.СтавкаНДС) КАК СтавкаНДС,
	               |	МАКСИМУМ(бестОбъемНачисленийНП.НДСВнутри) КАК НДСВнутри,
	               |	бестОбъемНачисленийНП.Поставщик КАК Поставщик,
	               |	бестОбъемНачисленийНП.ТарифнаяЗона КАК ТарифнаяЗона,
	               |	бестОбъемНачисленийНП.ТарифнаяГруппа КАК ТарифнаяГруппа
	               |ПОМЕСТИТЬ ОбъемыУКДляСреднего
	               |ИЗ
	               |	РегистрНакопления.бестОбъемНачисленийНП КАК бестОбъемНачисленийНП
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОбъектыРасчетаКоэф КАК ОбъектыРасчетаКоэф
	               |		ПО бестОбъемНачисленийНП.МКД = ОбъектыРасчетаКоэф.МКД
	               |			И бестОбъемНачисленийНП.ОбъектРасчета = ОбъектыРасчетаКоэф.ОбъектРасчета
	               |			И бестОбъемНачисленийНП.Организация = ОбъектыРасчетаКоэф.Организация
	               |			И бестОбъемНачисленийНП.Район = ОбъектыРасчетаКоэф.Район
	               |			И бестОбъемНачисленийНП.ТочкаУчета = ОбъектыРасчетаКоэф.ТочкаУчета
	               |			И (бестОбъемНачисленийНП.ПериодНачисления < &ПериодНачисления)
	               |			И (бестОбъемНачисленийНП.Распределение)
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОбъемМКД_РаспределениеТУ КАК ОбъемМКД_РаспределениеТУ
	               |		ПО бестОбъемНачисленийНП.Услуга = ОбъемМКД_РаспределениеТУ.Услуга
	               |			И (ОбъемМКД_РаспределениеТУ.СпособНачисления = ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.НачислениеПоСреднему))
	               |			И (бестОбъемНачисленийНП.СпособНачисления = ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.ПоПриборам))
	               |			И бестОбъемНачисленийНП.ТочкаУчета = ОбъемМКД_РаспределениеТУ.ТочкаУчета
	               |			И бестОбъемНачисленийНП.МКД = ОбъемМКД_РаспределениеТУ.МКД
	               |			И (бестОбъемНачисленийНП.Услуга = ОбъектыРасчетаКоэф.Услуга)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	бестОбъемНачисленийНП.ОбъектРасчета,
	               |	бестОбъемНачисленийНП.Договор,
	               |	бестОбъемНачисленийНП.ТочкаУчета,
	               |	бестОбъемНачисленийНП.Услуга,
	               |	ОбъемМКД_РаспределениеТУ.МКД,
	               |	бестОбъемНачисленийНП.Поставщик,
	               |	бестОбъемНачисленийНП.ТарифнаяЗона,
	               |	бестОбъемНачисленийНП.ТарифнаяГруппа
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОбъемыУКДляСреднего.ОбъектРасчета КАК ОбъектРасчета,
	               |	ОбъемыУКДляСреднего.Договор КАК Договор,
	               |	ОбъемыУКДляСреднего.ТочкаУчета КАК ТочкаУчета,
	               |	ВЫБОР
	               |		КОГДА РАЗНОСТЬДАТ(ОбъемыУКДляСреднего.ПериодНачисленияМин, ОбъемыУКДляСреднего.ПериодНачисленияМакс, МЕСЯЦ) + 1 >= ЕСТЬNULL(НастройкаСреднего.КоличествоПоказаний, 1)
	               |			ТОГДА ОбъемыУКДляСреднего.ОбъемУслуги / ОбъемыУКДляСреднего.ПериодНачисленияКолвоРазличных
	               |		ИНАЧЕ ОбъемыУКДляСреднего.ОбъемУслугиНорматив
	               |	КОНЕЦ КАК ИтоговыйОбъемРаспределения,
	               |	ОбъемыУКДляСреднего.Услуга КАК Услуга,
	               |	ОбъемыУКДляСреднего.МКД КАК МКД,
	               |	ВЫБОР
	               |		КОГДА РАЗНОСТЬДАТ(ОбъемыУКДляСреднего.ПериодНачисленияМин, ОбъемыУКДляСреднего.ПериодНачисленияМакс, МЕСЯЦ) + 1 >= ЕСТЬNULL(НастройкаСреднего.КоличествоПоказаний, 1)
	               |			ТОГДА ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.НачислениеПоСреднему)
	               |		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.ПоНормативу)
	               |	КОНЕЦ КАК СпособНачисления,
	               |	ОбъемыУКДляСреднего.ЗначениеТарифа КАК ЗначениеТарифа,
	               |	ОбъемыУКДляСреднего.СтавкаНДС КАК СтавкаНДС,
	               |	ОбъемыУКДляСреднего.НДСВнутри КАК НДСВнутри,
	               |	ОбъемыУКДляСреднего.Поставщик КАК Поставщик,
	               |	ОбъемыУКДляСреднего.ТарифнаяЗона КАК ТарифнаяЗона,
	               |	ОбъемыУКДляСреднего.ТарифнаяГруппа КАК ТарифнаяГруппа
	               |ПОМЕСТИТЬ РасчетОбъемаУКПоСреднему
	               |ИЗ
	               |	ОбъемыУКДляСреднего КАК ОбъемыУКДляСреднего
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НастройкаСреднего КАК НастройкаСреднего
	               |		ПО ОбъемыУКДляСреднего.Услуга = НастройкаСреднего.Услуга
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОбъемМКД_РаспределениеТУ_Итог.МКД КАК МКД,
	               |	ОбъемМКД_РаспределениеТУ_Итог.Услуга КАК Услуга,
	               |	ОбъемМКД_РаспределениеТУ_Итог.НачислятьПоНорме КАК НачислятьПоНорме,
	               |	МАКСИМУМ(ОбъемМКД_РаспределениеТУ_Итог.ТочкаУчета) КАК ТочкаУчета,
	               |	МАКСИМУМ(ОбъектыРасчетаКоэф.ОбъектРасчета) КАК ОбъектРасчета,
	               |	ОбъемМКД_РаспределениеТУ_Итог.СпособНачисления КАК СпособНачисления,
	               |	СУММА(ОбъемМКД_РаспределениеТУ_Итог.ОбъемУслуги) КАК ОбъемУслугиМКД,
	               |	МАКСИМУМ(ЕСТЬNULL(ОбъемыПотребителейСгруппированные.ОбъемУслуги, 0)) КАК ОбъемУслугиРаспределение,
	               |	МАКСИМУМ(бестНачислениеНП.Ссылка) КАК ДокументНачисления,
	               |	ОбъектыРасчетаКоэф.Коэф КАК Коэф,
	               |	СУММА(ОбъемМКД_РаспределениеТУ_Итог.Значение) КАК ЗначениеТарифа,
	               |	СУММА(ОбъемМКД_РаспределениеТУ_Итог.СтавкаНДС) КАК СтавкаНДС,
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ОбъемМКД_РаспределениеТУ_Итог.НДСВнутри) КАК НДСВнутри,
	               |	ОбъемМКД_РаспределениеТУ_Итог.Поставщик КАК Поставщик,
	               |	ОбъемМКД_РаспределениеТУ_Итог.ТарифнаяЗона КАК ТарифнаяЗона,
	               |	ОбъемМКД_РаспределениеТУ_Итог.ТарифнаяКатегория КАК ТарифнаяГруппа,
	               |	ОбъектыРасчетаКоэф.Договор КАК Договор
	               |ПОМЕСТИТЬ ДанныеДляРаспределения
	               |ИЗ
	               |	ОбъектыРасчетаКоэф КАК ОбъектыРасчетаКоэф
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОбъемМКД_РаспределениеТУ_Итог КАК ОбъемМКД_РаспределениеТУ_Итог
	               |			ЛЕВОЕ СОЕДИНЕНИЕ ОбъемыПотребителейСгруппированные КАК ОбъемыПотребителейСгруппированные
	               |			ПО ОбъемМКД_РаспределениеТУ_Итог.МКД = ОбъемыПотребителейСгруппированные.МКД
	               |				И ОбъемМКД_РаспределениеТУ_Итог.Услуга = ОбъемыПотребителейСгруппированные.Услуга
	               |		ПО ОбъектыРасчетаКоэф.ТочкаУчета = ОбъемМКД_РаспределениеТУ_Итог.ТочкаУчета
	               |			И ОбъектыРасчетаКоэф.Услуга = ОбъемМКД_РаспределениеТУ_Итог.Услуга
	               |			И (ОбъемМКД_РаспределениеТУ_Итог.СпособНачисления <> ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.НачислениеПоСреднему))
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.бестНачислениеНП КАК бестНачислениеНП
	               |		ПО ОбъектыРасчетаКоэф.МКД = бестНачислениеНП.МКД
	               |			И (бестНачислениеНП.Организация = &Организация)
	               |			И (бестНачислениеНП.Район = &Район)
	               |			И (бестНачислениеНП.Дата = &Дата)
	               |			И (НЕ бестНачислениеНП.ПометкаУдаления
	               |				И бестНачислениеНП.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.бестТипыНачисления.НачислениеНаУК))
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ОбъемМКД_РаспределениеТУ_Итог.НачислятьПоНорме,
	               |	ОбъемМКД_РаспределениеТУ_Итог.СпособНачисления,
	               |	ОбъемМКД_РаспределениеТУ_Итог.Услуга,
	               |	ОбъемМКД_РаспределениеТУ_Итог.МКД,
	               |	ОбъектыРасчетаКоэф.Коэф,
	               |	ОбъемМКД_РаспределениеТУ_Итог.Поставщик,
	               |	ОбъемМКД_РаспределениеТУ_Итог.ТарифнаяКатегория,
	               |	ОбъемМКД_РаспределениеТУ_Итог.ТарифнаяЗона,
	               |	ОбъектыРасчетаКоэф.Договор
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	РасчетОбъемаУКПоСреднему.МКД,
	               |	РасчетОбъемаУКПоСреднему.Услуга,
	               |	ИСТИНА,
	               |	МАКСИМУМ(РасчетОбъемаУКПоСреднему.ТочкаУчета),
	               |	МАКСИМУМ(РасчетОбъемаУКПоСреднему.ОбъектРасчета),
	               |	РасчетОбъемаУКПоСреднему.СпособНачисления,
	               |	СУММА(РасчетОбъемаУКПоСреднему.ИтоговыйОбъемРаспределения),
	               |	МАКСИМУМ(0),
	               |	МАКСИМУМ(бестНачислениеНП.Ссылка),
	               |	1,
	               |	МАКСИМУМ(РасчетОбъемаУКПоСреднему.ЗначениеТарифа),
	               |	МАКСИМУМ(РасчетОбъемаУКПоСреднему.СтавкаНДС),
	               |	МАКСИМУМ(РасчетОбъемаУКПоСреднему.НДСВнутри),
	               |	РасчетОбъемаУКПоСреднему.Поставщик,
	               |	РасчетОбъемаУКПоСреднему.ТарифнаяЗона,
	               |	РасчетОбъемаУКПоСреднему.ТарифнаяГруппа,
	               |	РасчетОбъемаУКПоСреднему.Договор
	               |ИЗ
	               |	Документ.бестНачислениеНП КАК бестНачислениеНП
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РасчетОбъемаУКПоСреднему КАК РасчетОбъемаУКПоСреднему
	               |		ПО (бестНачислениеНП.Организация = &Организация)
	               |			И (бестНачислениеНП.Район = &Район)
	               |			И (бестНачислениеНП.Дата = &Дата)
	               |			И (НЕ бестНачислениеНП.ПометкаУдаления
	               |				И бестНачислениеНП.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.бестТипыНачисления.НачислениеНаУК))
	               |			И бестНачислениеНП.МКД = РасчетОбъемаУКПоСреднему.МКД
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	РасчетОбъемаУКПоСреднему.МКД,
	               |	РасчетОбъемаУКПоСреднему.Услуга,
	               |	РасчетОбъемаУКПоСреднему.СпособНачисления,
	               |	РасчетОбъемаУКПоСреднему.Поставщик,
	               |	РасчетОбъемаУКПоСреднему.ТарифнаяЗона,
	               |	РасчетОбъемаУКПоСреднему.ТарифнаяГруппа,
	               |	РасчетОбъемаУКПоСреднему.Договор
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ДанныеДляРаспределения.МКД КАК МКД,
	               |	ДанныеДляРаспределения.Услуга КАК Услуга,
	               |	ДанныеДляРаспределения.НачислятьПоНорме КАК НачислятьПоНорме,
	               |	ДанныеДляРаспределения.ТочкаУчета КАК ТочкаУчета,
	               |	ДанныеДляРаспределения.ОбъектРасчета КАК ОбъектРасчета,
	               |	ДанныеДляРаспределения.СпособНачисления КАК СпособНачисления,
	               |	ВЫБОР
	               |		КОГДА ДанныеДляРаспределения.НачислятьПоНорме
	               |			ТОГДА ДанныеДляРаспределения.ОбъемУслугиМКД
	               |		ИНАЧЕ ДанныеДляРаспределения.ОбъемУслугиМКД - ДанныеДляРаспределения.ОбъемУслугиРаспределение
	               |	КОНЕЦ КАК ОбъемУслуги,
	               |	ДанныеДляРаспределения.ОбъемУслугиРаспределение КАК ОбъемУслугиРаспределение,
	               |	ДанныеДляРаспределения.ОбъемУслугиМКД КАК ОбъемУслугиМКД,
	               |	ДанныеДляРаспределения.ДокументНачисления КАК ДокументНачисления,
	               |	ДанныеДляРаспределения.Коэф КАК Коэф,
	               |	ДанныеДляРаспределения.ЗначениеТарифа КАК ЗначениеТарифа,
	               |	ДанныеДляРаспределения.СтавкаНДС КАК СтавкаНДС,
	               |	ДанныеДляРаспределения.НДСВнутри КАК НДСВнутри,
	               |	ДанныеДляРаспределения.Поставщик КАК Поставщик,
	               |	ДанныеДляРаспределения.ТарифнаяЗона КАК ТарифнаяЗона,
	               |	ДанныеДляРаспределения.ТарифнаяГруппа КАК ТарифнаяГруппа,
	               |	ДанныеДляРаспределения.Договор КАК Договор
	               |ПОМЕСТИТЬ Итог
	               |ИЗ
	               |	ДанныеДляРаспределения КАК ДанныеДляРаспределения
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	бестОбъемНачисленийНПОбороты.МКД КАК МКД,
	               |	бестОбъемНачисленийНПОбороты.Услуга КАК Услуга,
	               |	бестОбъемНачисленийНПОбороты.ОбъемУслугиОборот КАК ОбъемУслугиОборот,
	               |	бестОбъемНачисленийНПОбороты.Договор КАК Договор,
	               |	бестОбъемНачисленийНПОбороты.ОбъектРасчета КАК ОбъектРасчета,
	               |	бестОбъемНачисленийНПОбороты.ТочкаУчета КАК ТочкаУчета,
	               |	бестОбъемНачисленийНПОбороты.Поставщик КАК Поставщик,
	               |	бестОбъемНачисленийНПОбороты.ТарифнаяЗона КАК ТарифнаяЗона
	               |ПОМЕСТИТЬ ОтрицательныеОбъемы
	               |ИЗ
	               |	РегистрНакопления.бестОбъемНачисленийНП.Обороты(
	               |			ДОБАВИТЬКДАТЕ(&НачалоПериода, МЕСЯЦ, -1),
	               |			ДОБАВИТЬКДАТЕ(&КонецПериода, МЕСЯЦ, -1),
	               |			,
	               |			Организация = &Организация
	               |				И Район = &Район
	               |				И МКД В
	               |					(ВЫБРАТЬ
	               |						АктивныеМКД.МКД КАК МКД
	               |					ИЗ
	               |						АктивныеМКД КАК АктивныеМКД)) КАК бестОбъемНачисленийНПОбороты
	               |ГДЕ
	               |	бестОбъемНачисленийНПОбороты.ОбъемУслугиОборот < 0
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Итог.МКД КАК МКД,
	               |	Итог.Услуга КАК Услуга,
	               |	Итог.НачислятьПоНорме КАК НачислятьПоНорме,
	               |	Итог.ТочкаУчета КАК ТочкаУчета,
	               |	Итог.ОбъектРасчета КАК ОбъектРасчета,
	               |	Итог.СпособНачисления КАК СпособНачисления,
	               |	(Итог.ОбъемУслуги + ЕСТЬNULL(ОтрицательныеОбъемы.ОбъемУслугиОборот, 0)) * Итог.Коэф КАК ОбъемУслуги,
	               |	Итог.ОбъемУслугиРаспределение КАК ОбъемУслугиРаспределение,
	               |	Итог.ОбъемУслугиМКД КАК ОбъемУслугиМКД,
	               |	Итог.ДокументНачисления КАК ДокументНачисления,
	               |	Итог.СтавкаНДС КАК СтавкаНДС,
	               |	Итог.НДСВнутри КАК НДСВнутри,
	               |	Итог.ЗначениеТарифа КАК ЗначениеТарифа,
	               |	ВЫБОР
	               |		КОГДА Итог.ЗначениеТарифа ЕСТЬ NULL
	               |			ТОГДА 0
	               |		КОГДА Итог.НДСВнутри = ИСТИНА
	               |			ТОГДА (Итог.ОбъемУслуги + ЕСТЬNULL(ОтрицательныеОбъемы.ОбъемУслугиОборот, 0)) * Итог.Коэф * Итог.ЗначениеТарифа
	               |		ИНАЧЕ (Итог.ОбъемУслуги + ЕСТЬNULL(ОтрицательныеОбъемы.ОбъемУслугиОборот, 0)) * Итог.Коэф * Итог.ЗначениеТарифа + (Итог.ОбъемУслуги + ЕСТЬNULL(ОтрицательныеОбъемы.ОбъемУслугиОборот, 0)) * Итог.Коэф * Итог.ЗначениеТарифа * Итог.СтавкаНДС / 100
	               |	КОНЕЦ КАК Сумма,
	               |	ВЫБОР
	               |		КОГДА Итог.ЗначениеТарифа ЕСТЬ NULL
	               |			ТОГДА 0
	               |		КОГДА Итог.НДСВнутри = ИСТИНА
	               |			ТОГДА (Итог.ОбъемУслуги + ЕСТЬNULL(ОтрицательныеОбъемы.ОбъемУслугиОборот, 0)) * Итог.Коэф * Итог.ЗначениеТарифа * Итог.СтавкаНДС / (100 + Итог.СтавкаНДС)
	               |		ИНАЧЕ (Итог.ОбъемУслуги + ЕСТЬNULL(ОтрицательныеОбъемы.ОбъемУслугиОборот, 0)) * Итог.Коэф * Итог.ЗначениеТарифа * Итог.СтавкаНДС / 100
	               |	КОНЕЦ КАК СуммаНДС,
	               |	Итог.Договор КАК Договор
	               |ИЗ
	               |	Итог КАК Итог
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ОтрицательныеОбъемы КАК ОтрицательныеОбъемы
	               |		ПО Итог.МКД = ОтрицательныеОбъемы.МКД
	               |			И Итог.Услуга = ОтрицательныеОбъемы.Услуга
	               |			И Итог.ОбъектРасчета = ОтрицательныеОбъемы.ОбъектРасчета
	               |			И Итог.ТочкаУчета = ОтрицательныеОбъемы.ТочкаУчета
	               |			И (Итог.СпособНачисления = ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.ПоПриборам))
	               |			И Итог.Поставщик = ОтрицательныеОбъемы.Поставщик
	               |			И Итог.ТарифнаяЗона = ОтрицательныеОбъемы.ТарифнаяЗона
	               |ИТОГИ
	               |	МАКСИМУМ(ДокументНачисления)
	               |ПО
	               |	МКД";
	
	Если НЕ ЗначениеЗаполнено(МКД) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И (энргРаспределениеМКД.МКД = &Строение)","");
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И энргОтложенныеДвиженияДокументов.Строение = &Строение","");
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И (энргНомераСтрокСтабильногоПериода.Строение = &Строение)","");
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И (энргСтабильныеПериодыМКД.Строение = &Строение)","");
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И (энргСтабильныеПериоды.Строение = &Строение)","");		
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И Строение = &Строение","");
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И (бестОбъектыРасчета.МКД = &Строение)","");
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И МКД = &Строение","");
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И (энргСтабильныеПериоды.МКД = &Строение)","");
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И (энргНомераСтрокСтабильногоПериода.МКД = &Строение)","");
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И (энргСтабильныеПериодыМКД.МКД = &Строение)","");
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И (энргДокументыНачислений.МКД = &Строение)","");		
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаМКД = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаМКД.Следующий() Цикл
	
		ВыборкаДетальныеЗаписи = ВыборкаМКД.Выбрать();
		
		Если ВыборкаДетальныеЗаписи.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(ВыборкаМКД.ДокументНачисления) Тогда
			ДокументОбъект = ВыборкаМКД.ДокументНачисления.ПолучитьОбъект();
		Иначе
			ДокументОбъект = Документы.бестНачислениеНП.СоздатьДокумент();	
		КонецЕсли; 
		
		ДокументОбъект.ТипНачисления 	= Перечисления.бестТипыНачисления.НачислениеНаУК;
		ДокументОбъект.Организация 		= Организация;
		ДокументОбъект.МКД 				= ВыборкаМКД.МКД;
		ДокументОбъект.Район 			= Район;
		ДокументОбъект.Дата				= ГраницыПериода.ЗавершениеОП-1; 
		ДокументОбъект.Записать();
		
		ДокументОбъект.Движения.бестОбъемНачисленийНП.Прочитать();
		
		СтрокиМКД = Новый Массив;
		Для Каждого Строка Из ДокументОбъект.Движения.бестОбъемНачисленийНП Цикл
			Если Не Строка.Распределение И (Не ЗначениеЗаполнено(МКД) Или Строка.МКД <> МКД) Тогда
				Продолжить;	
			КонецЕсли; 
			СтрокиМКД.Добавить(Строка);	
		КонецЦикла;
		
		Для Каждого Строка Из СтрокиМКД Цикл
				ДокументОбъект.Движения.бестОбъемНачисленийНП.Удалить(Строка);
			КонецЦикла;
	
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				
				Если  СтруктураМКД_УК.Получить(ВыборкаДетальныеЗаписи.МКД) = Неопределено Тогда
					МассивУслуг = Новый Массив;
					МассивУслуг.Добавить(ВыборкаДетальныеЗаписи.услуга);
					СтруктураМКД_УК.Вставить(ВыборкаДетальныеЗаписи.МКД, МассивУслуг);
				Иначеесли СтруктураМКД_УК.Получить(ВыборкаДетальныеЗаписи.МКД).Найти(ВыборкаДетальныеЗаписи.услуга) = Неопределено Тогда
					СтруктураМКД_УК.Получить(ВыборкаДетальныеЗаписи.МКД).Добавить(ВыборкаДетальныеЗаписи.услуга);
				КонецЕсли; 
				
			Запись = ДокументОбъект.Движения.бестОбъемНачисленийНП.Добавить();
			ЗаполнитьЗначенияСвойств(Запись,ВыборкаДетальныеЗаписи);
			Запись.Период			= ДокументОбъект.Дата;
			Запись.ВидНачисления	= Перечисления.энргВидыНачислений.Начисление;
			Запись.Распределение	= Истина;
			Запись.Организация		= Организация;;
			Запись.Район			= Район;
			Запись.НачалоПериода    = ГраницыПериода.НачалоОП;
			Запись.КонецПериода		= ГраницыПериода.ЗавершениеОП;
			Запись.ПериодНачисления = ПериодНачисления;
			Запись.ПериодРасчета	= ПериодНачисления;			
		КонецЦикла;
		
		ДокументОбъект.Движения.бестОбъемНачисленийНП.Записать();
		
	КонецЦикла;
		
КонецПроцедуры

Процедура ОтменитьЗакрытьПериода(Организация,ПериодНачисления,Район,МКД) Экспорт 
	
	ГраницыПериода  								= Обработки.энргГраницыПериодаНачисленияМенеджер.ГраницыРасчетногоПериода(Организация,Район,ПериодНачисления);
	
	НачалоПериодаРасчета							= ГраницыПериода.НачалоОП;
	КонецПериодаРасчета  							= ГраницыПериода.ЗавершениеОП-1;
	ДнейВПериоде  									= ГраницыПериода.ДнейВПериоде; 
	
	Запрос  		= Новый Запрос;
	Запрос.УстановитьПараметр("Район",				Район);
	Запрос.УстановитьПараметр("НачалоПериода",		НачалоПериодаРасчета);
	Запрос.УстановитьПараметр("КонецПериода",		КонецПериодаРасчета);
	Запрос.УстановитьПараметр("Организация",		Организация);
	Запрос.УстановитьПараметр("ПериодНачисления",	ПериодНачисления);
	Текст 	=
	"ВЫБРАТЬ
	|	энргНачисление.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.энргНачисление КАК энргНачисление
	|ГДЕ
	|	энргНачисление.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И энргНачисление.МКД = &МКД
	|	И энргНачисление.Район = &Район
	|	И энргНачисление.Проведен
	|	И энргНачисление.Организация = &Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	энргНачислениеМКД.Ссылка
	|ИЗ
	|	Документ.энргНачислениеМКД КАК энргНачислениеМКД
	|ГДЕ
	|	энргНачислениеМКД.Организация = &Организация
	|	И энргНачислениеМКД.Район = &Район
	|	И энргНачислениеМКД.Проведен
	|	И энргНачислениеМКД.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	энргПерерасчет.Ссылка
	|ИЗ
	|	Документ.энргПерерасчет КАК энргПерерасчет
	|ГДЕ
	|	энргПерерасчет.Проведен
	|	И энргПерерасчет.Организация = &Организация
	|	И энргПерерасчет.Район = &Район
	|	И энргПерерасчет.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И энргПерерасчет.МКД = &МКД
	|	И энргПерерасчет.ВидОперации = ЗНАЧЕНИЕ(Перечисление.энргВидыОпераций.энргПерерасчет_КорректировкаПоказаний)
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	энргЗакрытиеПериода.Ссылка
	|ИЗ
	|	Документ.энргЗакрытиеПериода КАК энргЗакрытиеПериода
	|ГДЕ
	|	энргЗакрытиеПериода.Проведен
	|	И энргЗакрытиеПериода.Район = &Район
	|	И энргЗакрытиеПериода.Организация = &Район
	|	И энргЗакрытиеПериода.ПериодНачисления = &ПериодНачисления";
	
	Если МКД = Неопределено тогда
		Текст 			= СтрЗаменить(Текст,"И энргНачисление.МКД = &МКД","");
		Текст			= СтрЗаменить(Текст,"И энргПерерасчет.МКД = &МКД","");
	иначе
		Запрос.УстановитьПараметр("МКД",МКД);
	КонецЕсли;
	
	Запрос.Текст 		= Текст;
	Результат  			= Запрос.Выполнить();
	Выборка 			= Результат.Выбрать();
	Пока Выборка.Следующий() цикл  		
		ДокОбъект  		= Выборка.ссылка.получитьОбъект();
		ДокОбъект.ДополнительныеСвойства.вставить("ПроведениеРазрешено",истина);
		ДокОбъект.УстановитьПометкуУдаления(Истина);		
	КонецЦикла; 
	
КонецПроцедуры

Процедура НачислениеПоРассрочке(Организация,ПериодНачисления,Район,МКД,Документ)  Экспорт 
	
	Если НЕ ПолучитьФункциональнуюОпцию("энргИспользоватьРассрочку") Тогда
		Возврат;
	КонецЕсли;
		
	ГраницыПериода  								= Обработки.энргГраницыПериодаНачисленияМенеджер.ГраницыРасчетногоПериода(Организация,Район,ПериодНачисления);
	
	НачалоПериодаРасчета							= ГраницыПериода.НачалоОП;
	КонецПериодаРасчета  							= ГраницыПериода.ЗавершениеОП-1;
	ДнейВПериоде  									= ГраницыПериода.ДнейВПериоде; 
	ДифференцированныйСпособРасчетаПроцентов(Организация, ПериодНачисления,Район,МКД,Документ,КонецПериодаРасчета);
	
	Если МКД = Неопределено тогда
		//Набор 							= РегистрыСведений.энргВыполненныеНачисления.СоздатьНаборЗаписей();
		//Набор.Отбор.ПериодНачисления.установить(ПериодНачисления);
		//Набор.Отбор.Район.установить(Район);
		//Набор.Отбор.ВидОперацииНачисления.установить(Перечисления.энргВидыОперацийНачисления.ПроцентыЗаРассрочку);		
		//Набор.ДополнительныеСвойства.Вставить("ЗаписьРазрешена");
		//Запись 							= Набор.Добавить();
		//Запись.ПериодНачисления 		= ПериодНачисления;
		//Запись.Район					= Район;
		//Запись.ВидОперацииНачисления	= Перечисления.энргВидыОперацийНачисления.ПроцентыЗаРассрочку;
		//Набор.Записать();
	КонецЕсли; 
	
КонецПроцедуры

Процедура НачислитьПеню(Организация,ПериодНачисления,Район,МКД,Абонент,Документ) Экспорт  
	
	НачислятьПеню = Константы.энргНачислятьПеню.Получить();
	
	ГраницыПериодаНачисления 		= Обработки.энргГраницыПериодаНачисленияМенеджер.ГраницыРасчетногоПериода(Организация,Район,ПериодНачисления,Ложь);
	
	Если не НачислятьПеню тогда		
		Если МКД = Неопределено тогда
			//Набор 							= РегистрыСведений.энргВыполненныеНачисления.СоздатьНаборЗаписей();
			//Набор.Отбор.ПериодНачисления.установить(ПериодНачисления);
			//Набор.Отбор.Район.установить(Район);
			//Набор.Отбор.ВидОперацииНачисления.установить(Перечисления.энргВидыОперацийНачисления.НачислениеПени);
			//Набор.ДополнительныеСвойства.Вставить("ЗаписьРазрешена");
			//Запись 							= Набор.Добавить();
			//Запись.ПериодНачисления 		= ПериодНачисления;
			//Запись.Район					= Район;
			//Запись.ВидОперацииНачисления	= Перечисления.энргВидыОперацийНачисления.НачислениеПени;
			//Набор.Записать();
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	Если МКД = Неопределено тогда
		МКД = Справочники.энргСтроения.ПустаяСсылка();
	КонецЕсли;
		
	МВТ 									= Новый МенеджерВременныхТаблиц;
	
	// Ставки рефинансирования
	Запрос  								= Новый Запрос;
	Запрос.МенеджерВременныхТаблиц 			= МВТ;
	Запрос.Текст 							=
	"ВЫБРАТЬ
	|	энргСтавкиРефинансированияСрезПоследних.Коэффициент КАК Коэффициент,
	|	&НачалоОП КАК Период
	|ПОМЕСТИТЬ СтавкиРефинансированияНабор
	|ИЗ
	|	РегистрСведений.энргСтавкиРефинансирования.СрезПоследних(&НачалоОП, Организация = &Организация) КАК энргСтавкиРефинансированияСрезПоследних
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	энргСтавкиРефинансирования.Коэффициент,
	|	энргСтавкиРефинансирования.Период
	|ИЗ
	|	РегистрСведений.энргСтавкиРефинансирования КАК энргСтавкиРефинансирования
	|ГДЕ
	|	энргСтавкиРефинансирования.Период МЕЖДУ &НачалоОП И &ЗавершениеОП
	|	И энргСтавкиРефинансирования.Организация =&Организация
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтавкиРефинансированияНаборЛево.Период КАК ПериодС,
	|	СтавкиРефинансированияНаборЛево.Коэффициент КАК ЗначениеСтавкиРефинансирования,
	|	МИНИМУМ(ЕСТЬNULL(СтавкиРефинансированияНабор.Период,&ЗавершениеОП)) КАК ПериодПо
	|ПОМЕСТИТЬ ПериодДействияСтавокРефинансирования
	|ИЗ
	|	СтавкиРефинансированияНабор КАК СтавкиРефинансированияНаборЛево
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтавкиРефинансированияНабор КАК СтавкиРефинансированияНабор
	|		ПО СтавкиРефинансированияНаборЛево.Период < СтавкиРефинансированияНабор.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	СтавкиРефинансированияНаборЛево.Период,
	|	СтавкиРефинансированияНаборЛево.Коэффициент";
	Запрос.УстановитьПараметр("НачалоОП", 		ГраницыПериодаНачисления.НачалоОП);
	Запрос.УстановитьПараметр("ЗавершениеОП", 	ГраницыПериодаНачисления.ЗавершениеОП);
	Запрос.УстановитьПараметр("Организация", 	Организация);	
	Запрос.Выполнить(); 	
	
	Результат  								= МВТ.Таблицы["СтавкиРефинансированияНабор"].ПолучитьДанные();
	Если Результат.Пустой() тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнена информация по ставке рефинансирования,
		|	 Начисление пени не может быть выполнено");
		Возврат;
	КонецЕсли;
		
	// Настройки начисления пени.
	Запрос  								= Новый Запрос;
	Запрос.Текст 			=
	"ВЫБРАТЬ
	|	энргНастройкиНачисленияПениСрезПоследних.ГлубинаОтсрочки КАК ГлубинаОтсрочки,
	|	энргНастройкиНачисленияПениСрезПоследних.КрайнийСрокОплаты КАК КрайнийСрокОплаты,
	|	энргНастройкиНачисленияПениСрезПоследних.МаксимальнаяГлубинаЗадолженности КАК МаксимальнаяГлубинаЗадолженности
	|ИЗ
	|	РегистрСведений.энргНастройкиНачисленияПени.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И Район = &Район) КАК энргНастройкиНачисленияПениСрезПоследних";
	Запрос.УстановитьПараметр("Период", ГраницыПериодаНачисления.ЗАвершениеОП-1);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Район", Район);
	
	Результат  								= Запрос.Выполнить();
	Если Результат.Пустой() тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнены настройки начисления пени, Начисление пени не может быть выполнено");
		Возврат;
	КонецЕсли;
	Выборка  									= Результат.Выбрать();
	Выборка.Следующий();
	ГлубинаОтсрочки 							= Выборка.ГлубинаОтсрочки;
	КрайнийСрокОплаты 							= Выборка.КрайнийСрокОплаты;
	МаксимальнаяГлубинаЗадолженности 			= Выборка.МаксимальнаяГлубинаЗадолженности;
	
	// Настройка расчет пени
	Запрос  								= Новый Запрос;
	Запрос.Текст 			=
	"ВЫБРАТЬ
	|	энргНастройкаРасчетаПениСрезПоследних.НастройкаРасчета КАК НастройкаРасчета
	|ИЗ
	|	РегистрСведений.энргНастройкаРасчетаПени.СрезПоследних(&Период, ) КАК энргНастройкаРасчетаПениСрезПоследних";
	Запрос.УстановитьПараметр("Период", ГраницыПериодаНачисления.ЗАвершениеОП-1);
	
	Результат  								= Запрос.Выполнить();
	Если Результат.Пустой() тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнены настройки расчет пени, Начисление пени не может быть выполнено");
		Возврат;
	КонецЕсли;
	Выборка  									= Результат.Выбрать();
	Выборка.Следующий();
	НастройкиРасчетаПени = Выборка.НастройкаРасчета.Получить();
	
	МаксЗначение = 0;
	Соответствие = Новый Соответствие;
	РангКоэффициента = 1;
	Для каждого Строка Из НастройкиРасчетаПени Цикл
		Если Строка.До = 0 Тогда
			НСтр = Новый Структура;
			НСтр.Вставить("Числитель", Строка.Числитель);
			НСтр.Вставить("Знаменатель", Строка.Знаменатель);
			НСтр.Вставить("РангКоэффициента", РангКоэффициента);
			
			Соответствие.Вставить(Строка.До, НСтр);
		Иначе
			Для Сч = Строка.От По Строка.До Цикл
				НСтр = Новый Структура;
				НСтр.Вставить("Числитель", Строка.Числитель);
				НСтр.Вставить("Знаменатель", Строка.Знаменатель);
				НСтр.Вставить("РангКоэффициента", РангКоэффициента);
				
				Соответствие.Вставить(Сч, НСтр);
				
				МаксЗначение = Макс(МаксЗначение, Сч);
			КонецЦикла;
		КонецЕсли;
		
		РангКоэффициента = РангКоэффициента + 1;
	КонецЦикла;
	
	// Настройки начисления пени.
	Выборка  									= Результат.Выбрать();
	Запрос  									= Новый Запрос;
	Запрос.МенеджерВременныхТаблиц				= МВТ;
	Запрос.Текст 								=
	"ВЫБРАТЬ
	|	&Район КАК Район,
	|	НЕОПРЕДЕЛЕНО КАК МКД,
	|	НЕОПРЕДЕЛЕНО КАК Абонент,
	|	НЕОПРЕДЕЛЕНО КАК Услуга,
	|	НЕОПРЕДЕЛЕНО КАК ПериодНачисления,
	|	СтавкиРефинансирования.Период КАК Период,
	|	СтавкиРефинансирования.Коэффициент КАК ЗначениеСтавкиРефинансирования
	|ПОМЕСТИТЬ ДополнительныеПериоды
	|ИЗ
	|	РегистрСведений.энргСтавкиРефинансирования КАК СтавкиРефинансирования
	|ГДЕ
	|	СтавкиРефинансирования.Организация = &Организация
	|	И СтавкиРефинансирования.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	энргВзаиморасчетыПоМесяцамОстаткиИОбороты.Район КАК Район,
	|	энргВзаиморасчетыПоМесяцамОстаткиИОбороты.МКД КАК МКД,
	|	энргВзаиморасчетыПоМесяцамОстаткиИОбороты.Абонент КАК Абонент,
	|	энргВзаиморасчетыПоМесяцамОстаткиИОбороты.Услуга КАК Услуга,
	|	энргВзаиморасчетыПоМесяцамОстаткиИОбороты.ПериодНачисления КАК ПериодНачисления,
	|	энргВзаиморасчетыПоМесяцамОстаткиИОбороты.Период КАК Период,
	|	энргВзаиморасчетыПоМесяцамОстаткиИОбороты.СуммаНачальныйОстаток КАК СуммаНачальныйОстаток,
	|	энргВзаиморасчетыПоМесяцамОстаткиИОбороты.СуммаКонечныйОстаток КАК СуммаКонечныйОстаток
	|ПОМЕСТИТЬ ДанныеЗадолженностиОсновнойНабор
	|ИЗ
	|	РегистрНакопления.энргВзаиморасчетыПоМесяцам.ОстаткиИОбороты(
	|			,
	|			&КонецПериода,
	|			День,
	|			,
	|			Организация = &Организация
	|				И Район = &Район
	|				И МКД = &МКД) КАК энргВзаиморасчетыПоМесяцамОстаткиИОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеЗадолженности.Район КАК Район,
	|	ДанныеЗадолженности.МКД КАК МКД,
	|	ДанныеЗадолженности.Абонент КАК Абонент,
	|	ДанныеЗадолженности.Услуга КАК Услуга,
	|	ДанныеЗадолженности.ПериодНачисления КАК ПериодНачисления,
	|	ДополнительныеПериоды.Период КАК Период,
	|	МАКСИМУМ(ДанныеЗадолженности.Период) КАК ПериодПредыдущейЗаписи
	|ПОМЕСТИТЬ ДанныеЗадолженностиДополнительныеПериоды
	|ИЗ
	|	ДанныеЗадолженностиОсновнойНабор КАК ДанныеЗадолженности
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДополнительныеПериоды КАК ДополнительныеПериоды
	|		ПО ДанныеЗадолженности.Район = ДополнительныеПериоды.Район
	|			И ДанныеЗадолженности.Период < ДополнительныеПериоды.Период
	|			И (ВЫБОР
	|				КОГДА ДополнительныеПериоды.МКД = НЕОПРЕДЕЛЕНО
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ДанныеЗадолженности.МКД = ДополнительныеПериоды.МКД
	|			КОНЕЦ)
	|			И (ВЫБОР
	|				КОГДА ДополнительныеПериоды.Абонент = НЕОПРЕДЕЛЕНО
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ДанныеЗадолженности.Абонент = ДополнительныеПериоды.Абонент
	|			КОНЕЦ)
	|			И (ВЫБОР
	|				КОГДА ДополнительныеПериоды.Услуга = НЕОПРЕДЕЛЕНО
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ДанныеЗадолженности.Услуга = ДополнительныеПериоды.Услуга
	|			КОНЕЦ)
	|			И (ВЫБОР
	|				КОГДА ДополнительныеПериоды.ПериодНачисления = НЕОПРЕДЕЛЕНО
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ДанныеЗадолженности.ПериодНачисления = ДополнительныеПериоды.ПериодНачисления
	|			КОНЕЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеЗадолженности.Район,
	|	ДанныеЗадолженности.МКД,
	|	ДанныеЗадолженности.Абонент,
	|	ДанныеЗадолженности.Услуга,
	|	ДанныеЗадолженности.ПериодНачисления,
	|	ДополнительныеПериоды.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеЗадолженности.Район КАК Район,
	|	ДанныеЗадолженности.МКД КАК МКД,
	|	ДанныеЗадолженности.Абонент КАК Абонент,
	|	ДанныеЗадолженности.Услуга КАК Услуга,
	|	ДанныеЗадолженности.ПериодНачисления КАК ПериодНачисления,
	|	ДанныеЗадолженности.Период КАК Период,
	|	ДанныеЗадолженности.СуммаНачальныйОстаток КАК СуммаНачальныйОстаток,
	|	ДанныеЗадолженности.СуммаКонечныйОстаток КАК СуммаКонечныйОстаток
	|ПОМЕСТИТЬ ДанныеЗадолженности
	|ИЗ
	|	ДанныеЗадолженностиОсновнойНабор КАК ДанныеЗадолженности
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеЗадолженности.Район,
	|	ДанныеЗадолженности.МКД,
	|	ДанныеЗадолженности.Абонент,
	|	ДанныеЗадолженности.Услуга,
	|	ДанныеЗадолженности.ПериодНачисления,
	|	ДанныеЗадолженностиДополнительныеПериоды.Период,
	|	ДанныеЗадолженности.СуммаКонечныйОстаток,
	|	ДанныеЗадолженности.СуммаКонечныйОстаток
	|ИЗ
	|	ДанныеЗадолженностиОсновнойНабор КАК ДанныеЗадолженности
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеЗадолженностиДополнительныеПериоды КАК ДанныеЗадолженностиДополнительныеПериоды
	|		ПО ДанныеЗадолженности.Район = ДанныеЗадолженностиДополнительныеПериоды.Район
	|			И ДанныеЗадолженности.МКД = ДанныеЗадолженностиДополнительныеПериоды.МКД
	|			И ДанныеЗадолженности.Абонент = ДанныеЗадолженностиДополнительныеПериоды.Абонент
	|			И ДанныеЗадолженности.Услуга = ДанныеЗадолженностиДополнительныеПериоды.Услуга
	|			И ДанныеЗадолженности.ПериодНачисления = ДанныеЗадолженностиДополнительныеПериоды.ПериодНачисления
	|			И ДанныеЗадолженности.Период = ДанныеЗадолженностиДополнительныеПериоды.ПериодПредыдущейЗаписи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеЗадолженности.Район КАК Район,
	|	ДанныеЗадолженности.МКД КАК МКД,
	|	ДанныеЗадолженности.Абонент КАК Абонент,
	|	ДанныеЗадолженности.Услуга КАК Услуга,
	|	ДанныеЗадолженности.ПериодНачисления КАК ПериодНачисления,
	|	МИНИМУМ(ДанныеЗадолженности.Период) КАК Период
	|ПОМЕСТИТЬ ДатаНачала
	|ИЗ
	|	ДанныеЗадолженности КАК ДанныеЗадолженности
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеЗадолженности.Абонент,
	|	ДанныеЗадолженности.Услуга,
	|	ДанныеЗадолженности.ПериодНачисления,
	|	ДанныеЗадолженности.Район,
	|	ДанныеЗадолженности.МКД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеЗадолженности.Район КАК Район,
	|	ДанныеЗадолженности.МКД КАК МКД,
	|	ДанныеЗадолженности.Абонент КАК Абонент,
	|	ДанныеЗадолженности.Услуга КАК Услуга,
	|	ДанныеЗадолженности.ПериодНачисления КАК ПериодНачисления,
	|	ДанныеЗадолженности.Период КАК Период,
	|	ДанныеЗадолженности.СуммаНачальныйОстаток КАК СуммаНачальныйОстаток,
	|	ДанныеЗадолженности.СуммаКонечныйОстаток КАК СуммаКонечныйОстаток,
	|	ДатаНачала.Период КАК НачальныйПериод,
	|	ДОБАВИТЬКДАТЕ(ДОБАВИТЬКДАТЕ(ДОБАВИТЬКДАТЕ(КОНЕЦПЕРИОДА(ДатаНачала.Период, МЕСЯЦ), СЕКУНДА, 1), МЕСЯЦ, &ГлубинаОтсрочки), ДЕНЬ, &КрайнийСрокОплаты) КАК ДатаНачалаНачисленияПени
	|ПОМЕСТИТЬ ДатаНачальногоПериода
	|ИЗ
	|	ДанныеЗадолженности КАК ДанныеЗадолженности
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДатаНачала КАК ДатаНачала
	|		ПО ДанныеЗадолженности.Район = ДатаНачала.Район
	|			И ДанныеЗадолженности.МКД = ДатаНачала.МКД
	|			И ДанныеЗадолженности.Абонент = ДатаНачала.Абонент
	|			И ДанныеЗадолженности.Услуга = ДатаНачала.Услуга
	|			И ДанныеЗадолженности.ПериодНачисления = ДатаНачала.ПериодНачисления
	|ГДЕ
	|	ДанныеЗадолженности.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ДанныеЗадолженности.СуммаКонечныйОстаток >= 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(энргНачислениеПени.Ссылка) КАК Ссылка,
	|	энргНачислениеПени.Район КАК Район,
	|	энргНачислениеПени.МКД КАК МКД
	|ПОМЕСТИТЬ ДокументыНачисления
	|ИЗ
	|	Документ.энргНачислениеПени КАК энргНачислениеПени
	|ГДЕ
	|	энргНачислениеПени.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И энргНачислениеПени.Организация = &Организация
	|	И энргНачислениеПени.Район = &Район
	|	И энргНачислениеПени.МКД = &МКД
	|
	|СГРУППИРОВАТЬ ПО
	|	энргНачислениеПени.Район,
	|	энргНачислениеПени.МКД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ДокументыНачисления.Ссылка, ЗНАЧЕНИЕ(Документ.энргНачислениеПени.ПустаяСсылка)) КАК ДокументНачисления,
	|	ДатаНачальногоПериода.Абонент КАК Абонент,
	|	ДатаНачальногоПериода.Услуга КАК Услуга,
	|	ДатаНачальногоПериода.ПериодНачисления КАК ПериодНачисления,
	|	ДатаНачальногоПериода.Период КАК Период,
	|	ДатаНачальногоПериода.СуммаНачальныйОстаток КАК СуммаНачальныйОстаток,
	|	ДатаНачальногоПериода.СуммаКонечныйОстаток КАК СуммаКонечныйОстаток,
	|	ДатаНачальногоПериода.ДатаНачалаНачисленияПени КАК ДатаНачалаНачисленияПени,
	|	РАЗНОСТЬДАТ(ДатаНачальногоПериода.ДатаНачалаНачисленияПени, ВЫБОР
	|			КОГДА МЕСЯЦ(ДатаНачальногоПериода.ДатаНачалаНачисленияПени) = МЕСЯЦ(ДатаНачальногоПериода.Период)
	|				ТОГДА ДатаНачальногоПериода.ДатаНачалаНачисленияПени
	|			ИНАЧЕ &НачалоПериода
	|		КОНЕЦ, ДЕНЬ) КАК ДнейНаДеньНачала,
	|	РАЗНОСТЬДАТ(ДатаНачальногоПериода.ДатаНачалаНачисленияПени, ДатаНачальногоПериода.Период, ДЕНЬ) КАК ДнейПросрочкиСДатыНачалаНачисленийПени,
	|	ВЫБОР
	|		КОГДА МЕСЯЦ(ДатаНачальногоПериода.ДатаНачалаНачисленияПени) = МЕСЯЦ(ДатаНачальногоПериода.Период)
	|			ТОГДА ДатаНачальногоПериода.ДатаНачалаНачисленияПени
	|		ИНАЧЕ &НачалоПериода
	|	КОНЕЦ КАК ПериодНачало,
	|	ДатаНачальногоПериода.НачальныйПериод КАК НачальныйПериод,
	|	ЕСТЬNULL(ПериодДействияСтавокРефинансирования.ЗначениеСтавкиРефинансирования, 0) КАК ЗначениеСтавкиРефинансирования,
	|	ДОБАВИТЬКДАТЕ(ДатаНачальногоПериода.ДатаНачалаНачисленияПени, ДЕНЬ, 30) КАК ДатаНачисленияПени
	|ИЗ
	|	ДатаНачальногоПериода КАК ДатаНачальногоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДокументыНачисления КАК ДокументыНачисления
	|		ПО ДатаНачальногоПериода.Район = ДокументыНачисления.Район
	|			И ДатаНачальногоПериода.МКД = ДокументыНачисления.МКД
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПериодДействияСтавокРефинансирования КАК ПериодДействияСтавокРефинансирования
	|		ПО (ВЫБОР
	|				КОГДА ДатаНачальногоПериода.Период = &КонецПериода
	|					ТОГДА ПериодДействияСтавокРефинансирования.ПериодПо = &КонецПериода
	|				ИНАЧЕ ПериодДействияСтавокРефинансирования.ПериодС < ДатаНачальногоПериода.Период
	|						И ДатаНачальногоПериода.Период <= ПериодДействияСтавокРефинансирования.ПериодПо
	|			КОНЕЦ)
	|ГДЕ
	|	ДатаНачальногоПериода.ДатаНачалаНачисленияПени < &КонецПериода
	|	И ДатаНачальногоПериода.Период >= ДатаНачальногоПериода.ДатаНачалаНачисленияПени
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодНачисления,
	|	Период
	|ИТОГИ
	|	МАКСИМУМ(ДнейНаДеньНачала),
	|	МАКСИМУМ(ПериодНачало)
	|ПО
	|	ДокументНачисления,
	|	ПериодНачисления,
	|	Услуга,
	|	Абонент";	
	
	Запрос.УстановитьПараметр("ГлубинаОтсрочки", 								ГлубинаОтсрочки);
	Запрос.УстановитьПараметр("КонецПериода", 									ГраницыПериодаНачисления.ЗавершениеОП);
	Запрос.УстановитьПараметр("КрайнийСрокОплаты", 								КрайнийСрокОплаты);
	Запрос.УстановитьПараметр("МКД", 											МКД);
	Запрос.УстановитьПараметр("НачалоПериода", 									ГраницыПериодаНачисления.НачалоОП);
	Запрос.УстановитьПараметр("Организация", 									Организация);
	Запрос.УстановитьПараметр("Район", 											Район);
		
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДокументНачисления = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаДокументНачисления.Следующий() Цикл
		
		Если ЗначениеЗаполнено(ВыборкаДокументНачисления.ДокументНачисления) Тогда
			ДокументОбъект = ВыборкаДокументНачисления.ДокументНачисления.ПолучитьОбъект();
			ДокументОбъект.Дата = ГраницыПериодаНачисления.ЗавершениеОП-1;
			ДокументОбъект.ПометкаУдаления  = Ложь;
			ДокументОбъект.ДанныеНачислений.Очистить();
		Иначе
			ДокументОбъект = Документы.энргНачислениеПени.СоздатьДокумент();
			ДокументОбъект.Дата = ГраницыПериодаНачисления.ЗавершениеОП-1;
			ДокументОбъект.Район = Район;
			ДокументОбъект.МКД = МКД;
			ДокументОбъект.Организация = Организация;
			ДокументОбъект.ПериодНачисления = ПериодНачисления;
			ДокументОбъект.Ответственный = Пользователи.ТекущийПользователь();
		КонецЕсли;
		
		ДокументОбъект.ДополнительныеСвойства.Вставить("ПроведениеРазрешено",Истина);
		
		ПараметрыШапки = Новый Структура;
		ПараметрыШапки.Вставить("ПериодНачисления", ПериодНачисления);
		ПараметрыШапки.Вставить("Организация", ДокументОбъект.Организация);
		ПараметрыШапки.Вставить("Район", ДокументОбъект.Район);
		ПараметрыШапки.Вставить("МКД", ДокументОбъект.МКД);
		ПараметрыШапки.Вставить("ЭтоОплата", Ложь);
		ПараметрыШапки.Вставить("Кассир", ДокументОбъект.Ответственный);
		ПараметрыШапки.Вставить("ИсточникПоступления", Неопределено);
		
		ДокументОбъект.ДополнительныеСвойства.Вставить("ПараметрыПроведения", ПараметрыШапки);
	
		ВыборкаПериодНачисления = ВыборкаДокументНачисления.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
		Пока ВыборкаПериодНачисления.Следующий() Цикл
			ВыборкаУслуга = ВыборкаПериодНачисления.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
			Пока ВыборкаУслуга.Следующий() Цикл
				ВыборкаАбонент = ВыборкаУслуга.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
				Пока ВыборкаАбонент.Следующий() Цикл
					
					ПериодНачалоДляРасчета = ВыборкаАбонент.ПериодНачало;
					ДнейНаДеньНачалаДляРасчета 			= ?(ВыборкаАбонент.ДнейНаДеньНачала = 0, -1, ВыборкаАбонент.ДнейНаДеньНачала);
					ТекПериод 							= ВыборкаАбонент.ПериодНачало;
					ВыборкаДетальныеЗаписи = ВыборкаАбонент.Выбрать();	
					СуммаПени 							= 0;
					ДнейПросрочкиВПериоде 				= 0;
					ДнейПросрочки 						= ВыборкаАбонент.ДнейНаДеньНачала;
					
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 						
						СуммаЗадолженности = ?(ВыборкаДетальныеЗаписи.СуммаНачальныйОстаток = 0, ВыборкаДетальныеЗаписи.СуммаКонечныйОстаток, ВыборкаДетальныеЗаписи.СуммаНачальныйОстаток);
						КоэффициентЧислитель = 1;
						КоэффициентЗнаменатель = 1;
						ПредКоэффициентЧислитель = 1;
						ПредКоэффициентЗнаменатель = 1;
						РангКоэффициента = 0;
						ПредыдущийРанг 						= Неопределено;
						НачисляемПеню 						= Ложь;  						
						Пока ТекПериод < ВыборкаДетальныеЗаписи.Период Цикл
							ДнейПросрочки 					= ДнейПросрочки + 1;							
							НачисляемПеню 					= Ложь;
							ПараметрыРасчетаИзменены 		= Ложь;
							СтруктураКоэффициента 			= Соответствие.Получить(?(ДнейПросрочки>МаксЗначение,0,ДнейПросрочки));
							
							Если НЕ СтруктураКоэффициента = Неопределено Тогда
								ПараметрыРасчетаИзменены 	= НЕ КоэффициентЧислитель = СтруктураКоэффициента.Числитель ИЛИ НЕ КоэффициентЗнаменатель = СтруктураКоэффициента.Знаменатель ИЛИ НЕ РангКоэффициента = СтруктураКоэффициента.РангКоэффициента;  
								НачисляемПеню 				= Истина;								
							КонецЕсли;
							
							Если НачисляемПеню и ПараметрыРасчетаИзменены И ДнейПросрочкиВПериоде > 1 Тогда
								НСтр 						= ДокументОбъект.ДанныеНачислений.Добавить();
								ЗаполнитьЗначенияСвойств(НСтр, ВыборкаДетальныеЗаписи);
								НСтр.Период 				= ТекПериод;
								НСтр.ДнейПросрочкиСДатыНачалаНачисленийПени = ДнейПросрочки-1;
								НСтр.КоэффициентЧислитель 	= КоэффициентЧислитель;
								НСтр.КоэффициентЗнаменатель = КоэффициентЗнаменатель;
								НСтр.СуммаЗадолженности 	= СуммаЗадолженности;
								НСтр.ДнейПросрочки 			= ДнейПросрочкиВПериоде;
								НСтр.СтавкаРефинансирования = ВыборкаДетальныеЗаписи.ЗначениеСтавкиРефинансирования;							
								НСтр.ДатаНачисления 		= ВыборкаДетальныеЗаписи.НачальныйПериод;
								НСтр.СуммаПени 				= СуммаПени;
								СуммаПени 					= 0;								
								ДнейПросрочкиВПериоде 		= 0;
							КонецЕсли; 
							
							Если НЕ СтруктураКоэффициента = Неопределено Тогда
								КоэффициентЧислитель 		= СтруктураКоэффициента.Числитель;
								КоэффициентЗнаменатель 		= СтруктураКоэффициента.Знаменатель;
								РангКоэффициента 			= СтруктураКоэффициента.РангКоэффициента; 								
							КонецЕсли;
							
							Если НачисляемПеню Тогда
								ДнейПросрочкиВПериоде 		= ДнейПросрочкиВПериоде + 1;
								СтавкаРефинансированияДоля	= (ВыборкаДетальныеЗаписи.ЗначениеСтавкиРефинансирования/100);
								СуммаПени 					= СуммаПени + СуммаЗадолженности *  (КоэффициентЧислитель / КоэффициентЗнаменатель) * СтавкаРефинансированияДоля; 
							КонецЕсли;
							
							ТекПериод 						= ТекПериод + 86400;							
						КонецЦикла;
						
						Если НачисляемПеню и СуммаПени > 0 Тогда
							НСтр = ДокументОбъект.ДанныеНачислений.Добавить();
							ЗаполнитьЗначенияСвойств(НСтр, ВыборкаДетальныеЗаписи);
							НСтр.Период 				= ТекПериод;
							НСтр.ДнейПросрочкиСДатыНачалаНачисленийПени = ДнейПросрочки-1;
							НСтр.КоэффициентЧислитель = КоэффициентЧислитель;
							НСтр.КоэффициентЗнаменатель = КоэффициентЗнаменатель;
							НСтр.СуммаЗадолженности = СуммаЗадолженности;
							НСтр.ДнейПросрочки = ДнейПросрочкиВПериоде;
							НСтр.СтавкаРефинансирования = ВыборкаДетальныеЗаписи.ЗначениеСтавкиРефинансирования;							
							НСтр.ДатаНачисления = ВыборкаДетальныеЗаписи.НачальныйПериод;
							НСтр.СуммаПени = СуммаПени;
							СуммаПени 					= 0;								
							ДнейПросрочкиВПериоде 		= 0;
						КонецЕсли;						
					КонецЦикла;				
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
		
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		
	КонецЦикла;
	
	//Результат = Запрос.Выполнить();
	//
	//Выборка  									= Результат.Выбрать();
	//ТекМКД  									= Неопределено; 
	//ДокументОбъект 							= Неопределено;
	//Пока Выборка.Следующий() цикл
	//	
	//	Если ТекМКД <> Выборка.МКД тогда
	//		Если ТекМКД<> Неопределено тогда
	//			ДокументОбъект.ДополнительныеСвойства.Вставить("ПроведениеРазрешено",Истина);
	//			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	//		КонецЕсли;
	//		
	//		Если ЗначениеЗаполнено(Выборка.ДокументНачисления) тогда
	//			ДокументОбъект  				= Выборка.ДокументНачисления.ПолучитьОбъект();
	//			ДокументОбъект.ПометкаУдаления  = Ложь;
	//			ТабЧасть 						= ДокументОбъект.ДанныеНачислений;
	//		иначе
	//			ДокументОбъект  				= Документы.энргНачислениеПени.СоздатьДокумент();
	//			ТабЧасть 						= ДокументОбъект.ДанныеНачислений;
	//		КонецЕсли;		
	//		ТабЧасть.очистить();			
	//	КонецЕсли;	
	//	
	//	СтрокаНачислений  						= ТабЧасть.добавить();
	//	ЗаполнитьЗначенияСвойств(СтрокаНачислений,Выборка);
	//	
	//	ТекМКД 									= Выборка.МКД;		
	//КонецЦикла; 
	//
	//Если ТекМКД<> Неопределено тогда
	//	ДокументОбъект.ДополнительныеСвойства.Вставить("ПроведениеРазрешено",Истина);
	//	ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	//КонецЕсли;
	//
	//Если МКД = Неопределено тогда
	//	//Набор 									= РегистрыСведений.энргВыполненныеНачисления.СоздатьНаборЗаписей();
	//	//Набор.Отбор.ПериодНачисления.установить(ПериодНачисления);
	//	//Набор.Отбор.Район.установить(Район);
	//	//Набор.Отбор.ВидОперацииНачисления.установить(Перечисления.энргВидыОперацийНачисления.НачислениеПени);
	//	//Набор.ДополнительныеСвойства.Вставить("ЗаписьРазрешена");
	//	//Запись 								= Набор.Добавить();
	//	//Запись.ПериодНачисления 				= ПериодНачисления;
	//	//Запись.Район							= Район;
	//	//Запись.ВидОперацииНачисления			= Перечисления.энргВидыОперацийНачисления.НачислениеПени;
	//	//Набор.Записать();
	//КонецЕсли; 	 
	
КонецПроцедуры

Процедура ЗакрытьПериодДляРедактирования(Организация,ПериодНачисления,Район) Экспорт  
			
	ДокуметЗакрытия 				= ДокуметЗакрытияПериода(Организация, ПериодНачисления,Район);
	
	Если не ЗначениеЗаполнено(ДокуметЗакрытия) тогда
		ДокументОбъект 				= Документы.энргЗакрытиеПериода.СоздатьДокумент();
	иначе
		ДокументОбъект 				= ДокуметЗакрытия.ПолучитьОбъект();  
	КонецЕсли;
	
	ДокументОбъект.ДополнительныеСвойства.вставить("ПроведениеРазрешено",Истина);
	ДокументОбъект.Организация 		= Организация;
	ДокументОбъект.Район 			= Район;
	ДокументОбъект.ПериодНачисления = ПериодНачисления;	
	Попытка
		ДокументОбъект.записать(РежимЗаписиДокумента.Запись);
	Исключение
		ОписаниеОшибки 				= ОписаниеОшибки();
		ВызватьИсключение ОписаниеОшибки; 
	КонецПопытки;	
	
КонецПроцедуры

// Процедура - НачислитьЛьготы
//
// Параметры:
//  ПериодНачисления - 	 - 
//  Район			 - 	 - 
//  Дом				 - 	 - 
//  Абонент			 - 	 - 
//  Документ		 - 	 - 
//
Процедура НачислитьЛьготы(Организация, ПериодНачисления,Район,Строение,Абонент,Документ) Экспорт
	// TODO FIX ME
	Возврат;
	ГраницыПериода  								= Обработки.энргГраницыПериодаНачисленияМенеджер.ГраницыРасчетногоПериода(Организация,Район,ПериодНачисления,Ложь);
	
	НачалоПериодаРасчета							= ГраницыПериода.НачалоОП;
	КонецПериодаРасчета  							= ГраницыПериода.ЗавершениеОП;
	//ДнейВПериоде  									= ГраницыПериода.ДнейВПериоде; 
	КолвоМесЗадолженности = 0;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	энргКоличествоМесяцевЗадолженностиДляРасчетаЛьготыСрезПоследних.Количество КАК Количество
		|ИЗ
		|	РегистрСведений.энргКоличествоМесяцевЗадолженностиДляРасчетаЛьготы.СрезПоследних(
		|			&Конец,
		|			Организация = &Организация
		|				И Район = &Район) КАК энргКоличествоМесяцевЗадолженностиДляРасчетаЛьготыСрезПоследних";
	
	Запрос.УстановитьПараметр("Конец", КонецПериодаРасчета - 1);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Район", Район);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		КолвоМесЗадолженности =  ВыборкаДетальныеЗаписи.Количество;
	КонецЦикла;
	
	Запрос 											= новый Запрос;
	Запрос.Текст 									= ПолучитьТекстЗапросаДляЛьготников();
	Если Строение=Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"энргОбъемНачислений.Строение = &Строение", "Истина");
	Иначе
		Запрос.УстановитьПараметр("Строение", Строение);
	КонецЕсли;
	Запрос.УстановитьПараметр("НачалоПериода",		НачалоПериодаРасчета);
	Запрос.УстановитьПараметр("КонецПериода", 		КонецПериодаРасчета);	
	Запрос.УстановитьПараметр("Организация", 		Организация);
	Запрос.УстановитьПараметр("Район", 				Район);
	Запрос.УстановитьПараметр("МесяцЗадолженности", ДобавитьМесяц(КонецПериодаРасчета - 1, -КолвоМесЗадолженности));

	результатЗапроса 								= Запрос.Выполнить();								
	КонецПериода  									= КонецМесяца(ПериодНачисления);
	
	Выборка  										= результатЗапроса.выбрать();

	ТекЧастныйСектор 								= Ложь;
	ТекСтроение  									= Неопределено;
	ДокументОбъект 									= Неопределено;
	Набор 											= Неопределено;
	
	Пока Выборка.следующий() цикл
		
		Если Документ = Неопределено тогда			
			Если  ТекСтроение <> Выборка.Строение тогда
				Если ТекСтроение<>Неопределено тогда
					НачатьТранзакцию();
					Попытка
						Если НЕ ДокументОбъект = Неопределено Тогда
							ДокументОбъект.ДополнительныеСвойства.Вставить("ПроведениеРазрешено",Истина);
							ДокументОбъект.записать(РежимЗаписиДокумента.Запись);
						КонецЕсли;
						Набор.ДополнительныеСвойства.Вставить("Организация",		Организация);
						Набор.ДополнительныеСвойства.Вставить("Район",				Район);
						Набор.ДополнительныеСвойства.Вставить("ПериодНачисления",	ПериодНачисления);
						Набор.ДополнительныеСвойства.Вставить("ЧастныйСектор",		ТекЧастныйСектор);
						Набор.ДополнительныеСвойства.Вставить("Строение",			ТекСтроение);
						Набор.ДополнительныеСвойства.Вставить("ДатаРегистратора",	КонецПериодаРасчета-1);						
						Набор.Записать(Ложь);						
						ЗафиксироватьТранзакцию();
					Исключение
						ОтменитьТранзакцию();
					КонецПопытки;					
				КонецЕсли;
				
				ДокументСсылка 						= Выборка.СсылкаНаСущДок;
				ПометкаУдаления 					= Выборка.ПометкаУдаления;
				ДокументОбъект  					= Неопределено;
				Если НЕ ЗначениеЗаполнено(ДокументСсылка)  Тогда
					ДокументСсылка 					= Документы.энргНачислениеДляЛьготныхЛиц.ПолучитьСсылку(Новый УникальныйИдентификатор());
					ДокументОбъект  				= Документы.энргНачислениеДляЛьготныхЛиц.СоздатьДокумент();
					ДокументОбъект.УстановитьСсылкуНового(ДокументСсылка);
					ДокументОбъект.район  			= Район;
					ДокументОбъект.МКД 				= ?(Выборка.ЧастныйСектор, Справочники.энргСтроения.ПустаяСсылка(), Выборка.Строение);
					ДокументОбъект.Дата				= КонецПериодаРасчета-1;
					ДокументОбъект.Организация 		= Организация;
				ИначеЕсли ПометкаУдаления Тогда
					ДокументОбъект  				= ДокументСсылка.ПолучитьОбъект();
					ДокументОбъект.ПометкаУдаления 	= Ложь;
				КонецЕсли;
				
				Набор 								= РегистрыНакопления.энргОбъемНачисленийДляЛьготныхЛиц.СоздатьНаборЗаписей();
				Набор.Отбор.Регистратор.Установить(ДокументСсылка);
				
				Если Не Абонент = Неопределено Тогда					
					Набор.ДополнительныеСвойства.Вставить("Абонент",	Абонент);
					Если ДокументОбъект = Неопределено Тогда
						Набор.Прочитать();
						СтрокиНабораДоЗаписи 							= Набор.Выгрузить();
						СтрокиУдалить 									= СтрокиНабораДоЗаписи.НайтиСтроки(Новый Структура("Абонент", Абонент));
						Для Каждого СтрокаУдалить ИЗ СтрокиУдалить Цикл
							СтрокиНабораДоЗаписи.Удалить(СтрокаУдалить);
						КонецЦикла;
						Набор.Очистить();
					КонецЕсли;					
				КонецЕсли;
				
				Если ДокументОбъект = Неопределено Тогда
					Набор.Записать();
				КонецЕсли;				
			КонецЕсли;
		иначе
			Набор 									= Документ.Движения.энргОбъемНачисленийДляЛьготныхЛиц; 
		КонецЕсли;		
		
		Если ЗначениеЗаполнено(Выборка.Абонент) Тогда
			СтрокНабора 								= Набор.добавить();
			ЗаполнитьЗначенияСвойств(СтрокНабора,Выборка);
			СтрокНабора.Период							= КонецПериодаРасчета-1;
			СтрокНабора.Регистратор						= ДокументСсылка;
			СтрокНабора.ПериодРасчета 					= ПериодНачисления;
		КонецЕсли;
		
		ТекЧастныйСектор								= Выборка.ЧастныйСектор;
		ТекСтроение										= Выборка.Строение;
	КонецЦикла;	
	
	Если Документ = Неопределено и НЕ Набор = Неопределено и Набор.Количество() > 0 Тогда
		НачатьТранзакцию();
		Попытка 			
			Если НЕ ДокументОбъект = Неопределено Тогда
				ДокументОбъект.ДополнительныеСвойства.Вставить("ПроведениеРазрешено",Истина);
				ДокументОбъект.записать(РежимЗаписиДокумента.Запись);
			КонецЕсли;
			Набор.ДополнительныеСвойства.Вставить("Организация",		Организация);
			Набор.ДополнительныеСвойства.Вставить("Район",				Район);
			Набор.ДополнительныеСвойства.Вставить("ПериодНачисления",	ПериодНачисления);
			Набор.ДополнительныеСвойства.Вставить("ЧастныйСектор",		ТекЧастныйСектор);
			Набор.ДополнительныеСвойства.Вставить("Строение",			ТекСтроение);
			Набор.ДополнительныеСвойства.Вставить("ДатаРегистратора",	КонецПериодаРасчета-1);
			 			
			Если НЕ Абонент = Неопределено и НЕ СтрокиНабораДоЗаписи = Неопределено и СтрокиНабораДоЗаписи.Количество() > 0 Тогда
				Набор.ДополнительныеСвойства.Вставить("Абонент",	Абонент);
				Для Каждого СтрокаДобавить Из СтрокиНабораДоЗаписи Цикл
					ЗаполнитьЗначенияСвойств(Набор.Добавить(), СтрокаДобавить);
				КонецЦикла;				
			КонецЕсли; 			
			
			Набор.Записать(Ложь);
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ИнформацияОбОшибке  						= ИнформацияОбОшибке();
			ВызватьИсключение (ПодробноеПредставлениеОшибки(ИнформацияОбОшибке)); 
		КонецПопытки;	
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПересчитатьРаспредениеОбъемаПотребленногоМКД(Организация,ПериодНачисления, Район, Строение, ПараметрыПерерасчета) Экспорт 
	Перем текПериодНачисления, ТекСтроение, ТекУслуга, НаборОтрицательныйОбъемРаспределения, НаборЗаписей, НаборЗаписейПомещений, НаборЗаписейНП, НаборЗаписейСверхНорма, ТекМКДАбонентов, ТекУслугаАбонентов,
	ДокументОбъект, ДанныеПоУслуге, НаборВыполненные, ПараметрыРасчетаНорматива, РассчитыватьНорматив, НачисленияПоУслугам;
	
	МВТ 											= Новый МенеджерВременныхТаблиц;
	ТекстГраницОтчетногоПериода 					= энргНачисления.ТекстГраницОтчетногоПериода(ПараметрыПерерасчета.Начало,ПараметрыПерерасчета.Окончание,Ложь);
	Запрос 	 										= Новый Запрос("ВЫБРАТЬ * ПОМЕСТИТЬ ГраницыОтчетногоПериода ИЗ (" +ТекстГраницОтчетногоПериода+ ") КАК ВложенныйЗапрос");
	Запрос.МенеджерВременныхТаблиц 					= МВТ;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Выполнить();
	
	ГраницыПериода  								= Обработки.энргГраницыПериодаНачисленияМенеджер.ГраницыРасчетногоПериода(Организация,Район,ПараметрыПерерасчета.Начало);
	НачалоПериодаРасчета							= ГраницыПериода.НачалоОП;
	
	ГраницыПериода  								= Обработки.энргГраницыПериодаНачисленияМенеджер.ГраницыРасчетногоПериода(Организация,Район,ПараметрыПерерасчета.Окончание);
	КонецПериодаРасчета								= ГраницыПериода.ЗавершениеОП;
	
	ПараметрыПерерасчета.Вставить("НачалоПериодаРасчета", 	НачалоПериодаРасчета);
	ПараметрыПерерасчета.Вставить("КонецПериодаРасчета", 	КонецПериодаРасчета);
	
	ПрочитатьНормативныеДанныеРаспределения_Перерасчет(МВТ,Организация,ПериодНачисления,Район,Строение);
	ПрочитатьДокументыДляРаспределения_Перерасчет(МВТ,Организация,ПериодНачисления,Район,Строение);
	ПрочитатьСозданныеДокументыИндивидуальныхНачислений_Перерасчет(МВТ,Организация,ПериодНачисления,Район,Строение);
	ПрочитатьОбъемыНачисленийМКДДляРаспределения_Перерасчет(МВТ,Организация,ПериодНачисления,Район,Строение,ПараметрыПерерасчета);
	ПрочитатьВспомогательныеДанныеРаспределениеМКД(МВТ,Организация,ПериодНачисления,Район,Строение, ПараметрыПерерасчета);
	
	Запрос 									= Новый Запрос;
	Запрос.МенеджерВременныхТаблиц 			= МВТ;
	Запрос.Текст 							= ТекстЗапросаДанныеДляРаспределения(Строение);
	
	Результат  								= Запрос.ВыполнитьПакет();
	ВыборкаЗначенияТарифов 					= Результат[0].Выбрать();
	ВыборкаОбъемМКД							= Результат[1].Выбрать();
	ВыборкаАбоненты							= Результат[2].Выбрать();
	ВыборкаОбъемПоПриборуКорректировать		= Результат[3].Выбрать();
	ВыборкаРазделенныеЛицевыеСчета			= Результат[4].Выбрать();
	ВыборкаОбъемПоПриборуНПКорректировать	= Результат[5].Выбрать();
	ВыборкаОтрицательныйОбъемРаспределения 	= Неопределено;
	РазделенныеЛицевыеСчета 				= Новый Соответствие;
	КлючРазделенныеЛицевыеСчета 			= "Абонент,ЗначениеПлощади,СпособРаспределенияОбъемаПомещения,ФиксированныйОбъемПотребления,
	|ДоляПотребленияЧислитель,ДоляПотребленияЗнаменатель,КоличествоПроживающих,ТарифнаяГруппа,Поставщик,ЗначениеСоциальнойНормы,ДопСоциальнаяНормаПотребления";
	
	НаборЗаписей 							= ПараметрыПерерасчета.ОбъемНачислений;
	НаборЗаписейНП 							= ПараметрыПерерасчета.ОбъемНачисленийНП;
	тзЗначенияСоциальныхНормативов 			= Неопределено;
	ЗначенияТарифов 						= Новый Соответствие;
	Если ВыборкаЗначенияТарифов.Количество() > 0 Тогда
		Пока ВыборкаЗначенияТарифов.Следующий() Цикл
			ХэшСтроки 						= ХэшСтрокиТарифа(ВыборкаЗначенияТарифов.ГруппаПотребителей,ВыборкаЗначенияТарифов.Услуга,ВыборкаЗначенияТарифов.Поставщик,ВыборкаЗначенияТарифов.ТарифнаяЗона);
			ОписаниеЗначения 				= Новый Структура("Значение,ЗначениеТарифаРЭК,ЗначениеСверхНорматива,СтавкаНДС,НДСВнутри,ГруппаПотребителей,Услуга,Поставщик,ТарифнаяЗона");
			ЗаполнитьЗначенияСвойств(ОписаниеЗначения, ВыборкаЗначенияТарифов);			
			ЗначенияТарифов.Вставить(ХэшСтроки,ОписаниеЗначения); 			
		КонецЦикла;		
	КонецЕсли;
	
	ВыборкаАбоненты.следующий();
	ВыборкаОбъемПоПриборуНПКорректировать.Следующий();
	
	ЕстьРазделенныеЛицевыеСчета 				= ВыборкаРазделенныеЛицевыеСчета.Следующий();
	
	Отказ 										= Ложь;
	ТипыНачислений 								= энргНачисления.ТипыРасходовВФормулахРасчета();
	ТекстИсключения		 						= "";
	ИспользоватьТарифРек 						= Ложь;
		
	РаспределениеОбъемаПоУслугам 				= Новый Соответствие;
	РаспределениеОбъемаПоУслугамПотребленный 	= Новый Соответствие;
	
	Пока ВыборкаОбъемМКД.Следующий() Цикл
		
		//Если МассивМКД_УК.Найти(ВыборкаОбъемМКД.Строение) <> Неопределено Тогда
		//	Продолжить;	
		//КонецЕсли;
		
		Если НЕ текПериодНачисления = ВыборкаОбъемМКД.ПериодНачисления 
			ИЛИ НЕ ТекСтроение = ВыборкаОбъемМКД.Строение 
			ИЛИ НЕ ТекУслуга = ВыборкаОбъемМКД.Услуга Тогда
												
			Если Не ТекУслуга  = Неопределено Тогда
				Если ПустаяСтрока(ДанныеПоУслуге.ФормулаРасчетаНорматива) Тогда					
					РаспределитьОбъемПотребленныйПоУслугеМКД(текПериодНачисления, Организация, Район, ТекСтроение, ТекУслуга, ГраницыПериода, ЗначенияТарифов, ДанныеПоУслуге, ДокументОбъект, РаспределениеОбъемаПоУслугамПотребленный, НаборОтрицательныйОбъемРаспределения,НаборЗаписей, НаборЗаписейПомещений, НаборЗаписейНП, НаборЗаписейСверхНорма, ИспользоватьТарифРек);	
				КонецЕсли;
				ЗаполнитьПараметрыРасчетаНорматива(ДанныеПоУслуге, ПараметрыРасчетаНорматива, РассчитыватьНорматив, ТипыНачислений, ТекУслуга, НачисленияПоУслугам);
			КонецЕсли;
			
			Если НЕ текПериодНачисления = ВыборкаОбъемМКД.ПериодНачисления
				ИЛИ НЕ ТекСтроение = ВыборкаОбъемМКД.Строение Тогда
				Если НЕ ТекСтроение = Неопределено Тогда
					// Рассчитываем норматив
					РассчитатьНормативПоФормуле(ПараметрыРасчетаНорматива, РассчитыватьНорматив,НачисленияПоУслугам,ЗначенияТарифов,ГраницыПериода,Отказ,НаборЗаписей, НаборЗаписейПомещений, НаборЗаписейНП);
				КонецЕсли;
				
				// запоминаем свойства разделенных лицевых счетов по услугам
				РаспределениеОбъемаПоУслугам 	= Новый Соответствие;
				Отказ 							= Ложь;
				РассчитыватьНорматив 			= Новый Массив;
				ПараметрыРасчетаНорматива 		= Новый Соответствие;
				РазделенныеЛицевыеСчета 		= Новый Соответствие;
				НачисленияПоУслугам 			= Новый Соответствие;
				Если ЕстьРазделенныеЛицевыеСчета Тогда
					ЗаполнитьРазделенныеЛицевыеСчета(КлючРазделенныеЛицевыеСчета, РазделенныеЛицевыеСчета, ВыборкаРазделенныеЛицевыеСчета, ВыборкаОбъемМКД, тзЗначенияСоциальныхНормативов);					
				КонецЕсли; 				
			КонецЕсли;			
						
			ДанныеПоУслуге 					= ДанныеПоУслугиДляРаспределения(ВыборкаОбъемМКД, РазделенныеЛицевыеСчета);
			
			ЗаполнитьДанныеАбонентовДляРаспределения(ДанныеПоУслуге, ВыборкаАбоненты, ВыборкаОбъемМКД, ВыборкаОтрицательныйОбъемРаспределения, ВыборкаОбъемПоПриборуКорректировать, ВыборкаОбъемПоПриборуНПКорректировать);					
		КонецЕсли;
		
		ЗаполнитьОбъемыМКДПриРаспределении(ВыборкаОбъемМКД, ДанныеПоУслуге);
		
		текПериодНачисления 				= ВыборкаОбъемМКД.ПериодНачисления;
		ТекСтроение							= ВыборкаОбъемМКД.Строение;
		ТекУслуга 							= ВыборкаОбъемМКД.Услуга;
	КонецЦикла; 	
	
	Если Не ТекСтроение = Неопределено Тогда		
		Если ПустаяСтрока(ДанныеПоУслуге.ФормулаРасчетаНорматива) Тогда			
			РаспределитьОбъемПотребленныйПоУслугеМКД(текПериодНачисления, Организация, Район, ТекСтроение, ТекУслуга, ГраницыПериода, ЗначенияТарифов, ДанныеПоУслуге, ДокументОбъект, РаспределениеОбъемаПоУслугамПотребленный, НаборОтрицательныйОбъемРаспределения, НаборЗаписей, НаборЗаписейПомещений, НаборЗаписейНП, НаборЗаписейСверхНорма, ИспользоватьТарифРек);
		КонецЕсли;		
		ЗаполнитьПараметрыРасчетаНорматива(ДанныеПоУслуге, ПараметрыРасчетаНорматива, РассчитыватьНорматив, ТипыНачислений, ТекУслуга, НачисленияПоУслугам);
		РассчитатьНормативПоФормуле(ПараметрыРасчетаНорматива, РассчитыватьНорматив, НачисленияПоУслугам, ЗначенияТарифов, ГраницыПериода, Отказ, НаборЗаписей, НаборЗаписейПомещений, НаборЗаписейНП);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбщиеПроцедурыИФункции

Процедура ПолучитьСтабильныеПериоды(МВТ,ДокументНачисленияПустаяСсылка)  
	
	Текст 							= ТекстПолучитьСтабильныеПериоды();
	Запрос  						= Новый Запрос(Текст);
	Запрос.УстановитьПараметр("ДокументНачисленияПустаяСсылка", ДокументНачисленияПустаяСсылка);
	Запрос.МенеджерВременныхТаблиц	= МВТ;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПолучитьДанныеДляРасчета(МВТ,РасчетПоФормуле,ЭтоПерерасчет,ИмяДокумента)
	
	Текст 							= ТекстПолучитьДанныеДляРасчета();
	Запрос  						= Новый Запрос(Текст); 	
	Запрос.МенеджерВременныхТаблиц 	= МВТ;
	Запрос.Выполнить();
	
КонецПроцедуры

Функция РассчитатьИндивидуальныйОбъемПотребления(МВТ); 
	
	Текст  							= ТекстРассчитатьИндивидуальныйОбъемПотребления();
	Запрос  						= Новый Запрос(Текст);
	Запрос.МенеджерВременныхТаблиц 	= МВТ;	
	Запрос.Выполнить();
	
	Схема 							= Неопределено;
	ВыбираемыПоля  					= ВыбираемыеПоляРезультатНачисления();
	ВычисляемыеПоля 				= ВычисляемыеПоляРезультатНачисления();
	
	ДобавитьРасчетОбъемаУслугиПоПриборам(Схема,ВыбираемыПоля,ВычисляемыеПоля,МВТ,"ДанныеДляРасчета");
	ДобавитьРасчетОбъемаПотребленногоПоПриборам(Схема,ВыбираемыПоля,ВычисляемыеПоля,МВТ,"ДанныеДляРасчета");
	
	ДобавитьРасчетОбъемаУслугиПоНормативу(Схема,ВыбираемыПоля,ВычисляемыеПоля,МВТ,"ДанныеДляРасчета");
	ДобавитьРасчетОбъемаПотребленногоПоНормативу(Схема,ВыбираемыПоля,ВычисляемыеПоля,МВТ,"ДанныеДляРасчета");
	
	ДобавитьРасчетОбъемаУслугиПоСреднемуНормативуЗаПрошлыйГод(Схема,ВыбираемыПоля,ВычисляемыеПоля,МВТ,"ДанныеДляРасчета");
	ДобавитьРасчетОбъемаУслугиПоСреднемуНормативу(Схема,ВыбираемыПоля,ВычисляемыеПоля,МВТ,"ДанныеДляРасчета");
	ДобавитьРасчетОбъемаПотребленногоПоСреднемуНормативу(Схема,ВыбираемыПоля,ВычисляемыеПоля,МВТ,"ДанныеДляРасчета");
	
	ДобавитьРасчетОбъемаУслугиПоСреднемуЗаПрошлыйГод(Схема,ВыбираемыПоля,ВычисляемыеПоля,МВТ,"ДанныеДляРасчета");
	ДобавитьРасчетОбъемаУслугиПоСреднему(Схема,ВыбираемыПоля,ВычисляемыеПоля,МВТ,"ДанныеДляРасчета");
	ДобавитьРасчетОбъемаПотребленногоПоСреднему(Схема,ВыбираемыПоля,ВычисляемыеПоля,МВТ,"ДанныеДляРасчета");
	
	ПоляПорядка = Новый Массив;
	ПоляПорядка.Добавить("ПериодНачисления");
	ПоляПорядка.Добавить("Район");
	ПоляПорядка.Добавить("МКД");
	ПоляПорядка.Добавить("ЧастныйСектор");
	ПоляПорядка.Добавить("Строение");
	ПоляПорядка.Добавить("ПомещениеРодитель");
	ПоляПорядка.Добавить("ПорядокПомещения");
	ПоляПорядка.Добавить("Помещение");
	ПоляПорядка.Добавить("НачалоПериода");
	ПоляПорядка.Добавить("КонецПериода");
	ПоляПорядка.Добавить("ПорядокСпособРаспределенияОбъемаПомещения");
	ПоляПорядка.Добавить("ЗависитОтУслуги");
	ПоляПорядка.Добавить("ЗависимаяТочкаУчета");
	ПоляПорядка.Добавить("ТочкаУчета");
	
	Пакет  							= Схема.ПакетЗапросов[Схема.ПакетЗапросов.Количество() - 1];
	Для Сч = 0 По ПоляПорядка.ВГраница() Цикл
		Пакет.Порядок.Добавить(ПоляПорядка[Сч]);
	КонецЦикла;
	Запрос  						= Новый Запрос(Схема.ПолучитьТекстЗапроса());
	Запрос.МенеджерВременныхТаблиц 	= МВТ;	
	Возврат Запрос.Выполнить();
	
КонецФункции

#КонецОбласти 

#Область ТекстЗапросов

#Область ИндвидуальныеНачисления

Функция ТекстПолучитьСтабильныеПериоды()
	
	Текст  =    
	"ВЫБРАТЬ
	|	ПериодыСезонности.Организация КАК Организация,
	|	ПериодыСезонности.ПериодНачисления КАК ПериодНачисления,
	|	ПериодыСезонности.Район КАК Район,
	|	ПериодыСезонности.Сезонность КАК Сезонность,	
	|	ПериодыСезонности.НачалоСезонности КАК Период,
	|	1 КАК КоэфициентСезонности
	|ПОМЕСТИТЬ ПериодыИзмененияСезонности
	|ИЗ
	|	ПериодыСезонности КАК ПериодыСезонности
	|ГДЕ
	|	ПериодыСезонности.НачалоСезонности > ПериодыСезонности.НачалоОП
	|	И ПериодыСезонности.НачалоСезонности < ПериодыСезонности.ЗавершениеОП
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПериодыСезонности.Организация,
	|	ПериодыСезонности.ПериодНачисления КАК ПериодНачисления,
	|	ПериодыСезонности.Район,
	|	ПериодыСезонности.Сезонность,	
	|	ПериодыСезонности.КонецСезонности,
	|	0
	|ИЗ
	|	ПериодыСезонности КАК ПериодыСезонности
	|ГДЕ
	|	ПериодыСезонности.КонецСезонности > ПериодыСезонности.НачалоОП
	|	И ПериодыСезонности.КонецСезонности < ПериодыСезонности.ЗавершениеОП
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ПериодНачисления КАК ПериодНачисления,
	|	ВложенныйЗапрос.Район КАК Район,
	|	ВложенныйЗапрос.ЧастныйСектор КАК ЧастныйСектор,
	|	ВложенныйЗапрос.Строение КАК Строение,
	|	ВложенныйЗапрос.Помещение КАК Помещение,
	|	ВложенныйЗапрос.ПриборУчета КАК ПриборУчета,
	|	ВложенныйЗапрос.Шкала КАК Шкала,
	|	ВложенныйЗапрос.ТарифнаяЗона КАК ТарифнаяЗона,
	|	ВложенныйЗапрос.Показания КАК Показания,
	|	ВложенныйЗапрос.ДокРегистратор КАК ДокРегистратор,
	|	ВложенныйЗапрос.ДатаРегистратора КАК ДатаРегистратора,
	|	ВложенныйЗапрос.Приоритет КАК Приоритет,
	|	ВложенныйЗапрос.ПоказанияТекущегоПериода КАК ПоказанияТекущегоПериода
	|ПОМЕСТИТЬ МаксимальныеПоказанияСрезНабор
	|ИЗ
	|	(ВЫБРАТЬ
	|		МаксимальныеПоказанияСрез.Организация КАК Организация,
	|		ДОБАВИТЬКДАТЕ(МаксимальныеПоказанияСрез.ПериодНачисления, МЕСЯЦ, 1) КАК ПериодНачисления,
	|		МаксимальныеПоказанияСрез.Район КАК Район,
	|		МаксимальныеПоказанияСрез.ЧастныйСектор КАК ЧастныйСектор,
	|		МаксимальныеПоказанияСрез.Строение КАК Строение,
	|		МаксимальныеПоказанияСрез.Помещение КАК Помещение,
	|		МаксимальныеПоказанияСрез.ПриборУчета КАК ПриборУчета,
	|		МаксимальныеПоказанияСрез.Шкала КАК Шкала,
	|		МаксимальныеПоказанияСрез.ТарифнаяЗона КАК ТарифнаяЗона,
	|		МаксимальныеПоказанияСрез.Показания КАК Показания,
	|		МаксимальныеПоказанияСрез.ДокРегистратор КАК ДокРегистратор,
	|		МаксимальныеПоказанияСрез.ДатаРегистратора КАК ДатаРегистратора,
	|		0 КАК Приоритет,
	|		ЛОЖЬ КАК ПоказанияТекущегоПериода
	|	ИЗ
	|		МаксимальныеПоказанияСрезПредыдущийПериод КАК МаксимальныеПоказанияСрез
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПредоставленныеПоказания.Организация,
	|		ПредоставленныеПоказания.ПериодНачисления,
	|		ПредоставленныеПоказания.Район,
	|		ПредоставленныеПоказания.ЧастныйСектор,
	|		ПредоставленныеПоказания.Строение,
	|		ПредоставленныеПоказания.Помещение,
	|		ПредоставленныеПоказания.ПриборУчета,
	|		ПредоставленныеПоказания.Шкала,
	|		ПредоставленныеПоказания.ТарифнаяЗона,
	|		ПредоставленныеПоказания.Показания,
	|		ПредоставленныеПоказания.ДокРегистратор,
	|		ПредоставленныеПоказания.ДатаРегистратора,
	|		1,
	|		ПредоставленныеПоказания.ПоказанияТекущегоПериода
	|	ИЗ
	|		ПредоставленныеПоказания КАК ПредоставленныеПоказания
	|	ГДЕ
	|		ПредоставленныеПоказания.НомерПозиции = -1) КАК ВложенныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеПоказанияСрезНабор.Организация КАК Организация,
	|	МаксимальныеПоказанияСрезНабор.ПериодНачисления КАК ПериодНачисления,
	|	МаксимальныеПоказанияСрезНабор.Район КАК Район,
	|	МаксимальныеПоказанияСрезНабор.ЧастныйСектор КАК ЧастныйСектор,
	|	МаксимальныеПоказанияСрезНабор.Строение КАК Строение,
	|	МаксимальныеПоказанияСрезНабор.Помещение КАК Помещение,
	|	МаксимальныеПоказанияСрезНабор.ПриборУчета КАК ПриборУчета,
	|	МаксимальныеПоказанияСрезНабор.Шкала КАК Шкала,
	|	МаксимальныеПоказанияСрезНабор.ТарифнаяЗона КАК ТарифнаяЗона,
	|	МаксимальныеПоказанияСрезНабор.Показания КАК Показания,
	|	МаксимальныеПоказанияСрезНабор.ДокРегистратор КАК ДокРегистратор,
	|	МаксимальныеПоказанияСрезНабор.ДатаРегистратора КАК ДатаРегистратора,
	|	МаксимальныеПоказанияСрезНабор.Приоритет КАК Приоритет,
	|	МаксимальныеПоказанияСрезНабор.ПоказанияТекущегоПериода КАК ПоказанияТекущегоПериода
	|ПОМЕСТИТЬ МаксимальныеПоказанияСрез
	|ИЗ
	|	МаксимальныеПоказанияСрезНабор КАК МаксимальныеПоказанияСрезНабор
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			МаксимальныеПоказанияСрезНабор.Организация КАК Организация,
	|			МаксимальныеПоказанияСрезНабор.ПериодНачисления КАК ПериодНачисления,
	|			МаксимальныеПоказанияСрезНабор.Район КАК Район,
	|			МаксимальныеПоказанияСрезНабор.ЧастныйСектор КАК ЧастныйСектор,
	|			МаксимальныеПоказанияСрезНабор.Строение КАК Строение,
	|			МаксимальныеПоказанияСрезНабор.Помещение КАК Помещение,
	|			МаксимальныеПоказанияСрезНабор.ПриборУчета КАК ПриборУчета,
	|			МаксимальныеПоказанияСрезНабор.Шкала КАК Шкала,
	|			МаксимальныеПоказанияСрезНабор.ТарифнаяЗона КАК ТарифнаяЗона,
	|			МАКСИМУМ(МаксимальныеПоказанияСрезНабор.Приоритет) КАК Приоритет
	|		ИЗ
	|			МаксимальныеПоказанияСрезНабор КАК МаксимальныеПоказанияСрезНабор
	|		
	|		СГРУППИРОВАТЬ ПО
	|			МаксимальныеПоказанияСрезНабор.Организация,
	|			МаксимальныеПоказанияСрезНабор.ПериодНачисления,
	|			МаксимальныеПоказанияСрезНабор.Район,
	|			МаксимальныеПоказанияСрезНабор.ЧастныйСектор,
	|			МаксимальныеПоказанияСрезНабор.Строение,
	|			МаксимальныеПоказанияСрезНабор.Помещение,
	|			МаксимальныеПоказанияСрезНабор.ПриборУчета,
	|			МаксимальныеПоказанияСрезНабор.Шкала,
	|			МаксимальныеПоказанияСрезНабор.ТарифнаяЗона) КАК МаксимальныйПриоритетПоказаний
	|		ПО МаксимальныеПоказанияСрезНабор.Организация = МаксимальныйПриоритетПоказаний.Организация
	|			И МаксимальныеПоказанияСрезНабор.Организация = МаксимальныйПриоритетПоказаний.Организация
	|			И МаксимальныеПоказанияСрезНабор.ПериодНачисления = МаксимальныйПриоритетПоказаний.ПериодНачисления
	|			И МаксимальныеПоказанияСрезНабор.Район = МаксимальныйПриоритетПоказаний.Район
	|			И МаксимальныеПоказанияСрезНабор.ЧастныйСектор = МаксимальныйПриоритетПоказаний.ЧастныйСектор
	|			И МаксимальныеПоказанияСрезНабор.Строение = МаксимальныйПриоритетПоказаний.Строение
	|			И МаксимальныеПоказанияСрезНабор.Помещение = МаксимальныйПриоритетПоказаний.Помещение
	|			И МаксимальныеПоказанияСрезНабор.ПриборУчета = МаксимальныйПриоритетПоказаний.ПриборУчета
	|			И МаксимальныеПоказанияСрезНабор.Шкала = МаксимальныйПриоритетПоказаний.Шкала
	|			И МаксимальныеПоказанияСрезНабор.ТарифнаяЗона = МаксимальныйПриоритетПоказаний.ТарифнаяЗона
	|			И МаксимальныеПоказанияСрезНабор.Приоритет = МаксимальныйПриоритетПоказаний.Приоритет	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ПериодНачисления КАК ПериодНачисления,
	|	ВложенныйЗапрос.Район КАК Район,
	|	ВложенныйЗапрос.МКД КАК МКД,
	|	ВложенныйЗапрос.Услуга КАК Услуга,
	|	СУММА(ВложенныйЗапрос.ПлощадьМОП) КАК ПлощадьМОП,
	|	СУММА(ВложенныйЗапрос.ПлощадьАбонентов) КАК ПлощадьАбонентов,
	|	СУММА(ВложенныйЗапрос.ПлощадьСобственнаяПоставка) КАК ПлощадьСобственнаяПоставка
	|ПОМЕСТИТЬ ЗначенияПлощадейСтроений
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗначениеПлощадейМКД.Организация КАК Организация,
	|		ЗначениеПлощадейМКД.ПериодНачисления КАК ПериодНачисления,
	|		ЗначениеПлощадейМКД.Район КАК Район,
	|		ЗначениеПлощадейМКД.МКД КАК МКД,
	|		ЗначениеПлощадейМКД.Услуга КАК Услуга,
	|		ЗначениеПлощадейМКД.ПлощадьМОП КАК ПлощадьМОП,
	|		0 КАК ПлощадьАбонентов,
	|		0 КАК ПлощадьСобственнаяПоставка
	|	ИЗ
	|		ЗначениеПлощадейМКД КАК ЗначениеПлощадейМКД
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗначениеИндивидуальныхПлощадей.Организация,
	|		ЗначениеИндивидуальныхПлощадей.ПериодНачисления,
	|		ЗначениеИндивидуальныхПлощадей.Район,
	|		ЗначениеИндивидуальныхПлощадей.МКД,
	|		ЗначениеИндивидуальныхПлощадей.Услуга,
	|		0,
	|		ЗначениеИндивидуальныхПлощадей.ПлощадьАбонентов,
	|		ЗначениеИндивидуальныхПлощадей.ПлощадьСобственнаяПоставка
	|	ИЗ
	|		ЗначениеИндивидуальныхПлощадей КАК ЗначениеИндивидуальныхПлощадей) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Организация,
	|	ВложенныйЗапрос.ПериодНачисления,
	|	ВложенныйЗапрос.Район,
	|	ВложенныйЗапрос.МКД,
	|	ВложенныйЗапрос.Услуга
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеПоказанияСрез.Организация КАК Организация,
	|	МаксимальныеПоказанияСрез.ПериодНачисления КАК ПериодНачисления,
	|	МаксимальныеПоказанияСрез.Район КАК Район,
	|	МаксимальныеПоказанияСрез.ЧастныйСектор КАК ЧастныйСектор,
	|	МаксимальныеПоказанияСрез.Строение КАК Строение,
	|	МаксимальныеПоказанияСрез.Помещение КАК Помещение,
	|	МаксимальныеПоказанияСрез.ПриборУчета КАК ПриборУчета,
	|	МаксимальныеПоказанияСрез.Шкала КАК Шкала,
	|	МаксимальныеПоказанияСрез.ТарифнаяЗона КАК ТарифнаяЗона,
	|	МаксимальныеПоказанияСрез.Показания КАК Показания,
	|	ДАТАВРЕМЯ(1,1,1) КАК Период,	
	|	-1 КАК НомерПозиции,
	|	МаксимальныеПоказанияСрез.ДокРегистратор КАК ДокРегистратор,
	|	МаксимальныеПоказанияСрез.ПоказанияТекущегоПериода КАК ПоказанияТекущегоПериода	
	|ПОМЕСТИТЬ НаборПоказаний
	|ИЗ
	|	МаксимальныеПоказанияСрез КАК МаксимальныеПоказанияСрез
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПредоставленныеПоказания.Организация,
	|	ПредоставленныеПоказания.ПериодНачисления,
	|	ПредоставленныеПоказания.Район,
	|	ПредоставленныеПоказания.ЧастныйСектор,
	|	ПредоставленныеПоказания.Строение,
	|	ПредоставленныеПоказания.Помещение,
	|	ПредоставленныеПоказания.ПриборУчета,
	|	ПредоставленныеПоказания.Шкала,
	|	ПредоставленныеПоказания.ТарифнаяЗона,
	|	ПредоставленныеПоказания.Показания,
	|	ПредоставленныеПоказания.ДатаРегистратора,
	|	ПредоставленныеПоказания.НомерПозиции,
	|	ПредоставленныеПоказания.ДокРегистратор,
	|	ПредоставленныеПоказания.ПоказанияТекущегоПериода
	|ИЗ
	|	ПредоставленныеПоказания КАК ПредоставленныеПоказания
	|ГДЕ
	|	ПредоставленныеПоказания.НомерПозиции >= 0 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоказанияНачало.Организация КАК Организация,
	|	ПоказанияНачало.ПериодНачисления КАК ПериодНачисления,
	|	ПоказанияНачало.Район КАК Район,
	|	ПоказанияНачало.ЧастныйСектор КАК ЧастныйСектор,
	|	ПоказанияНачало.Строение КАК Строение,
	|	ПоказанияНачало.Помещение КАК Помещение,
	|	ПоказанияНачало.ПриборУчета КАК ПриборУчета,
	|	ПоказанияНачало.Шкала КАК Шкала,
	|	ПоказанияНачало.ТарифнаяЗона КАК ТарифнаяЗона,
	|	ПоказанияНачало.Показания КАК Показания,
	|	ПоказанияНачало.Период КАК НачалоПериодДействия,
	|	ВЫБОР
	|		КОГДА ПоказанияКонец.Период ЕСТЬ NULL
	|			ТОГДА ДАТАВРЕМЯ(3999,12,31)
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(ПоказанияКонец.Период, СЕКУНДА, -1)
	|	КОНЕЦ КАК ОкончаниеПериодаДействия,
	|	ВЫБОР
	|		КОГДА ПоказанияНачало.НомерПозиции = -1
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПризнакНачалаПериода,
	|	ПоказанияНачало.ДокРегистратор КАК ДокРегистратор,
	|	ПоказанияНачало.ПоказанияТекущегоПериода КАК ПоказанияТекущегоПериода
	|ПОМЕСТИТЬ ПериодыПоказаний
	|ИЗ
	|	НаборПоказаний КАК ПоказанияНачало
	|		ЛЕВОЕ СОЕДИНЕНИЕ НаборПоказаний КАК ПоказанияКонец
	|		ПО ПоказанияНачало.Организация = ПоказанияКонец.Организация
	|			И ПоказанияНачало.ПериодНачисления = ПоказанияКонец.ПериодНачисления
	|			И ПоказанияНачало.Район = ПоказанияКонец.Район
	|			И ПоказанияНачало.ЧастныйСектор = ПоказанияКонец.ЧастныйСектор
	|			И ПоказанияНачало.Строение = ПоказанияКонец.Строение
	|			И ПоказанияНачало.Помещение = ПоказанияКонец.Помещение
	|			И ПоказанияНачало.ПриборУчета = ПоказанияКонец.ПриборУчета
	|			И ПоказанияНачало.Шкала = ПоказанияКонец.Шкала
	|			И ПоказанияНачало.ТарифнаяЗона = ПоказанияКонец.ТарифнаяЗона
	|			И (ПоказанияНачало.НомерПозиции = ПоказанияКонец.НомерПозиции - 1)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредоставленныеПоказания.Организация КАК Организация,
	|	ПредоставленныеПоказания.ПериодНачисления КАК ПериодНачисления,
	|	ПредоставленныеПоказания.Район КАК Район,
	|	ПредоставленныеПоказания.ЧастныйСектор КАК ЧастныйСектор,
	|	ПредоставленныеПоказания.Строение КАК Строение,
	|	ПредоставленныеПоказания.Помещение КАК Помещение,
	|	ПредоставленныеПоказания.ПриборУчета КАК ПриборУчета,
	|	МАКСИМУМ(ПредоставленныеПоказания.ПоказанияТекущегоПериода) КАК ПоказанияТекущегоПериода
	|ПОМЕСТИТЬ ПредоставленныеПоказанияПоАбоненту
	|ИЗ
	|	ПредоставленныеПоказания КАК ПредоставленныеПоказания
	|
	|СГРУППИРОВАТЬ ПО
	|	ПредоставленныеПоказания.Организация,
	|	ПредоставленныеПоказания.ПериодНачисления,
	|	ПредоставленныеПоказания.Район,
	|	ПредоставленныеПоказания.ЧастныйСектор,
	|	ПредоставленныеПоказания.Строение,
	|	ПредоставленныеПоказания.Помещение,
	|	ПредоставленныеПоказания.ПриборУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредоставленныеПоказания.Организация КАК Организация,
	|	ПредоставленныеПоказания.ПериодНачисления КАК ПериодНачисления,
	|	ПредоставленныеПоказания.Район КАК Район,
	|	ПредоставленныеПоказания.ЧастныйСектор КАК ЧастныйСектор,
	|	ПредоставленныеПоказания.Строение КАК Строение,
	|	ПредоставленныеПоказания.Помещение КАК Помещение,
	|	ПредоставленныеПоказания.ПриборУчета КАК ПриборУчета,
	|	ПредоставленныеПоказания.Шкала КАК Шкала,
	|	ПредоставленныеПоказания.ТарифнаяЗона КАК ТарифнаяЗона,
	|	МАКСИМУМ(ПредоставленныеПоказания.ВСрок) КАК ВСрок
	|ПОМЕСТИТЬ ПредоставленныеПоказанияВСрок
	|ИЗ
	|	ПредоставленныеПоказания КАК ПредоставленныеПоказания
	|
	|СГРУППИРОВАТЬ ПО
	|	ПредоставленныеПоказания.Организация,
	|	ПредоставленныеПоказания.ПериодНачисления,
	|	ПредоставленныеПоказания.Район,
	|	ПредоставленныеПоказания.ЧастныйСектор,
	|	ПредоставленныеПоказания.Строение,
	|	ПредоставленныеПоказания.Помещение,
	|	ПредоставленныеПоказания.ПриборУчета,
	|	ПредоставленныеПоказания.Шкала,
	|	ПредоставленныеПоказания.ТарифнаяЗона
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтабильныеПериоды.Организация КАК Организация,
	|	СтабильныеПериоды.ПериодНачисления КАК ПериодНачисления,
	|	СтабильныеПериоды.Район КАК Район,
	|	СтабильныеПериоды.ЧастныйСектор КАК ЧастныйСектор,
	|	СтабильныеПериоды.Строение КАК Строение,
	|	СтабильныеПериоды.Помещение КАК Помещение,
	|	СтабильныеПериоды.Абонент КАК Абонент
	|ПОМЕСТИТЬ ЗакрытиеЛицевыхСчетов
	|ИЗ
	|	СтабильныеПериодыНачало КАК СтабильныеПериоды
	|ГДЕ
	|	СтабильныеПериоды.НомерПозиции > 0
	|	И НЕ СтабильныеПериоды.ЛСОткрыт	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////	
	|ВЫБРАТЬ
	|" + энргНачисления.СформироватьСтрокуДляЗапроса("энргСтабильныеПериоды","СтабильныеПериодыНачало","",Истина,Ложь) + "
	|	СтабильныеПериодыНачало.НачалоОП КАК НачалоОП,
	|	СтабильныеПериодыНачало.ЗавершениеОП КАК ЗавершениеОП,
	|	СтабильныеПериодыНачало.ДнейВПериоде КАК ДнейВПериоде,
	|	СтабильныеПериодыНачало.ФизЛицо КАК ФизЛицо,
	|	СтабильныеПериодыНачало.ОрганизацияПлательщика КАК ОрганизацияПлательщика,
	|	СтабильныеПериодыНачало.НеПрименятьЗависимостьЕслиБольшеОднойТочки КАК НеПрименятьЗависимостьЕслиБольшеОднойТочки,
	|	СтабильныеПериодыНачало.ЗависитОтУслуги КАК ЗависитОтУслуги,
	|	СтабильныеПериодыНачало.УмножатьНаНормуРодительскойУслуги КАК УмножатьНаНормуРодительскойУслуги,
	|	СтабильныеПериодыНачало.ИспользоватьКоэффициентСдерживанияРостаПлаты КАК ИспользоватьКоэффициентСдерживанияРостаПлаты,
	|	СтабильныеПериодыНачало.МаксимальноВозможныеПоказания КАК МаксимальноВозможныеПоказания,
	|	СтабильныеПериодыНачало.РегистрируетОбъем КАК РегистрируетОбъем,
	|	СтабильныеПериодыНачало.ПомещениеРодитель КАК ПомещениеРодитель,
	|	СтабильныеПериодыНачало.КлючПомещения КАК КлючПомещения,	
	|	ВЫБОР
	|	  	КОГДА СтабильныеПериодыНачало.ЧастныйСектор
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.энргСтроения.ПустаяСсылка)
	|		ИНАЧЕ СтабильныеПериодыНачало.Строение
	|	КОНЕЦ КАК МКД,
	|	ЕСТЬNULL(НастройкаСезонностиУслугМКД.Коэффициент, ЕСТЬNULL(НастройкаСезонностиУслуг.Коэффициент, 1)) КАК КоэффициентНорматива,
	|	ЕСТЬNULL(НастройкаСезонностиУслугМКД.КоэффициентНеПрименятьСезонность, ЕСТЬNULL(НастройкаСезонностиУслуг.КоэффициентНеПрименятьСезонность, 1)) КАК КоэффициентНормативаНеПрименятьСезонность, 
	|	ЕСТЬNULL(НастройкаСезонностиУслугМКД.КорректироватьГодовойОбъем, ЕСТЬNULL(НастройкаСезонностиУслуг.КорректироватьГодовойОбъем, ЛОЖЬ)) КАК КорректироватьГодовойОбъем,
	|	ВЫБОР
	|		КОГДА НЕ ЕСТЬNULL(НастройкаСезонностиУслугМКД.КорректироватьГодовойОбъем, ЕСТЬNULL(НастройкаСезонностиУслуг.КорректироватьГодовойОбъем, ЛОЖЬ))
	|				И НЕ ЕСТЬNULL(СпособыРасчетаПоНаправлениям.Сезонность, ЗНАЧЕНИЕ(Справочник.энргВидыСезонности.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.энргВидыСезонности.ПустаяСсылка)
	|				И ЕСТЬNULL(НаличиеПриборовУчетаСНачалаГода.ПриборВведен, ЛОЖЬ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЕСТЬNULL(НастройкаСезонностиУслугМКД.НеПрименятьСезонность, ЕСТЬNULL(НастройкаСезонностиУслуг.НеПрименятьСезонность, ЛОЖЬ))
	|	КОНЕЦ КАК НеПрименятьСезонность,
	|	ЕСТЬNULL(НастройкаСезонностиУслугМКД.ОбъемЗаПрошлыйГод, ЕСТЬNULL(НастройкаСезонностиУслуг.ОбъемЗаПрошлыйГод, ЛОЖЬ)) КАК ОбъемЗаПрошлыйГод,
	|	ВЫБОР
	|		КОГДА НЕ ЕСТЬNULL(НастройкаСезонностиУслугМКД.КорректироватьГодовойОбъем, ЕСТЬNULL(НастройкаСезонностиУслуг.КорректироватьГодовойОбъем, ЛОЖЬ))
	|				И НЕ ЕСТЬNULL(СпособыРасчетаПоНаправлениям.Сезонность, ЗНАЧЕНИЕ(Справочник.энргВидыСезонности.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.энргВидыСезонности.ПустаяСсылка)
	|				И ЕСТЬNULL(НаличиеПриборовУчетаСНачалаГода.ПриборВведен, ЛОЖЬ)
	|			ТОГДА СпособыРасчетаПоНаправлениям.Сезонность
	|		ИНАЧЕ СпособыРасчетаПоНаправлениям.Сезонность
	|	КОНЕЦ КАК Сезонность,
	|	ЕСТЬNULL(СпособыРасчетаПоНаправлениям.ВидПлощади, СтабильныеПериодыНачало.ВидПлощадиУслуги) КАК ВидПлощади,
	|	ЕСТЬNULL(СпособыРасчетаПоНаправлениям.НормативПоДням, ЛОЖЬ) КАК НормативПоДням,
	|	ЕСТЬNULL(СпособыРасчетаПоНаправлениям.СпособОпределенияСоциальнойНормы, ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.ПустаяСсылка)) КАК СпособОпределенияСоциальнойНормы,
	|	ЕСТЬNULL(СпособыРасчетаПоНаправлениям.НачислятьЗаПолныйМесяц, ЛОЖЬ) КАК НачислятьЗаПолныйМесяц,	
	|	ЕСТЬNULL(СпособыРасчетаПоНаправлениям.СпособРасчетаНорматива, ЗНАЧЕНИЕ(Перечисление.энргСпособРасчетаНорматива.КоличествоЧеловек)) КАК СпособРасчетаНорматива,
	|	ЕСТЬNULL(СпособыРасчетаПоНаправлениям.СпособРасчетаСоциальногоНорматива, ЗНАЧЕНИЕ(Перечисление.энргСпособРасчетаНорматива.КоличествоЧеловек)) КАК СпособРасчетаСоциальногоНорматива,	
	|	ЕСТЬNULL(ПредоставленныеПоказанияПоАбоненту.ПоказанияТекущегоПериода, ЛОЖЬ) КАК ЕстьПоказанияАбонента,	
	|	ЕСТЬNULL(ТипСхемыГВС.ТипСхемы, ЗНАЧЕНИЕ(Перечисление.энргТипыСхемТеплоснабжения.ПустаяСсылка)) КАК ТипСхемы,
	|	ЕСТЬNULL(ВидыТепловыхПунктов.ВидТепловогоПункта, ЗНАЧЕНИЕ(Перечисление.энргВидыТепловыхПунктов.ПустаяСсылка)) КАК ВидТепловогоПункта,	
	|	ЕСТЬNULL(ЗначенияПлощадейСтроений.ПлощадьМОП, 0) КАК ПлощадьМОП,
	|	ЕСТЬNULL(ЗначенияПлощадейСтроений.ПлощадьАбонентов, 0) КАК ПлощадьАбонентов,
	|	ЕСТЬNULL(ЗначенияПлощадейСтроений.ПлощадьСобственнаяПоставка, 0) КАК ПлощадьСобственнаяПоставка,	
	|	ЕСТЬNULL(ДокументыНачислений.ДокументНачисления, &ДокументНачисленияПустаяСсылка) КАК ДокументНачисления,
	|	ЕСТЬNULL(ДокументыНачислений.ПометкаУдаления, ЛОЖЬ) КАК ДокументНачисленияПометкаУдаления,	
	|	ЛОЖЬ КАК ВыводПрибораУчета,	
	|	ЕСТЬNULL(НаличиеПриборовУчетаСНачалаГода.ПриборВведен, ЛОЖЬ) КАК БылУстановленныйПриборВЭтомГоду,
	|	НЕ НаличиеПриборовУчетаСНачалаГода.ПриборВведен ЕСТЬ NULL КАК ЕстьЗаписьПриборВЭтомГоду,	
	|	ВЫБОР 
	|		КОГДА ЗакрытиеЛицевыхСчетов.Организация ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК АбонентЗакрытВТекущемПериоде
	|ПОМЕСТИТЬ СтабильныеПериодыСезонность
	|ИЗ
	|	СтабильныеПериодыНачало КАК СтабильныеПериодыНачало
	|		ЛЕВОЕ СОЕДИНЕНИЕ СпособыРасчетаПоНаправлениям КАК СпособыРасчетаПоНаправлениям
	|		ПО СтабильныеПериодыНачало.Организация = СпособыРасчетаПоНаправлениям.Организация
	|			И СтабильныеПериодыНачало.ПериодНачисления = СпособыРасчетаПоНаправлениям.ПериодНачисления
	|			И СтабильныеПериодыНачало.Район = СпособыРасчетаПоНаправлениям.Район
	|			И СтабильныеПериодыНачало.Услуга = СпособыРасчетаПоНаправлениям.Услуга
	|			И СтабильныеПериодыНачало.НаправлениеИспользованияТУ = СпособыРасчетаПоНаправлениям.НаправлениеИспользованияТУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ НастройкаСезонностиУслуг КАК НастройкаСезонностиУслуг
	|		ПО СтабильныеПериодыНачало.Организация = НастройкаСезонностиУслуг.Организация
	|			И СтабильныеПериодыНачало.ПериодНачисления = НастройкаСезонностиУслуг.ПериодНачисления
	|			И СтабильныеПериодыНачало.Район = НастройкаСезонностиУслуг.Район
	|			И СтабильныеПериодыНачало.Услуга = НастройкаСезонностиУслуг.Услуга
	|			И СтабильныеПериодыНачало.НаправлениеИспользованияТУ = НастройкаСезонностиУслуг.НаправлениеИспользованияТУ
	|			И (НастройкаСезонностиУслуг.МКД = ЗНАЧЕНИЕ(Справочник.энргСтроения.ПустаяСсылка))
	|		ЛЕВОЕ СОЕДИНЕНИЕ НастройкаСезонностиУслуг КАК НастройкаСезонностиУслугМКД
	|		ПО СтабильныеПериодыНачало.Организация = НастройкаСезонностиУслугМКД.Организация
	|			И СтабильныеПериодыНачало.ПериодНачисления = НастройкаСезонностиУслугМКД.ПериодНачисления
	|			И СтабильныеПериодыНачало.Район = НастройкаСезонностиУслугМКД.Район
	|			И СтабильныеПериодыНачало.Услуга = НастройкаСезонностиУслугМКД.Услуга
	|			И СтабильныеПериодыНачало.НаправлениеИспользованияТУ = НастройкаСезонностиУслугМКД.НаправлениеИспользованияТУ
	|			И ВЫБОР
	|	  			КОГДА СтабильныеПериодыНачало.ЧастныйСектор
	|					ТОГДА ЗНАЧЕНИЕ(Справочник.энргСтроения.ПустаяСсылка)
	|				ИНАЧЕ СтабильныеПериодыНачало.Строение
	|			  КОНЕЦ = НастройкаСезонностиУслугМКД.МКД
	|			И (НастройкаСезонностиУслугМКД.МКД <> ЗНАЧЕНИЕ(Справочник.энргСтроения.ПустаяСсылка))
	|		ЛЕВОЕ СОЕДИНЕНИЕ НаличиеПриборовУчетаСНачалаГода КАК НаличиеПриборовУчетаСНачалаГода
	|		ПО СтабильныеПериодыНачало.Организация = НаличиеПриборовУчетаСНачалаГода.Организация
	|			И СтабильныеПериодыНачало.ПериодНачисления = НаличиеПриборовУчетаСНачалаГода.ПериодНачисления
	|			И СтабильныеПериодыНачало.Район = НаличиеПриборовУчетаСНачалаГода.Район
	|			И СтабильныеПериодыНачало.ЧастныйСектор = НаличиеПриборовУчетаСНачалаГода.ЧастныйСектор
	|			И СтабильныеПериодыНачало.Строение = НаличиеПриборовУчетаСНачалаГода.Строение
	|			И СтабильныеПериодыНачало.Помещение = НаличиеПриборовУчетаСНачалаГода.Помещение
	|			И СтабильныеПериодыНачало.Услуга = НаличиеПриборовУчетаСНачалаГода.Услуга
	|			И СтабильныеПериодыНачало.НаправлениеИспользованияТУ = НаличиеПриборовУчетаСНачалаГода.НаправлениеИспользованияТУ	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПредоставленныеПоказанияПоАбоненту КАК ПредоставленныеПоказанияПоАбоненту
	|		ПО СтабильныеПериодыНачало.Организация = ПредоставленныеПоказанияПоАбоненту.Организация
	|			И СтабильныеПериодыНачало.ПериодНачисления = ПредоставленныеПоказанияПоАбоненту.ПериодНачисления
	|			И СтабильныеПериодыНачало.Район = ПредоставленныеПоказанияПоАбоненту.Район
	|			И СтабильныеПериодыНачало.ЧастныйСектор = ПредоставленныеПоказанияПоАбоненту.ЧастныйСектор
	|			И СтабильныеПериодыНачало.Строение = ПредоставленныеПоказанияПоАбоненту.Строение
	|			И СтабильныеПериодыНачало.Помещение = ПредоставленныеПоказанияПоАбоненту.Помещение
	|			И СтабильныеПериодыНачало.ПриборУчета = ПредоставленныеПоказанияПоАбоненту.ПриборУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗакрытиеЛицевыхСчетов КАК ЗакрытиеЛицевыхСчетов
	|		ПО СтабильныеПериодыНачало.Организация = ЗакрытиеЛицевыхСчетов.Организация
	|			И СтабильныеПериодыНачало.ПериодНачисления = ЗакрытиеЛицевыхСчетов.ПериодНачисления
	|			И СтабильныеПериодыНачало.Район = ЗакрытиеЛицевыхСчетов.Район
	|			И СтабильныеПериодыНачало.ЧастныйСектор = ЗакрытиеЛицевыхСчетов.ЧастныйСектор
	|			И СтабильныеПериодыНачало.Строение = ЗакрытиеЛицевыхСчетов.Строение
	|			И СтабильныеПериодыНачало.Помещение = ЗакрытиеЛицевыхСчетов.Помещение
	|			И СтабильныеПериодыНачало.Абонент = ЗакрытиеЛицевыхСчетов.Абонент		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТипСхемыГВС КАК ТипСхемыГВС
	|		ПО СтабильныеПериодыНачало.Организация = ТипСхемыГВС.Организация
	|			И СтабильныеПериодыНачало.ПериодНачисления = ТипСхемыГВС.ПериодНачисления
	|			И СтабильныеПериодыНачало.Район = ТипСхемыГВС.Район
	|			И ВЫБОР
	|	  			КОГДА СтабильныеПериодыНачало.ЧастныйСектор
	|					ТОГДА ЗНАЧЕНИЕ(Справочник.энргСтроения.ПустаяСсылка)
	|				ИНАЧЕ СтабильныеПериодыНачало.Строение
	|			  КОНЕЦ = ТипСхемыГВС.МКД
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВидыТепловыхПунктов КАК ВидыТепловыхПунктов
	|		ПО СтабильныеПериодыНачало.Организация = ВидыТепловыхПунктов.Организация
	|			И СтабильныеПериодыНачало.ПериодНачисления = ВидыТепловыхПунктов.ПериодНачисления
	|			И СтабильныеПериодыНачало.Район = ВидыТепловыхПунктов.Район
	|			И ВЫБОР
	|	  			КОГДА СтабильныеПериодыНачало.ЧастныйСектор
	|					ТОГДА ЗНАЧЕНИЕ(Справочник.энргСтроения.ПустаяСсылка)
	|				ИНАЧЕ СтабильныеПериодыНачало.Строение
	|			  КОНЕЦ = ВидыТепловыхПунктов.МКД		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДокументыНачислений КАК ДокументыНачислений
	|		ПО СтабильныеПериодыНачало.Организация = ДокументыНачислений.Организация
	|			И СтабильныеПериодыНачало.ПериодНачисления = ДокументыНачислений.ПериодНачисления
	|			И СтабильныеПериодыНачало.Район = ДокументыНачислений.Район
	|			И ВЫБОР
	|	  			КОГДА СтабильныеПериодыНачало.ЧастныйСектор
	|					ТОГДА ЗНАЧЕНИЕ(Справочник.энргСтроения.ПустаяСсылка)
	|				ИНАЧЕ СтабильныеПериодыНачало.Строение
	|			 КОНЕЦ = ДокументыНачислений.МКД	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗначенияПлощадейСтроений КАК ЗначенияПлощадейСтроений
	|		ПО СтабильныеПериодыНачало.Организация = ЗначенияПлощадейСтроений.Организация
	|			И СтабильныеПериодыНачало.ПериодНачисления = ЗначенияПлощадейСтроений.ПериодНачисления
	|			И СтабильныеПериодыНачало.Район = ЗначенияПлощадейСтроений.Район
	|			И СтабильныеПериодыНачало.Услуга = ЗначенияПлощадейСтроений.Услуга
	|			И (НЕ СтабильныеПериодыНачало.ЧастныйСектор)
	|			И СтабильныеПериодыНачало.Строение = ЗначенияПлощадейСтроений.МКД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтабильныеПериодыСезонность.Организация КАК Организация,
	|	СтабильныеПериодыСезонность.ПериодНачисления КАК ПериодНачисления,
	|	СтабильныеПериодыСезонность.Район КАК Район,
	|	СтабильныеПериодыСезонность.ЧастныйСектор КАК ЧастныйСектор,
	|	СтабильныеПериодыСезонность.Строение КАК Строение,
	|	СтабильныеПериодыСезонность.ПомещениеРодитель КАК Помещение,
	|	СтабильныеПериодыСезонность.ПериодРегистрации КАК ПериодРегистрации,
	|	ЛОЖЬ КАК ЭтоИзменениеТарифа
	|ПОМЕСТИТЬ НомераСтрокИзмененияПоРодительскимПомещениям
	|ИЗ
	|	СтабильныеПериодыСезонность КАК СтабильныеПериодыСезонность
	|ГДЕ
	|	НЕ СтабильныеПериодыСезонность.ПомещениеРодитель = ЗНАЧЕНИЕ(Справочник.энргПомещения.ПустаяСсылка)
	|	И НЕ СтабильныеПериодыСезонность.ПомещениеРодитель = СтабильныеПериодыСезонность.Помещение
	|	И НЕ СтабильныеПериодыСезонность.НомерПозиции = 0
	|	И НЕ (СтабильныеПериодыСезонность.Организация, СтабильныеПериодыСезонность.ПериодНачисления, СтабильныеПериодыСезонность.Район, СтабильныеПериодыСезонность.ЧастныйСектор, СтабильныеПериодыСезонность.Строение, СтабильныеПериодыСезонность.ПомещениеРодитель, СтабильныеПериодыСезонность.ПериодРегистрации) В
	|				(ВЫБРАТЬ
	|					СтабильныеПериодыСезонностьРодители.Организация,
	|					СтабильныеПериодыСезонностьРодители.ПериодНачисления,
	|					СтабильныеПериодыСезонностьРодители.Район,
	|					СтабильныеПериодыСезонностьРодители.ЧастныйСектор,
	|					СтабильныеПериодыСезонностьРодители.Строение,
	|					СтабильныеПериодыСезонностьРодители.Помещение,
	|					СтабильныеПериодыСезонностьРодители.ПериодРегистрации
	|				ИЗ
	|					СтабильныеПериодыСезонность КАК СтабильныеПериодыСезонностьРодители
	|				ГДЕ
	|					НЕ СтабильныеПериодыСезонностьРодители.НомерПозиции = 0
	|					И СтабильныеПериодыСезонностьРодители.ПомещениеРодитель = ЗНАЧЕНИЕ(Справочник.энргПомещения.ПустаяСсылка))	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтабильныеПериодыСезонность.Организация КАК Организация,
	|	СтабильныеПериодыСезонность.ПериодНачисления КАК ПериодНачисления,
	|	СтабильныеПериодыСезонность.Район КАК Район,
	|	СтабильныеПериодыСезонность.ЧастныйСектор КАК ЧастныйСектор,
	|	СтабильныеПериодыСезонность.Строение КАК Строение,
	|	СтабильныеПериодыСезонность.Помещение КАК Помещение,
	|	НомераСтрокИзмененияПоРодительскимПомещениям.ПериодРегистрации КАК ПериодРегистрации,
	|	ЛОЖЬ КАК ЭтоИзменениеТарифа
	|ПОМЕСТИТЬ НомераСтрокИзмененияПоПодчиненнымПомещениям
	|ИЗ
	|	НомераСтрокИзмененияПоРодительскимПомещениям КАК НомераСтрокИзмененияПоРодительскимПомещениям
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СтабильныеПериодыСезонность КАК СтабильныеПериодыСезонность
	|		ПО НомераСтрокИзмененияПоРодительскимПомещениям.Организация = СтабильныеПериодыСезонность.Организация
	|			И НомераСтрокИзмененияПоРодительскимПомещениям.ПериодНачисления = СтабильныеПериодыСезонность.ПериодНачисления
	|			И НомераСтрокИзмененияПоРодительскимПомещениям.Район = СтабильныеПериодыСезонность.Район
	|			И НомераСтрокИзмененияПоРодительскимПомещениям.ЧастныйСектор = СтабильныеПериодыСезонность.ЧастныйСектор
	|			И НомераСтрокИзмененияПоРодительскимПомещениям.Строение = СтабильныеПериодыСезонность.Строение
	|			И НомераСтрокИзмененияПоРодительскимПомещениям.Помещение = СтабильныеПериодыСезонность.ПомещениеРодитель
	|			И (НЕ СтабильныеПериодыСезонность.ПомещениеРодитель = ЗНАЧЕНИЕ(Справочник.энргПомещения.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НомераСтрокИзмененияПоРодительскимПомещениям.Организация,
	|	НомераСтрокИзмененияПоРодительскимПомещениям.ПериодНачисления,
	|	НомераСтрокИзмененияПоРодительскимПомещениям.Район,
	|	НомераСтрокИзмененияПоРодительскимПомещениям.ЧастныйСектор,
	|	НомераСтрокИзмененияПоРодительскимПомещениям.Строение,
	|	НомераСтрокИзмененияПоРодительскимПомещениям.Помещение,
	|	НомераСтрокИзмененияПоРодительскимПомещениям.ПериодРегистрации,
	|	НомераСтрокИзмененияПоРодительскимПомещениям.ЭтоИзменениеТарифа
	|ИЗ
	|	НомераСтрокИзмененияПоРодительскимПомещениям КАК НомераСтрокИзмененияПоРодительскимПомещениям 	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////	
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ПериодНачисления КАК ПериодНачисления,
	|	ВложенныйЗапрос.Район КАК Район,
	|	ВложенныйЗапрос.ЧастныйСектор КАК ЧастныйСектор,
	|	ВложенныйЗапрос.Строение КАК Строение,
	|	ВложенныйЗапрос.Помещение КАК Помещение,
	|	ВложенныйЗапрос.ТочкаУчета КАК ТочкаУчета,
	|	ВложенныйЗапрос.ПериодРегистрации КАК ПериодРегистрации,
	|	ВложенныйЗапрос.ЭтоИзменениеТарифа КАК ЭтоИзменениеТарифа
	|ПОМЕСТИТЬ НомераСтрокИзмененияСезонности
	|ИЗ
	|	(ВЫБРАТЬ
	|		СтабильныеПериодыСезонность.Организация КАК Организация,
	|		СтабильныеПериодыСезонность.ПериодНачисления КАК ПериодНачисления,
	|		СтабильныеПериодыСезонность.Район КАК Район,
	|		СтабильныеПериодыСезонность.ЧастныйСектор КАК ЧастныйСектор,
	|		СтабильныеПериодыСезонность.Строение КАК Строение,
	|		СтабильныеПериодыСезонность.Помещение КАК Помещение,
	|		СтабильныеПериодыСезонность.ТочкаУчета КАК ТочкаУчета,
	|		ПериодыИзмененияСезонности.Период КАК ПериодРегистрации,
	|		ЛОЖЬ КАК ЭтоИзменениеТарифа
	|	ИЗ
	|		СтабильныеПериодыСезонность КАК СтабильныеПериодыСезонность
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПериодыИзмененияСезонности КАК ПериодыИзмененияСезонности
	|			ПО СтабильныеПериодыСезонность.Организация = ПериодыИзмененияСезонности.Организация
	|				И СтабильныеПериодыСезонность.Район = ПериодыИзмененияСезонности.Район
	|				И СтабильныеПериодыСезонность.ПериодНачисления = ПериодыИзмененияСезонности.ПериодНачисления
	|				И СтабильныеПериодыСезонность.Сезонность = ПериодыИзмененияСезонности.Сезонность
	|				И (ВЫБОР
	|					КОГДА СтабильныеПериодыСезонность.НачислятьЗаПолныйМесяц
	|							И (ПериодыИзмененияСезонности.Период МЕЖДУ СтабильныеПериодыСезонность.НачалоОП И СтабильныеПериодыСезонность.ЗавершениеОП)
	|						ТОГДА ЛОЖЬ
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СтабильныеПериодыСезонность.Организация,
	|		СтабильныеПериодыСезонность.ПериодНачисления,
	|		СтабильныеПериодыСезонность.Район,
	|		СтабильныеПериодыСезонность.ЧастныйСектор,
	|		СтабильныеПериодыСезонность.Строение,
	|		СтабильныеПериодыСезонность.Помещение,
	|		СтабильныеПериодыСезонность.ТочкаУчета,
	|		ИзменениеТарифовВПериоде.ДатаСменыТарифа,
	|		ИСТИНА
	|	ИЗ
	|		СтабильныеПериодыСезонность КАК СтабильныеПериодыСезонность
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИзменениеТарифовВПериоде КАК ИзменениеТарифовВПериоде
	|			ПО СтабильныеПериодыСезонность.Организация = ИзменениеТарифовВПериоде.Организация
	|				И СтабильныеПериодыСезонность.ПериодНачисления = ИзменениеТарифовВПериоде.ПериодНачисления
	|				И СтабильныеПериодыСезонность.Услуга = ИзменениеТарифовВПериоде.Услуга
	|				И СтабильныеПериодыСезонность.Поставщик = ИзменениеТарифовВПериоде.Поставщик
	|				И (СтабильныеПериодыСезонность.ЕстьПоказанияАбонента)) КАК ВложенныйЗапрос	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ПериодНачисления КАК ПериодНачисления,
	|	ВложенныйЗапрос.Район КАК Район,
	|	ВложенныйЗапрос.ЧастныйСектор КАК ЧастныйСектор,
	|	ВложенныйЗапрос.Строение КАК Строение,
	|	ВложенныйЗапрос.Помещение КАК Помещение,
	|	ВложенныйЗапрос.ТочкаУчета КАК ТочкаУчета,
	|	ВложенныйЗапрос.ПериодРегистрации КАК ПериодРегистрации,
	|	ВложенныйЗапрос.ЭтоИзменениеТарифа КАК ЭтоИзменениеТарифа
	|ПОМЕСТИТЬ НомераСтрокИзмененияСезонностиЗависимыхТочекТочки
	|ИЗ
	|	(ВЫБРАТЬ
	|		СтабильныеПериодыСезонность.Организация КАК Организация,
	|		СтабильныеПериодыСезонность.ПериодНачисления КАК ПериодНачисления,
	|		СтабильныеПериодыСезонность.Район КАК Район,
	|		СтабильныеПериодыСезонность.ЧастныйСектор КАК ЧастныйСектор,
	|		СтабильныеПериодыСезонностьЗависимыхТочек.Строение КАК Строение,
	|		СтабильныеПериодыСезонностьЗависимыхТочек.Помещение КАК Помещение,
	|		СтабильныеПериодыСезонностьЗависимыхТочек.ЗависимаяТочкаУчета КАК ТочкаУчета,
	|		СтабильныеПериодыСезонностьЗависимыхТочек.ПериодРегистрации КАК ПериодРегистрации,
	|		ЛОЖЬ КАК ЭтоИзменениеТарифа
	|	ИЗ
	|		СтабильныеПериодыСезонность КАК СтабильныеПериодыСезонность
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ СтабильныеПериодыСезонность КАК СтабильныеПериодыСезонностьЗависимыхТочек
	|			ПО СтабильныеПериодыСезонность.Организация = СтабильныеПериодыСезонностьЗависимыхТочек.Организация
	|				И СтабильныеПериодыСезонность.ПериодНачисления = СтабильныеПериодыСезонностьЗависимыхТочек.ПериодНачисления
	|				И СтабильныеПериодыСезонность.Район = СтабильныеПериодыСезонностьЗависимыхТочек.Район
	|				И СтабильныеПериодыСезонность.ЧастныйСектор = СтабильныеПериодыСезонностьЗависимыхТочек.ЧастныйСектор
	//|				И СтабильныеПериодыСезонность.Строение = СтабильныеПериодыСезонностьЗависимыхТочек.Строение
	//|				И СтабильныеПериодыСезонность.Помещение = СтабильныеПериодыСезонностьЗависимыхТочек.Помещение
	|				И СтабильныеПериодыСезонность.ТочкаУчета = СтабильныеПериодыСезонностьЗависимыхТочек.ЗависимаяТочкаУчета
	|				И (НЕ СтабильныеПериодыСезонностьЗависимыхТочек.ЗависимаяТочкаУчета = ЗНАЧЕНИЕ(Справочник.энргТочкиУчета.ПустаяСсылка))
	|				И НЕ СтабильныеПериодыСезонностьЗависимыхТочек.ДокРегистратор ССЫЛКА Документ.энргНачисление
	|				И НЕ СтабильныеПериодыСезонностьЗависимыхТочек.ДокРегистратор ССЫЛКА Документ.энргВводНачальныхОстатков
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НомераСтрокИзмененияСезонности.Организация,
	|		НомераСтрокИзмененияСезонности.ПериодНачисления,
	|		НомераСтрокИзмененияСезонности.Район,
	|		НомераСтрокИзмененияСезонности.ЧастныйСектор,
	|		НомераСтрокИзмененияСезонности.Строение,
	|		НомераСтрокИзмененияСезонности.Помещение,
	|		НомераСтрокИзмененияСезонности.ТочкаУчета,
	|		НомераСтрокИзмененияСезонности.ПериодРегистрации,
	|		НомераСтрокИзмененияСезонности.ЭтоИзменениеТарифа
	|	ИЗ
	|		НомераСтрокИзмененияСезонности КАК НомераСтрокИзмененияСезонности
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НомераСтрокИзмененияПоПодчиненнымПомещениям.Организация,
	|		НомераСтрокИзмененияПоПодчиненнымПомещениям.ПериодНачисления,
	|		НомераСтрокИзмененияПоПодчиненнымПомещениям.Район,
	|		НомераСтрокИзмененияПоПодчиненнымПомещениям.ЧастныйСектор,
	|		НомераСтрокИзмененияПоПодчиненнымПомещениям.Строение,
	|		НомераСтрокИзмененияПоПодчиненнымПомещениям.Помещение,
	|		NULL,
	|		НомераСтрокИзмененияПоПодчиненнымПомещениям.ПериодРегистрации,
	|		НомераСтрокИзмененияПоПодчиненнымПомещениям.ЭтоИзменениеТарифа
	|	ИЗ
	|		НомераСтрокИзмененияПоПодчиненнымПомещениям КАК НомераСтрокИзмененияПоПодчиненнымПомещениям) КАК ВложенныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ПериодНачисления КАК ПериодНачисления,
	|	ВложенныйЗапрос.Район КАК Район,
	|	ВложенныйЗапрос.ЧастныйСектор КАК ЧастныйСектор,
	|	ВложенныйЗапрос.Строение КАК Строение,
	|	ВложенныйЗапрос.Помещение КАК Помещение,
	|	ВложенныйЗапрос.ТочкаУчета КАК ТочкаУчета,
	|	ВложенныйЗапрос.ПериодРегистрации КАК ПериодРегистрации,
	|	ВложенныйЗапрос.ЭтоИзменениеТарифа КАК ЭтоИзменениеТарифа
	|ПОМЕСТИТЬ НомераСтрокИзмененияСезонностиПоЗависимымТочкам
	|ИЗ
	|	(ВЫБРАТЬ
	|		СтабильныеПериодыСезонность.Организация КАК Организация,
	|		СтабильныеПериодыСезонность.ПериодНачисления КАК ПериодНачисления,
	|		СтабильныеПериодыСезонность.Район КАК Район,
	|		СтабильныеПериодыСезонность.ЧастныйСектор КАК ЧастныйСектор,
	|		СтабильныеПериодыСезонность.Строение КАК Строение,
	|		СтабильныеПериодыСезонность.Помещение КАК Помещение,
	|		СтабильныеПериодыСезонность.ТочкаУчета КАК ТочкаУчета,
	|		НомераСтрокИзмененияСезонностиЗависимыхТочекТочки.ПериодРегистрации КАК ПериодРегистрации,
	|		НомераСтрокИзмененияСезонностиЗависимыхТочекТочки.ЭтоИзменениеТарифа КАК ЭтоИзменениеТарифа
	|	ИЗ
	|		СтабильныеПериодыСезонность КАК СтабильныеПериодыСезонность
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ НомераСтрокИзмененияСезонностиЗависимыхТочекТочки КАК НомераСтрокИзмененияСезонностиЗависимыхТочекТочки
	|			ПО СтабильныеПериодыСезонность.Организация = НомераСтрокИзмененияСезонностиЗависимыхТочекТочки.Организация
	|				И СтабильныеПериодыСезонность.ПериодНачисления = НомераСтрокИзмененияСезонностиЗависимыхТочекТочки.ПериодНачисления
	|				И СтабильныеПериодыСезонность.Район = НомераСтрокИзмененияСезонностиЗависимыхТочекТочки.Район
	|				И СтабильныеПериодыСезонность.ЧастныйСектор = НомераСтрокИзмененияСезонностиЗависимыхТочекТочки.ЧастныйСектор
	|				И СтабильныеПериодыСезонность.Строение = НомераСтрокИзмененияСезонностиЗависимыхТочекТочки.Строение
	|				И СтабильныеПериодыСезонность.Помещение = НомераСтрокИзмененияСезонностиЗависимыхТочекТочки.Помещение
	|				И СтабильныеПериодыСезонность.ЗависимаяТочкаУчета = НомераСтрокИзмененияСезонностиЗависимыхТочекТочки.ТочкаУчета
	|				И (НЕ СтабильныеПериодыСезонность.ЗависимаяТочкаУчета = ЗНАЧЕНИЕ(Справочник.энргТочкиУчета.ПустаяСсылка))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НомераСтрокИзмененияСезонностиЗависимыхТочекТочки.Организация,
	|		НомераСтрокИзмененияСезонностиЗависимыхТочекТочки.ПериодНачисления,
	|		НомераСтрокИзмененияСезонностиЗависимыхТочекТочки.Район,
	|		НомераСтрокИзмененияСезонностиЗависимыхТочекТочки.ЧастныйСектор,
	|		НомераСтрокИзмененияСезонностиЗависимыхТочекТочки.Строение,
	|		НомераСтрокИзмененияСезонностиЗависимыхТочекТочки.Помещение,
	|		НомераСтрокИзмененияСезонностиЗависимыхТочекТочки.ТочкаУчета,
	|		НомераСтрокИзмененияСезонностиЗависимыхТочекТочки.ПериодРегистрации,
	|		НомераСтрокИзмененияСезонностиЗависимыхТочекТочки.ЭтоИзменениеТарифа
	|	ИЗ
	|		НомераСтрокИзмененияСезонностиЗависимыхТочекТочки КАК НомераСтрокИзмененияСезонностиЗависимыхТочекТочки) КАК ВложенныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ПериодНачисления КАК ПериодНачисления,
	|	ВложенныйЗапрос.Район КАК Район,
	|	ВложенныйЗапрос.ЧастныйСектор КАК ЧастныйСектор,
	|	ВложенныйЗапрос.Строение КАК Строение,
	|	ВложенныйЗапрос.Помещение КАК Помещение,
	|	ВложенныйЗапрос.ТочкаУчета КАК ТочкаУчета,
	|	ВложенныйЗапрос.ПериодРегистрации КАК ПериодРегистрации,
	|	ВложенныйЗапрос.ЭтоИзменениеТарифа КАК ЭтоИзменениеТарифа
	|ПОМЕСТИТЬ ИзменениеНомеровСтрокРодитескихТочек
	|ИЗ
	|	(ВЫБРАТЬ
	|		СтабильныеПериодыСезонность.Организация КАК Организация,
	|		СтабильныеПериодыСезонность.ПериодНачисления КАК ПериодНачисления,
	|		СтабильныеПериодыСезонность.Район КАК Район,
	|		СтабильныеПериодыСезонность.ЧастныйСектор КАК ЧастныйСектор,
	|		СтабильныеПериодыСезонность.Строение КАК Строение,
	|		СтабильныеПериодыСезонность.Помещение КАК Помещение,
	|		СтабильныеПериодыСезонность.ТочкаУчета КАК ТочкаУчета,
	|		СтабильныеПериодыСезонностьРодительскиеТочки.ПериодРегистрации КАК ПериодРегистрации,
	|		ЛОЖЬ КАК ЭтоИзменениеТарифа
	|	ИЗ
	|		СтабильныеПериодыСезонность КАК СтабильныеПериодыСезонность
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ СтабильныеПериодыСезонность КАК СтабильныеПериодыСезонностьРодительскиеТочки
	|			ПО СтабильныеПериодыСезонность.Организация = СтабильныеПериодыСезонностьРодительскиеТочки.Организация
	|				И СтабильныеПериодыСезонность.ПериодНачисления = СтабильныеПериодыСезонностьРодительскиеТочки.ПериодНачисления
	|				И СтабильныеПериодыСезонность.Район = СтабильныеПериодыСезонностьРодительскиеТочки.Район
	|				И СтабильныеПериодыСезонность.ЧастныйСектор = СтабильныеПериодыСезонностьРодительскиеТочки.ЧастныйСектор
	|				И СтабильныеПериодыСезонность.Строение = СтабильныеПериодыСезонностьРодительскиеТочки.Строение
	|				И СтабильныеПериодыСезонность.Помещение = СтабильныеПериодыСезонностьРодительскиеТочки.Помещение
	|				И СтабильныеПериодыСезонность.ТочкаУчетаРодитель = СтабильныеПериодыСезонностьРодительскиеТочки.ТочкаУчета
	|				И НЕ СтабильныеПериодыСезонностьРодительскиеТочки.НомерПозиции = 0
	|				И (НЕ СтабильныеПериодыСезонность.ТочкаУчетаРодитель = ЗНАЧЕНИЕ(Справочник.энргТочкиУчета.ПустаяСсылка))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|    	
	|	ВЫБРАТЬ
	|		СтабильныеПериодыСезонность.Организация КАК Организация,
	|		СтабильныеПериодыСезонность.ПериодНачисления КАК ПериодНачисления,
	|		СтабильныеПериодыСезонность.Район КАК Район,
	|		СтабильныеПериодыСезонность.ЧастныйСектор КАК ЧастныйСектор,
	|		СтабильныеПериодыСезонность.Строение КАК Строение,
	|		СтабильныеПериодыСезонность.Помещение КАК Помещение,
	|		СтабильныеПериодыСезонность.ТочкаУчетаРодитель КАК ТочкаУчета,
	|		НомераСтрокИзмененияСезонности.ПериодРегистрации КАК ПериодРегистрации,
	|		ЛОЖЬ КАК ЭтоИзменениеТарифа
	|	ИЗ
	|		СтабильныеПериодыСезонность КАК СтабильныеПериодыСезонность
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ НомераСтрокИзмененияСезонности КАК НомераСтрокИзмененияСезонности
	|			ПО СтабильныеПериодыСезонность.Организация = НомераСтрокИзмененияСезонности.Организация
	|				И СтабильныеПериодыСезонность.ПериодНачисления = НомераСтрокИзмененияСезонности.ПериодНачисления
	|				И СтабильныеПериодыСезонность.Район = НомераСтрокИзмененияСезонности.Район
	|				И СтабильныеПериодыСезонность.ЧастныйСектор = НомераСтрокИзмененияСезонности.ЧастныйСектор
	|				И СтабильныеПериодыСезонность.Строение = НомераСтрокИзмененияСезонности.Строение
	|				И СтабильныеПериодыСезонность.Помещение = НомераСтрокИзмененияСезонности.Помещение
	|				И СтабильныеПериодыСезонность.ТочкаУчета = НомераСтрокИзмененияСезонности.ТочкаУчета
	|				И (НЕ СтабильныеПериодыСезонность.ТочкаУчетаРодитель = ЗНАЧЕНИЕ(Справочник.энргТочкиУчета.ПустаяСсылка))	
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НомераСтрокИзмененияСезонностиПоЗависимымТочкам.Организация,
	|		НомераСтрокИзмененияСезонностиПоЗависимымТочкам.ПериодНачисления,
	|		НомераСтрокИзмененияСезонностиПоЗависимымТочкам.Район,
	|		НомераСтрокИзмененияСезонностиПоЗависимымТочкам.ЧастныйСектор,
	|		НомераСтрокИзмененияСезонностиПоЗависимымТочкам.Строение,
	|		НомераСтрокИзмененияСезонностиПоЗависимымТочкам.Помещение,
	|		НомераСтрокИзмененияСезонностиПоЗависимымТочкам.ТочкаУчета,
	|		НомераСтрокИзмененияСезонностиПоЗависимымТочкам.ПериодРегистрации,
	|		НомераСтрокИзмененияСезонностиПоЗависимымТочкам.ЭтоИзменениеТарифа
	|	ИЗ
	|		НомераСтрокИзмененияСезонностиПоЗависимымТочкам КАК НомераСтрокИзмененияСезонностиПоЗависимымТочкам) КАК ВложенныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ПериодНачисления КАК ПериодНачисления,
	|	ВложенныйЗапрос.Район КАК Район,
	|	ВложенныйЗапрос.ЧастныйСектор КАК ЧастныйСектор,
	|	ВложенныйЗапрос.Строение КАК Строение,
	|	ВложенныйЗапрос.Помещение КАК Помещение,
	|	ВложенныйЗапрос.ТочкаУчета КАК ТочкаУчета,
	|	ВложенныйЗапрос.ПериодРегистрации КАК ПериодРегистрации,
	|	ВложенныйЗапрос.ЭтоИзменениеТарифа КАК ЭтоИзменениеТарифа
	|ПОМЕСТИТЬ ИзменениеНомеровСтрокТочекУчетаВПодчинении
	|ИЗ
	|	(ВЫБРАТЬ
	|		СтабильныеПериодыСезонность.Организация КАК Организация,
	|		СтабильныеПериодыСезонность.ПериодНачисления КАК ПериодНачисления,
	|		СтабильныеПериодыСезонность.Район КАК Район,
	|		СтабильныеПериодыСезонность.ЧастныйСектор КАК ЧастныйСектор,
	|		СтабильныеПериодыСезонность.Строение КАК Строение,
	|		СтабильныеПериодыСезонность.Помещение КАК Помещение,
	|		СтабильныеПериодыСезонность.ТочкаУчета КАК ТочкаУчета,
	|		ИзменениеНомеровСтрокРодитескихТочек.ПериодРегистрации КАК ПериодРегистрации,
	|		ЛОЖЬ КАК ЭтоИзменениеТарифа
	|	ИЗ
	|		СтабильныеПериодыСезонность КАК СтабильныеПериодыСезонность 
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИзменениеНомеровСтрокРодитескихТочек КАК ИзменениеНомеровСтрокРодитескихТочек
	|			ПО СтабильныеПериодыСезонность.Организация = ИзменениеНомеровСтрокРодитескихТочек.Организация
	|				И СтабильныеПериодыСезонность.ПериодНачисления = ИзменениеНомеровСтрокРодитескихТочек.ПериодНачисления
	|				И СтабильныеПериодыСезонность.Район = ИзменениеНомеровСтрокРодитескихТочек.Район
	|				И СтабильныеПериодыСезонность.ЧастныйСектор = ИзменениеНомеровСтрокРодитескихТочек.ЧастныйСектор
	|				И СтабильныеПериодыСезонность.Строение = ИзменениеНомеровСтрокРодитескихТочек.Строение
	|				И СтабильныеПериодыСезонность.Помещение = ИзменениеНомеровСтрокРодитескихТочек.Помещение
	|				И СтабильныеПериодыСезонность.ТочкаУчетаРодитель = ИзменениеНомеровСтрокРодитескихТочек.ТочкаУчета
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ИзменениеНомеровСтрокРодитескихТочек.Организация,
	|		ИзменениеНомеровСтрокРодитескихТочек.ПериодНачисления,
	|		ИзменениеНомеровСтрокРодитескихТочек.Район,
	|		ИзменениеНомеровСтрокРодитескихТочек.ЧастныйСектор,
	|		ИзменениеНомеровСтрокРодитескихТочек.Строение,
	|		ИзменениеНомеровСтрокРодитескихТочек.Помещение,
	|		ИзменениеНомеровСтрокРодитескихТочек.ТочкаУчета,
	|		ИзменениеНомеровСтрокРодитескихТочек.ПериодРегистрации,
	|		ИзменениеНомеровСтрокРодитескихТочек.ЭтоИзменениеТарифа
	|	ИЗ
	|		ИзменениеНомеровСтрокРодитескихТочек КАК ИзменениеНомеровСтрокРодитескихТочек) КАК ВложенныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтабильныеПериодыСезонность.Организация КАК Организация,
	|	СтабильныеПериодыСезонность.ПериодНачисления КАК ПериодНачисления,
	|	СтабильныеПериодыСезонность.Район КАК Район,
	|	СтабильныеПериодыСезонность.ЧастныйСектор КАК ЧастныйСектор,
	|	СтабильныеПериодыСезонность.Строение КАК Строение,
	|	СтабильныеПериодыСезонность.Помещение КАК Помещение,
	|	СтабильныеПериодыСезонность.ТочкаУчета КАК ТочкаУчета,
	|	СтабильныеПериодыСезонность.Услуга КАК Услуга,
	|	ИзменениеНомеровСтрокТочекУчетаВПодчинении.ПериодРегистрации КАК ПериодРегистрации,
	|	ИзменениеНомеровСтрокТочекУчетаВПодчинении.ЭтоИзменениеТарифа КАК ЭтоИзменениеТарифа,
	|	МАКСИМУМ(СтабильныеПериодыСезонность.НомерПозиции) КАК НомерПозиции
	|ПОМЕСТИТЬ ИзменениеНомеровСтрок
	|ИЗ
	|	СтабильныеПериодыСезонность КАК СтабильныеПериодыСезонность
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИзменениеНомеровСтрокТочекУчетаВПодчинении КАК ИзменениеНомеровСтрокТочекУчетаВПодчинении
	|		ПО СтабильныеПериодыСезонность.Организация = ИзменениеНомеровСтрокТочекУчетаВПодчинении.Организация
	|			И СтабильныеПериодыСезонность.ПериодНачисления = ИзменениеНомеровСтрокТочекУчетаВПодчинении.ПериодНачисления
	|			И СтабильныеПериодыСезонность.Район = ИзменениеНомеровСтрокТочекУчетаВПодчинении.Район
	|			И СтабильныеПериодыСезонность.ЧастныйСектор = ИзменениеНомеровСтрокТочекУчетаВПодчинении.ЧастныйСектор
	|			И СтабильныеПериодыСезонность.Строение = ИзменениеНомеровСтрокТочекУчетаВПодчинении.Строение
	|			И СтабильныеПериодыСезонность.Помещение = ИзменениеНомеровСтрокТочекУчетаВПодчинении.Помещение
	|			И (ВЫБОР
	|				КОГДА ИзменениеНомеровСтрокТочекУчетаВПодчинении.ТочкаУчета ЕСТЬ NULL
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ СтабильныеПериодыСезонность.ТочкаУчета = ИзменениеНомеровСтрокТочекУчетаВПодчинении.ТочкаУчета
	|			КОНЕЦ)
	|			И СтабильныеПериодыСезонность.ПериодРегистрации < ИзменениеНомеровСтрокТочекУчетаВПодчинении.ПериодРегистрации
	|
	|СГРУППИРОВАТЬ ПО
	|	СтабильныеПериодыСезонность.Организация,
	|	СтабильныеПериодыСезонность.ПериодНачисления,
	|	СтабильныеПериодыСезонность.Район,
	|	СтабильныеПериодыСезонность.ЧастныйСектор,
	|	СтабильныеПериодыСезонность.Строение,
	|	СтабильныеПериодыСезонность.Помещение,
	|	СтабильныеПериодыСезонность.ТочкаУчета,
	|	СтабильныеПериодыСезонность.Услуга,
	|	ИзменениеНомеровСтрокТочекУчетаВПодчинении.ПериодРегистрации,
	|	ИзменениеНомеровСтрокТочекУчетаВПодчинении.ЭтоИзменениеТарифа	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИзменениеНомеровСтрок.Организация КАК Организация,
	|	ИзменениеНомеровСтрок.ПериодНачисления КАК ПериодНачисления,
	|	ИзменениеНомеровСтрок.Район КАК Район,
	|	ИзменениеНомеровСтрок.ЧастныйСектор КАК ЧастныйСектор,
	|	ИзменениеНомеровСтрок.Строение КАК Строение,
	|	ИзменениеНомеровСтрок.Помещение КАК Помещение,
	|	ИзменениеНомеровСтрок.ТочкаУчета КАК ТочкаУчета,
	|	ИзменениеНомеровСтрок.Услуга КАК Услуга,
	|	ИзменениеНомеровСтрок.ПериодРегистрации КАК ПериодРегистрации,
	|	ИзменениеНомеровСтрок.ЭтоИзменениеТарифа КАК ЭтоИзменениеТарифа,
	|	ИзменениеНомеровСтрок.НомерПозиции КАК НомерПозиции,
	|	СУММА(ВЫБОР
	|			КОГДА ИзменениеНомеровСтрокПраво.Организация ЕСТЬ NULL
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК УвеличениеНомераПозиции
	|ПОМЕСТИТЬ ИзменениеНомеровСтрокУвеличениеПозиций
	|ИЗ
	|	ИзменениеНомеровСтрок КАК ИзменениеНомеровСтрок
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИзменениеНомеровСтрок КАК ИзменениеНомеровСтрокПраво
	|		ПО ИзменениеНомеровСтрок.Организация = ИзменениеНомеровСтрокПраво.Организация
	|			И ИзменениеНомеровСтрок.ПериодНачисления = ИзменениеНомеровСтрокПраво.ПериодНачисления
	|			И ИзменениеНомеровСтрок.Район = ИзменениеНомеровСтрокПраво.Район
	|			И ИзменениеНомеровСтрок.ЧастныйСектор = ИзменениеНомеровСтрокПраво.ЧастныйСектор
	|			И ИзменениеНомеровСтрок.Строение = ИзменениеНомеровСтрокПраво.Строение
	|			И ИзменениеНомеровСтрок.Помещение = ИзменениеНомеровСтрокПраво.Помещение
	|			И ИзменениеНомеровСтрок.ТочкаУчета = ИзменениеНомеровСтрокПраво.ТочкаУчета
	|			И ИзменениеНомеровСтрок.Услуга = ИзменениеНомеровСтрокПраво.Услуга
	|			И (ВЫБОР
	|				КОГДА ИзменениеНомеровСтрок.НомерПозиции = ИзменениеНомеровСтрокПраво.НомерПозиции
	|					ТОГДА ИзменениеНомеровСтрок.ПериодРегистрации > ИзменениеНомеровСтрокПраво.ПериодРегистрации
	|				ИНАЧЕ ИзменениеНомеровСтрок.НомерПозиции > ИзменениеНомеровСтрокПраво.НомерПозиции
	|			КОНЕЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзменениеНомеровСтрок.Организация,
	|	ИзменениеНомеровСтрок.ПериодНачисления,
	|	ИзменениеНомеровСтрок.Район,
	|	ИзменениеНомеровСтрок.ЧастныйСектор,
	|	ИзменениеНомеровСтрок.Строение,
	|	ИзменениеНомеровСтрок.Помещение,
	|	ИзменениеНомеровСтрок.ТочкаУчета,
	|	ИзменениеНомеровСтрок.Услуга,
	|	ИзменениеНомеровСтрок.ПериодРегистрации,
	|	ИзменениеНомеровСтрок.ЭтоИзменениеТарифа,
	|	ИзменениеНомеровСтрок.НомерПозиции	
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтабильныеПериодыСезонность.Организация КАК Организация,
	|	СтабильныеПериодыСезонность.ПериодНачисления КАК ПериодНачисления,
	|	СтабильныеПериодыСезонность.Район КАК Район,
	|	СтабильныеПериодыСезонность.ЧастныйСектор КАК ЧастныйСектор,
	|	СтабильныеПериодыСезонность.Строение КАК Строение,
	|	СтабильныеПериодыСезонность.Помещение КАК Помещение,
	|	СтабильныеПериодыСезонность.Услуга КАК Услуга,
	|	СтабильныеПериодыСезонность.ТочкаУчета КАК ТочкаУчета,
	|	СтабильныеПериодыСезонность.НомерПозиции КАК НомерПозиции,
	|	СУММА(1) КАК КоличествоСтрокПеред
	|ПОМЕСТИТЬ ДобавляемыеСтрокиПередНомеромПозиции
	|ИЗ
	|	СтабильныеПериодыСезонность КАК СтабильныеПериодыСезонность
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИзменениеНомеровСтрок КАК ИзменениеНомеровСтрок
	|		ПО СтабильныеПериодыСезонность.Организация = ИзменениеНомеровСтрок.Организация
	|			И СтабильныеПериодыСезонность.ПериодНачисления = ИзменениеНомеровСтрок.ПериодНачисления
	|			И СтабильныеПериодыСезонность.Район = ИзменениеНомеровСтрок.Район
	|			И СтабильныеПериодыСезонность.ЧастныйСектор = ИзменениеНомеровСтрок.ЧастныйСектор
	|			И СтабильныеПериодыСезонность.Строение = ИзменениеНомеровСтрок.Строение
	|			И СтабильныеПериодыСезонность.Помещение = ИзменениеНомеровСтрок.Помещение
	|			И СтабильныеПериодыСезонность.Услуга = ИзменениеНомеровСтрок.Услуга
	|			И СтабильныеПериодыСезонность.ТочкаУчета = ИзменениеНомеровСтрок.ТочкаУчета
	|			И СтабильныеПериодыСезонность.НомерПозиции > ИзменениеНомеровСтрок.НомерПозиции
	|
	|СГРУППИРОВАТЬ ПО
	|	СтабильныеПериодыСезонность.Организация,
	|	СтабильныеПериодыСезонность.ПериодНачисления,
	|	СтабильныеПериодыСезонность.Район,
	|	СтабильныеПериодыСезонность.ЧастныйСектор,
	|	СтабильныеПериодыСезонность.Строение,
	|	СтабильныеПериодыСезонность.Помещение,
	|	СтабильныеПериодыСезонность.Услуга,
	|	СтабильныеПериодыСезонность.ТочкаУчета,
	|	СтабильныеПериодыСезонность.НомерПозиции	
	|;
	|////////////////////////////////////////////////////////////////////////////////	
	|ВЫБРАТЬ
	|" + энргНачисления.СформироватьСтрокуДляЗапроса("энргСтабильныеПериоды","СтабильныеПериодыСезонность","НомерПозиции,ДокРегистратор,ДатаРегистратора,ПериодРегистрации",Истина,Ложь) + "
	|	СтабильныеПериодыСезонность.НачалоОП КАК НачалоОП,
	|	СтабильныеПериодыСезонность.ЗавершениеОП КАК ЗавершениеОП,
	|	СтабильныеПериодыСезонность.ДнейВПериоде КАК ДнейВПериоде,
	|	СтабильныеПериодыСезонность.НеПрименятьЗависимостьЕслиБольшеОднойТочки КАК НеПрименятьЗависимостьЕслиБольшеОднойТочки,
	|	СтабильныеПериодыСезонность.МКД КАК МКД,
	|	СтабильныеПериодыСезонность.КоэффициентНорматива КАК КоэффициентНорматива,
	|	СтабильныеПериодыСезонность.КоэффициентНормативаНеПрименятьСезонность КАК КоэффициентНормативаНеПрименятьСезонность,
	|	СтабильныеПериодыСезонность.КорректироватьГодовойОбъем КАК КорректироватьГодовойОбъем,
	|	СтабильныеПериодыСезонность.НеПрименятьСезонность КАК НеПрименятьСезонность,
	|	СтабильныеПериодыСезонность.ОбъемЗаПрошлыйГод КАК ОбъемЗаПрошлыйГод,
	|	СтабильныеПериодыСезонность.Сезонность КАК Сезонность,
	|	СтабильныеПериодыСезонность.ВидПлощади КАК ВидПлощади,
	|	СтабильныеПериодыСезонность.НормативПоДням КАК НормативПоДням,
	|	СтабильныеПериодыСезонность.СпособОпределенияСоциальнойНормы КАК СпособОпределенияСоциальнойНормы,
	|	СтабильныеПериодыСезонность.НачислятьЗаПолныйМесяц КАК НачислятьЗаПолныйМесяц,	
	|	СтабильныеПериодыСезонность.СпособРасчетаНорматива КАК СпособРасчетаНорматива,
	|	СтабильныеПериодыСезонность.СпособРасчетаСоциальногоНорматива КАК СпособРасчетаСоциальногоНорматива,	
	|	СтабильныеПериодыСезонность.ЕстьПоказанияАбонента КАК ЕстьПоказанияАбонента,
	|	СтабильныеПериодыСезонность.ЗависитОтУслуги КАК ЗависитОтУслуги,
	|	СтабильныеПериодыСезонность.УмножатьНаНормуРодительскойУслуги КАК УмножатьНаНормуРодительскойУслуги,		
	|	СтабильныеПериодыСезонность.МаксимальноВозможныеПоказания КАК МаксимальноВозможныеПоказания,
	|	СтабильныеПериодыСезонность.РегистрируетОбъем КАК РегистрируетОбъем,	
	|	СтабильныеПериодыСезонность.ФизЛицо КАК ФизЛицо,
	|	СтабильныеПериодыСезонность.ОрганизацияПлательщика КАК ОрганизацияПлательщика,
	|	СтабильныеПериодыСезонность.ТипСхемы КАК ТипСхемы,
	|	СтабильныеПериодыСезонность.ВидТепловогоПункта КАК ВидТепловогоПункта,	
	|	СтабильныеПериодыСезонность.ПомещениеРодитель КАК ПомещениеРодитель,	
	|	СтабильныеПериодыСезонность.ИспользоватьКоэффициентСдерживанияРостаПлаты КАК ИспользоватьКоэффициентСдерживанияРостаПлаты,
	|	СтабильныеПериодыСезонность.ПлощадьМОП КАК ПлощадьМОП,
	|	СтабильныеПериодыСезонность.ПлощадьАбонентов КАК ПлощадьАбонентов,
	|	СтабильныеПериодыСезонность.ПлощадьСобственнаяПоставка КАК ПлощадьСобственнаяПоставка,	
	|	СтабильныеПериодыСезонность.ДокументНачисления КАК ДокументНачисления,
	|	СтабильныеПериодыСезонность.ДокументНачисленияПометкаУдаления КАК ДокументНачисленияПометкаУдаления,	
	|	СтабильныеПериодыСезонность.ВыводПрибораУчета КАК ВыводПрибораУчета,
	|	СтабильныеПериодыСезонность.БылУстановленныйПриборВЭтомГоду КАК БылУстановленныйПриборВЭтомГоду,
	|	СтабильныеПериодыСезонность.ЕстьЗаписьПриборВЭтомГоду КАК ЕстьЗаписьПриборВЭтомГоду,
	|	СтабильныеПериодыСезонность.КлючПомещения,
	|	СтабильныеПериодыСезонность.АбонентЗакрытВТекущемПериоде,
	|	СтабильныеПериодыСезонность.НомерПозиции + ЕСТЬNULL(ДобавляемыеСтрокиПередНомеромПозиции.КоличествоСтрокПеред, 0) КАК НомерПозиции,
	|	ЕСТЬNULL(ДобавляемыеСтрокиПередНомеромПозиции.КоличествоСтрокПеред, 0) КАК УвеличениеПозиции,		
	|	СтабильныеПериодыСезонность.ПериодРегистрации,
	|	СтабильныеПериодыСезонность.ДокРегистратор,
	|	СтабильныеПериодыСезонность.ДатаРегистратора
	|ПОМЕСТИТЬ СтабильныеПериодыПослеИзмененияСезонности
	|ИЗ
	|	СтабильныеПериодыСезонность КАК СтабильныеПериодыСезонность
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДобавляемыеСтрокиПередНомеромПозиции КАК ДобавляемыеСтрокиПередНомеромПозиции
	|		ПО СтабильныеПериодыСезонность.Организация = ДобавляемыеСтрокиПередНомеромПозиции.Организация 
	|			И СтабильныеПериодыСезонность.ПериодНачисления = ДобавляемыеСтрокиПередНомеромПозиции.ПериодНачисления
	|			И СтабильныеПериодыСезонность.Район = ДобавляемыеСтрокиПередНомеромПозиции.Район
	|			И СтабильныеПериодыСезонность.ЧастныйСектор = ДобавляемыеСтрокиПередНомеромПозиции.ЧастныйСектор
	|			И СтабильныеПериодыСезонность.Строение = ДобавляемыеСтрокиПередНомеромПозиции.Строение
	|			И СтабильныеПериодыСезонность.Помещение = ДобавляемыеСтрокиПередНомеромПозиции.Помещение
	|			И СтабильныеПериодыСезонность.ТочкаУчета = ДобавляемыеСтрокиПередНомеромПозиции.ТочкаУчета
	|			И СтабильныеПериодыСезонность.Услуга = ДобавляемыеСтрокиПередНомеромПозиции.Услуга
	|			И СтабильныеПериодыСезонность.НомерПозиции = ДобавляемыеСтрокиПередНомеромПозиции.НомерПозиции
	|
	|ОБЪЕДИНИТЬ ВСЕ	
	|
	|ВЫБРАТЬ
	|" + энргНачисления.СформироватьСтрокуДляЗапроса("энргСтабильныеПериоды","СтабильныеПериодыСезонность","НомерПозиции,ДокРегистратор,ДатаРегистратора,ПериодРегистрации",Истина,Ложь) + "
	|	СтабильныеПериодыСезонность.НачалоОП КАК НачалоОП,
	|	СтабильныеПериодыСезонность.ЗавершениеОП КАК ЗавершениеОП,
	|	СтабильныеПериодыСезонность.ДнейВПериоде КАК ДнейВПериоде,
	|	СтабильныеПериодыСезонность.НеПрименятьЗависимостьЕслиБольшеОднойТочки КАК НеПрименятьЗависимостьЕслиБольшеОднойТочки,
	|	СтабильныеПериодыСезонность.МКД КАК МКД,
	|	СтабильныеПериодыСезонность.КоэффициентНорматива КАК КоэффициентНорматива,
	|	СтабильныеПериодыСезонность.КоэффициентНормативаНеПрименятьСезонность КАК КоэффициентНормативаНеПрименятьСезонность,
	|	СтабильныеПериодыСезонность.КорректироватьГодовойОбъем КАК КорректироватьГодовойОбъем,
	|	СтабильныеПериодыСезонность.НеПрименятьСезонность КАК НеПрименятьСезонность,
	|	СтабильныеПериодыСезонность.ОбъемЗаПрошлыйГод КАК ОбъемЗаПрошлыйГод,
	|	СтабильныеПериодыСезонность.Сезонность КАК Сезонность,
	|	СтабильныеПериодыСезонность.ВидПлощади КАК ВидПлощади,
	|	СтабильныеПериодыСезонность.НормативПоДням КАК НормативПоДням,
	|	СтабильныеПериодыСезонность.СпособОпределенияСоциальнойНормы КАК СпособОпределенияСоциальнойНормы,
	|	СтабильныеПериодыСезонность.НачислятьЗаПолныйМесяц КАК НачислятьЗаПолныйМесяц,
	|	СтабильныеПериодыСезонность.СпособРасчетаНорматива КАК СпособРасчетаНорматива,
	|	СтабильныеПериодыСезонность.СпособРасчетаСоциальногоНорматива КАК СпособРасчетаСоциальногоНорматива,
	|	СтабильныеПериодыСезонность.ЕстьПоказанияАбонента КАК ЕстьПоказанияАбонента,
	|	СтабильныеПериодыСезонность.ЗависитОтУслуги КАК ЗависитОтУслуги,
	|	СтабильныеПериодыСезонность.УмножатьНаНормуРодительскойУслуги КАК УмножатьНаНормуРодительскойУслуги,		
	|	СтабильныеПериодыСезонность.МаксимальноВозможныеПоказания КАК МаксимальноВозможныеПоказания,
	|	СтабильныеПериодыСезонность.РегистрируетОбъем КАК РегистрируетОбъем,	
	|	СтабильныеПериодыСезонность.ФизЛицо КАК ФизЛицо,
	|	СтабильныеПериодыСезонность.ОрганизацияПлательщика КАК ОрганизацияПлательщика,
	|	СтабильныеПериодыСезонность.ТипСхемы КАК ТипСхемы,
	|	СтабильныеПериодыСезонность.ВидТепловогоПункта КАК ВидТепловогоПункта,	
	|	СтабильныеПериодыСезонность.ПомещениеРодитель КАК ПомещениеРодитель,	
	|	СтабильныеПериодыСезонность.ИспользоватьКоэффициентСдерживанияРостаПлаты КАК ИспользоватьКоэффициентСдерживанияРостаПлаты,
	|	СтабильныеПериодыСезонность.ПлощадьМОП КАК ПлощадьМОП,
	|	СтабильныеПериодыСезонность.ПлощадьАбонентов КАК ПлощадьАбонентов,
	|	СтабильныеПериодыСезонность.ПлощадьСобственнаяПоставка КАК ПлощадьСобственнаяПоставка,	
	|	СтабильныеПериодыСезонность.ДокументНачисления КАК ДокументНачисления,
	|	СтабильныеПериодыСезонность.ДокументНачисленияПометкаУдаления КАК ДокументНачисленияПометкаУдаления,	
	|	СтабильныеПериодыСезонность.ВыводПрибораУчета КАК ВыводПрибораУчета,
	|	СтабильныеПериодыСезонность.БылУстановленныйПриборВЭтомГоду КАК БылУстановленныйПриборВЭтомГоду,
	|	СтабильныеПериодыСезонность.ЕстьЗаписьПриборВЭтомГоду КАК ЕстьЗаписьПриборВЭтомГоду,
	|	СтабильныеПериодыСезонность.КлючПомещения,
	|	СтабильныеПериодыСезонность.АбонентЗакрытВТекущемПериоде,
	|	СтабильныеПериодыСезонность.НомерПозиции + 1 + ИзменениеНомеровСтрокУвеличениеПозиций.УвеличениеНомераПозиции КАК НомерПозиции,
	|	1 + ИзменениеНомеровСтрокУвеличениеПозиций.УвеличениеНомераПозиции КАК УвеличениеПозиции,
	|	ИзменениеНомеровСтрокУвеличениеПозиций.ПериодРегистрации,
	|	ВЫБОР
	|		КОГДА ИзменениеНомеровСтрокУвеличениеПозиций.ЭтоИзменениеТарифа
	|			ТОГДА ЗНАЧЕНИЕ(Документ.энргУстановитьЗначениеТарифа.ПустаяСсылка)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДокРегистратор,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаРегистратора
	|ИЗ 
	|	СтабильныеПериодыСезонность КАК СтабильныеПериодыСезонность
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИзменениеНомеровСтрокУвеличениеПозиций КАК ИзменениеНомеровСтрокУвеличениеПозиций
	|			ПО СтабильныеПериодыСезонность.Организация = ИзменениеНомеровСтрокУвеличениеПозиций.Организация 
	|			И СтабильныеПериодыСезонность.ПериодНачисления = ИзменениеНомеровСтрокУвеличениеПозиций.ПериодНачисления
	|			И СтабильныеПериодыСезонность.Район = ИзменениеНомеровСтрокУвеличениеПозиций.Район
	|			И СтабильныеПериодыСезонность.ЧастныйСектор = ИзменениеНомеровСтрокУвеличениеПозиций.ЧастныйСектор
	|			И СтабильныеПериодыСезонность.Строение = ИзменениеНомеровСтрокУвеличениеПозиций.Строение
	|			И СтабильныеПериодыСезонность.Помещение = ИзменениеНомеровСтрокУвеличениеПозиций.Помещение
	|			И СтабильныеПериодыСезонность.ТочкаУчета = ИзменениеНомеровСтрокУвеличениеПозиций.ТочкаУчета
	|			И СтабильныеПериодыСезонность.Услуга = ИзменениеНомеровСтрокУвеличениеПозиций.Услуга
	|			И СтабильныеПериодыСезонность.НомерПозиции = ИзменениеНомеровСтрокУвеличениеПозиций.НомерПозиции
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////	
	|ВЫБРАТЬ
	|	" + энргНачисления.СформироватьСтрокуДляЗапроса("энргСтабильныеПериоды","СтабильныеПериодыНачало","",Истина,Ложь) + "	
	|	СтабильныеПериодыНачало.НачалоОП КАК НачалоОП,
	|	СтабильныеПериодыНачало.ЗавершениеОП КАК ЗавершениеОП,
	|	СтабильныеПериодыНачало.ДнейВПериоде КАК ДнейВПериоде,
	|	СтабильныеПериодыНачало.НеПрименятьЗависимостьЕслиБольшеОднойТочки КАК НеПрименятьЗависимостьЕслиБольшеОднойТочки,
	|	СтабильныеПериодыНачало.МКД КАК МКД,
	|	СтабильныеПериодыНачало.КоэффициентНорматива КАК КоэффициентНорматива,
	|	СтабильныеПериодыНачало.КоэффициентНормативаНеПрименятьСезонность КАК КоэффициентНормативаНеПрименятьСезонность,
	|	СтабильныеПериодыНачало.КорректироватьГодовойОбъем КАК КорректироватьГодовойОбъем,
	|	СтабильныеПериодыНачало.НеПрименятьСезонность КАК НеПрименятьСезонность,
	|	СтабильныеПериодыНачало.ОбъемЗаПрошлыйГод КАК ОбъемЗаПрошлыйГод,
	|	СтабильныеПериодыНачало.Сезонность КАК Сезонность,
	|	СтабильныеПериодыНачало.ВидПлощади КАК ВидПлощади,
	|	СтабильныеПериодыНачало.НормативПоДням КАК НормативПоДням,
	|	СтабильныеПериодыНачало.СпособОпределенияСоциальнойНормы КАК СпособОпределенияСоциальнойНормы,
	|	СтабильныеПериодыНачало.НачислятьЗаПолныйМесяц КАК НачислятьЗаПолныйМесяц,
	|	СтабильныеПериодыНачало.СпособРасчетаНорматива КАК СпособРасчетаНорматива,
	|	СтабильныеПериодыНачало.СпособРасчетаСоциальногоНорматива КАК СпособРасчетаСоциальногоНорматива,
	|	СтабильныеПериодыНачало.ЕстьПоказанияАбонента КАК ЕстьПоказанияАбонента,
	|	СтабильныеПериодыНачало.ЗависитОтУслуги КАК ЗависитОтУслуги,
	|	СтабильныеПериодыНачало.УмножатьНаНормуРодительскойУслуги КАК УмножатьНаНормуРодительскойУслуги,		
	|	СтабильныеПериодыНачало.МаксимальноВозможныеПоказания КАК МаксимальноВозможныеПоказания,
	|	СтабильныеПериодыНачало.РегистрируетОбъем КАК РегистрируетОбъем,	
	|	СтабильныеПериодыНачало.ФизЛицо КАК ФизЛицо,
	|	СтабильныеПериодыНачало.ОрганизацияПлательщика КАК ОрганизацияПлательщика,
	|	СтабильныеПериодыНачало.ТипСхемы КАК ТипСхемы,
	|	СтабильныеПериодыНачало.ВидТепловогоПункта КАК ВидТепловогоПункта,	
	|	СтабильныеПериодыНачало.ПомещениеРодитель КАК ПомещениеРодитель,	
	|	СтабильныеПериодыНачало.ИспользоватьКоэффициентСдерживанияРостаПлаты КАК ИспользоватьКоэффициентСдерживанияРостаПлаты,
	|	СтабильныеПериодыНачало.ПлощадьМОП КАК ПлощадьМОП,
	|	СтабильныеПериодыНачало.ПлощадьАбонентов КАК ПлощадьАбонентов,
	|	СтабильныеПериодыНачало.ПлощадьСобственнаяПоставка КАК ПлощадьСобственнаяПоставка,	
	|	СтабильныеПериодыНачало.ДокументНачисления КАК ДокументНачисления,
	|	СтабильныеПериодыНачало.ДокументНачисленияПометкаУдаления КАК ДокументНачисленияПометкаУдаления,	
	|	СтабильныеПериодыНачало.ВыводПрибораУчета КАК ВыводПрибораУчета,
	|	СтабильныеПериодыНачало.БылУстановленныйПриборВЭтомГоду КАК БылУстановленныйПриборВЭтомГоду,
	|	СтабильныеПериодыНачало.ЕстьЗаписьПриборВЭтомГоду КАК ЕстьЗаписьПриборВЭтомГоду,
	|	СтабильныеПериодыНачало.КлючПомещения,
	|	СтабильныеПериодыНачало.АбонентЗакрытВТекущемПериоде,
	|	СтабильныеПериодыНачало.УвеличениеПозиции КАК УвеличениеПозиции,	
		
	|	ВЫБОР
	|		КОГДА СтабильныеПериодыНачало.ПериодРегистрации < СтабильныеПериодыНачало.НачалоОП
	|			ТОГДА СтабильныеПериодыНачало.НачалоОП
	|		КОГДА СтабильныеПериодыНачало.ПериодРегистрации > СтабильныеПериодыНачало.ЗавершениеОП
	|			ТОГДА СтабильныеПериодыНачало.ЗавершениеОП
	|		ИНАЧЕ СтабильныеПериодыНачало.ПериодРегистрации
	|	КОНЕЦ КАК НачалоПериода,
	|	ВЫБОР
	|		КОГДА СтабильныеПериодыНачалоОкончание.ПериодРегистрации ЕСТЬ NULL
	|			ТОГДА СтабильныеПериодыНачало.ЗавершениеОП
	|		КОГДА СтабильныеПериодыНачалоОкончание.ПериодРегистрации > СтабильныеПериодыНачало.ЗавершениеОП
	|			ТОГДА СтабильныеПериодыНачало.ЗавершениеОП
	|		КОГДА СтабильныеПериодыНачалоОкончание.ПериодРегистрации < СтабильныеПериодыНачало.НачалоОП
	|			ТОГДА СтабильныеПериодыНачало.НачалоОП
	|		ИНАЧЕ СтабильныеПериодыНачалоОкончание.ПериодРегистрации
	|	КОНЕЦ КАК КонецПериода,	
	|	ЕСТЬNULL(СтабильныеПериодыНачалоОкончание.ПериодРегистрации, ДАТАВРЕМЯ(1,1,1)) КАК СледующийПериодРегистрации,	
	|	ЕСТЬNULL(СтабильныеПериодыНачалоОкончание.ДокРегистратор, НЕОПРЕДЕЛЕНО) КАК СледующийРегистратор	
	
	|ПОМЕСТИТЬ Периоды
	|ИЗ 
	|   СтабильныеПериодыПослеИзмененияСезонности КАК СтабильныеПериодыНачало
	|   ЛЕВОЕ СОЕДИНЕНИЕ СтабильныеПериодыПослеИзмененияСезонности КАК СтабильныеПериодыНачалоОкончание
	|   	ПО (СтабильныеПериодыНачало.НомерПозиции = СтабильныеПериодыНачалоОкончание.НомерПозиции - 1)
	|			И СтабильныеПериодыНачало.Организация = СтабильныеПериодыНачалоОкончание.Организация
	|			И СтабильныеПериодыНачало.ПериодНачисления = СтабильныеПериодыНачалоОкончание.ПериодНачисления
	|			И СтабильныеПериодыНачало.Район = СтабильныеПериодыНачалоОкончание.Район
	|			И СтабильныеПериодыНачало.ЧастныйСектор = СтабильныеПериодыНачалоОкончание.ЧастныйСектор
	|			И СтабильныеПериодыНачало.Строение = СтабильныеПериодыНачалоОкончание.Строение
	|			И СтабильныеПериодыНачало.Помещение = СтабильныеПериодыНачалоОкончание.Помещение
	|			И СтабильныеПериодыНачало.ТочкаУчета = СтабильныеПериодыНачалоОкончание.ТочкаУчета
	|			И СтабильныеПериодыНачало.Услуга = СтабильныеПериодыНачалоОкончание.Услуга	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	" + энргНачисления.СформироватьСтрокуДляЗапроса("энргСтабильныеПериоды","СтабильныеПериодыПослеИзмененияСезонности","Шкала,РасчетТолькоПоПоказаниям,НетВозможностьУстановкиПУ",Истина,Ложь) + "	
	|	СтабильныеПериодыПослеИзмененияСезонности.НачалоОП КАК НачалоОП,
	|	СтабильныеПериодыПослеИзмененияСезонности.ЗавершениеОП КАК ЗавершениеОП,
	|	СтабильныеПериодыПослеИзмененияСезонности.ДнейВПериоде КАК ДнейВПериоде,
	|	СтабильныеПериодыПослеИзмененияСезонности.НеПрименятьЗависимостьЕслиБольшеОднойТочки КАК НеПрименятьЗависимостьЕслиБольшеОднойТочки,
	|	СтабильныеПериодыПослеИзмененияСезонности.МКД КАК МКД,
	|	СтабильныеПериодыПослеИзмененияСезонности.КоэффициентНорматива КАК КоэффициентНорматива,
	|	СтабильныеПериодыПослеИзмененияСезонности.КоэффициентНормативаНеПрименятьСезонность КАК КоэффициентНормативаНеПрименятьСезонность,
	|	СтабильныеПериодыПослеИзмененияСезонности.КорректироватьГодовойОбъем КАК КорректироватьГодовойОбъем,
	|	СтабильныеПериодыПослеИзмененияСезонности.НеПрименятьСезонность КАК НеПрименятьСезонность,
	|	СтабильныеПериодыПослеИзмененияСезонности.ОбъемЗаПрошлыйГод КАК ОбъемЗаПрошлыйГод,
	|	СтабильныеПериодыПослеИзмененияСезонности.Сезонность КАК Сезонность,
	|	СтабильныеПериодыПослеИзмененияСезонности.ВидПлощади КАК ВидПлощади,
	|	СтабильныеПериодыПослеИзмененияСезонности.НормативПоДням КАК НормативПоДням,
	|	СтабильныеПериодыПослеИзмененияСезонности.СпособОпределенияСоциальнойНормы КАК СпособОпределенияСоциальнойНормы,
	|	СтабильныеПериодыПослеИзмененияСезонности.НачислятьЗаПолныйМесяц КАК НачислятьЗаПолныйМесяц, 	
	|	СтабильныеПериодыПослеИзмененияСезонности.СпособРасчетаНорматива КАК СпособРасчетаНорматива,
	|	СтабильныеПериодыПослеИзмененияСезонности.СпособРасчетаСоциальногоНорматива КАК СпособРасчетаСоциальногоНорматива,	
	|	СтабильныеПериодыПослеИзмененияСезонности.ЕстьПоказанияАбонента КАК ЕстьПоказанияАбонента,
	|	СтабильныеПериодыПослеИзмененияСезонности.ЗависитОтУслуги КАК ЗависитОтУслуги,
	|	СтабильныеПериодыПослеИзмененияСезонности.УмножатьНаНормуРодительскойУслуги КАК УмножатьНаНормуРодительскойУслуги,
	|	СтабильныеПериодыПослеИзмененияСезонности.МаксимальноВозможныеПоказания КАК МаксимальноВозможныеПоказания,
	|	СтабильныеПериодыПослеИзмененияСезонности.РегистрируетОбъем КАК РегистрируетОбъем,
	|	СтабильныеПериодыПослеИзмененияСезонности.ФизЛицо КАК ФизЛицо,
	|	СтабильныеПериодыПослеИзмененияСезонности.ОрганизацияПлательщика КАК ОрганизацияПлательщика,
	|	СтабильныеПериодыПослеИзмененияСезонности.ТипСхемы КАК ТипСхемы,
	|	СтабильныеПериодыПослеИзмененияСезонности.ВидТепловогоПункта КАК ВидТепловогоПункта,
	|	СтабильныеПериодыПослеИзмененияСезонности.ПомещениеРодитель КАК ПомещениеРодитель,
	|	СтабильныеПериодыПослеИзмененияСезонности.ИспользоватьКоэффициентСдерживанияРостаПлаты КАК ИспользоватьКоэффициентСдерживанияРостаПлаты,
	|	СтабильныеПериодыПослеИзмененияСезонности.ПлощадьМОП КАК ПлощадьМОП,
	|	СтабильныеПериодыПослеИзмененияСезонности.ПлощадьАбонентов КАК ПлощадьАбонентов,
	|	СтабильныеПериодыПослеИзмененияСезонности.ПлощадьСобственнаяПоставка КАК ПлощадьСобственнаяПоставка,
	|	СтабильныеПериодыПослеИзмененияСезонности.ДокументНачисления КАК ДокументНачисления,
	|	СтабильныеПериодыПослеИзмененияСезонности.ДокументНачисленияПометкаУдаления КАК ДокументНачисленияПометкаУдаления,
	|	СтабильныеПериодыПослеИзмененияСезонности.ВыводПрибораУчета КАК ВыводПрибораУчета,
	|	СтабильныеПериодыПослеИзмененияСезонности.БылУстановленныйПриборВЭтомГоду КАК БылУстановленныйПриборВЭтомГоду,
	|	СтабильныеПериодыПослеИзмененияСезонности.ЕстьЗаписьПриборВЭтомГоду КАК ЕстьЗаписьПриборВЭтомГоду,
	|	СтабильныеПериодыПослеИзмененияСезонности.КлючПомещения КАК КлючПомещения,
	|	СтабильныеПериодыПослеИзмененияСезонности.АбонентЗакрытВТекущемПериоде КАК АбонентЗакрытВТекущемПериоде,
	|	СтабильныеПериодыПослеИзмененияСезонности.УвеличениеПозиции КАК УвеличениеПозиции, 	
	|	СтабильныеПериодыПослеИзмененияСезонности.НачалоПериода КАК НачалоПериода,
	|	СтабильныеПериодыПослеИзмененияСезонности.КонецПериода КАК КонецПериода,	
	|	СтабильныеПериодыПослеИзмененияСезонности.СледующийПериодРегистрации КАК СледующийПериодРегистрации, 
	|	СтабильныеПериодыПослеИзмененияСезонности.СледующийРегистратор КАК СледующийРегистратор, 
	|	ЕСТЬNULL(СтабильныеПериодыШкалы.Шкала, ЗНАЧЕНИЕ(Справочник.энргШкалыПриборовУчета.ПустаяСсылка)) КАК Шкала,
	|	ЕСТЬNULL(СтабильныеПериодыШкалы.ВидДифференцированности, ЗНАЧЕНИЕ(Справочник.энргВидыДифференцированности.ПустаяСсылка)) КАК ВидДифференцированности,
	|	ВЫБОР
	|		КОГДА СтабильныеПериодыПослеИзмененияСезонности.Шкала = ЗНАЧЕНИЕ(Справочник.энргШкалыПриборовУчета.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПривязанаКШкале,
	|	ЕСТЬNULL(ПериодыРодителя.ПриборВведен, ЛОЖЬ) КАК ЕстьПриборУчетаРодителя,
	|	ВЫБОР 
	|		КОГДА НЕ ПериодыРодителя.РасчетТолькоПоПоказаниям ЕСТЬ NULL
	|			И ПериодыРодителя.РасчетТолькоПоПоказаниям
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ СтабильныеПериодыПослеИзмененияСезонности.РасчетТолькоПоПоказаниям
	|	КОНЕЦ КАК РасчетТолькоПоПоказаниям,
	|	ВЫБОР 
	|		КОГДА НЕ ПериодыРодителя.НетВозможностьУстановкиПУ ЕСТЬ NULL
	|			И ПериодыРодителя.НетВозможностьУстановкиПУ
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ СтабильныеПериодыПослеИзмененияСезонности.НетВозможностьУстановкиПУ
	|	КОНЕЦ КАК НетВозможностьУстановкиПУ
	|ПОМЕСТИТЬ ПериодыШкалы
	|ИЗ
	|	Периоды КАК СтабильныеПериодыПослеИзмененияСезонности
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтабильныеПериодыШкалы КАК СтабильныеПериодыШкалы
	|		ПО СтабильныеПериодыПослеИзмененияСезонности.Организация = СтабильныеПериодыШкалы.Организация
	|			И СтабильныеПериодыПослеИзмененияСезонности.ПериодНачисления = СтабильныеПериодыШкалы.ПериодНачисления
	|			И СтабильныеПериодыПослеИзмененияСезонности.Район = СтабильныеПериодыШкалы.Район
	|			И СтабильныеПериодыПослеИзмененияСезонности.ЧастныйСектор = СтабильныеПериодыШкалы.ЧастныйСектор
	|			И СтабильныеПериодыПослеИзмененияСезонности.Строение = СтабильныеПериодыШкалы.Строение
	|			И СтабильныеПериодыПослеИзмененияСезонности.Помещение = СтабильныеПериодыШкалы.Помещение
	|			И СтабильныеПериодыПослеИзмененияСезонности.ТочкаУчета = СтабильныеПериодыШкалы.ТочкаУчета
	|			И (СтабильныеПериодыПослеИзмененияСезонности.НомерПозиции - СтабильныеПериодыПослеИзмененияСезонности.УвеличениеПозиции = СтабильныеПериодыШкалы.НомерПозиции)
	|			И (ВЫБОР
	|				КОГДА СтабильныеПериодыПослеИзмененияСезонности.Шкала = ЗНАЧЕНИЕ(Справочник.энргШкалыПриборовУчета.ПустаяСсылка)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ СтабильныеПериодыПослеИзмененияСезонности.Шкала = СтабильныеПериодыШкалы.Шкала
	|			КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			СтабильныеПериодыПослеИзмененияСезонности.Организация КАК Организация,
	|			СтабильныеПериодыПослеИзмененияСезонности.ПериодНачисления КАК ПериодНачисления,
	|			СтабильныеПериодыПослеИзмененияСезонности.Район КАК Район,
	|			СтабильныеПериодыПослеИзмененияСезонности.ЧастныйСектор КАК ЧастныйСектор,
	|			СтабильныеПериодыПослеИзмененияСезонности.Строение КАК Строение,
	|			СтабильныеПериодыПослеИзмененияСезонности.Помещение КАК Помещение,
	|			СтабильныеПериодыПослеИзмененияСезонности.ТочкаУчета КАК ТочкаУчета,
	|			СтабильныеПериодыПослеИзмененияСезонности.Услуга КАК Услуга,
	|			СтабильныеПериодыПослеИзмененияСезонности.ПериодРегистрации КАК ПериодРегистрации,
	|			МАКСИМУМ(СтабильныеПериодыПослеИзмененияСезонности.ПриборВведен) КАК ПриборВведен,
	|			МАКСИМУМ(СтабильныеПериодыПослеИзмененияСезонности.РасчетТолькоПоПоказаниям) КАК РасчетТолькоПоПоказаниям,
	|			МАКСИМУМ(СтабильныеПериодыПослеИзмененияСезонности.НетВозможностьУстановкиПУ) КАК НетВозможностьУстановкиПУ
	|		ИЗ
	|			СтабильныеПериодыПослеИзмененияСезонности КАК СтабильныеПериодыПослеИзмененияСезонности
	|		
	|		СГРУППИРОВАТЬ ПО
	|			СтабильныеПериодыПослеИзмененияСезонности.Организация,
	|			СтабильныеПериодыПослеИзмененияСезонности.ПериодНачисления,
	|			СтабильныеПериодыПослеИзмененияСезонности.Район,
	|			СтабильныеПериодыПослеИзмененияСезонности.ЧастныйСектор,
	|			СтабильныеПериодыПослеИзмененияСезонности.Строение,
	|			СтабильныеПериодыПослеИзмененияСезонности.Помещение,
	|			СтабильныеПериодыПослеИзмененияСезонности.ТочкаУчета,
	|			СтабильныеПериодыПослеИзмененияСезонности.Услуга,
	|			СтабильныеПериодыПослеИзмененияСезонности.ПериодРегистрации) КАК ПериодыРодителя
	|		ПО СтабильныеПериодыПослеИзмененияСезонности.Организация = ПериодыРодителя.Организация
	|			И СтабильныеПериодыПослеИзмененияСезонности.ПериодНачисления = ПериодыРодителя.ПериодНачисления
	|			И СтабильныеПериодыПослеИзмененияСезонности.Район = ПериодыРодителя.Район
	|			И СтабильныеПериодыПослеИзмененияСезонности.ЧастныйСектор = ПериодыРодителя.ЧастныйСектор
	|			И СтабильныеПериодыПослеИзмененияСезонности.Строение = ПериодыРодителя.Строение
	|			И СтабильныеПериодыПослеИзмененияСезонности.Помещение = ПериодыРодителя.Помещение
	|			И СтабильныеПериодыПослеИзмененияСезонности.ТочкаУчетаРодитель = ПериодыРодителя.ТочкаУчета
	|			И СтабильныеПериодыПослеИзмененияСезонности.Услуга = ПериодыРодителя.Услуга
	|			И СтабильныеПериодыПослеИзмененияСезонности.ПериодРегистрации = ПериодыРодителя.ПериодРегистрации
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	" + энргНачисления.СформироватьСтрокуДляЗапроса("энргСтабильныеПериоды","СтабильныеПериоды","",Истина,Ложь) + "	
	|	СтабильныеПериоды.НачалоОП КАК НачалоОП,
	|	СтабильныеПериоды.ЗавершениеОП КАК ЗавершениеОП,
	|	СтабильныеПериоды.ДнейВПериоде КАК ДнейВПериоде,
	|	СтабильныеПериоды.НеПрименятьЗависимостьЕслиБольшеОднойТочки КАК НеПрименятьЗависимостьЕслиБольшеОднойТочки,
	|	СтабильныеПериоды.МКД КАК МКД,
	|	СтабильныеПериоды.КоэффициентНорматива КАК КоэффициентНорматива,
	|	СтабильныеПериоды.КоэффициентНормативаНеПрименятьСезонность КАК КоэффициентНормативаНеПрименятьСезонность,
	|	СтабильныеПериоды.КорректироватьГодовойОбъем КАК КорректироватьГодовойОбъем,
	|	СтабильныеПериоды.НеПрименятьСезонность КАК НеПрименятьСезонность,
	|	СтабильныеПериоды.ОбъемЗаПрошлыйГод КАК ОбъемЗаПрошлыйГод,
	|	СтабильныеПериоды.Сезонность КАК Сезонность,
	|	СтабильныеПериоды.ВидПлощади КАК ВидПлощади,
	|	СтабильныеПериоды.НормативПоДням КАК НормативПоДням,
	|	СтабильныеПериоды.СпособОпределенияСоциальнойНормы КАК СпособОпределенияСоциальнойНормы,
	|	СтабильныеПериоды.НачислятьЗаПолныйМесяц КАК НачислятьЗаПолныйМесяц,	
	|	СтабильныеПериоды.СпособРасчетаНорматива КАК СпособРасчетаНорматива,
	|	СтабильныеПериоды.СпособРасчетаСоциальногоНорматива КАК СпособРасчетаСоциальногоНорматива,	
	|	СтабильныеПериоды.ЕстьПоказанияАбонента КАК ЕстьПоказанияАбонента,
	|	СтабильныеПериоды.ЗависитОтУслуги КАК ЗависитОтУслуги,
	|	СтабильныеПериоды.УмножатьНаНормуРодительскойУслуги КАК УмножатьНаНормуРодительскойУслуги,		
	|	СтабильныеПериоды.МаксимальноВозможныеПоказания КАК МаксимальноВозможныеПоказания,
	|	СтабильныеПериоды.РегистрируетОбъем КАК РегистрируетОбъем,	
	|	СтабильныеПериоды.ФизЛицо КАК ФизЛицо,
	|	СтабильныеПериоды.ОрганизацияПлательщика КАК ОрганизацияПлательщика,
	|	СтабильныеПериоды.ТипСхемы КАК ТипСхемы,
	|	СтабильныеПериоды.ВидТепловогоПункта КАК ВидТепловогоПункта,	
	|	СтабильныеПериоды.ПомещениеРодитель КАК ПомещениеРодитель,	
	|	СтабильныеПериоды.ИспользоватьКоэффициентСдерживанияРостаПлаты КАК ИспользоватьКоэффициентСдерживанияРостаПлаты,
	|	СтабильныеПериоды.ПлощадьМОП КАК ПлощадьМОП,
	|	СтабильныеПериоды.ПлощадьАбонентов КАК ПлощадьАбонентов,
	|	СтабильныеПериоды.ПлощадьСобственнаяПоставка КАК ПлощадьСобственнаяПоставка,	
	|	СтабильныеПериоды.ДокументНачисления КАК ДокументНачисления,
	|	СтабильныеПериоды.ДокументНачисленияПометкаУдаления КАК ДокументНачисленияПометкаУдаления,	
	|	СтабильныеПериоды.ВыводПрибораУчета КАК ВыводПрибораУчета,
	|	СтабильныеПериоды.БылУстановленныйПриборВЭтомГоду КАК БылУстановленныйПриборВЭтомГоду,
	|	СтабильныеПериоды.ЕстьЗаписьПриборВЭтомГоду КАК ЕстьЗаписьПриборВЭтомГоду,
	|	СтабильныеПериоды.КлючПомещения,
	|	СтабильныеПериоды.АбонентЗакрытВТекущемПериоде,
	|	СтабильныеПериоды.УвеличениеПозиции КАК УвеличениеПозиции,
	|	СтабильныеПериоды.НачалоПериода КАК НачалоПериода,
	|	СтабильныеПериоды.КонецПериода КАК КонецПериода,	
	|	СтабильныеПериоды.СледующийПериодРегистрации КАК СледующийПериодРегистрации, 
	|	СтабильныеПериоды.СледующийРегистратор КАК СледующийРегистратор,
	|	СтабильныеПериоды.ВидДифференцированности КАК ВидДифференцированности,
	|	СтабильныеПериоды.ПривязанаКШкале КАК ПривязанаКШкале,
	|	СтабильныеПериоды.ЕстьПриборУчетаРодителя КАК ЕстьПриборУчетаРодителя,
	|	ВЫБОР
	|		КОГДА ВидыДифференцированностиТарифныеЗоны.ВидДифференцированности ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.энргТарифныеЗоны.БезРазбивки)
	|		ИНАЧЕ ВидыДифференцированностиТарифныеЗоны.ТарифнаяЗона
	|	КОНЕЦ КАК ТарифнаяЗона	
	|ПОМЕСТИТЬ ПериодыШкалыТарифнаяЗона
	|ИЗ
	|	ПериодыШкалы КАК СтабильныеПериоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВидыДифференцированностиТарифныеЗоны КАК ВидыДифференцированностиТарифныеЗоны
	|		ПО СтабильныеПериоды.ВидДифференцированности = ВидыДифференцированностиТарифныеЗоны.ВидДифференцированности	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	" + энргНачисления.СформироватьСтрокуДляЗапроса("энргСтабильныеПериоды","СтабильныеПериоды","",Истина,Ложь) + "
	|	СтабильныеПериоды.НачалоОП КАК НачалоОП,
	|	СтабильныеПериоды.ЗавершениеОП КАК ЗавершениеОП,
	|	СтабильныеПериоды.ДнейВПериоде КАК ДнейВПериоде,
	|	СтабильныеПериоды.НеПрименятьЗависимостьЕслиБольшеОднойТочки КАК НеПрименятьЗависимостьЕслиБольшеОднойТочки,
	|	СтабильныеПериоды.МКД КАК МКД,
	|	СтабильныеПериоды.КоэффициентНорматива КАК КоэффициентНорматива,
	|	СтабильныеПериоды.КоэффициентНормативаНеПрименятьСезонность КАК КоэффициентНормативаНеПрименятьСезонность,
	|	СтабильныеПериоды.КорректироватьГодовойОбъем КАК КорректироватьГодовойОбъем,
	|	СтабильныеПериоды.НеПрименятьСезонность КАК НеПрименятьСезонность,
	|	СтабильныеПериоды.ОбъемЗаПрошлыйГод КАК ОбъемЗаПрошлыйГод,
	|	СтабильныеПериоды.Сезонность КАК Сезонность,
	|	СтабильныеПериоды.ВидПлощади КАК ВидПлощади,
	|	СтабильныеПериоды.НормативПоДням КАК НормативПоДням,
	|	СтабильныеПериоды.СпособОпределенияСоциальнойНормы КАК СпособОпределенияСоциальнойНормы,
	|	СтабильныеПериоды.НачислятьЗаПолныйМесяц КАК НачислятьЗаПолныйМесяц, 	
	|	СтабильныеПериоды.СпособРасчетаНорматива КАК СпособРасчетаНорматива,
	|	СтабильныеПериоды.СпособРасчетаСоциальногоНорматива КАК СпособРасчетаСоциальногоНорматива,	
	|	СтабильныеПериоды.ЕстьПоказанияАбонента КАК ЕстьПоказанияАбонента,
	|	СтабильныеПериоды.ЗависитОтУслуги КАК ЗависитОтУслуги,
	|	СтабильныеПериоды.УмножатьНаНормуРодительскойУслуги КАК УмножатьНаНормуРодительскойУслуги,
	|	СтабильныеПериоды.МаксимальноВозможныеПоказания КАК МаксимальноВозможныеПоказания,
	|	СтабильныеПериоды.РегистрируетОбъем КАК РегистрируетОбъем,
	|	СтабильныеПериоды.ФизЛицо КАК ФизЛицо,
	|	СтабильныеПериоды.ОрганизацияПлательщика КАК ОрганизацияПлательщика,
	|	СтабильныеПериоды.ТипСхемы КАК ТипСхемы,
	|	СтабильныеПериоды.ВидТепловогоПункта КАК ВидТепловогоПункта,
	|	СтабильныеПериоды.ПомещениеРодитель КАК ПомещениеРодитель,
	|	СтабильныеПериоды.ИспользоватьКоэффициентСдерживанияРостаПлаты КАК ИспользоватьКоэффициентСдерживанияРостаПлаты,
	|	СтабильныеПериоды.ПлощадьМОП КАК ПлощадьМОП,
	|	СтабильныеПериоды.ПлощадьАбонентов КАК ПлощадьАбонентов,
	|	СтабильныеПериоды.ПлощадьСобственнаяПоставка КАК ПлощадьСобственнаяПоставка,
	|	СтабильныеПериоды.ДокументНачисления КАК ДокументНачисления,
	|	СтабильныеПериоды.ДокументНачисленияПометкаУдаления КАК ДокументНачисленияПометкаУдаления,
	|	СтабильныеПериоды.ВыводПрибораУчета КАК ВыводПрибораУчета,
	|	СтабильныеПериоды.БылУстановленныйПриборВЭтомГоду КАК БылУстановленныйПриборВЭтомГоду,
	|	СтабильныеПериоды.ЕстьЗаписьПриборВЭтомГоду КАК ЕстьЗаписьПриборВЭтомГоду,
	|	СтабильныеПериоды.КлючПомещения КАК КлючПомещения,
	|	СтабильныеПериоды.АбонентЗакрытВТекущемПериоде КАК АбонентЗакрытВТекущемПериоде,
	|	СтабильныеПериоды.УвеличениеПозиции КАК УвеличениеПозиции,
	|	СтабильныеПериоды.НачалоПериода КАК НачалоПериода,
	|	СтабильныеПериоды.КонецПериода КАК КонецПериода,	
	|	СтабильныеПериоды.СледующийПериодРегистрации КАК СледующийПериодРегистрации, 
	|	СтабильныеПериоды.СледующийРегистратор КАК СледующийРегистратор,
	|	СтабильныеПериоды.ВидДифференцированности КАК ВидДифференцированности,
	|	СтабильныеПериоды.ПривязанаКШкале КАК ПривязанаКШкале,
	|	СтабильныеПериоды.ЕстьПриборУчетаРодителя КАК ЕстьПриборУчетаРодителя,
	|	СтабильныеПериоды.ТарифнаяЗона КАК ТарифнаяЗона,	
	|	ВЫБОР
	|		КОГДА ВЫБОР
	|					КОГДА СтабильныеПериоды.ПериодРегистрации < СтабильныеПериоды.НачалоОП
	|						ТОГДА СтабильныеПериоды.НачалоОП
	|					КОГДА СтабильныеПериоды.ПериодРегистрации > СтабильныеПериоды.ЗавершениеОП
	|						ТОГДА СтабильныеПериоды.ЗавершениеОП
	|					ИНАЧЕ СтабильныеПериоды.ПериодРегистрации
	|				КОНЕЦ = СтабильныеПериоды.НачалоОП
	|				И СтабильныеПериоды.РегистрируетОбъем
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ПериодыПоказанийНачалоПериодаРегистрации.Показания, 0)
	|	КОНЕЦ КАК НачальныеПоказания,
	|	ЕСТЬNULL(ПериодыПоказанийОкончаниеПериодаРегистрации.Показания, 0) КАК КонечныеПоказания,	
	|	ВЫБОР
	|		КОГДА СтабильныеПериоды.НеПрименятьСезонность
	|			ТОГДА 1
	|		КОГДА ПериодыСезонности.Организация ЕСТЬ NULL
	|			ТОГДА 1
	|		КОГДА ПериодыСезонности.НачалоСезонности <= СтабильныеПериоды.ПериодРегистрации
	|				И СтабильныеПериоды.ПериодРегистрации < ПериодыСезонности.КонецСезонности
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоэффициентСезоности,
	|	ВЫБОР
	|		КОГДА ПериодыСезонности.Организация ЕСТЬ NULL
	|			ТОГДА 1
	|		КОГДА СтабильныеПериоды.НачислятьЗаПолныйМесяц
	|				И (ПериодыСезонности.НачалоСезонности МЕЖДУ СтабильныеПериоды.НачалоОП И СтабильныеПериоды.ЗавершениеОП)
	|			ТОГДА 1
	|		КОГДА СтабильныеПериоды.НачислятьЗаПолныйМесяц
	|				И (ПериодыСезонности.КонецСезонности МЕЖДУ СтабильныеПериоды.НачалоОП И СтабильныеПериоды.ЗавершениеОП)
	|			ТОГДА 1
	|		КОГДА ПериодыСезонности.НачалоСезонности <= СтабильныеПериоды.ПериодРегистрации
	|				И СтабильныеПериоды.ПериодРегистрации < ПериодыСезонности.КонецСезонности
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоэффициентСезоностиОбъемПотребленный,
	|	ЕСТЬNULL(ИзменениеТарифовВПериоде.Значение, 0) КАК ПредыдущееЗначениеТарифа,
	|	ЕСТЬNULL(ИзменениеТарифовВПериоде.ЗначениеСверхНорматива, 0) КАК ПредыдущееЗначениеТарифаСверхНорматива,
	|	ЕСТЬNULL(ИзменениеТарифовВПериоде.ЗначениеРЭК, 0) КАК ПредыдущееЗначениеТарифаРЭК,
	|	ВЫБОР
	|		КОГДА ПредоставленныеПоказанияВСрок.ПериодНачисления ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ПредоставленныеПоказанияВСрок.ВСрок
	|	КОНЕЦ КАК ПоказанияВСрок,
	|	ВЫБОР
	|		КОГДА ПредоставленныеПоказанияВСрок.ПериодНачисления ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПоказанияПредоставлены,
	|	ЕСТЬNULL(СреднееПотреблениеАбонентов.Объем, -1) КАК СреднийОбъем,
	|	ЕСТЬNULL(СреднееПотреблениеАбонентов.ОбъемПотребленный, -1) КАК СреднийОбъемПотребленный,
	|	ВЫБОР
	|		КОГДА НЕ СтабильныеПериоды.ЗависитОтУслуги = ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(СреднееПотреблениеЗависитОтУслуги.Объем, -1)
	|		ИНАЧЕ -1
	|	КОНЕЦ КАК СреднийОбъемЗависитОтУслуги,
	|	ВЫБОР
	|		КОГДА НЕ СтабильныеПериоды.ЗависитОтУслуги = ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(СреднееПотреблениеЗависитОтУслуги.ОбъемПотребленный, -1)
	|		ИНАЧЕ -1
	|	КОНЕЦ КАК СреднийОбъемПотребленныйЗависитОтУслуги
	|ПОМЕСТИТЬ СтабильныеПериодыПоказания
	|ИЗ
	|	ПериодыШкалыТарифнаяЗона КАК СтабильныеПериоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПериодыПоказаний КАК ПериодыПоказанийНачалоПериодаРегистрации
	|		ПО (ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(СтабильныеПериоды.ДокРегистратор) = ТИП(Документ.энргНачисление)
	|					ТОГДА ПериодыПоказанийНачалоПериодаРегистрации.ПризнакНачалаПериода
	|				КОГДА ТИПЗНАЧЕНИЯ(СтабильныеПериоды.ДокРегистратор) = ТИП(Документ.энргВводНачальныхОстатков)
	|					ТОГДА ПериодыПоказанийНачалоПериодаРегистрации.ПризнакНачалаПериода
	|				КОГДА ТИПЗНАЧЕНИЯ(СтабильныеПериоды.ДокРегистратор) = ТИП(Документ.энргОперацияСЛицевымСчетом)
	|						И НЕ СтабильныеПериоды.Абонент = ЗНАЧЕНИЕ(Справочник.энргАбоненты.ПустаяСсылка)
	|					ТОГДА СтабильныеПериоды.ДокРегистратор = ПериодыПоказанийНачалоПериодаРегистрации.ДокРегистратор
	|				КОГДА ТИПЗНАЧЕНИЯ(СтабильныеПериоды.ДокРегистратор) = ТИП(Документ.энргОперацияСПриборомУчета)
	|					ТОГДА СтабильныеПериоды.ДокРегистратор = ПериодыПоказанийНачалоПериодаРегистрации.ДокРегистратор
	|				КОГДА ТИПЗНАЧЕНИЯ(СтабильныеПериоды.ДокРегистратор) = ТИП(Документ.энргОперацияСУслугами)
	|						И ВЫРАЗИТЬ(СтабильныеПериоды.ДокРегистратор КАК Документ.энргОперацияСУслугами).ВидОперации = ЗНАЧЕНИЕ(Перечисление.энргВидыОпераций.энргОперацияСУслугами_ВозобновлениеРежимаПотребления)
	|					ТОГДА СтабильныеПериоды.ДокРегистратор = ПериодыПоказанийНачалоПериодаРегистрации.ДокРегистратор
	|						И НЕ ПериодыПоказанийНачалоПериодаРегистрации.ПоказанияТекущегоПериода
	|				КОГДА ТИПЗНАЧЕНИЯ(СтабильныеПериоды.ДокРегистратор) = ТИП(Документ.энргОперацияСУслугами)
	|					ТОГДА СтабильныеПериоды.ДокРегистратор = ПериодыПоказанийНачалоПериодаРегистрации.ДокРегистратор
	|				ИНАЧЕ СтабильныеПериоды.ПериодРегистрации МЕЖДУ ПериодыПоказанийНачалоПериодаРегистрации.НачалоПериодДействия И ПериодыПоказанийНачалоПериодаРегистрации.ОкончаниеПериодаДействия
	|			КОНЕЦ)
	|			И СтабильныеПериоды.Организация = ПериодыПоказанийНачалоПериодаРегистрации.Организация
	|			И СтабильныеПериоды.ПериодНачисления = ПериодыПоказанийНачалоПериодаРегистрации.ПериодНачисления
	|			И СтабильныеПериоды.Район = ПериодыПоказанийНачалоПериодаРегистрации.Район
	|			И СтабильныеПериоды.ЧастныйСектор = ПериодыПоказанийНачалоПериодаРегистрации.ЧастныйСектор
	|			И СтабильныеПериоды.Строение = ПериодыПоказанийНачалоПериодаРегистрации.Строение
	|			И СтабильныеПериоды.Помещение = ПериодыПоказанийНачалоПериодаРегистрации.Помещение
	|			И СтабильныеПериоды.ПриборУчета = ПериодыПоказанийНачалоПериодаРегистрации.ПриборУчета
	|			И СтабильныеПериоды.Шкала = ПериодыПоказанийНачалоПериодаРегистрации.Шкала
	|			И СтабильныеПериоды.ТарифнаяЗона = ПериодыПоказанийНачалоПериодаРегистрации.ТарифнаяЗона
	
	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПериодыПоказаний КАК ПериодыПоказанийОкончаниеПериодаРегистрации
	|		ПО (ВЫБОР
	|				КОГДА СтабильныеПериоды.РегистрируетОбъем И ПериодыПоказанийОкончаниеПериодаРегистрации.ПризнакНачалаПериода 
	|					ТОГДА ЛОЖЬ
	|				КОГДА ТИПЗНАЧЕНИЯ(СтабильныеПериоды.СледующийРегистратор) = ТИП(Документ.энргНачисление)
	|					ТОГДА ПериодыПоказанийОкончаниеПериодаРегистрации.ПризнакНачалаПериода
	|				КОГДА ТИПЗНАЧЕНИЯ(СтабильныеПериоды.СледующийРегистратор) = ТИП(Документ.энргВводНачальныхОстатков)
	|					ТОГДА ПериодыПоказанийОкончаниеПериодаРегистрации.ПризнакНачалаПериода
	|				КОГДА ТИПЗНАЧЕНИЯ(СтабильныеПериоды.СледующийРегистратор) = ТИП(Документ.энргОперацияСЛицевымСчетом)
	|						И НЕ СтабильныеПериоды.Абонент = ЗНАЧЕНИЕ(Справочник.энргАбоненты.ПустаяСсылка)
	|					ТОГДА СтабильныеПериоды.СледующийРегистратор = ПериодыПоказанийОкончаниеПериодаРегистрации.ДокРегистратор
	|				КОГДА ТИПЗНАЧЕНИЯ(СтабильныеПериоды.СледующийРегистратор) = ТИП(Документ.энргОперацияСПриборомУчета)
	|					ТОГДА СтабильныеПериоды.СледующийРегистратор = ПериодыПоказанийОкончаниеПериодаРегистрации.ДокРегистратор
	|				КОГДА ТИПЗНАЧЕНИЯ(СтабильныеПериоды.СледующийРегистратор) = ТИП(Документ.энргОперацияСУслугами)
	|					ТОГДА СтабильныеПериоды.СледующийРегистратор = ПериодыПоказанийОкончаниеПериодаРегистрации.ДокРегистратор
	|				ИНАЧЕ СтабильныеПериоды.СледующийПериодРегистрации МЕЖДУ ПериодыПоказанийОкончаниеПериодаРегистрации.НачалоПериодДействия И ПериодыПоказанийОкончаниеПериодаРегистрации.ОкончаниеПериодаДействия
	|			КОНЕЦ)
	|			И СтабильныеПериоды.Организация = ПериодыПоказанийОкончаниеПериодаРегистрации.Организация
	|			И СтабильныеПериоды.ПериодНачисления = ПериодыПоказанийОкончаниеПериодаРегистрации.ПериодНачисления
	|			И СтабильныеПериоды.Район = ПериодыПоказанийОкончаниеПериодаРегистрации.Район
	|			И СтабильныеПериоды.ЧастныйСектор = ПериодыПоказанийОкончаниеПериодаРегистрации.ЧастныйСектор
	|			И СтабильныеПериоды.Строение = ПериодыПоказанийОкончаниеПериодаРегистрации.Строение
	|			И СтабильныеПериоды.Помещение = ПериодыПоказанийОкончаниеПериодаРегистрации.Помещение
	|			И СтабильныеПериоды.ПриборУчета = ПериодыПоказанийОкончаниеПериодаРегистрации.ПриборУчета
	|			И СтабильныеПериоды.Шкала = ПериодыПоказанийОкончаниеПериодаРегистрации.Шкала
	|			И СтабильныеПериоды.ТарифнаяЗона = ПериодыПоказанийОкончаниеПериодаРегистрации.ТарифнаяЗона	
	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПериодыСезонности КАК ПериодыСезонности
	|		ПО СтабильныеПериоды.Организация = ПериодыСезонности.Организация
	|			И СтабильныеПериоды.ПериодНачисления = ПериодыСезонности.ПериодНачисления
	|			И СтабильныеПериоды.Район = ПериодыСезонности.Район
	|			И СтабильныеПериоды.Сезонность = ПериодыСезонности.Сезонность
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИзменениеТарифовВПериоде КАК ИзменениеТарифовВПериоде
	|		ПО СтабильныеПериоды.Организация = ИзменениеТарифовВПериоде.Организация
	|			И СтабильныеПериоды.ПериодНачисления = ИзменениеТарифовВПериоде.ПериодНачисления
	|			И СтабильныеПериоды.Район = ИзменениеТарифовВПериоде.Район
	|			И СтабильныеПериоды.ТарифнаяГруппа = ИзменениеТарифовВПериоде.ГруппаПотребителей
	|			И СтабильныеПериоды.Услуга = ИзменениеТарифовВПериоде.Услуга
	|			И СтабильныеПериоды.Поставщик = ИзменениеТарифовВПериоде.Поставщик
	|			И СтабильныеПериоды.ТарифнаяЗона = ИзменениеТарифовВПериоде.ТарифнаяЗона
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПредоставленныеПоказанияВСрок КАК ПредоставленныеПоказанияВСрок
	|		ПО СтабильныеПериоды.Организация = ПредоставленныеПоказанияВСрок.Организация
	|			И СтабильныеПериоды.ПериодНачисления = ПредоставленныеПоказанияВСрок.ПериодНачисления
	|			И СтабильныеПериоды.Район = ПредоставленныеПоказанияВСрок.Район
	|			И СтабильныеПериоды.ЧастныйСектор = ПредоставленныеПоказанияВСрок.ЧастныйСектор
	|			И СтабильныеПериоды.Строение = ПредоставленныеПоказанияВСрок.Строение
	|			И СтабильныеПериоды.Помещение = ПредоставленныеПоказанияВСрок.Помещение
	|			И СтабильныеПериоды.ПриборУчета = ПредоставленныеПоказанияВСрок.ПриборУчета
	|			И СтабильныеПериоды.Шкала = ПредоставленныеПоказанияВСрок.Шкала
	|			И СтабильныеПериоды.ТарифнаяЗона = ПредоставленныеПоказанияВСрок.ТарифнаяЗона
	|		ЛЕВОЕ СОЕДИНЕНИЕ СреднееПотреблениеАбонентов КАК СреднееПотреблениеАбонентов
	|		ПО СтабильныеПериоды.Организация = СреднееПотреблениеАбонентов.Организация
	|			И СтабильныеПериоды.ПериодНачисления = СреднееПотреблениеАбонентов.ПериодНачисления
	|			И СтабильныеПериоды.Район = СреднееПотреблениеАбонентов.Район
	|			И СтабильныеПериоды.ЧастныйСектор = СреднееПотреблениеАбонентов.ЧастныйСектор
	|			И СтабильныеПериоды.Строение = СреднееПотреблениеАбонентов.Строение
	|			И СтабильныеПериоды.Помещение = СреднееПотреблениеАбонентов.Помещение
	|			И СтабильныеПериоды.ТочкаУчета = СреднееПотреблениеАбонентов.ТочкаУчета
	|			И СтабильныеПериоды.Услуга = СреднееПотреблениеАбонентов.Услуга
	|			И СтабильныеПериоды.Шкала = СреднееПотреблениеАбонентов.Шкала
	|			И СтабильныеПериоды.ТарифнаяЗона = СреднееПотреблениеАбонентов.ТарифнаяЗона
	|		ЛЕВОЕ СОЕДИНЕНИЕ СреднееПотреблениеАбонентов КАК СреднееПотреблениеЗависитОтУслуги
	|		ПО СтабильныеПериоды.Организация = СреднееПотреблениеЗависитОтУслуги.Организация
	|			И СтабильныеПериоды.ПериодНачисления = СреднееПотреблениеЗависитОтУслуги.ПериодНачисления
	|			И СтабильныеПериоды.Район = СреднееПотреблениеЗависитОтУслуги.Район
	|			И СтабильныеПериоды.ЧастныйСектор = СреднееПотреблениеЗависитОтУслуги.ЧастныйСектор
	|			И СтабильныеПериоды.Строение = СреднееПотреблениеЗависитОтУслуги.Строение
	|			И СтабильныеПериоды.Помещение = СреднееПотреблениеЗависитОтУслуги.Помещение
	|			И СтабильныеПериоды.ТочкаУчета = СреднееПотреблениеЗависитОтУслуги.ТочкаУчета
	|			И СтабильныеПериоды.ЗависитОтУслуги = СреднееПотреблениеЗависитОтУслуги.Услуга
	|			И СтабильныеПериоды.Шкала = СреднееПотреблениеЗависитОтУслуги.Шкала
	|			И СтабильныеПериоды.ТарифнаяЗона = СреднееПотреблениеЗависитОтУслуги.ТарифнаяЗона";
	
	Возврат Текст;
	
КонецФункции

Функция ТекстПолучитьДанныеДляРасчета()
	Текст   = 
	"ВЫБРАТЬ
	|	" + энргНачисления.СформироватьСтрокуДляЗапроса("энргСтабильныеПериоды","Периоды","",Истина,Ложь) + "	
	|	Периоды.НачалоОП КАК НачалоОП,
	|	Периоды.ЗавершениеОП КАК ЗавершениеОП,
	|	Периоды.ДнейВПериоде КАК ДнейВПериоде,
	|	Периоды.НеПрименятьЗависимостьЕслиБольшеОднойТочки КАК НеПрименятьЗависимостьЕслиБольшеОднойТочки,
	|	Периоды.МКД КАК МКД,
	|	Периоды.КоэффициентНорматива КАК КоэффициентНорматива,
	|	Периоды.КоэффициентНормативаНеПрименятьСезонность КАК КоэффициентНормативаНеПрименятьСезонность,
	|	Периоды.КорректироватьГодовойОбъем КАК КорректироватьГодовойОбъем,
	|	Периоды.ОбъемЗаПрошлыйГод КАК ОбъемЗаПрошлыйГод,
	|	Периоды.Сезонность КАК Сезонность,
	|	Периоды.ВидПлощади КАК ВидПлощади,
	|	Периоды.НормативПоДням КАК НормативПоДням,
	|	Периоды.СпособОпределенияСоциальнойНормы КАК СпособОпределенияСоциальнойНормы, 	
	|	Периоды.СпособРасчетаНорматива КАК СпособРасчетаНорматива,
	|	Периоды.СпособРасчетаСоциальногоНорматива КАК СпособРасчетаСоциальногоНорматива,	
	|	Периоды.ЕстьПоказанияАбонента КАК ЕстьПоказанияАбонента,
	|	Периоды.ЗависитОтУслуги КАК ЗависитОтУслуги,
	|	Периоды.УмножатьНаНормуРодительскойУслуги КАК УмножатьНаНормуРодительскойУслуги,
	|	Периоды.МаксимальноВозможныеПоказания КАК МаксимальноВозможныеПоказания,
	|	Периоды.РегистрируетОбъем КАК РегистрируетОбъем,
	|	Периоды.ФизЛицо КАК ФизЛицо,
	|	Периоды.ОрганизацияПлательщика КАК ОрганизацияПлательщика,
	|	Периоды.ТипСхемы КАК ТипСхемы,
	|	Периоды.ВидТепловогоПункта КАК ВидТепловогоПункта,
	|	Периоды.ПомещениеРодитель КАК ПомещениеРодитель,
	|	Периоды.ИспользоватьКоэффициентСдерживанияРостаПлаты КАК ИспользоватьКоэффициентСдерживанияРостаПлаты,
	|	Периоды.ПлощадьМОП КАК ПлощадьМОП,
	|	Периоды.ПлощадьАбонентов КАК ПлощадьАбонентов,
	|	Периоды.ПлощадьСобственнаяПоставка КАК ПлощадьСобственнаяПоставка,
	|	Периоды.ДокументНачисления КАК ДокументНачисления,
	|	Периоды.ДокументНачисленияПометкаУдаления КАК ДокументНачисленияПометкаУдаления,
	|	Периоды.ВыводПрибораУчета КАК ВыводПрибораУчета,
	|	Периоды.БылУстановленныйПриборВЭтомГоду КАК БылУстановленныйПриборВЭтомГоду,
	|	Периоды.ЕстьЗаписьПриборВЭтомГоду КАК ЕстьЗаписьПриборВЭтомГоду,
	|	Периоды.КлючПомещения КАК КлючПомещения,
	|	Периоды.АбонентЗакрытВТекущемПериоде КАК АбонентЗакрытВТекущемПериоде,
	|	Периоды.УвеличениеПозиции КАК УвеличениеПозиции,
	|	Периоды.ВидДифференцированности КАК ВидДифференцированности,
	|	Периоды.ПривязанаКШкале КАК ПривязанаКШкале,
	|	Периоды.ЕстьПриборУчетаРодителя КАК ЕстьПриборУчетаРодителя,
	|	Периоды.ТарифнаяЗона КАК ТарифнаяЗона,
	|	Периоды.КоэффициентСезоности КАК КоэффициентСезоности,
	|	Периоды.КоэффициентСезоностиОбъемПотребленный КАК КоэффициентСезоностиОбъемПотребленный,
	|	Периоды.ПредыдущееЗначениеТарифа КАК ПредыдущееЗначениеТарифа,
	|	Периоды.ПредыдущееЗначениеТарифаСверхНорматива КАК ПредыдущееЗначениеТарифаСверхНорматива,
	|	Периоды.ПредыдущееЗначениеТарифаРЭК КАК ПредыдущееЗначениеТарифаРЭК,
	|	Периоды.ПоказанияВСрок КАК ПоказанияВСрок,
	|	Периоды.ПоказанияПредоставлены КАК ПоказанияПредоставлены,
	|	Периоды.СреднийОбъем КАК СреднийОбъем,
	|	Периоды.СреднийОбъемПотребленный КАК СреднийОбъемПотребленный,
	|	Периоды.СреднийОбъемЗависитОтУслуги КАК СреднийОбъемЗависитОтУслуги,
	|	Периоды.СреднийОбъемПотребленныйЗависитОтУслуги КАК СреднийОбъемПотребленныйЗависитОтУслуги,
	|	Периоды.НачалоПериода КАК НачалоПериода,
	|	Периоды.КонецПериода КАК КонецПериода,
	|	Периоды.НачальныеПоказания КАК НачальныеПоказания,
	|	ВЫБОР
	|		КОГДА Периоды.КонецПериода = Периоды.ЗавершениеОП
	|			ТОГДА ЕСТЬNULL(МаксимальныеПоказания.Показания, 0)
	|		ИНАЧЕ Периоды.КонечныеПоказания
	|	КОНЕЦ КАК КонечныеПоказания,
	|	Периоды.СледующийРегистратор КАК СледующийРегистратор,
	|	ВЫБОР
	|		КОГДА НЕ Периоды.КорректироватьГодовойОбъем
	|				И НЕ Периоды.Сезонность = ЗНАЧЕНИЕ(Справочник.энргВидыСезонности.ПустаяСсылка)
	|				И ВЫБОР
	|					КОГДА НЕ Периоды.ЕстьЗаписьПриборВЭтомГоду
	|						ТОГДА Периоды.ЕстьПриборУчетаРодителя
	|					КОГДА Периоды.БылУстановленныйПриборВЭтомГоду
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ Периоды.ЕстьПриборУчетаРодителя
	|				КОНЕЦ
	|			ТОГДА Периоды.КоэффициентСезоностиОбъемПотребленный
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК ДополнительныйКоэффициентСезоности,
	|	ВЫБОР
	|		КОГДА НЕ Периоды.КорректироватьГодовойОбъем
	|				И НЕ Периоды.Сезонность = ЗНАЧЕНИЕ(Справочник.энргВидыСезонности.ПустаяСсылка)
	|				И ВЫБОР
	|					КОГДА НЕ Периоды.ЕстьЗаписьПриборВЭтомГоду
	|						ТОГДА Периоды.ЕстьПриборУчетаРодителя
	|					КОГДА Периоды.БылУстановленныйПриборВЭтомГоду
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ Периоды.ЕстьПриборУчетаРодителя
	|				КОНЕЦ
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ Периоды.НеПрименятьСезонность
	|	КОНЕЦ КАК НеПрименятьСезонность
	|ПОМЕСТИТЬ ДанныеДляРасчетаПередНормой
	|ИЗ
	|	СтабильныеПериодыПоказания КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ МаксимальныеПоказания КАК МаксимальныеПоказания
	|		ПО Периоды.Организация = МаксимальныеПоказания.Организация
	|			И Периоды.ПериодНачисления = МаксимальныеПоказания.ПериодНачисления
	|			И Периоды.Район = МаксимальныеПоказания.Район
	|			И Периоды.ЧастныйСектор = МаксимальныеПоказания.ЧастныйСектор
	|			И Периоды.Строение = МаксимальныеПоказания.Строение
	|			И Периоды.Помещение = МаксимальныеПоказания.Помещение
	|			И Периоды.ПриборУчета = МаксимальныеПоказания.ПриборУчета
	|			И Периоды.Шкала = МаксимальныеПоказания.Шкала
	|			И Периоды.ТарифнаяЗона = МаксимальныеПоказания.ТарифнаяЗона
	|ГДЕ
	|	Периоды.УслугаПодключена
	|	И НЕ Периоды.БлокировочныйАкт
	|;
	|//////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	" + энргНачисления.СформироватьСтрокуДляЗапроса("энргСтабильныеПериоды","ДанныеДляРасчетаПередНормой","НомерПозиции,ПериодРегистрации,ДатаРегистратора,ДокРегистратор,КлючНорматива",Истина,Ложь) + "
	|	ДанныеДляРасчетаПередНормой.НачалоОП КАК НачалоОП,
	|	ДанныеДляРасчетаПередНормой.ЗавершениеОП КАК ЗавершениеОП,
	|	ДанныеДляРасчетаПередНормой.ДнейВПериоде КАК ДнейВПериоде,
	|	ДанныеДляРасчетаПередНормой.НеПрименятьЗависимостьЕслиБольшеОднойТочки КАК НеПрименятьЗависимостьЕслиБольшеОднойТочки,
	|	ДанныеДляРасчетаПередНормой.МКД КАК МКД,
	|	ДанныеДляРасчетаПередНормой.КоэффициентНорматива КАК КоэффициентНорматива,
	|	ДанныеДляРасчетаПередНормой.КоэффициентНормативаНеПрименятьСезонность КАК КоэффициентНормативаНеПрименятьСезонность,
	|	ДанныеДляРасчетаПередНормой.КорректироватьГодовойОбъем КАК КорректироватьГодовойОбъем,
	|	ДанныеДляРасчетаПередНормой.НеПрименятьСезонность КАК НеПрименятьСезонность,
	|	ДанныеДляРасчетаПередНормой.ОбъемЗаПрошлыйГод КАК ОбъемЗаПрошлыйГод,
	|	ДанныеДляРасчетаПередНормой.Сезонность КАК Сезонность,
	|	ДанныеДляРасчетаПередНормой.ВидПлощади КАК ВидПлощади,
	|	ДанныеДляРасчетаПередНормой.НормативПоДням КАК НормативПоДням,
	|	ДанныеДляРасчетаПередНормой.СпособОпределенияСоциальнойНормы КАК СпособОпределенияСоциальнойНормы,
	|	ДанныеДляРасчетаПередНормой.ЕстьПоказанияАбонента КАК ЕстьПоказанияАбонента,
	|	ДанныеДляРасчетаПередНормой.ЗависитОтУслуги КАК ЗависитОтУслуги,
	|	ДанныеДляРасчетаПередНормой.УмножатьНаНормуРодительскойУслуги КАК УмножатьНаНормуРодительскойУслуги,		
	|	ДанныеДляРасчетаПередНормой.МаксимальноВозможныеПоказания КАК МаксимальноВозможныеПоказания,
	|	ДанныеДляРасчетаПередНормой.РегистрируетОбъем КАК РегистрируетОбъем,	
	|	ДанныеДляРасчетаПередНормой.ФизЛицо КАК ФизЛицо,
	|	ДанныеДляРасчетаПередНормой.ОрганизацияПлательщика КАК ОрганизацияПлательщика,
	|	ДанныеДляРасчетаПередНормой.ТипСхемы КАК ТипСхемы,
	|	ДанныеДляРасчетаПередНормой.ВидТепловогоПункта КАК ВидТепловогоПункта,	
	|	ДанныеДляРасчетаПередНормой.ПомещениеРодитель КАК ПомещениеРодитель,	
	|	ДанныеДляРасчетаПередНормой.ИспользоватьКоэффициентСдерживанияРостаПлаты КАК ИспользоватьКоэффициентСдерживанияРостаПлаты,
	|	ДанныеДляРасчетаПередНормой.ПлощадьМОП КАК ПлощадьМОП,
	|	ДанныеДляРасчетаПередНормой.ПлощадьАбонентов КАК ПлощадьАбонентов,
	|	ДанныеДляРасчетаПередНормой.ПлощадьСобственнаяПоставка КАК ПлощадьСобственнаяПоставка,	
	|	ДанныеДляРасчетаПередНормой.ДокументНачисления КАК ДокументНачисления,
	|	ДанныеДляРасчетаПередНормой.ДокументНачисленияПометкаУдаления КАК ДокументНачисленияПометкаУдаления,	
	|	ДанныеДляРасчетаПередНормой.ВыводПрибораУчета КАК ВыводПрибораУчета,
	|	ДанныеДляРасчетаПередНормой.БылУстановленныйПриборВЭтомГоду КАК БылУстановленныйПриборВЭтомГоду,
	|	ДанныеДляРасчетаПередНормой.ЕстьЗаписьПриборВЭтомГоду КАК ЕстьЗаписьПриборВЭтомГоду,
	|	ДанныеДляРасчетаПередНормой.КлючПомещения,
	|	ДанныеДляРасчетаПередНормой.АбонентЗакрытВТекущемПериоде,
	|	ДанныеДляРасчетаПередНормой.УвеличениеПозиции КАК УвеличениеПозиции,
	|	ДанныеДляРасчетаПередНормой.ВидДифференцированности КАК ВидДифференцированности,
	|	ДанныеДляРасчетаПередНормой.ПривязанаКШкале КАК ПривязанаКШкале,
	|	ДанныеДляРасчетаПередНормой.ЕстьПриборУчетаРодителя КАК ЕстьПриборУчетаРодителя,
	|	ДанныеДляРасчетаПередНормой.ТарифнаяЗона КАК ТарифнаяЗона,	
	|	ДанныеДляРасчетаПередНормой.КоэффициентСезоности КАК КоэффициентСезоности,
	|	ДанныеДляРасчетаПередНормой.КоэффициентСезоностиОбъемПотребленный КАК КоэффициентСезоностиОбъемПотребленный,
	|	ДанныеДляРасчетаПередНормой.ПредыдущееЗначениеТарифа КАК ПредыдущееЗначениеТарифа,
	|	ДанныеДляРасчетаПередНормой.ПредыдущееЗначениеТарифаСверхНорматива КАК ПредыдущееЗначениеТарифаСверхНорматива,
	|	ДанныеДляРасчетаПередНормой.ПредыдущееЗначениеТарифаРЭК КАК ПредыдущееЗначениеТарифаРЭК,	
	|	ДанныеДляРасчетаПередНормой.ПоказанияВСрок КАК ПоказанияВСрок,
	|	ДанныеДляРасчетаПередНормой.ПоказанияПредоставлены КАК ПоказанияПредоставлены,	
	|	ДанныеДляРасчетаПередНормой.СреднийОбъем КАК СреднийОбъем,
	|	ДанныеДляРасчетаПередНормой.СреднийОбъемПотребленный КАК СреднийОбъемПотребленный,
	|	ДанныеДляРасчетаПередНормой.СреднийОбъемЗависитОтУслуги КАК СреднийОбъемЗависитОтУслуги,	
	|	ДанныеДляРасчетаПередНормой.СреднийОбъемПотребленныйЗависитОтУслуги  КАК СреднийОбъемПотребленныйЗависитОтУслуги,	
	|	ДанныеДляРасчетаПередНормой.НачалоПериода КАК НачалоПериода,	
	|	ДанныеДляРасчетаПередНормой.КонецПериода КАК КонецПериода,
	|	ДанныеДляРасчетаПередНормой.НачальныеПоказания КАК НачальныеПоказания,
	|	ДанныеДляРасчетаПередНормой.КонечныеПоказания КАК КонечныеПоказания,
	|	ДанныеДляРасчетаПередНормой.СледующийРегистратор КАК СледующийРегистратор,		
	|	ДанныеДляРасчетаПередНормой.ДополнительныйКоэффициентСезоности КАК ДополнительныйКоэффициентСезоности,	
	|	ЕСТЬNULL(СтабильныеПериодыИзмерителиНаправлений.Измеритель,ЗНАЧЕНИЕ(Справочник.энргНаправлениеИспользованияТочекУчета.ПустаяСсылка))  КАК Измеритель,
	|	ЕСТЬNULL(СтабильныеПериодыИзмерителиНаправлений.КлючНорматива,ДанныеДляРасчетаПередНормой.КлючНорматива) КАК КлючНорматива,
	|	ЕСТЬNULL(СтабильныеПериодыИзмерителиНаправлений.Количество,0) КАК КоличествоИзмеретелейНаправления,
	|	НЕ СтабильныеПериодыИзмерителиНаправлений.Количество ЕСТЬ NULL КАК ЕстьИзмерителиНаправления,
	|	выбор когда ДанныеДляРасчетаПередНормой.ДатаПоверки = ДАТАВРЕМЯ(1,1,1) тогда 0 когда ДОБАВИТЬКДАТЕ(ДанныеДляРасчетаПередНормой.ДатаПоверки, МЕСЯЦ, 3) < ДанныеДляРасчетаПередНормой.ЗавершениеОП Тогда 3 когда ДанныеДляРасчетаПередНормой.ДатаПоверки < ДанныеДляРасчетаПередНормой.ЗавершениеОП Тогда 2 Иначе 1 конец как УслНаДатуПоверки
	|ПОМЕСТИТЬ ДанныеДляРасчетаПередНормойИзмерители
	|	ИЗ ДанныеДляРасчетаПередНормой КАК ДанныеДляРасчетаПередНормой
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтабильныеПериодыИзмерителиНаправлений КАК СтабильныеПериодыИзмерителиНаправлений
	|		ПО ДанныеДляРасчетаПередНормой.Организация = СтабильныеПериодыИзмерителиНаправлений.Организация
	|		И ДанныеДляРасчетаПередНормой.ПериодНачисления = СтабильныеПериодыИзмерителиНаправлений.ПериодНачисления
	|		И ДанныеДляРасчетаПередНормой.Район = СтабильныеПериодыИзмерителиНаправлений.Район
	|		И ДанныеДляРасчетаПередНормой.ЧастныйСектор = СтабильныеПериодыИзмерителиНаправлений.ЧастныйСектор
	|		И ДанныеДляРасчетаПередНормой.Строение = СтабильныеПериодыИзмерителиНаправлений.Строение
	|		И ДанныеДляРасчетаПередНормой.Помещение = СтабильныеПериодыИзмерителиНаправлений.Помещение
	|		И ДанныеДляРасчетаПередНормой.ТочкаУчета = СтабильныеПериодыИзмерителиНаправлений.ТочкаУчета
	|		И ДанныеДляРасчетаПередНормой.НомерПозиции - ДанныеДляРасчетаПередНормой.УвеличениеПозиции = СтабильныеПериодыИзмерителиНаправлений.НомерПозиции"; 	
	
	Возврат Текст

КонецФункции

Функция ТекстРассчитатьИндивидуальныйОбъемПотребления()
	Текст  = 
	"ВЫБРАТЬ
	|	ДанныеДляРасчетаПередНормой.Организация КАК Организация,
	|	ДанныеДляРасчетаПередНормой.ПериодНачисления КАК ПериодНачисления,
	|	ДанныеДляРасчетаПередНормой.Район КАК Район,
	|	ДанныеДляРасчетаПередНормой.ЧастныйСектор КАК ЧастныйСектор,
	|	ДанныеДляРасчетаПередНормой.Строение КАК Строение,
	|	ДанныеДляРасчетаПередНормой.Помещение КАК Помещение,
	|	ДанныеДляРасчетаПередНормой.Услуга КАК Услуга,
	|	ДанныеДляРасчетаПередНормой.НаправлениеИспользованияТУ КАК НаправлениеИспользованияТУ,
	|	ДанныеДляРасчетаПередНормой.НачалоПериода КАК НачалоПериода,
	|	ДанныеДляРасчетаПередНормой.КонецПериода КАК КонецПериода,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА НЕ ДанныеДляРасчетаПередНормой.ТочкаУчетаРодитель = ЗНАЧЕНИЕ(Справочник.энргТочкиУчета.ПустаяСсылка)
	|					И (НЕ ДанныеДляРасчетаПередНормой.ПриборВведен
	|						ИЛИ НЕ ДанныеДляРасчетаПередНормой.ПоказанияВСрок)
	|				ТОГДА 1
	|			КОГДА ДанныеДляРасчетаПередНормой.ЗависимаяТочкаУчета <> ЗНАЧЕНИЕ(Справочник.энргТочкиУчета.ПустаяСсылка)
	|					И (НЕ ДанныеДляРасчетаПередНормой.ПриборВведен
	|						ИЛИ НЕ ДанныеДляРасчетаПередНормой.ПоказанияВСрок)
	|				ТОГДА 2
	|			КОГДА НЕ ДанныеДляРасчетаПередНормой.ПриборВведен
	|					ИЛИ НЕ ДанныеДляРасчетаПередНормой.ПоказанияВСрок
	|				ТОГДА 3
	|			ИНАЧЕ 4
	|		КОНЕЦ) КАК Приоритет,
	|	МИНИМУМ(ДанныеДляРасчетаПередНормой.ПриборВведен) КАК ПриборВведен,
	|	МИНИМУМ(ДанныеДляРасчетаПередНормой.ПоказанияВСрок) КАК ПоказанияВСрок,
	|	МАКСИМУМ(ДанныеДляРасчетаПередНормой.УслНаДатуПоверки) КАК УслНаДатуПоверки,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеДляРасчетаПередНормой.ТочкаУчета) КАК КоличествоТочекУчета
	|ПОМЕСТИТЬ ПриоритетНормы
	|ИЗ
	|	ДанныеДляРасчетаПередНормойИзмерители КАК ДанныеДляРасчетаПередНормой
	|ГДЕ
	|	НЕ ДанныеДляРасчетаПередНормой.РасчетПоФормуле
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДляРасчетаПередНормой.Организация,
	|	ДанныеДляРасчетаПередНормой.ПериодНачисления,
	|	ДанныеДляРасчетаПередНормой.Район,
	|	ДанныеДляРасчетаПередНормой.ЧастныйСектор,
	|	ДанныеДляРасчетаПередНормой.Строение,
	|	ДанныеДляРасчетаПередНормой.Помещение,
	|	ДанныеДляРасчетаПередНормой.Услуга,
	|	ДанныеДляРасчетаПередНормой.НаправлениеИспользованияТУ,
	|	ДанныеДляРасчетаПередНормой.НачалоПериода,
	|	ДанныеДляРасчетаПередНормой.КонецПериода
	|
	|ИМЕЮЩИЕ
	|	(МИНИМУМ(ДанныеДляРасчетаПередНормой.ПриборВведен) = ЛОЖЬ
	|		ИЛИ МИНИМУМ(ДанныеДляРасчетаПередНормой.ПоказанияВСрок) = ЛОЖЬ
	|		ИЛИ МИНИМУМ(ДанныеДляРасчетаПередНормой.ОбъемЗаПрошлыйГод) = ИСТИНА
	|		ИЛИ МАКСИМУМ(ДанныеДляРасчетаПередНормой.УслНаДатуПоверки) = 3)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДляРасчетаПередНормой.Организация КАК Организация,
	|	ДанныеДляРасчетаПередНормой.ПериодНачисления КАК ПериодНачисления,
	|	ДанныеДляРасчетаПередНормой.Район КАК Район,
	|	ДанныеДляРасчетаПередНормой.ЧастныйСектор КАК ЧастныйСектор,
	|	ДанныеДляРасчетаПередНормой.Строение КАК Строение,
	|	ДанныеДляРасчетаПередНормой.Помещение КАК Помещение,
	|	ДанныеДляРасчетаПередНормой.Услуга КАК Услуга,
	|	ДанныеДляРасчетаПередНормой.НаправлениеИспользованияТУ КАК НаправлениеИспользованияТУ,
	|	ДанныеДляРасчетаПередНормой.ТочкаУчетаРодитель КАК ТочкаУчетаРодитель,
	|	ДанныеДляРасчетаПередНормой.НачалоПериода КАК НачалоПериода,
	|	ДанныеДляРасчетаПередНормой.КонецПериода КАК КонецПериода,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА ДанныеДляРасчетаПередНормой.СреднийОбъем >= 0
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьСреднийПоВсемТочкамУслуги,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА ДанныеДляРасчетаПередНормой.СреднийОбъемПотребленный >= 0
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьСреднийПотребленныйПоВсемТочкамУслуги,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА ДанныеДляРасчетаПередНормой.СреднийОбъемЗависитОтУслуги >= 0
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьСреднийПоВсемТочкамУслугиЗависитОтУслуги,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА ДанныеДляРасчетаПередНормой.СреднийОбъемПотребленныйЗависитОтУслуги >= 0
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьСреднийПотребленныйПоВсемТочкамУслугиЗависитОтУслуги,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеДляРасчетаПередНормой.ТочкаУчета) КАК КоличествоТочекУчета,
	
	|	МИНИМУМ(ДанныеДляРасчетаПередНормой.ПоказанияВСрок) КАК ПоказанияВСрок,
	|   МИНИМУМ(ДанныеДляРасчетаПередНормой.ПриборВведен) КАК ПриборВведен
	
	|ПОМЕСТИТЬ НаличиеСреднегоОбъемаПоРодительскимТочкам
	|ИЗ
	|	ДанныеДляРасчетаПередНормойИзмерители КАК ДанныеДляРасчетаПередНормой
	|ГДЕ
	|	НЕ ДанныеДляРасчетаПередНормой.РасчетПоФормуле
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДляРасчетаПередНормой.Организация,
	|	ДанныеДляРасчетаПередНормой.ПериодНачисления,
	|	ДанныеДляРасчетаПередНормой.Район,
	|	ДанныеДляРасчетаПередНормой.ЧастныйСектор,
	|	ДанныеДляРасчетаПередНормой.Строение,
	|	ДанныеДляРасчетаПередНормой.Помещение,
	|	ДанныеДляРасчетаПередНормой.Услуга,
	|	ДанныеДляРасчетаПередНормой.ТочкаУчетаРодитель,
	|	ДанныеДляРасчетаПередНормой.НаправлениеИспользованияТУ,
	|	ДанныеДляРасчетаПередНормой.НачалоПериода,
	|	ДанныеДляРасчетаПередНормой.КонецПериода,
	|	ДанныеДляРасчетаПередНормой.ОбъемЗаПрошлыйГод
	|
	|ИМЕЮЩИЕ
	|	(МИНИМУМ(ДанныеДляРасчетаПередНормой.ПриборВведен) = ЛОЖЬ
	|		ИЛИ МИНИМУМ(ДанныеДляРасчетаПередНормой.ПоказанияВСрок) = ЛОЖЬ
	|		ИЛИ МИНИМУМ(ДанныеДляРасчетаПередНормой.ОбъемЗаПрошлыйГод))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДляРасчетаПередНормой.Организация КАК Организация,
	|	ДанныеДляРасчетаПередНормой.ПериодНачисления КАК ПериодНачисления,
	|	ДанныеДляРасчетаПередНормой.Район КАК Район,
	|	ДанныеДляРасчетаПередНормой.ЧастныйСектор КАК ЧастныйСектор,
	|	ДанныеДляРасчетаПередНормой.Строение КАК Строение,
	|	ДанныеДляРасчетаПередНормой.Помещение КАК Помещение,
	|	ДанныеДляРасчетаПередНормой.Услуга КАК Услуга,
	|	ДанныеДляРасчетаПередНормой.НаправлениеИспользованияТУ КАК НаправлениеИспользованияТУ,
	|	ДанныеДляРасчетаПередНормой.НачалоПериода КАК НачалоПериода,
	|	ДанныеДляРасчетаПередНормой.КонецПериода КАК КонецПериода,
	|	ДанныеДляРасчетаПередНормой.ТочкаУчетаРодитель КАК ТочкаУчетаРодитель,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеДляРасчетаПередНормой.ТочкаУчета) КАК КоличествоТочекУчета
	|ПОМЕСТИТЬ УслугиРодительскихТочекБезПоказаний
	|ИЗ
	|	ДанныеДляРасчетаПередНормойИзмерители КАК ДанныеДляРасчетаПередНормой
	|ГДЕ
	|	НЕ ДанныеДляРасчетаПередНормой.ТочкаУчетаРодитель = ЗНАЧЕНИЕ(Справочник.энргТочкиУчета.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДляРасчетаПередНормой.Организация,
	|	ДанныеДляРасчетаПередНормой.ПериодНачисления,
	|	ДанныеДляРасчетаПередНормой.Район,
	|	ДанныеДляРасчетаПередНормой.ЧастныйСектор,
	|	ДанныеДляРасчетаПередНормой.Строение,
	|	ДанныеДляРасчетаПередНормой.Помещение,
	|	ДанныеДляРасчетаПередНормой.Услуга,
	|	ДанныеДляРасчетаПередНормой.НаправлениеИспользованияТУ,
	|	ДанныеДляРасчетаПередНормой.НачалоПериода,
	|	ДанныеДляРасчетаПередНормой.КонецПериода,
	|	ДанныеДляРасчетаПередНормой.ТочкаУчетаРодитель
	|
	|ИМЕЮЩИЕ
	|	(МИНИМУМ(ДанныеДляРасчетаПередНормой.ПриборВведен) = ЛОЖЬ
	|		ИЛИ МИНИМУМ(ДанныеДляРасчетаПередНормой.ПоказанияВСрок) = ЛОЖЬ
	|		ИЛИ МИНИМУМ(ДанныеДляРасчетаПередНормой.ОбъемЗаПрошлыйГод) = ИСТИНА)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДляРасчетаПередНормой.Организация КАК Организация,
	|	ДанныеДляРасчетаПередНормой.ПериодНачисления КАК ПериодНачисления,
	|	ДанныеДляРасчетаПередНормой.Район КАК Район,
	|	ДанныеДляРасчетаПередНормой.ЧастныйСектор КАК ЧастныйСектор,
	|	ДанныеДляРасчетаПередНормой.Строение КАК Строение,
	|	ДанныеДляРасчетаПередНормой.Помещение КАК Помещение,
	|	ДанныеДляРасчетаПередНормой.НачалоПериода КАК НачалоПериода,
	|	ДанныеДляРасчетаПередНормой.КонецПериода КАК КонецПериода,
	|	ДанныеДляРасчетаПередНормой.ТочкаУчетаРодитель КАК ТочкаУчета
	|ПОМЕСТИТЬ РодительскиеТочкиУчета
	|ИЗ
	|	ДанныеДляРасчетаПередНормойИзмерители КАК ДанныеДляРасчетаПередНормой
	|ГДЕ
	|	НЕ ДанныеДляРасчетаПередНормой.ТочкаУчетаРодитель = ЗНАЧЕНИЕ(Справочник.энргТочкиУчета.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДляРасчетаПередНормой.Организация КАК Организация,
	|	ДанныеДляРасчетаПередНормой.ПериодНачисления КАК ПериодНачисления,
	|	ДанныеДляРасчетаПередНормой.Район КАК Район,
	|	ДанныеДляРасчетаПередНормой.ЧастныйСектор КАК ЧастныйСектор,
	|	ДанныеДляРасчетаПередНормой.Строение КАК Строение,
	|	ДанныеДляРасчетаПередНормой.Помещение КАК Помещение,
	|	ДанныеДляРасчетаПередНормой.Услуга КАК Услуга,
	|	ДанныеДляРасчетаПередНормой.НаправлениеИспользованияТУ КАК НаправлениеИспользованияТУ,
	|	ДанныеДляРасчетаПередНормой.НачалоПериода КАК НачалоПериода,
	|	ДанныеДляРасчетаПередНормой.КонецПериода КАК КонецПериода,
	|	МАКСИМУМ(ДанныеДляРасчетаПередНормой.ТочкаУчета) КАК ТочкаУчета,
	|	МАКСИМУМ(ДанныеДляРасчетаПередНормой.ТарифнаяЗона) КАК ТарифнаяЗона
	|ПОМЕСТИТЬ ТочкиНачисленияНормы
	|ИЗ
	|	ДанныеДляРасчетаПередНормойИзмерители КАК ДанныеДляРасчетаПередНормой
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПриоритетНормы КАК ПриоритетНормы
	|		ПО ДанныеДляРасчетаПередНормой.Организация = ПриоритетНормы.Организация
	|			И ДанныеДляРасчетаПередНормой.ПериодНачисления = ПриоритетНормы.ПериодНачисления
	|			И ДанныеДляРасчетаПередНормой.Район = ПриоритетНормы.Район
	|			И ДанныеДляРасчетаПередНормой.ЧастныйСектор = ПриоритетНормы.ЧастныйСектор
	|			И ДанныеДляРасчетаПередНормой.Строение = ПриоритетНормы.Строение
	|			И ДанныеДляРасчетаПередНормой.Помещение = ПриоритетНормы.Помещение
	|			И ДанныеДляРасчетаПередНормой.Услуга = ПриоритетНормы.Услуга
	|			И ДанныеДляРасчетаПередНормой.НачалоПериода = ПриоритетНормы.НачалоПериода
	|			И ДанныеДляРасчетаПередНормой.НаправлениеИспользованияТУ = ПриоритетНормы.НаправлениеИспользованияТУ
	|			И (НЕ ДанныеДляРасчетаПередНормой.РасчетПоФормуле)
	|			И (ВЫБОР
	|				КОГДА ПриоритетНормы.Приоритет = 1
	|					ТОГДА НЕ ДанныеДляРасчетаПередНормой.ТочкаУчетаРодитель = ЗНАЧЕНИЕ(Справочник.энргТочкиУчета.ПустаяСсылка)
	|							И (НЕ ДанныеДляРасчетаПередНормой.ПриборВведен
	|								ИЛИ НЕ ДанныеДляРасчетаПередНормой.ПоказанияВСрок)
	|				КОГДА ПриоритетНормы.Приоритет = 2
	|					ТОГДА ДанныеДляРасчетаПередНормой.ЗависимаяТочкаУчета <> ЗНАЧЕНИЕ(Справочник.энргТочкиУчета.ПустаяСсылка)
	|							И (НЕ ДанныеДляРасчетаПередНормой.ПриборВведен
	|								ИЛИ НЕ ДанныеДляРасчетаПередНормой.ПоказанияВСрок)
	|				КОГДА ПриоритетНормы.Приоритет = 3
	|					ТОГДА НЕ ДанныеДляРасчетаПередНормой.ПриборВведен
	|							ИЛИ НЕ ДанныеДляРасчетаПередНормой.ПоказанияВСрок
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДляРасчетаПередНормой.Организация,
	|	ДанныеДляРасчетаПередНормой.ПериодНачисления,
	|	ДанныеДляРасчетаПередНормой.Район,
	|	ДанныеДляРасчетаПередНормой.ЧастныйСектор,
	|	ДанныеДляРасчетаПередНормой.Строение,
	|	ДанныеДляРасчетаПередНормой.Помещение,
	|	ДанныеДляРасчетаПередНормой.Услуга,
	|	ДанныеДляРасчетаПередНормой.НаправлениеИспользованияТУ,
	|	ДанныеДляРасчетаПередНормой.НачалоПериода,
	|	ДанныеДляРасчетаПередНормой.КонецПериода
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	" + энргНачисления.СформироватьСтрокуДляЗапроса("энргСтабильныеПериоды","ДанныеДляРасчетаПередНормой","НомерПозиции,ПериодРегистрации,ДатаРегистратора,ДокРегистратор",Истина,Ложь) + "
	|	ДанныеДляРасчетаПередНормой.НачалоОП КАК НачалоОП,
	|	ДанныеДляРасчетаПередНормой.ЗавершениеОП КАК ЗавершениеОП,
	|	ДанныеДляРасчетаПередНормой.ДнейВПериоде КАК ДнейВПериоде,
	|	ДанныеДляРасчетаПередНормой.НеПрименятьЗависимостьЕслиБольшеОднойТочки КАК НеПрименятьЗависимостьЕслиБольшеОднойТочки,
	|	ДанныеДляРасчетаПередНормой.МКД КАК МКД,
	|	ДанныеДляРасчетаПередНормой.КоэффициентНорматива КАК КоэффициентНорматива,
	|	ДанныеДляРасчетаПередНормой.КоэффициентНормативаНеПрименятьСезонность КАК КоэффициентНормативаНеПрименятьСезонность,
	|	ДанныеДляРасчетаПередНормой.КорректироватьГодовойОбъем КАК КорректироватьГодовойОбъем,
	|	ДанныеДляРасчетаПередНормой.НеПрименятьСезонность КАК НеПрименятьСезонность,
	|	ДанныеДляРасчетаПередНормой.ОбъемЗаПрошлыйГод КАК ОбъемЗаПрошлыйГод,
	|	ДанныеДляРасчетаПередНормой.Сезонность КАК Сезонность,
	|	ДанныеДляРасчетаПередНормой.ВидПлощади КАК ВидПлощади,
	|	ДанныеДляРасчетаПередНормой.НормативПоДням КАК НормативПоДням,
	|	ДанныеДляРасчетаПередНормой.СпособОпределенияСоциальнойНормы КАК СпособОпределенияСоциальнойНормы,	
	|	ДанныеДляРасчетаПередНормой.СпособРасчетаНорматива КАК СпособРасчетаНорматива,
	|	ДанныеДляРасчетаПередНормой.СпособРасчетаСоциальногоНорматива КАК СпособРасчетаСоциальногоНорматива,	
	|	ДанныеДляРасчетаПередНормой.ЕстьПоказанияАбонента КАК ЕстьПоказанияАбонента,
	|	ДанныеДляРасчетаПередНормой.УмножатьНаНормуРодительскойУслуги КАК УмножатьНаНормуРодительскойУслуги,
	|	ДанныеДляРасчетаПередНормой.МаксимальноВозможныеПоказания КАК МаксимальноВозможныеПоказания,
	|	ДанныеДляРасчетаПередНормой.РегистрируетОбъем КАК РегистрируетОбъем,
	|	ДанныеДляРасчетаПередНормой.ФизЛицо КАК ФизЛицо,
	|	ДанныеДляРасчетаПередНормой.ОрганизацияПлательщика КАК ОрганизацияПлательщика,
	|	ДанныеДляРасчетаПередНормой.ТипСхемы КАК ТипСхемы,
	|	ДанныеДляРасчетаПередНормой.ВидТепловогоПункта КАК ВидТепловогоПункта,
	|	ДанныеДляРасчетаПередНормой.ПомещениеРодитель КАК ПомещениеРодитель,
	|	ДанныеДляРасчетаПередНормой.ИспользоватьКоэффициентСдерживанияРостаПлаты КАК ИспользоватьКоэффициентСдерживанияРостаПлаты,
	|	ДанныеДляРасчетаПередНормой.ПлощадьМОП КАК ПлощадьМОП,
	|	ДанныеДляРасчетаПередНормой.ПлощадьАбонентов КАК ПлощадьАбонентов,
	|	ДанныеДляРасчетаПередНормой.ПлощадьСобственнаяПоставка КАК ПлощадьСобственнаяПоставка,
	|	ДанныеДляРасчетаПередНормой.ДокументНачисления КАК ДокументНачисления,
	|	ДанныеДляРасчетаПередНормой.ДокументНачисленияПометкаУдаления КАК ДокументНачисленияПометкаУдаления,
	|	ДанныеДляРасчетаПередНормой.ВыводПрибораУчета КАК ВыводПрибораУчета,
	|	ДанныеДляРасчетаПередНормой.БылУстановленныйПриборВЭтомГоду КАК БылУстановленныйПриборВЭтомГоду,
	|	ДанныеДляРасчетаПередНормой.ЕстьЗаписьПриборВЭтомГоду КАК ЕстьЗаписьПриборВЭтомГоду,
	|	ДанныеДляРасчетаПередНормой.КлючПомещения КАК КлючПомещения,
	|	ДанныеДляРасчетаПередНормой.АбонентЗакрытВТекущемПериоде КАК АбонентЗакрытВТекущемПериоде,
	|	ДанныеДляРасчетаПередНормой.УвеличениеПозиции КАК УвеличениеПозиции,
	|	ДанныеДляРасчетаПередНормой.ВидДифференцированности КАК ВидДифференцированности,
	|	ДанныеДляРасчетаПередНормой.ПривязанаКШкале КАК ПривязанаКШкале,
	|	ДанныеДляРасчетаПередНормой.ЕстьПриборУчетаРодителя КАК ЕстьПриборУчетаРодителя,
	|	ДанныеДляРасчетаПередНормой.ТарифнаяЗона КАК ТарифнаяЗона,
	|	ВЫБОР
	|		КОГДА ДанныеДляРасчетаПередНормой.КоэффициентСезоности = 1
	|				И ДанныеДляРасчетаПередНормой.ДополнительныйКоэффициентСезоности = 0
	|				И ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.ЕстьСреднийПоВсемТочкамУслуги, ИСТИНА)
	|			ТОГДА 1
	|		ИНАЧЕ ДанныеДляРасчетаПередНормой.КоэффициентСезоности * ДанныеДляРасчетаПередНормой.ДополнительныйКоэффициентСезоности
	|	КОНЕЦ КАК КоэффициентСезоности,
	|	ВЫБОР
	|		КОГДА ДанныеДляРасчетаПередНормой.ДополнительныйКоэффициентСезоности = 0
	|				И ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.ЕстьСреднийПотребленныйПоВсемТочкамУслуги, ИСТИНА)
	|			ТОГДА 1
	|		ИНАЧЕ ДанныеДляРасчетаПередНормой.КоэффициентСезоностиОбъемПотребленный
	|	КОНЕЦ КАК КоэффициентСезоностиОбъемПотребленный,
	|	ДанныеДляРасчетаПередНормой.ПредыдущееЗначениеТарифа КАК ПредыдущееЗначениеТарифа,
	|	ДанныеДляРасчетаПередНормой.ПредыдущееЗначениеТарифаСверхНорматива КАК ПредыдущееЗначениеТарифаСверхНорматива,
	|	ДанныеДляРасчетаПередНормой.ПредыдущееЗначениеТарифаРЭК КАК ПредыдущееЗначениеТарифаРЭК,
	|	ДанныеДляРасчетаПередНормой.ПоказанияВСрок КАК ПоказанияВСрок,
	|	ДанныеДляРасчетаПередНормой.ПоказанияПредоставлены КАК ПоказанияПредоставлены,
	|	ДанныеДляРасчетаПередНормой.СреднийОбъем КАК СреднийОбъем,
	|	ДанныеДляРасчетаПередНормой.СреднийОбъемПотребленный КАК СреднийОбъемПотребленный,
	|	ДанныеДляРасчетаПередНормой.СреднийОбъемЗависитОтУслуги КАК СреднийОбъемЗависитОтУслуги,
	|	ДанныеДляРасчетаПередНормой.СреднийОбъемПотребленныйЗависитОтУслуги КАК СреднийОбъемПотребленныйЗависитОтУслуги,
	|	ДанныеДляРасчетаПередНормой.НачалоПериода КАК НачалоПериода,
	|	ДанныеДляРасчетаПередНормой.КонецПериода КАК КонецПериода,
	|	ДанныеДляРасчетаПередНормой.НачальныеПоказания КАК НачальныеПоказания,
	|	ДанныеДляРасчетаПередНормой.КонечныеПоказания КАК КонечныеПоказания,
	|	ДанныеДляРасчетаПередНормой.СледующийРегистратор КАК СледующийРегистратор,
	|	ДанныеДляРасчетаПередНормой.ДополнительныйКоэффициентСезоности КАК ДополнительныйКоэффициентСезоности,
	|	ДанныеДляРасчетаПередНормой.Измеритель КАК Измеритель,
	|	ДанныеДляРасчетаПередНормой.КоличествоИзмеретелейНаправления КАК КоличествоИзмеретелейНаправления,
	|	ДанныеДляРасчетаПередНормой.ЕстьИзмерителиНаправления КАК ЕстьИзмерителиНаправления,
	|	ЕСТЬNULL(ЗначенияТекущихТарифов.Значение, 0) КАК ЗначениеТарифа,
	|	ЕСТЬNULL(ЗначенияТекущихТарифовБезРазбивки.Значение, 0) КАК ЗначениеТарифаБезРазбивки,
	|	ЕСТЬNULL(ЗначенияТекущихТарифов.ЗначениеСверхНорматива, 0) КАК ЗначениеТарифаСверхНорматива,
	|	ЕСТЬNULL(ЗначенияТекущихТарифов.ЗначениеРЭК, 0) КАК ЗначениеТарифаРЭК,
	|	ЕСТЬNULL(НастройкаНачисленияГВСМКД.НеНачислять, ЕСТЬNULL(НастройкаНачисленияГВС.НеНачислять, ЛОЖЬ)) КАК ЗакрытаяСхемаГВС,
	|	ВЫБОР
	|		КОГДА ДанныеДляРасчетаПередНормой.НетВозможностьУстановкиПУ
	|			ТОГДА 1
	|		ИНАЧЕ ЕСТЬNULL(ЗначенияПовышающихКоэффициентов.Коэффициент, -1)
	|	КОНЕЦ КАК ПовышающийКоэффициент,
	|	ВЫБОР
	|		КОГДА ДанныеДляРасчетаПередНормой.РасчетПоФормуле
	|			ТОГДА ИСТИНА
	|		КОГДА НЕ ТочкиУчетаРодители.Организация ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		КОГДА НЕ РодительскиеТочкиУчета.Организация ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		КОГДА НЕ ВЫБОР
	|					КОГДА ДанныеДляРасчетаПередНормой.НеПрименятьЗависимостьЕслиБольшеОднойТочки
	|							И ЕСТЬNULL(ПриоритетНормы.КоличествоТочекУчета, 0) >= 1
	|							И НЕ ДанныеДляРасчетаПередНормой.ЗависитОтУслуги = ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|							И НЕ ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.ЕстьСреднийПоВсемТочкамУслугиЗависитОтУслуги, ИСТИНА)
	|							И НЕ РодительскиеТочкиУчета.Организация ЕСТЬ NULL
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|					КОГДА ДанныеДляРасчетаПередНормой.НеПрименятьЗависимостьЕслиБольшеОднойТочки
	|							И ЕСТЬNULL(ПриоритетНормы.КоличествоТочекУчета, 0) >= 1
	|							И ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.ЕстьСреднийПоВсемТочкамУслуги, ИСТИНА)
	|						ТОГДА НЕОПРЕДЕЛЕНО
	|					КОГДА ЕСТЬNULL(ПриоритетНормы.КоличествоТочекУчета, 0) > 1
	|							И ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.ЕстьСреднийПоВсемТочкамУслуги, ИСТИНА)
	|							И ДанныеДляРасчетаПередНормой.ПриборВведен
	|						ТОГДА НЕОПРЕДЕЛЕНО
	|					КОГДА ЕСТЬNULL(ПриоритетНормы.КоличествоТочекУчета, 0) > 1
	|							И НЕ ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.ЕстьСреднийПоВсемТочкамУслуги, ИСТИНА)
	|							И ДанныеДляРасчетаПередНормой.ПриборВведен
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|					КОГДА НЕ ДанныеДляРасчетаПередНормой.ТочкаУчета = ЕСТЬNULL(ТочкиНачисленияНормы.ТочкаУчета,ЗНАЧЕНИЕ(Справочник.энргТочкиУчета.ПустаяСсылка))
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|					ИНАЧЕ ДанныеДляРасчетаПередНормой.ЗависитОтУслуги
	|				КОНЕЦ = ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		КОГДА ДанныеДляРасчетаПередНормой.КоэффициентФормула = 1
	|			ТОГДА ИСТИНА
	|		КОГДА ДанныеДляРасчетаПередНормой.ТочкаУчета = ЕСТЬNULL(ТочкиНачисленияНормы.ТочкаУчета,ЗНАЧЕНИЕ(Справочник.энргТочкиУчета.ПустаяСсылка))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НачислятьНорму,		
	|	НЕ ПоставщикиНеНачислять.Поставщик ЕСТЬ NULL КАК УдалитьЗапись,
	|	ВЫБОР
	|		КОГДА ДанныеДляРасчетаПередНормой.НеПрименятьЗависимостьЕслиБольшеОднойТочки
	|				И ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.ЕстьСреднийПоВсемТочкамУслугиЗависитОтУслуги, ИСТИНА)
	|			ТОГДА ДанныеДляРасчетаПередНормой.ЗависитОтУслуги
	|		КОГДА ДанныеДляРасчетаПередНормой.НеПрименятьЗависимостьЕслиБольшеОднойТочки
	|				И ЕСТЬNULL(ПриоритетНормы.КоличествоТочекУчета, 0) >= 1
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|		ИНАЧЕ ДанныеДляРасчетаПередНормой.ЗависитОтУслуги
	|	КОНЕЦ КАК ЗависитОтУслуги,
	|	ВЫБОР
	|		КОГДА НЕ ДанныеДляРасчетаПередНормой.ЗависитОтУслуги = ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|				И ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.ЕстьСреднийПоВсемТочкамУслугиЗависитОтУслуги, ИСТИНА)
	|			ТОГДА ИСТИНА
	|		КОГДА ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.ЕстьСреднийПоВсемТочкамУслуги, ИСТИНА)
	|			ТОГДА ИСТИНА
	|		КОГДА ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.КоличествоТочекУчета, 0) = 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НачислятьПоПрибору,
	|	ВЫБОР
	|		КОГДА НЕ ДанныеДляРасчетаПередНормой.ЗависитОтУслуги = ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|				И ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.ЕстьСреднийПотребленныйПоВсемТочкамУслугиЗависитОтУслуги, ИСТИНА)
	|			ТОГДА ИСТИНА
	|		КОГДА ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.ЕстьСреднийПотребленныйПоВсемТочкамУслуги, ИСТИНА)
	|			ТОГДА ИСТИНА
	|		КОГДА ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.КоличествоТочекУчета, 0) = 0
	|			ТОГДА ИСТИНА
	|		КОГДА ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.ПоказанияВСрок, ИСТИНА)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НачислятьПоПриборуПотребленный,
	|	ЕСТЬNULL(НормаСкоростиДвиженияВоды.СкоростьДвижения, 0) КАК СкоростьДвижения,
	|	ЕСТЬNULL(ДеньНачалаНачисленияПоСреднему.МожноНачислятьСреднее, Истина) КАК МожноНачислятьСреднее,
	|	ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.ЕстьСреднийПоВсемТочкамУслуги, ИСТИНА) КАК ЕстьСреднийПоВсемТочкамУслуги,
	|	ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.ЕстьСреднийПотребленныйПоВсемТочкамУслуги, ИСТИНА) КАК ЕстьСреднийПотребленныйПоВсемТочкамУслуги,
	|	ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.ЕстьСреднийПоВсемТочкамУслугиЗависитОтУслуги, ИСТИНА) КАК ЕстьСреднийПоВсемТочкамУслугиЗависитОтУслуги,
	|	ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.ЕстьСреднийПотребленныйПоВсемТочкамУслугиЗависитОтУслуги, ИСТИНА) КАК ЕстьСреднийПотребленныйПоВсемТочкамУслугиЗависитОтУслуги,
	|	ЕСТЬNULL(ЗначенияТекущихНормПотребления.ЗначениеНорматива, 0) КАК НормаПотребления,
	|	ЕСТЬNULL(ЗначенияТекущихСоциальныхНормПотребления.ЗначениеНорматива, 0) КАК СоциальнаяНормаПотребления,
	|	ЕСТЬNULL(НастройкиРасчетаСреднегоПотребления.НачислятьСреднийОбъемНеБолееМесяцев, 0) КАК НачислятьСреднийОбъемНеБолееМесяцев,
	|	ЕСТЬNULL(НастройкиРасчетаСреднегоПотребления.НачислятьСреднийОбъемНеБолееМесяцевОбъемПотребленный, 0) КАК НачислятьСреднийОбъемНеБолееМесяцевОбъемПотребленный,
	|	ДанныеДляРасчетаПередНормой.КоэффициентСезоности * ВЫБОР
	|		КОГДА ДанныеДляРасчетаПередНормой.НеПрименятьСезонность
	|			ТОГДА ДанныеДляРасчетаПередНормой.КоэффициентНормативаНеПрименятьСезонность
	|		ИНАЧЕ ДанныеДляРасчетаПередНормой.КоэффициентНорматива
	|	КОНЕЦ * ДанныеДляРасчетаПередНормой.ДополнительныйКоэффициентСезоности КАК КоэффициентНормативаИСезонности,
	|	ДанныеДляРасчетаПередНормой.УслНаДатуПоверки КАК УслНаДатуПоверки,
	|	ВЫБОР
	|		КОГДА ДанныеДляРасчетаПередНормой.НеПрименятьЗависимостьЕслиБольшеОднойТочки
	|				И ЕСТЬNULL(ПриоритетНормы.КоличествоТочекУчета, 0) >= 1
	|				И НЕ ДанныеДляРасчетаПередНормой.ЗависитОтУслуги = ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|				И НЕ ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.ЕстьСреднийПоВсемТочкамУслугиЗависитОтУслуги, ИСТИНА)
	|				И НЕ РодительскиеТочкиУчета.Организация ЕСТЬ NULL
	|			ТОГДА 0
	|		КОГДА ДанныеДляРасчетаПередНормой.НеПрименятьЗависимостьЕслиБольшеОднойТочки
	|				И ЕСТЬNULL(ПриоритетНормы.КоличествоТочекУчета, 0) >= 1
	|				И ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.ЕстьСреднийПоВсемТочкамУслуги, ИСТИНА)
	|			ТОГДА 1
	|		КОГДА ЕСТЬNULL(ПриоритетНормы.КоличествоТочекУчета, 0) > 1
	|				И ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.ЕстьСреднийПоВсемТочкамУслуги, ИСТИНА)
	|				И ДанныеДляРасчетаПередНормой.ПриборВведен
	|			ТОГДА 2
	|		КОГДА ЕСТЬNULL(ПриоритетНормы.КоличествоТочекУчета, 0) > 1
	|				И НЕ ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.ЕстьСреднийПоВсемТочкамУслуги, ИСТИНА)
	|				И ДанныеДляРасчетаПередНормой.ПриборВведен
	|			ТОГДА 3
	|		ИНАЧЕ 4
	|	КОНЕЦ КАК УсловиеНачислятьНорму
	|	,ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ПериодНачисленияВыводаПрибора,МЕСЯЦ),МЕСЯЦ,НачислятьСреднийОбъемНеБолееМесяцев) КАК НачислятьСреднийОбъемДо
	|	,ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ПериодНачисленияВыводаПрибора,МЕСЯЦ),МЕСЯЦ,НачислятьСреднийОбъемНеБолееМесяцевОбъемПотребленный) КАК НачислятьСреднийПотребленныйОбъемДо
	|	,ЕСТЬNULL(ДниИспользованияУслугПриОтсутствии.Количество, -1) КАК ДниИспользованияУслугПриОтсутствии
	|	,ВЫБОР
	|		КОГДА ДанныеДляРасчетаПередНормой.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		КОГДА ДанныеДляРасчетаПередНормой.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.СоциальнаяНормаРавнаНормативуПотребления)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА НЕ ДанныеДляРасчетаПередНормой.ЗначениеПлощади = 0
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|			 КОНЕЦ		
	|	КОНЕЦ КАК РассчитыватьСоцНормуПоСтроке,
	|	ЕСТЬNULL(ПроцентВетхостиСтроений.Процент, -1) КАК ПроцентВетхости,
	|	ПРЕДСТАВЛЕНИЕ(ДанныеДляРасчетаПередНормой.Строение) КАК СтроениеПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ДанныеДляРасчетаПередНормой.Помещение) КАК ПомещениеПредставление
	|ПОМЕСТИТЬ ДанныеДляРасчета
	|ИЗ
	|	ДанныеДляРасчетаПередНормойИзмерители КАК ДанныеДляРасчетаПередНормой
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТочкиНачисленияНормы КАК ТочкиНачисленияНормы
	|		ПО ДанныеДляРасчетаПередНормой.Организация = ТочкиНачисленияНормы.Организация
	|			И ДанныеДляРасчетаПередНормой.ПериодНачисления = ТочкиНачисленияНормы.ПериодНачисления
	|			И ДанныеДляРасчетаПередНормой.Район = ТочкиНачисленияНормы.Район
	|			И ДанныеДляРасчетаПередНормой.ЧастныйСектор = ТочкиНачисленияНормы.ЧастныйСектор
	|			И ДанныеДляРасчетаПередНормой.Строение = ТочкиНачисленияНормы.Строение
	|			И ДанныеДляРасчетаПередНормой.Помещение = ТочкиНачисленияНормы.Помещение
	|			И ДанныеДляРасчетаПередНормой.Услуга = ТочкиНачисленияНормы.Услуга
	|			И ДанныеДляРасчетаПередНормой.ТочкаУчета = ТочкиНачисленияНормы.ТочкаУчета
	|			И ДанныеДляРасчетаПередНормой.ТарифнаяЗона = ТочкиНачисленияНормы.ТарифнаяЗона
	|			И ДанныеДляРасчетаПередНормой.НаправлениеИспользованияТУ = ТочкиНачисленияНормы.НаправлениеИспользованияТУ
	|			И ДанныеДляРасчетаПередНормой.НачалоПериода = ТочкиНачисленияНормы.НачалоПериода
	|			И ДанныеДляРасчетаПередНормой.КонецПериода = ТочкиНачисленияНормы.КонецПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПриоритетНормы КАК ПриоритетНормы
	|		ПО ДанныеДляРасчетаПередНормой.Организация = ПриоритетНормы.Организация
	|			И ДанныеДляРасчетаПередНормой.ПериодНачисления = ПриоритетНормы.ПериодНачисления
	|			И ДанныеДляРасчетаПередНормой.Район = ПриоритетНормы.Район
	|			И ДанныеДляРасчетаПередНормой.ЧастныйСектор = ПриоритетНормы.ЧастныйСектор
	|			И ДанныеДляРасчетаПередНормой.Строение = ПриоритетНормы.Строение
	|			И ДанныеДляРасчетаПередНормой.Помещение = ПриоритетНормы.Помещение
	|			И ДанныеДляРасчетаПередНормой.Услуга = ПриоритетНормы.Услуга
	|			И ДанныеДляРасчетаПередНормой.НаправлениеИспользованияТУ = ПриоритетНормы.НаправлениеИспользованияТУ
	|			И ДанныеДляРасчетаПередНормой.НачалоПериода = ПриоритетНормы.НачалоПериода
	|			И ДанныеДляРасчетаПередНормой.КонецПериода = ПриоритетНормы.КонецПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ УслугиРодительскихТочекБезПоказаний КАК УслугиРодительскихТочекБезПоказаний
	|		ПО ДанныеДляРасчетаПередНормой.Организация = УслугиРодительскихТочекБезПоказаний.Организация
	|			И ДанныеДляРасчетаПередНормой.ПериодНачисления = УслугиРодительскихТочекБезПоказаний.ПериодНачисления
	|			И ДанныеДляРасчетаПередНормой.Район = УслугиРодительскихТочекБезПоказаний.Район
	|			И ДанныеДляРасчетаПередНормой.ЧастныйСектор = УслугиРодительскихТочекБезПоказаний.ЧастныйСектор
	|			И ДанныеДляРасчетаПередНормой.Строение = УслугиРодительскихТочекБезПоказаний.Строение
	|			И ДанныеДляРасчетаПередНормой.Помещение = УслугиРодительскихТочекБезПоказаний.Помещение
	|			И ДанныеДляРасчетаПередНормой.Услуга = УслугиРодительскихТочекБезПоказаний.Услуга
	|			И ДанныеДляРасчетаПередНормой.НаправлениеИспользованияТУ = УслугиРодительскихТочекБезПоказаний.НаправлениеИспользованияТУ
	|			И ДанныеДляРасчетаПередНормой.ТочкаУчетаРодитель = УслугиРодительскихТочекБезПоказаний.ТочкаУчетаРодитель
	|			И ДанныеДляРасчетаПередНормой.НачалоПериода = УслугиРодительскихТочекБезПоказаний.НачалоПериода
	|			И ДанныеДляРасчетаПередНормой.КонецПериода = УслугиРодительскихТочекБезПоказаний.КонецПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ НаличиеСреднегоОбъемаПоРодительскимТочкам КАК НаличиеСреднегоОбъемаПоРодительскимТочкам
	|		ПО ДанныеДляРасчетаПередНормой.Организация = НаличиеСреднегоОбъемаПоРодительскимТочкам.Организация
	|			И ДанныеДляРасчетаПередНормой.ПериодНачисления = НаличиеСреднегоОбъемаПоРодительскимТочкам.ПериодНачисления
	|			И ДанныеДляРасчетаПередНормой.Район = НаличиеСреднегоОбъемаПоРодительскимТочкам.Район
	|			И ДанныеДляРасчетаПередНормой.ЧастныйСектор = НаличиеСреднегоОбъемаПоРодительскимТочкам.ЧастныйСектор
	|			И ДанныеДляРасчетаПередНормой.Строение = НаличиеСреднегоОбъемаПоРодительскимТочкам.Строение
	|			И ДанныеДляРасчетаПередНормой.Помещение = НаличиеСреднегоОбъемаПоРодительскимТочкам.Помещение
	|			И ДанныеДляРасчетаПередНормой.Услуга = НаличиеСреднегоОбъемаПоРодительскимТочкам.Услуга
	|			И ДанныеДляРасчетаПередНормой.НаправлениеИспользованияТУ = НаличиеСреднегоОбъемаПоРодительскимТочкам.НаправлениеИспользованияТУ
	|			И ДанныеДляРасчетаПередНормой.ТочкаУчетаРодитель = НаличиеСреднегоОбъемаПоРодительскимТочкам.ТочкаУчетаРодитель
	|			И ДанныеДляРасчетаПередНормой.НачалоПериода = НаличиеСреднегоОбъемаПоРодительскимТочкам.НачалоПериода
	|			И ДанныеДляРасчетаПередНормой.КонецПериода = НаличиеСреднегоОбъемаПоРодительскимТочкам.КонецПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ РодительскиеТочкиУчета КАК РодительскиеТочкиУчета
	|		ПО ДанныеДляРасчетаПередНормой.Организация = РодительскиеТочкиУчета.Организация
	|			И ДанныеДляРасчетаПередНормой.ПериодНачисления = РодительскиеТочкиУчета.ПериодНачисления
	|			И ДанныеДляРасчетаПередНормой.Район = РодительскиеТочкиУчета.Район
	|			И ДанныеДляРасчетаПередНормой.ЧастныйСектор = РодительскиеТочкиУчета.ЧастныйСектор
	|			И ДанныеДляРасчетаПередНормой.Строение = РодительскиеТочкиУчета.Строение
	|			И ДанныеДляРасчетаПередНормой.Помещение = РодительскиеТочкиУчета.Помещение
	|			И ДанныеДляРасчетаПередНормой.ТочкаУчетаРодитель = РодительскиеТочкиУчета.ТочкаУчета
	|			И ДанныеДляРасчетаПередНормой.НачалоПериода = РодительскиеТочкиУчета.НачалоПериода
	|			И ДанныеДляРасчетаПередНормой.КонецПериода = РодительскиеТочкиУчета.КонецПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ РодительскиеТочкиУчета КАК ТочкиУчетаРодители
	|		ПО ДанныеДляРасчетаПередНормой.Организация = ТочкиУчетаРодители.Организация
	|			И ДанныеДляРасчетаПередНормой.ПериодНачисления = ТочкиУчетаРодители.ПериодНачисления
	|			И ДанныеДляРасчетаПередНормой.Район = ТочкиУчетаРодители.Район
	|			И ДанныеДляРасчетаПередНормой.ЧастныйСектор = ТочкиУчетаРодители.ЧастныйСектор
	|			И ДанныеДляРасчетаПередНормой.Строение = ТочкиУчетаРодители.Строение
	|			И ДанныеДляРасчетаПередНормой.Помещение = ТочкиУчетаРодители.Помещение
	|			И ДанныеДляРасчетаПередНормой.ТочкаУчета = ТочкиУчетаРодители.ТочкаУчета
	|			И ДанныеДляРасчетаПередНормой.НачалоПериода = ТочкиУчетаРодители.НачалоПериода
	|			И ДанныеДляРасчетаПередНормой.КонецПериода = ТочкиУчетаРодители.КонецПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗначенияТекущихТарифов КАК ЗначенияТекущихТарифов
	|		ПО ДанныеДляРасчетаПередНормой.Организация = ЗначенияТекущихТарифов.Организация
	|			И ДанныеДляРасчетаПередНормой.Район = ЗначенияТекущихТарифов.Район
	|			И ДанныеДляРасчетаПередНормой.ПериодНачисления = ЗначенияТекущихТарифов.ПериодНачисления
	|			И ДанныеДляРасчетаПередНормой.ТарифнаяГруппа = ЗначенияТекущихТарифов.ГруппаПотребителей
	|			И ДанныеДляРасчетаПередНормой.Услуга = ЗначенияТекущихТарифов.Услуга
	|			И ДанныеДляРасчетаПередНормой.Поставщик = ЗначенияТекущихТарифов.Поставщик
	|			И ДанныеДляРасчетаПередНормой.ТарифнаяЗона = ЗначенияТекущихТарифов.ТарифнаяЗона 	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗначенияТекущихТарифов КАК ЗначенияТекущихТарифовБезРазбивки
	|		ПО ДанныеДляРасчетаПередНормой.Организация = ЗначенияТекущихТарифовБезРазбивки.Организация
	|			И ДанныеДляРасчетаПередНормой.Район = ЗначенияТекущихТарифовБезРазбивки.Район
	|			И ДанныеДляРасчетаПередНормой.ПериодНачисления = ЗначенияТекущихТарифовБезРазбивки.ПериодНачисления
	|			И ДанныеДляРасчетаПередНормой.ТарифнаяГруппа = ЗначенияТекущихТарифовБезРазбивки.ГруппаПотребителей
	|			И ДанныеДляРасчетаПередНормой.Услуга = ЗначенияТекущихТарифовБезРазбивки.Услуга
	|			И ДанныеДляРасчетаПередНормой.Поставщик = ЗначенияТекущихТарифовБезРазбивки.Поставщик
	|			И  ЗначенияТекущихТарифовБезРазбивки.ТарифнаяЗона = ЗНАЧЕНИЕ(Справочник.энргТарифныеЗоны.БезРазбивки)	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗначенияТекущихНормПотребления КАК ЗначенияТекущихНормПотребления
	|		ПО ДанныеДляРасчетаПередНормой.Организация = ЗначенияТекущихНормПотребления.Организация
	|			И ДанныеДляРасчетаПередНормой.Район = ЗначенияТекущихНормПотребления.Район
	|			И ДанныеДляРасчетаПередНормой.ПериодНачисления = ЗначенияТекущихНормПотребления.ПериодНачисления
	|			И ДанныеДляРасчетаПередНормой.Услуга = ЗначенияТекущихНормПотребления.Услуга
	|			И ДанныеДляРасчетаПередНормой.КлючНорматива = ЗначенияТекущихНормПотребления.КлючНорматива
	|			И ДанныеДляРасчетаПередНормой.НаправлениеИспользованияТУ = ЗначенияТекущихНормПотребления.НаправлениеИспользованияТУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗначенияТекущихСоциальныхНормПотребления КАК ЗначенияТекущихСоциальныхНормПотребления
	|		ПО ДанныеДляРасчетаПередНормой.Организация = ЗначенияТекущихСоциальныхНормПотребления.Организация
	|			И ДанныеДляРасчетаПередНормой.Район = ЗначенияТекущихСоциальныхНормПотребления.Район
	|			И ДанныеДляРасчетаПередНормой.ПериодНачисления = ЗначенияТекущихСоциальныхНормПотребления.ПериодНачисления
	|			И ДанныеДляРасчетаПередНормой.Услуга = ЗначенияТекущихСоциальныхНормПотребления.Услуга
	|			И ДанныеДляРасчетаПередНормой.КлючСоцНорматива = ЗначенияТекущихСоциальныхНормПотребления.КлючНорматива
	|			И ДанныеДляРасчетаПередНормой.НаправлениеИспользованияТУ = ЗначенияТекущихСоциальныхНормПотребления.НаправлениеИспользованияТУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗначенияПовышающихКоэффициентов КАК ЗначенияПовышающихКоэффициентов
	|		ПО ДанныеДляРасчетаПередНормой.Организация = ЗначенияПовышающихКоэффициентов.Организация
	|			И ДанныеДляРасчетаПередНормой.Район = ЗначенияПовышающихКоэффициентов.Район
	|			И ДанныеДляРасчетаПередНормой.ПериодНачисления = ЗначенияПовышающихКоэффициентов.ПериодНачисления
	|			И ДанныеДляРасчетаПередНормой.Услуга = ЗначенияПовышающихКоэффициентов.Услуга
	|			И ДанныеДляРасчетаПередНормой.НаправлениеИспользованияТУ = ЗначенияПовышающихКоэффициентов.НаправлениеИспользованияТУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ НастройкаНачисленияГВСМКД КАК НастройкаНачисленияГВС
	|		ПО ДанныеДляРасчетаПередНормой.Организация = НастройкаНачисленияГВС.Организация
	|			И ДанныеДляРасчетаПередНормой.Район = НастройкаНачисленияГВС.Район
	|			И ДанныеДляРасчетаПередНормой.Услуга = НастройкаНачисленияГВС.Услуга
	|			И (ЗНАЧЕНИЕ(Справочник.энргСтроения.ПустаяСсылка) = НастройкаНачисленияГВС.МКД)
	|			И ДанныеДляРасчетаПередНормой.ТипСхемы = НастройкаНачисленияГВС.ТипСхемы
	|			И ДанныеДляРасчетаПередНормой.ВидТепловогоПункта = НастройкаНачисленияГВС.ПринадлежностьКТепловомуПункту
	|		ЛЕВОЕ СОЕДИНЕНИЕ НастройкаНачисленияГВСМКД КАК НастройкаНачисленияГВСМКД
	|		ПО ДанныеДляРасчетаПередНормой.Организация = НастройкаНачисленияГВСМКД.Организация
	|			И ДанныеДляРасчетаПередНормой.Район = НастройкаНачисленияГВСМКД.Район
	|			И ДанныеДляРасчетаПередНормой.Услуга = НастройкаНачисленияГВСМКД.Услуга
	|			И ДанныеДляРасчетаПередНормой.МКД = НастройкаНачисленияГВСМКД.МКД
	|			И ДанныеДляРасчетаПередНормой.ТипСхемы = НастройкаНачисленияГВСМКД.ТипСхемы
	|			И ДанныеДляРасчетаПередНормой.ВидТепловогоПункта = НастройкаНачисленияГВСМКД.ПринадлежностьКТепловомуПункту
	|			И ДанныеДляРасчетаПередНормой.МКД = НастройкаНачисленияГВСМКД.МКД
	|		ЛЕВОЕ СОЕДИНЕНИЕ НормаСкоростиДвиженияВоды КАК НормаСкоростиДвиженияВоды
	|		ПО ДанныеДляРасчетаПередНормой.Организация = НормаСкоростиДвиженияВоды.Организация
	|			И ДанныеДляРасчетаПередНормой.ПериодНачисления = НормаСкоростиДвиженияВоды.ПериодНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДеньНачалаНачисленияПоСреднему КАК ДеньНачалаНачисленияПоСреднему
	|		ПО ДанныеДляРасчетаПередНормой.Организация = ДеньНачалаНачисленияПоСреднему.Организация
	|			И ДанныеДляРасчетаПередНормой.ПериодНачисления = ДеньНачалаНачисленияПоСреднему.ПериодНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоставщикиНеНачислять КАК ПоставщикиНеНачислять
	|		ПО ДанныеДляРасчетаПередНормой.Организация = ПоставщикиНеНачислять.Организация
	|			И ДанныеДляРасчетаПередНормой.ПериодНачисления = ПоставщикиНеНачислять.ПериодНачисления
	|			И ДанныеДляРасчетаПередНормой.Район = ПоставщикиНеНачислять.Район
	|			И ДанныеДляРасчетаПередНормой.Поставщик = ПоставщикиНеНачислять.Поставщик
	|		ЛЕВОЕ СОЕДИНЕНИЕ НастройкиРасчетаСреднегоПотребления КАК НастройкиРасчетаСреднегоПотребления
	|		ПО ДанныеДляРасчетаПередНормой.Организация = НастройкиРасчетаСреднегоПотребления.Организация
	|			И ДанныеДляРасчетаПередНормой.ПериодНачисления = НастройкиРасчетаСреднегоПотребления.ПериодНачисления
	|			И ДанныеДляРасчетаПередНормой.Район = НастройкиРасчетаСреднегоПотребления.Район
	|			И ДанныеДляРасчетаПередНормой.Услуга = НастройкиРасчетаСреднегоПотребления.Услуга
	|			И ДанныеДляРасчетаПередНормой.НаправлениеИспользованияТУ = НастройкиРасчетаСреднегоПотребления.НаправлениеИспользованияТУ	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДниИспользованияУслугПриОтсутствии КАК ДниИспользованияУслугПриОтсутствии
	|		ПО  ДанныеДляРасчетаПередНормой.ПериодНачисления = ДниИспользованияУслугПриОтсутствии.ПериодНачисления	
	|			И ДанныеДляРасчетаПередНормой.Организация = ДниИспользованияУслугПриОтсутствии.Организация
	|			И ДанныеДляРасчетаПередНормой.Район = ДниИспользованияУслугПриОтсутствии.Район
	|			И ДанныеДляРасчетаПередНормой.ЧастныйСектор = ДниИспользованияУслугПриОтсутствии.ЧастныйСектор
	|			И ДанныеДляРасчетаПередНормой.Строение = ДниИспользованияУслугПриОтсутствии.Строение
	|			И ДанныеДляРасчетаПередНормой.Помещение = ДниИспользованияУслугПриОтсутствии.Помещение	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПроцентВетхостиСтроений КАК ПроцентВетхостиСтроений
	|		ПО  ДанныеДляРасчетаПередНормой.Организация = ПроцентВетхостиСтроений.Организация
	|			И ДанныеДляРасчетаПередНормой.ПериодНачисления = ПроцентВетхостиСтроений.ПериодНачисления
	|			И ДанныеДляРасчетаПередНормой.Район = ПроцентВетхостиСтроений.Район
	|			И ДанныеДляРасчетаПередНормой.ЧастныйСектор = ПроцентВетхостиСтроений.ЧастныйСектор
	|			И ДанныеДляРасчетаПередНормой.Строение = ПроцентВетхостиСтроений.Строение";
	
	Возврат Текст;
КонецФункции

#Область НачисленияПоПриборам

Процедура ДобавитьРасчетОбъемаУслугиПоПриборам(Схема,ВыбираемыеПоля, ВычисляемыеПоля, МВТ, ТаблицаДанныеДляРасчета)
		
	ПереопределяемыеПоля 	= Новый Структура;
	ПереопределяемыеПоля.Вставить("ОбъемУслуги", 				"__РасходПоПоказаниям__");
	ПереопределяемыеПоля.Вставить("ОбъемУслугиПотребленный",	"0");
	ПереопределяемыеПоля.Вставить("ЗначениеТарифа", 			"__ЗначениеТарифаПоПриборам__");
	ПереопределяемыеПоля.Вставить("ЗначениеТарифаРЭК", 			"__ЗначениеТарифаРЭКПоПриборам__");
	ПереопределяемыеПоля.Вставить("Сумма", 						"__РасходПоПоказаниям__ * __ЗначениеТарифаПоПриборам__");
	ПереопределяемыеПоля.Вставить("ПовыщающийКоэффициент", 		"1");
	ПереопределяемыеПоля.Вставить("СниматьНачисленныйСредний", 	"НЕ НачислятьПоПрибору");
	ПереопределяемыеПоля.Вставить("СпособНачисления", 			"ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.ПоПриборам)");	
	ПереопределяемыеПоля.Вставить("ЗначениеСоциальнойНормы", 
	"ВЫБОР
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.ПустаяСсылка)
	|			ТОГДА -1
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.СоциальнаяНормаРавнаНормативуПотребления)
	|			ТОГДА __ОбъемУслугиПоНорме__
	|		ИНАЧЕ ВЫБОР
	|				КОГДА НЕ Псевдоним.ЗначениеПлощади = 0
	|					ТОГДА __РасходПоПоказаниям__ * ( __КоличествоЧеловек__ *  Псевдоним.СоциальнаяНормаПотребления + Псевдоним.ДопСоциальнаяНормаПотребления) / Псевдоним.ЗначениеПлощади
	|				ИНАЧЕ 0
	|			 КОНЕЦ		
	|КОНЕЦ");	
	ПереопределяемыеПоля.Вставить("ЗначениеСоциальнойНормыРасчетныйСпособ",
	"ВЫБОР
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.ПустаяСсылка)
	|			ТОГДА __ОбъемУслугиПоНорме__ * __ДлительностьПериодаПоНормативу__ * ВЫБОР
	|					КОГДА Псевдоним.НормативПоДням
	|							И НЕ Псевдоним.НеПрименятьСезонность
	|						ТОГДА Псевдоним.ДнейВПериоде
	|					ИНАЧЕ 1 
	|				КОНЕЦ
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.СоциальнаяНормаРавнаНормативуПотребления)
	|			ТОГДА __ОбъемУслугиПоНорме__* ВЫБОР
	|					КОГДА Псевдоним.НормативПоДням
	|							И НЕ Псевдоним.НеПрименятьСезонность
	|						ТОГДА Псевдоним.ДнейВПериоде
	|					ИНАЧЕ 1 
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА НЕ Псевдоним.ЗначениеПлощади = 0
	|					ТОГДА __РасходПоПоказаниям__ * (__КоличествоЧеловек__ * Псевдоним.СоциальнаяНормаПотребления + Псевдоним.ДопСоциальнаяНормаПотребления) / Псевдоним.ЗначениеПлощади
	|				ИНАЧЕ 0
	|			 КОНЕЦ
	|	КОНЕЦ");         	
	
	ПереопределяемыеПоля.Вставить("ОбъемУслугиПотери",				"__РасходПоПоказаниям__ * (Псевдоним.ПотериПроцент / 100) + Псевдоним.ПотериОбъем");
	ПереопределяемыеПоля.Вставить("ОбъемУслугиПотребленныйПотери",	"0");
	
	ПодставитьВычисляемыПоля(Схема, МВТ, ТаблицаДанныеДляРасчета, ВыбираемыеПоля, ВычисляемыеПоля, ПереопределяемыеПоля);
	
	Условия = Новый Массив;
	Условия.Добавить("ПриборВведен");
	Условия.Добавить("ЕстьПоказанияАбонента");
	Условия.Добавить("НЕ ОбъемЗаПрошлыйГод");
	Условия.Добавить("НЕ СпособРаспределенияОбъемаПомещения = ЗНАЧЕНИЕ(Перечисление.энргСпособыРаспределенияОбъема.ФиксированныйОбъем)");
	Условия.Добавить(
	"ВЫБОР
	|	КОГДА АбонентЗакрытВТекущемПериоде 
	|		ТОГДА ИСТИНА
	|	КОГДА РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ДанныеДляРасчета.НачалоПериода, ДЕНЬ), НАЧАЛОПЕРИОДА(ДанныеДляРасчета.КонецПериода, ДЕНЬ), ДЕНЬ) = 0					
	|		ТОГДА __РасходПоПоказаниям__ > 0
	|	ИНАЧЕ ИСТИНА
	|КОНЕЦ");
	
		
	Пакет 		= Схема.ПакетЗапросов[Схема.ПакетЗапросов.Количество()-1];
	Оператор 	= Пакет.Операторы[Пакет.Операторы.Количество()-1];
	ДобавитьУсловияОператораЗапроса(Оператор.Отбор,Условия,ВычисляемыеПоля, ТаблицаДанныеДляРасчета);
	
КонецПроцедуры

Процедура ДобавитьРасчетОбъемаПотребленногоПоПриборам(Схема,ВыбираемыеПоля, ВычисляемыеПоля,МВТ, ТаблицаДанныеДляРасчета)
		
	ПереопределяемыеПоля = Новый Структура;
	ПереопределяемыеПоля.Вставить("ОбъемУслуги", 				"0");
	ПереопределяемыеПоля.Вставить("ОбъемУслугиПотребленный", 	"__РасходПоПоказаниям__");
	ПереопределяемыеПоля.Вставить("ЗначениеТарифа",				"__ЗначениеТарифаПоПриборам__");
	ПереопределяемыеПоля.Вставить("Сумма", 						"0");
	ПереопределяемыеПоля.Вставить("ПовыщающийКоэффициент", 		"1");
	ПереопределяемыеПоля.Вставить("СниматьНачисленныйСредний", 	"НЕ НачислятьПоПриборуПотребленный");
	ПереопределяемыеПоля.Вставить("СпособНачисления", 			"ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.ПоПриборам)");
	ПереопределяемыеПоля.Вставить("ЗначениеСоциальнойНормы", 
	"ВЫБОР
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.ПустаяСсылка)
	|			ТОГДА -1
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.СоциальнаяНормаРавнаНормативуПотребления)
	|			ТОГДА __ОбъемУслугиПоНорме__
	|		ИНАЧЕ ВЫБОР
	|				КОГДА НЕ Псевдоним.ЗначениеПлощади = 0
	|					ТОГДА __РасходПоПоказаниям__ * (__КоличествоЧеловек__ * Псевдоним.СоциальнаяНормаПотребления + Псевдоним.ДопСоциальнаяНормаПотребления) / Псевдоним.ЗначениеПлощади
	|				ИНАЧЕ 0
	|			 КОНЕЦ
	|	КОНЕЦ");	
	ПереопределяемыеПоля.Вставить("ЗначениеСоциальнойНормыРасчетныйСпособ",
	"ВЫБОР
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.ПустаяСсылка)
	|			ТОГДА __ОбъемУслугиПоНорме__ * __ДлительностьПериодаПоНормативу__ * ВЫБОР
	|					КОГДА Псевдоним.НормативПоДням
	|							И НЕ Псевдоним.НеПрименятьСезонность
	|						ТОГДА Псевдоним.ДнейВПериоде
	|					ИНАЧЕ 1 
	|				КОНЕЦ
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.СоциальнаяНормаРавнаНормативуПотребления)
	|			ТОГДА __ОбъемУслугиПоНорме__ * ВЫБОР
	|					КОГДА Псевдоним.НормативПоДням
	|							И НЕ Псевдоним.НеПрименятьСезонность
	|						ТОГДА Псевдоним.ДнейВПериоде
	|					ИНАЧЕ 1 
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА НЕ Псевдоним.ЗначениеПлощади = 0
	|					ТОГДА __РасходПоПоказаниям__ * (__КоличествоЧеловек__ * Псевдоним.СоциальнаяНормаПотребления  + Псевдоним.ДопСоциальнаяНормаПотребления) / Псевдоним.ЗначениеПлощади
	|				ИНАЧЕ 0
	|			 КОНЕЦ
	|	КОНЕЦ");
	
	ПереопределяемыеПоля.Вставить("ОбъемУслугиПотери",				"0");
	ПереопределяемыеПоля.Вставить("ОбъемУслугиПотребленныйПотери",	"__РасходПоПоказаниям__ * (Псевдоним.ПотериПроцент / 100) + Псевдоним.ПотериОбъем");
	
	ПодставитьВычисляемыПоля(Схема, МВТ, ТаблицаДанныеДляРасчета, ВыбираемыеПоля, ВычисляемыеПоля, ПереопределяемыеПоля);
	
	Условия = Новый Массив;
	Условия.Добавить("ПриборВведен");
	Условия.Добавить("ЕстьПоказанияАбонента");
	Условия.Добавить("НЕ СпособРаспределенияОбъемаПомещения = ЗНАЧЕНИЕ(Перечисление.энргСпособыРаспределенияОбъема.ФиксированныйОбъем)");
	Условия.Добавить(
	"ВЫБОР
	|	КОГДА АбонентЗакрытВТекущемПериоде 
	|		ТОГДА ИСТИНА
	|	КОГДА РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ДанныеДляРасчета.НачалоПериода, ДЕНЬ), НАЧАЛОПЕРИОДА(ДанныеДляРасчета.КонецПериода, ДЕНЬ), ДЕНЬ) = 0					
	|		ТОГДА __РасходПоПоказаниям__ > 0
	|	ИНАЧЕ ИСТИНА
	|КОНЕЦ");
	
	
	
	Пакет 		= Схема.ПакетЗапросов[Схема.ПакетЗапросов.Количество()-1];
	Оператор 	= Пакет.Операторы[Пакет.Операторы.Количество()-1];
	ДобавитьУсловияОператораЗапроса(Оператор.Отбор,Условия,ВычисляемыеПоля, ТаблицаДанныеДляРасчета);
	
КонецПроцедуры

#КонецОбласти

#Область НачисленияПоНормативу

Процедура ДобавитьРасчетОбъемаУслугиПоНормативу(Схема,ВыбираемыеПоля,ВычисляемыеПоля,МВТ,ТаблицаДанныеДляРасчета)
	
	ПереопределяемыеПоля 	= Новый Структура;
		
	ПереопределяемыеПоля.Вставить("ПриборУчета", 				"ЗНАЧЕНИЕ(Справочник.энргПриборыУчетаАбонента.ПустаяСсылка)");
	ПереопределяемыеПоля.Вставить("Шкала", 						"ЗНАЧЕНИЕ(Справочник.энргШкалыПриборовУчета.ПУстаяСсылка)");
	ПереопределяемыеПоля.Вставить("ТарифнаяЗона", 				"ЗНАЧЕНИЕ(Справочник.энргТарифныеЗоны.БезРазбивки)");
	ПереопределяемыеПоля.Вставить("НачальныеПоказания", 		"0");
	ПереопределяемыеПоля.Вставить("КонечныеПоказания", 			"0");
	
	ПереопределяемыеПоля.Вставить("ОбъемУслуги", 				
	"__ОбъемУслугиПоНорме__ * __ДлительностьПериодаПоНормативу__");
	ПереопределяемыеПоля.Вставить("ОбъемУслугиПотребленный",	"0");
	ПереопределяемыеПоля.Вставить("Сумма", 						
	"__ОбъемУслугиПоНорме__ * ЗначениеТарифа * __ДлительностьПериодаПоНормативу__");
	ПереопределяемыеПоля.Вставить("СниматьНачисленныйСредний", 	"ЛОЖЬ");
	ПереопределяемыеПоля.Вставить("СпособНачисления", 			"ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.ПоНормативу)");
	ПереопределяемыеПоля.Вставить("ЗначениеСоциальнойНормы", 
	"ВЫБОР
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.ПустаяСсылка)
	|			ТОГДА -1
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.СоциальнаяНормаРавнаНормативуПотребления)
	|			ТОГДА __ОбъемУслугиПоНорме__
	|		ИНАЧЕ ВЫБОР
	|				КОГДА НЕ Псевдоним.ЗначениеПлощади = 0
	|					ТОГДА __ОбъемУслугиПоНорме__ * __ДлительностьПериодаПоНормативу__ * (__КоличествоЧеловек__ * Псевдоним.СоциальнаяНормаПотребления + Псевдоним.ДопСоциальнаяНормаПотребления) / Псевдоним.ЗначениеПлощади
	|				ИНАЧЕ 0
	|			 КОНЕЦ
	|	КОНЕЦ");	
	ПереопределяемыеПоля.Вставить("ЗначениеСоциальнойНормыРасчетныйСпособ",
	"ВЫБОР
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.ПустаяСсылка)
	|			ТОГДА __ОбъемУслугиПоНорме__ *  __ДлительностьПериодаПоНормативу__ * ВЫБОР
	|					КОГДА Псевдоним.НормативПоДням
	|							И НЕ Псевдоним.НеПрименятьСезонность
	|						ТОГДА Псевдоним.ДнейВПериоде
	|					ИНАЧЕ 1 
	|				КОНЕЦ
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.СоциальнаяНормаРавнаНормативуПотребления)
	|			ТОГДА __ОбъемУслугиПоНорме__ * ВЫБОР
	|					КОГДА Псевдоним.НормативПоДням
	|							И НЕ Псевдоним.НеПрименятьСезонность
	|						ТОГДА Псевдоним.ДнейВПериоде
	|					ИНАЧЕ 1 
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА НЕ Псевдоним.ЗначениеПлощади = 0
	|					ТОГДА  __ОбъемУслугиПоНорме__ * __ДлительностьПериодаПоНормативу__ * (__КоличествоЧеловек__ * Псевдоним.СоциальнаяНормаПотребления + Псевдоним.ДопСоциальнаяНормаПотребления) / Псевдоним.ЗначениеПлощади
	|				ИНАЧЕ 0
	|			 КОНЕЦ
	|	КОНЕЦ");	
	ПереопределяемыеПоля.Вставить("ОбъемУслугиПотери",				"0");
	ПереопределяемыеПоля.Вставить("ОбъемУслугиПотребленныйПотери",	"0");
	
	ПодставитьВычисляемыПоля(Схема, МВТ, ТаблицаДанныеДляРасчета, ВыбираемыеПоля, ВычисляемыеПоля, ПереопределяемыеПоля);
	
	Условия = Новый Массив;
	Условия.Добавить("НЕ КоэффициентСезоности = 0");
	Условия.Добавить(
	"ВЫБОР
	|		КОГДА Псевдоним.ОбъемЗаПрошлыйГод
	|				И ВЫБОР
	|					КОГДА Псевдоним.ЗависитОтУслуги = ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|						ТОГДА Псевдоним.ЕстьСреднийПоВсемТочкамУслуги
	|					ИНАЧЕ Псевдоним.ЕстьСреднийПоВсемТочкамУслугиЗависитОтУслуги
	|				КОНЕЦ
	|			ТОГДА ЛОЖЬ
	|		КОГДА Псевдоним.ПриборВведен
	|			ТОГДА ЛОЖЬ
	|		КОГДА Псевдоним.НачислятьСреднийОбъемДо >= Псевдоним.ПериодНачисления
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ");
	Условия.Добавить("НачислятьНорму 
	|ИЛИ НЕ ЗависитОтУслуги = ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)");
	Условия.Добавить("РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(НачалоПериода, ДЕНЬ), НАЧАЛОПЕРИОДА(КонецПериода, ДЕНЬ), ДЕНЬ) >= 1");
	Условия.Добавить("НЕ СпособРаспределенияОбъемаПомещения = ЗНАЧЕНИЕ(Перечисление.энргСпособыРаспределенияОбъема.ФиксированныйОбъем)");
	Условия.Добавить("НЕ РасчетТолькоПоПоказаниям");
	
	Пакет 		= Схема.ПакетЗапросов[Схема.ПакетЗапросов.Количество()-1];
	Оператор 	= Пакет.Операторы[Пакет.Операторы.Количество()-1];
	ДобавитьУсловияОператораЗапроса(Оператор.Отбор,Условия,ВычисляемыеПоля, ТаблицаДанныеДляРасчета);
	
КонецПроцедуры

Процедура ДобавитьРасчетОбъемаПотребленногоПоНормативу(Схема,ВыбираемыеПоля,ВычисляемыеПоля,МВТ,ТаблицаДанныеДляРасчета)
	
	ПереопределяемыеПоля 	= Новый Структура;
		
	ПереопределяемыеПоля.Вставить("ПриборУчета", 				"ЗНАЧЕНИЕ(Справочник.энргПриборыУчетаАбонента.ПустаяСсылка)");
	ПереопределяемыеПоля.Вставить("Шкала", 						"ЗНАЧЕНИЕ(Справочник.энргШкалыПриборовУчета.ПУстаяСсылка)");
	ПереопределяемыеПоля.Вставить("ТарифнаяЗона", 				"ЗНАЧЕНИЕ(Справочник.энргТарифныеЗоны.БезРазбивки)");
	ПереопределяемыеПоля.Вставить("НачальныеПоказания", 		"0");
	ПереопределяемыеПоля.Вставить("КонечныеПоказания", 			"0");
	
	ПереопределяемыеПоля.Вставить("ОбъемУслуги", 				"0");
	ПереопределяемыеПоля.Вставить("ОбъемУслугиПотребленный",	
	"__ОбъемУслугиПотребленныйПоНорме__ * __ДлительностьПериодаПоНормативуОбъемПотребленный__");
	ПереопределяемыеПоля.Вставить("Сумма", 						"0");
	ПереопределяемыеПоля.Вставить("СниматьНачисленныйСредний", 	"ЛОЖЬ");
	ПереопределяемыеПоля.Вставить("СпособНачисления", 			"ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.ПоНормативу)");
	ПереопределяемыеПоля.Вставить("НормаПотребления", 			"ВЫРАЗИТЬ(Псевдоним.НормаПотребления * Псевдоним.КоэффициентНорматива КАК  ЧИСЛО(15,6))");
	ПереопределяемыеПоля.Вставить("ЗначениеСоциальнойНормы", 
	"ВЫБОР
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.ПустаяСсылка)
	|			ТОГДА -1
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.СоциальнаяНормаРавнаНормативуПотребления)
	|			ТОГДА __ОбъемУслугиПоНорме__
	|		ИНАЧЕ ВЫБОР
	|				КОГДА НЕ Псевдоним.ЗначениеПлощади = 0
	|					ТОГДА __ОбъемУслугиПотребленныйПоНорме__ * __ДлительностьПериодаПоНормативуОбъемПотребленный__ * (__КоличествоЧеловек__ * Псевдоним.СоциальнаяНормаПотребления + Псевдоним.ДопСоциальнаяНормаПотребления)/ Псевдоним.ЗначениеПлощади
	|				ИНАЧЕ 0
	|			 КОНЕЦ
	|	КОНЕЦ");	
	ПереопределяемыеПоля.Вставить("ЗначениеСоциальнойНормыРасчетныйСпособ",
	"ВЫБОР
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.ПустаяСсылка)
	|			ТОГДА __ОбъемУслугиПоНорме__ * __ДлительностьПериодаПоНормативу__ * ВЫБОР
	|					КОГДА Псевдоним.НормативПоДням
	|							И НЕ Псевдоним.НеПрименятьСезонность
	|						ТОГДА Псевдоним.ДнейВПериоде
	|					ИНАЧЕ 1 
	|				КОНЕЦ
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.СоциальнаяНормаРавнаНормативуПотребления)
	|			ТОГДА __ОбъемУслугиПоНорме__ * ВЫБОР
	|					КОГДА Псевдоним.НормативПоДням
	|							И НЕ Псевдоним.НеПрименятьСезонность
	|						ТОГДА Псевдоним.ДнейВПериоде
	|					ИНАЧЕ 1 
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА НЕ Псевдоним.ЗначениеПлощади = 0
	|					ТОГДА __ОбъемУслугиПотребленныйПоНорме__ * __ДлительностьПериодаПоНормативуОбъемПотребленный__ * (__КоличествоЧеловек__ * Псевдоним.СоциальнаяНормаПотребления + Псевдоним.ДопСоциальнаяНормаПотребления) / Псевдоним.ЗначениеПлощади
	|				ИНАЧЕ 0
	|			 КОНЕЦ
	|	КОНЕЦ");
	
	ПереопределяемыеПоля.Вставить("ОбъемУслугиПотери",				"0");
	ПереопределяемыеПоля.Вставить("ОбъемУслугиПотребленныйПотери",	"0");
	
	ПодставитьВычисляемыПоля(Схема, МВТ, ТаблицаДанныеДляРасчета, ВыбираемыеПоля, ВычисляемыеПоля, ПереопределяемыеПоля);
	
	Условия = Новый Массив;
	Условия.Добавить("НЕ КоэффициентСезоностиОбъемПотребленный = 0");
	Условия.Добавить("
	|ВЫБОР
	|	КОГДА ПриборВведен
	|		ТОГДА ЛОЖЬ
	|	КОГДА НачислятьСреднийПотребленныйОбъемДо >= ПериодНачисления
	|		ТОГДА ЛОЖЬ
	|	ИНАЧЕ ИСТИНА 
	|КОНЕЦ");
	Условия.Добавить("НачислятьНорму 
	|ИЛИ НЕ ЗависитОтУслуги = ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)");
	Условия.Добавить("РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(НачалоПериода, ДЕНЬ), НАЧАЛОПЕРИОДА(КонецПериода, ДЕНЬ), ДЕНЬ) >= 1");
	Условия.Добавить("НЕ СпособРаспределенияОбъемаПомещения = ЗНАЧЕНИЕ(Перечисление.энргСпособыРаспределенияОбъема.ФиксированныйОбъем)");
	Условия.Добавить("НЕ РасчетТолькоПоПоказаниям");
	
	Пакет 		= Схема.ПакетЗапросов[Схема.ПакетЗапросов.Количество()-1];
	Оператор 	= Пакет.Операторы[Пакет.Операторы.Количество()-1];
	ДобавитьУсловияОператораЗапроса(Оператор.Отбор,Условия,ВычисляемыеПоля, ТаблицаДанныеДляРасчета);
	
КонецПроцедуры

Функция РассчитатьОбъемУслугиСтроктНабораПоНормативу(СтрокаНабора)
	МКД 											= ?(СтрокаНабора.ЧастныйСектор,Истина,Ложь);
	КоэффициентНормативаНеПрименятьСезонность 		= 0;
	
	Если СтрокаНабора.НеПрименятьСезонность Тогда
		КоэффициентНормативаНеПрименятьСезонность 	= СтрокаНабора.КоэффициентНормативаНеПрименятьСезонность;
	Иначе
		КоэффициентНормативаНеПрименятьСезонность 	= СтрокаНабора.КоэффициентНорматива;
	КонецЕсли;
	
	НаЧтоУмножаемНорматив  							= 0;
	Если СтрокаНабора.НаправлениеИспользованияТУ = Справочники.энргНаправлениеИспользованияТочекУчета.ПустаяСсылка()
		и СтрокаНабора.ЕстьИзмерителиНаправления Тогда
		НаЧтоУмножаемНорматив 						= СтрокаНабора.КоличествоИзмеретелейНаправления;
	ИначеЕсли НЕ СтрокаНабора.ВидПлощади = Перечисления.энргВидыПлощадей.ПустаяСсылка() Тогда
		НаЧтоУмножаемНорматив 						= СтрокаНабора.ЗначениеПлощади;
	ИначеЕсли НЕ ЗначениеЗаполнено(СтрокаНабора.Абонент) Тогда
		НаЧтоУмножаемНорматив 						= СтрокаНабора.КоличествоЖильцов;
	ИначеЕсли НЕ СтрокаНабора.КоличествоПроживающих = 0 Тогда
		НаЧтоУмножаемНорматив 						= СтрокаНабора.КоличествоПроживающих;
	ИначеЕсли НЕ СтрокаНабора.КоличествоПрописанных = 0 Тогда
		НаЧтоУмножаемНорматив 						= СтрокаНабора.КоличествоПрописанных;
	Иначе
		НаЧтоУмножаемНорматив 						= СтрокаНабора.КоличествоСобственников;
	КонецЕсли;
	
	КоэффициентСдерживанияРостаПлаты 				= 0;
	Если СтрокаНабора.ИспользоватьКоэффициентСдерживанияРостаПлаты И МКД Тогда
		Если СтрокаНабора.ПлощадьАбонентов - СтрокаНабора.ПлощадьСобственнаяПоставка + СтрокаНабора.ПлощадьМОП = 0 Тогда
			КоэффициентСдерживанияРостаПлаты 		= 0;
		Иначе
			КоэффициентСдерживанияРостаПлаты 		= (СтрокаНабора.ПлощадьАбонентов - СтрокаНабора.ПлощадьСобственнаяПоставка) / (СтрокаНабора.ПлощадьАбонентов - СтрокаНабора.ПлощадьСобственнаяПоставка + СтрокаНабора.ПлощадьМОП);
		КонецЕсли;
	Иначе
		КоэффициентСдерживанияРостаПлаты 			= 1;
	КонецЕсли;
	
	Возврат СтрокаНабора.КоэффициентСезоности * Окр(СтрокаНабора.НормаПотребления * КоэффициентНормативаНеПрименятьСезонность,6) * НаЧтоУмножаемНорматив * КоэффициентСдерживанияРостаПлаты;
			
КонецФункции


#КонецОбласти

#Область НачисленияПоСреднемуНормативу

Процедура ДобавитьРасчетОбъемаУслугиПоСреднемуНормативуЗаПрошлыйГод(Схема,ВыбираемыеПоля, ВычисляемыеПоля, МВТ, ТаблицаДанныеДляРасчета)
	
	ПереопределяемыеПоля 	= Новый Структура;
		
	ПереопределяемыеПоля.Вставить("ОбъемУслуги", 				
	"__ОбъемУслугиПоНорме__ * __ДлительностьПериодаПоНормативу__ * __КоэффициентДляНачисленияСреднего__");
	ПереопределяемыеПоля.Вставить("ОбъемУслугиПотребленный",	"0");
	ПереопределяемыеПоля.Вставить("Сумма", 						
	"__ОбъемУслугиПоНорме__ * ЗначениеТарифа * __ДлительностьПериодаПоНормативу__");
	ПереопределяемыеПоля.Вставить("СниматьНачисленныйСредний", 	"ЛОЖЬ");
	ПереопределяемыеПоля.Вставить("СпособНачисления", 			"ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.СреднееПоНормативу)");
	ПереопределяемыеПоля.Вставить("НачальныеПоказания", 		"0");
	ПереопределяемыеПоля.Вставить("КонечныеПоказания", 			"0");
	ПереопределяемыеПоля.Вставить("ПовыщающийКоэффициент", 		"1");	
	ПереопределяемыеПоля.Вставить("ЗначениеСоциальнойНормы", 
	"ВЫБОР
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.ПустаяСсылка)
	|			ТОГДА -1
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.СоциальнаяНормаРавнаНормативуПотребления)
	|			ТОГДА __ОбъемУслугиПоНорме__
	|		ИНАЧЕ ВЫБОР
	|				КОГДА НЕ Псевдоним.ЗначениеПлощади = 0
	|					ТОГДА  __ОбъемУслугиПоНорме__ * __ДлительностьПериодаПоНормативу__ * (__КоличествоЧеловек__ * Псевдоним.СоциальнаяНормаПотребления + Псевдоним.ДопСоциальнаяНормаПотребления) / Псевдоним.ЗначениеПлощади
	|				ИНАЧЕ 0
	|			 КОНЕЦ
	|	КОНЕЦ");	
	ПереопределяемыеПоля.Вставить("ЗначениеСоциальнойНормыРасчетныйСпособ",
	"ВЫБОР
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.ПустаяСсылка)
	|			ТОГДА __ОбъемУслугиПоНорме__ * __ДлительностьПериодаПоНормативу__ * ВЫБОР
	|					КОГДА Псевдоним.НормативПоДням
	|							И НЕ Псевдоним.НеПрименятьСезонность
	|						ТОГДА Псевдоним.ДнейВПериоде
	|					ИНАЧЕ 1 
	|				КОНЕЦ
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.СоциальнаяНормаРавнаНормативуПотребления)
	|			ТОГДА __ОбъемУслугиПоНорме__ * ВЫБОР
	|					КОГДА Псевдоним.НормативПоДням
	|							И НЕ Псевдоним.НеПрименятьСезонность
	|						ТОГДА Псевдоним.ДнейВПериоде
	|					ИНАЧЕ 1 
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА НЕ Псевдоним.ЗначениеПлощади = 0
	|					ТОГДА __ОбъемУслугиПоНорме__ * __ДлительностьПериодаПоНормативу__ * (__КоличествоЧеловек__ * Псевдоним.СоциальнаяНормаПотребления + Псевдоним.ДопСоциальнаяНормаПотребления) / Псевдоним.ЗначениеПлощади
	|				ИНАЧЕ 0
	|			 КОНЕЦ
	|	КОНЕЦ");
	
	ПереопределяемыеПоля.Вставить("ОбъемУслугиПотери",				"0");
	ПереопределяемыеПоля.Вставить("ОбъемУслугиПотребленныйПотери",	"0");
	
	ПодставитьВычисляемыПоля(Схема, МВТ, ТаблицаДанныеДляРасчета, ВыбираемыеПоля, ВычисляемыеПоля, ПереопределяемыеПоля);
		
	Условия 				= Новый Массив;
	Условия.Добавить("НЕ КоэффициентСезоности = 0");
	Условия.Добавить("ОбъемЗаПрошлыйГод");
	Условия.Добавить("НачислятьНорму");
	Условия.Добавить("ПриборВведен");
	Условия.Добавить("РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(НачалоПериода, ДЕНЬ), НАЧАЛОПЕРИОДА(КонецПериода, ДЕНЬ), ДЕНЬ) >= 1");
	Условия.Добавить("НЕ СпособРаспределенияОбъемаПомещения = ЗНАЧЕНИЕ(Перечисление.энргСпособыРаспределенияОбъема.ФиксированныйОбъем)");
	Условия.Добавить("НЕ РасчетТолькоПоПоказаниям");
	Условия.Добавить(
	"ВЫБОР
	|		КОГДА Псевдоним.ЗависитОтУслуги = ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|			ТОГДА НЕ Псевдоним.ЕстьСреднийПоВсемТочкамУслуги
	|		ИНАЧЕ НЕ Псевдоним.ЕстьСреднийПоВсемТочкамУслугиЗависитОтУслуги
	|	КОНЕЦ");
	//Условия.Добавить(
	//"ВЫБОР
	//|		КОГДА Псевдоним.КорректироватьГодовойОбъем И Псевдоним.НеПрименятьСезонность
	//|			ТОГДА Истина
	//|		ИНАЧЕ МожноНачислятьСреднее
	//|	КОНЕЦ");
	
	Пакет 		= Схема.ПакетЗапросов[Схема.ПакетЗапросов.Количество()-1];
	Оператор 	= Пакет.Операторы[Пакет.Операторы.Количество()-1];
	ДобавитьУсловияОператораЗапроса(Оператор.Отбор,Условия,ВычисляемыеПоля,ТаблицаДанныеДляРасчета);
	
КонецПроцедуры

Процедура ДобавитьРасчетОбъемаУслугиПоСреднемуНормативу(Схема,ВыбираемыеПоля, ВычисляемыеПоля, МВТ, ТаблицаДанныеДляРасчета)
	
	ПереопределяемыеПоля 	= Новый Структура;
		
	ПереопределяемыеПоля.Вставить("ОбъемУслуги", 				
	"__ОбъемУслугиПоНорме__ * __ДлительностьПериодаПоНормативу__ * __КоэффициентДляНачисленияСреднего__");
	ПереопределяемыеПоля.Вставить("ОбъемУслугиПотребленный",	"0");
	ПереопределяемыеПоля.Вставить("Сумма", 						
	"__ОбъемУслугиПоНорме__ * ЗначениеТарифаБезРазбивки * __ДлительностьПериодаПоНормативу__");
	ПереопределяемыеПоля.Вставить("СниматьНачисленныйСредний", 	"ИСТИНА");
	ПереопределяемыеПоля.Вставить("СпособНачисления", 			"ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.СреднееПоНормативу)");
	ПереопределяемыеПоля.Вставить("НачальныеПоказания", 		"0");
	ПереопределяемыеПоля.Вставить("КонечныеПоказания", 			"0");
	ПереопределяемыеПоля.Вставить("ПовыщающийКоэффициент", 		"1");
	ПереопределяемыеПоля.Вставить("ЗначениеТарифа", 			"ЗначениеТарифаБезРазбивки");
	ПереопределяемыеПоля.Вставить("ТарифнаяЗона",		 		"ЗНАЧЕНИЕ(Справочник.энргТарифныеЗоны.БезРазбивки)");
	ПереопределяемыеПоля.Вставить("ЗначениеСоциальнойНормы", 
	"ВЫБОР
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.ПустаяСсылка)
	|			ТОГДА -1
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.СоциальнаяНормаРавнаНормативуПотребления)
	|			ТОГДА __ОбъемУслугиПоНорме__
	|		ИНАЧЕ ВЫБОР
	|				КОГДА НЕ Псевдоним.ЗначениеПлощади = 0
	|					ТОГДА __ОбъемУслугиПоНорме__ * __ДлительностьПериодаПоНормативу__ * (__КоличествоЧеловек__ * Псевдоним.СоциальнаяНормаПотребления + Псевдоним.ДопСоциальнаяНормаПотребления) / Псевдоним.ЗначениеПлощади
	|				ИНАЧЕ 0
	|			 КОНЕЦ
	|	КОНЕЦ");	
	ПереопределяемыеПоля.Вставить("ЗначениеСоциальнойНормыРасчетныйСпособ",
	"ВЫБОР
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.ПустаяСсылка)
	|			ТОГДА __ОбъемУслугиПоНорме__ * __ДлительностьПериодаПоНормативу__ * ВЫБОР
	|					КОГДА Псевдоним.НормативПоДням
	|							И НЕ Псевдоним.НеПрименятьСезонность
	|						ТОГДА Псевдоним.ДнейВПериоде
	|					ИНАЧЕ 1 
	|				КОНЕЦ
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.СоциальнаяНормаРавнаНормативуПотребления)
	|			ТОГДА __ОбъемУслугиПоНорме__ * ВЫБОР
	|					КОГДА Псевдоним.НормативПоДням
	|							И НЕ Псевдоним.НеПрименятьСезонность
	|						ТОГДА Псевдоним.ДнейВПериоде
	|					ИНАЧЕ 1 
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА НЕ Псевдоним.ЗначениеПлощади = 0
	|					ТОГДА __ОбъемУслугиПоНорме__ * __ДлительностьПериодаПоНормативу__ * (__КоличествоЧеловек__ * Псевдоним.СоциальнаяНормаПотребления + Псевдоним.ДопСоциальнаяНормаПотребления) / Псевдоним.ЗначениеПлощади
	|				ИНАЧЕ 0
	|			 КОНЕЦ
	|	КОНЕЦ");
	
	ПереопределяемыеПоля.Вставить("ОбъемУслугиПотери",				"0");
	ПереопределяемыеПоля.Вставить("ОбъемУслугиПотребленныйПотери",	"0");
	
	ПодставитьВычисляемыПоля(Схема, МВТ, ТаблицаДанныеДляРасчета, ВыбираемыеПоля, ВычисляемыеПоля, ПереопределяемыеПоля);
		
	Условия 				= Новый Массив;
	Условия.Добавить("НЕ КоэффициентСезоности = 0");
	Условия.Добавить("НЕ ОбъемЗаПрошлыйГод");
	Условия.Добавить("ПриборВведен");
	Условия.Добавить("НачислятьНорму 
	|ИЛИ НЕ ЗависитОтУслуги = ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)");
	Условия.Добавить("Не ПоказанияВСрок");
	Условия.Добавить("РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(НачалоПериода, ДЕНЬ), НАЧАЛОПЕРИОДА(КонецПериода, ДЕНЬ), ДЕНЬ) >= 1");
	Условия.Добавить("НЕ СпособРаспределенияОбъемаПомещения = ЗНАЧЕНИЕ(Перечисление.энргСпособыРаспределенияОбъема.ФиксированныйОбъем)");
	Условия.Добавить("НЕ РасчетТолькоПоПоказаниям");
	Условия.Добавить(
	"ВЫБОР
	|		КОГДА Псевдоним.ЗависитОтУслуги = ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|			ТОГДА НЕ Псевдоним.ЕстьСреднийПоВсемТочкамУслуги
	|		ИНАЧЕ НЕ Псевдоним.ЕстьСреднийПоВсемТочкамУслугиЗависитОтУслуги
	|	КОНЕЦ");
	//Условия.Добавить(
	//"ВЫБОР
	//|		КОГДА Псевдоним.КорректироватьГодовойОбъем И Псевдоним.НеПрименятьСезонность
	//|			ТОГДА Истина
	//|		ИНАЧЕ МожноНачислятьСреднее
	//|	КОНЕЦ");
	
	Пакет 		= Схема.ПакетЗапросов[Схема.ПакетЗапросов.Количество()-1];
	Оператор 	= Пакет.Операторы[Пакет.Операторы.Количество()-1];
	ДобавитьУсловияОператораЗапроса(Оператор.Отбор,Условия,ВычисляемыеПоля,ТаблицаДанныеДляРасчета);
	
КонецПроцедуры

Процедура ДобавитьРасчетОбъемаПотребленногоПоСреднемуНормативу(Схема,ВыбираемыеПоля, ВычисляемыеПоля, МВТ, ТаблицаДанныеДляРасчета)
	
	ПереопределяемыеПоля 	= Новый Структура;
		
	ПереопределяемыеПоля.Вставить("ОбъемУслуги", 				"0");
	ПереопределяемыеПоля.Вставить("ОбъемУслугиПотребленный",	
	"__ОбъемУслугиПотребленныйПоНорме__ * __ДлительностьПериодаПоНормативу__ * __КоэффициентДляНачисленияСреднего__"); 	
	ПереопределяемыеПоля.Вставить("Сумма", 						"0");
	ПереопределяемыеПоля.Вставить("СниматьНачисленныйСредний", 	"ИСТИНА");
	ПереопределяемыеПоля.Вставить("СпособНачисления", 			"ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.СреднееПоНормативу)");
	ПереопределяемыеПоля.Вставить("НачальныеПоказания", 		"0");
	ПереопределяемыеПоля.Вставить("КонечныеПоказания", 			"0");
	ПереопределяемыеПоля.Вставить("ПовыщающийКоэффициент", 		"1");
	ПереопределяемыеПоля.Вставить("ЗначениеТарифа",		 		"ЗначениеТарифаБезРазбивки");
	ПереопределяемыеПоля.Вставить("ТарифнаяЗона",		 		"ЗНАЧЕНИЕ(Справочник.энргТарифныеЗоны.БезРазбивки)");
	ПереопределяемыеПоля.Вставить("ЗначениеСоциальнойНормы", 
	"ВЫБОР
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.ПустаяСсылка)
	|			ТОГДА -1
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.СоциальнаяНормаРавнаНормативуПотребления)
	|			ТОГДА __ОбъемУслугиПоНорме__
	|		ИНАЧЕ ВЫБОР
	|				КОГДА НЕ Псевдоним.ЗначениеПлощади = 0
	|					ТОГДА  __ОбъемУслугиПотребленныйПоНорме__ * __ДлительностьПериодаПоНормативу__ * (__КоличествоЧеловек__ * Псевдоним.СоциальнаяНормаПотребления + Псевдоним.ДопСоциальнаяНормаПотребления) / Псевдоним.ЗначениеПлощади
	|				ИНАЧЕ 0
	|			 КОНЕЦ
	|	КОНЕЦ");	
	ПереопределяемыеПоля.Вставить("ЗначениеСоциальнойНормыРасчетныйСпособ",
	"ВЫБОР
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.ПустаяСсылка)
	|			ТОГДА __ОбъемУслугиПоНорме__ * __ДлительностьПериодаПоНормативу__ * ВЫБОР
	|					КОГДА Псевдоним.НормативПоДням
	|							И НЕ Псевдоним.НеПрименятьСезонность
	|						ТОГДА Псевдоним.ДнейВПериоде
	|					ИНАЧЕ 1 
	|				КОНЕЦ
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.СоциальнаяНормаРавнаНормативуПотребления)
	|			ТОГДА __ОбъемУслугиПоНорме__ * ВЫБОР
	|					КОГДА Псевдоним.НормативПоДням
	|							И НЕ Псевдоним.НеПрименятьСезонность
	|						ТОГДА Псевдоним.ДнейВПериоде
	|					ИНАЧЕ 1 
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА НЕ Псевдоним.ЗначениеПлощади = 0
	|					ТОГДА  __ОбъемУслугиПотребленныйПоНорме__ * __ДлительностьПериодаПоНормативу__ * (__КоличествоЧеловек__ * Псевдоним.СоциальнаяНормаПотребления + Псевдоним.ДопСоциальнаяНормаПотребления) / Псевдоним.ЗначениеПлощади
	|				ИНАЧЕ 0
	|			 КОНЕЦ
	|	КОНЕЦ");
	
	ПереопределяемыеПоля.Вставить("ОбъемУслугиПотери",				"0");
	ПереопределяемыеПоля.Вставить("ОбъемУслугиПотребленныйПотери",	"0");
	
	ПодставитьВычисляемыПоля(Схема, МВТ, ТаблицаДанныеДляРасчета, ВыбираемыеПоля, ВычисляемыеПоля, ПереопределяемыеПоля);
		
	Условия 				= Новый Массив;
	Условия.Добавить("НЕ КоэффициентСезоностиОбъемПотребленный = 0");
	Условия.Добавить("ПриборВведен");
	Условия.Добавить("НачислятьНорму 
	|ИЛИ НЕ ЗависитОтУслуги = ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)");
	Условия.Добавить("Не ПоказанияВСрок");
	Условия.Добавить("РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(НачалоПериода, ДЕНЬ), НАЧАЛОПЕРИОДА(КонецПериода, ДЕНЬ), ДЕНЬ) >= 1");
	Условия.Добавить("НЕ СпособРаспределенияОбъемаПомещения = ЗНАЧЕНИЕ(Перечисление.энргСпособыРаспределенияОбъема.ФиксированныйОбъем)");
	Условия.Добавить("НЕ РасчетТолькоПоПоказаниям");
	Условия.Добавить(
	"ВЫБОР
	|		КОГДА Псевдоним.ЗависитОтУслуги = ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|			ТОГДА НЕ Псевдоним.ЕстьСреднийПотребленныйПоВсемТочкамУслуги
	|		ИНАЧЕ НЕ Псевдоним.ЕстьСреднийПотребленныйПоВсемТочкамУслугиЗависитОтУслуги
	|	КОНЕЦ");
	//Условия.Добавить(
	//"ВЫБОР
	//|		КОГДА Псевдоним.КорректироватьГодовойОбъем И Псевдоним.НеПрименятьСезонность
	//|			ТОГДА Истина
	//|		ИНАЧЕ МожноНачислятьСреднее
	//|	КОНЕЦ");
	
	Пакет 		= Схема.ПакетЗапросов[Схема.ПакетЗапросов.Количество()-1];
	Оператор 	= Пакет.Операторы[Пакет.Операторы.Количество()-1];
	ДобавитьУсловияОператораЗапроса(Оператор.Отбор,Условия, ВычисляемыеПоля,ТаблицаДанныеДляРасчета);
	
КонецПроцедуры

#КонецОбласти

#Область НачисленияПоСреднему

Процедура ДобавитьРасчетОбъемаУслугиПоСреднемуЗаПрошлыйГод(Схема,ВыбираемыеПоля, ВычисляемыеПоля, МВТ, ТаблицаДанныеДляРасчета)
	
	ПереопределяемыеПоля 	= Новый Структура;
		
	ПереопределяемыеПоля.Вставить("ОбъемУслуги", 				"__ОбъемУслугиПоСреднему__ * __ДлительностьПериода__ * __КоэффициентДляНачисленияСреднего__");
	ПереопределяемыеПоля.Вставить("ОбъемУслугиПотребленный",	"0");
	ПереопределяемыеПоля.Вставить("Сумма", 						"__ОбъемУслугиПоСреднему__ * __ДлительностьПериода__ * ЗначениеТарифа");
	ПереопределяемыеПоля.Вставить("СниматьНачисленныйСредний", 	"ЛОЖЬ");
	ПереопределяемыеПоля.Вставить("СпособНачисления", 			"ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.НачислениеПоСреднему)");
	ПереопределяемыеПоля.Вставить("НачальныеПоказания", 		"0");
	ПереопределяемыеПоля.Вставить("КонечныеПоказания", 			"0");
	ПереопределяемыеПоля.Вставить("ПовыщающийКоэффициент", 		"1");
	ПереопределяемыеПоля.Вставить("ЗначениеСоциальнойНормы", 
	"ВЫБОР
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.ПустаяСсылка)
	|			ТОГДА -1
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.СоциальнаяНормаРавнаНормативуПотребления)
	|			ТОГДА __ОбъемУслугиПоНорме__
	|		ИНАЧЕ ВЫБОР
	|				КОГДА НЕ Псевдоним.ЗначениеПлощади = 0
	|					ТОГДА __ОбъемУслугиПоСреднему__ * __ДлительностьПериода__ * (__КоличествоЧеловек__ * Псевдоним.СоциальнаяНормаПотребления + Псевдоним.ДопСоциальнаяНормаПотребления) / Псевдоним.ЗначениеПлощади
	|				ИНАЧЕ 0
	|			 КОНЕЦ
	|	КОНЕЦ");	
	ПереопределяемыеПоля.Вставить("ЗначениеСоциальнойНормыРасчетныйСпособ",
	"ВЫБОР
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.ПустаяСсылка)
	|			ТОГДА __ОбъемУслугиПоНорме__ * __ДлительностьПериодаПоНормативу__ * ВЫБОР
	|					КОГДА Псевдоним.НормативПоДням
	|							И НЕ Псевдоним.НеПрименятьСезонность
	|						ТОГДА Псевдоним.ДнейВПериоде
	|					ИНАЧЕ 1 
	|				КОНЕЦ
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.СоциальнаяНормаРавнаНормативуПотребления)
	|			ТОГДА __ОбъемУслугиПоНорме__ * ВЫБОР
	|					КОГДА Псевдоним.НормативПоДням
	|							И НЕ Псевдоним.НеПрименятьСезонность
	|						ТОГДА Псевдоним.ДнейВПериоде
	|					ИНАЧЕ 1 
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА НЕ Псевдоним.ЗначениеПлощади = 0
	|					ТОГДА __ОбъемУслугиПоСреднему__ * __ДлительностьПериода__ * (__КоличествоЧеловек__ * Псевдоним.СоциальнаяНормаПотребления + Псевдоним.ДопСоциальнаяНормаПотребления) / Псевдоним.ЗначениеПлощади
	|				ИНАЧЕ 0
	|			 КОНЕЦ
	|	КОНЕЦ");
	
	ПереопределяемыеПоля.Вставить("ОбъемУслугиПотери",				"__ОбъемУслугиПоСреднему__ * __ДлительностьПериода__ * (Псевдоним.ПотериПроцент / 100) + Псевдоним.ПотериОбъем");
	ПереопределяемыеПоля.Вставить("ОбъемУслугиПотребленныйПотери",	"0");
	
	ПодставитьВычисляемыПоля(Схема, МВТ, ТаблицаДанныеДляРасчета, ВыбираемыеПоля, ВычисляемыеПоля, ПереопределяемыеПоля);
		
	Условия 	= Новый Массив;
	Условия.Добавить("НЕ КоэффициентСезоности = 0");
	Условия.Добавить("ОбъемЗаПрошлыйГод");
	Условия.Добавить("РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(НачалоПериода, ДЕНЬ), НАЧАЛОПЕРИОДА(КонецПериода, ДЕНЬ), ДЕНЬ) >= 1");
	Условия.Добавить("НЕ СпособРаспределенияОбъемаПомещения = ЗНАЧЕНИЕ(Перечисление.энргСпособыРаспределенияОбъема.ФиксированныйОбъем)");
	Условия.Добавить("НЕ РасчетТолькоПоПоказаниям");
	Условия.Добавить(
	"ВЫБОР
	|		КОГДА Псевдоним.ЗависитОтУслуги = ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|			ТОГДА Псевдоним.ЕстьСреднийПоВсемТочкамУслуги
	|		ИНАЧЕ Псевдоним.ЕстьСреднийПоВсемТочкамУслугиЗависитОтУслуги
	|	КОНЕЦ");
	//Условия.Добавить(
	//"ВЫБОР
	//|		КОГДА Псевдоним.КорректироватьГодовойОбъем И Псевдоним.НеПрименятьСезонность
	//|			ТОГДА Истина
	//|		ИНАЧЕ МожноНачислятьСреднее
	//|	КОНЕЦ");
	
	Пакет 		= Схема.ПакетЗапросов[Схема.ПакетЗапросов.Количество()-1];
	Оператор 	= Пакет.Операторы[Пакет.Операторы.Количество()-1];
	ДобавитьУсловияОператораЗапроса(Оператор.Отбор,Условия,ВычисляемыеПоля,ТаблицаДанныеДляРасчета);
	
КонецПроцедуры

Процедура ДобавитьРасчетОбъемаУслугиПоСреднему(Схема,ВыбираемыеПоля, ВычисляемыеПоля, МВТ, ТаблицаДанныеДляРасчета)
	
	ПереопределяемыеПоля 	= Новый Структура;
		
	ПереопределяемыеПоля.Вставить("ОбъемУслуги", 				"__ОбъемУслугиПоСреднему__ * __ДлительностьПериода__ * __КоэффициентДляНачисленияСреднего__");
	ПереопределяемыеПоля.Вставить("ОбъемУслугиПотребленный",	"0");
	ПереопределяемыеПоля.Вставить("Сумма", 						"__ОбъемУслугиПоСреднему__ * __ДлительностьПериода__ * ЗначениеТарифа");
	ПереопределяемыеПоля.Вставить("СниматьНачисленныйСредний", 	
	"ВЫБОР 
	|		КОГДА НЕ ПриборВведен И НачислятьСреднийОбъемДо >= ПериодНачисления
	|			ТОГДА ЛОЖЬ 
	|		ИНАЧЕ ИСТИНА 
	|	КОНЕЦ");
	ПереопределяемыеПоля.Вставить("СпособНачисления", 			"ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.НачислениеПоСреднему)");
	ПереопределяемыеПоля.Вставить("НачальныеПоказания", 		"0");
	ПереопределяемыеПоля.Вставить("КонечныеПоказания", 			"0");
	ПереопределяемыеПоля.Вставить("ПовыщающийКоэффициент", 		"1");
	ПереопределяемыеПоля.Вставить("ЗначениеСоциальнойНормы", 
	"ВЫБОР
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.ПустаяСсылка)
	|			ТОГДА -1
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.СоциальнаяНормаРавнаНормативуПотребления)
	|			ТОГДА __ОбъемУслугиПоНорме__
	|		ИНАЧЕ ВЫБОР
	|				КОГДА НЕ Псевдоним.ЗначениеПлощади = 0
	|					ТОГДА __ОбъемУслугиПоСреднему__ * __ДлительностьПериода__ * (__КоличествоЧеловек__ * Псевдоним.СоциальнаяНормаПотребления + Псевдоним.ДопСоциальнаяНормаПотребления) / Псевдоним.ЗначениеПлощади
	|				ИНАЧЕ 0
	|			 КОНЕЦ
	|	КОНЕЦ");	
	ПереопределяемыеПоля.Вставить("ЗначениеСоциальнойНормыРасчетныйСпособ",
	"ВЫБОР
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.ПустаяСсылка)
	|			ТОГДА __ОбъемУслугиПоНорме__ * __ДлительностьПериодаПоНормативу__ * ВЫБОР
	|					КОГДА Псевдоним.НормативПоДням
	|							И НЕ Псевдоним.НеПрименятьСезонность
	|						ТОГДА Псевдоним.ДнейВПериоде
	|					ИНАЧЕ 1 
	|				КОНЕЦ
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.СоциальнаяНормаРавнаНормативуПотребления)
	|			ТОГДА __ОбъемУслугиПоНорме__ * ВЫБОР
	|					КОГДА Псевдоним.НормативПоДням
	|							И НЕ Псевдоним.НеПрименятьСезонность
	|						ТОГДА Псевдоним.ДнейВПериоде
	|					ИНАЧЕ 1 
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА НЕ Псевдоним.ЗначениеПлощади = 0
	|					ТОГДА __ОбъемУслугиПоСреднему__ * __ДлительностьПериода__ * (__КоличествоЧеловек__ * Псевдоним.СоциальнаяНормаПотребления + Псевдоним.ДопСоциальнаяНормаПотребления) / Псевдоним.ЗначениеПлощади
	|				ИНАЧЕ 0
	|			 КОНЕЦ
	|	КОНЕЦ");
	
	ПереопределяемыеПоля.Вставить("ОбъемУслугиПотери",				"__ОбъемУслугиПоСреднему__ * __ДлительностьПериода__ * (Псевдоним.ПотериПроцент / 100) + Псевдоним.ПотериОбъем");
	ПереопределяемыеПоля.Вставить("ОбъемУслугиПотребленныйПотери",	"0");
	
	ПодставитьВычисляемыПоля(Схема, МВТ, ТаблицаДанныеДляРасчета, ВыбираемыеПоля, ВычисляемыеПоля, ПереопределяемыеПоля);
		
	Условия 				= Новый Массив;
	Условия.Добавить("НЕ КоэффициентСезоности = 0");
	Условия.Добавить("НЕ ОбъемЗаПрошлыйГод");
	Условия.Добавить("
	|ВЫБОР
	|	КОГДА ПриборВведен
	|		ТОГДА НЕ ДанныеДляРасчета.ПоказанияВСрок
	|	КОГДА НачислятьСреднийОбъемДо >= ПериодНачисления
	|		ТОГДА ДанныеДляРасчета.СреднийОбъем > 0
	|	ИНАЧЕ ЛОЖЬ 
	|КОНЕЦ");	
	Условия.Добавить("РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(НачалоПериода, ДЕНЬ), НАЧАЛОПЕРИОДА(КонецПериода, ДЕНЬ), ДЕНЬ) >= 1");
	Условия.Добавить("НЕ СпособРаспределенияОбъемаПомещения = ЗНАЧЕНИЕ(Перечисление.энргСпособыРаспределенияОбъема.ФиксированныйОбъем)");
	Условия.Добавить("НЕ РасчетТолькоПоПоказаниям");
	Условия.Добавить(
	"ВЫБОР
	|		КОГДА Псевдоним.ЗависитОтУслуги = ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|			ТОГДА Псевдоним.ЕстьСреднийПоВсемТочкамУслуги
	|		ИНАЧЕ Псевдоним.ЕстьСреднийПоВсемТочкамУслугиЗависитОтУслуги
	|	КОНЕЦ");	
	//Условия.Добавить(
	//"ВЫБОР
	//|		КОГДА Псевдоним.КорректироватьГодовойОбъем И Псевдоним.НеПрименятьСезонность
	//|			ТОГДА Истина
	//|		ИНАЧЕ МожноНачислятьСреднее
	//|	КОНЕЦ");
	
	Пакет 		= Схема.ПакетЗапросов[Схема.ПакетЗапросов.Количество()-1];
	Оператор 	= Пакет.Операторы[Пакет.Операторы.Количество()-1];
	ДобавитьУсловияОператораЗапроса(Оператор.Отбор,Условия,ВычисляемыеПоля,ТаблицаДанныеДляРасчета);
	
КонецПроцедуры

Процедура ДобавитьРасчетОбъемаПотребленногоПоСреднему(Схема,ВыбираемыеПоля, ВычисляемыеПоля, МВТ, ТаблицаДанныеДляРасчета)
	
	ПереопределяемыеПоля 	= Новый Структура;
		
	ПереопределяемыеПоля.Вставить("ОбъемУслуги", 				"0");
	ПереопределяемыеПоля.Вставить("ОбъемУслугиПотребленный",	"__ОбъемУслугиПотребленныйПоСреднему__ * __ДлительностьПериода__ * __КоэффициентДляНачисленияСреднего__");
	ПереопределяемыеПоля.Вставить("Сумма", 						"0");
	ПереопределяемыеПоля.Вставить("СниматьНачисленныйСредний", 	
	"ВЫБОР 
	|		КОГДА НЕ ПриборВведен И НачислятьСреднийПотребленныйОбъемДо >= ПериодНачисления
	|			ТОГДА ЛОЖЬ 
	|		ИНАЧЕ ИСТИНА 
	|	КОНЕЦ");
	ПереопределяемыеПоля.Вставить("СпособНачисления", 			"ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.НачислениеПоСреднему)");
	ПереопределяемыеПоля.Вставить("НачальныеПоказания", 		"0");
	ПереопределяемыеПоля.Вставить("КонечныеПоказания", 			"0");
	ПереопределяемыеПоля.Вставить("ПовыщающийКоэффициент", 		"1");
	ПереопределяемыеПоля.Вставить("ЗначениеСоциальнойНормы", 
	"ВЫБОР
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.ПустаяСсылка)
	|			ТОГДА -1
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.СоциальнаяНормаРавнаНормативуПотребления)
	|			ТОГДА __ОбъемУслугиПоНорме__
	|		ИНАЧЕ ВЫБОР
	|				КОГДА НЕ Псевдоним.ЗначениеПлощади = 0
	|					ТОГДА __ОбъемУслугиПотребленныйПоСреднему__ * __ДлительностьПериода__ * (__КоличествоЧеловек__ * Псевдоним.СоциальнаяНормаПотребления + Псевдоним.ДопСоциальнаяНормаПотребления) / Псевдоним.ЗначениеПлощади
	|				ИНАЧЕ 0
	|			 КОНЕЦ
	|	КОНЕЦ");	
	ПереопределяемыеПоля.Вставить("ЗначениеСоциальнойНормыРасчетныйСпособ",
	"ВЫБОР
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.ПустаяСсылка)
	|			ТОГДА __ОбъемУслугиПоНорме__ * __ДлительностьПериодаПоНормативу__ * ВЫБОР
	|					КОГДА Псевдоним.НормативПоДням
	|							И НЕ Псевдоним.НеПрименятьСезонность
	|						ТОГДА Псевдоним.ДнейВПериоде
	|					ИНАЧЕ 1 
	|				КОНЕЦ
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.СоциальнаяНормаРавнаНормативуПотребления)
	|			ТОГДА __ОбъемУслугиПоНорме__ * ВЫБОР
	|					КОГДА Псевдоним.НормативПоДням
	|							И НЕ Псевдоним.НеПрименятьСезонность
	|						ТОГДА Псевдоним.ДнейВПериоде
	|					ИНАЧЕ 1 
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА НЕ Псевдоним.ЗначениеПлощади = 0
	|					ТОГДА __ОбъемУслугиПотребленныйПоСреднему__ * __ДлительностьПериода__ * (__КоличествоЧеловек__ * Псевдоним.СоциальнаяНормаПотребления + Псевдоним.ДопСоциальнаяНормаПотребления)/ Псевдоним.ЗначениеПлощади
	|				ИНАЧЕ 0
	|			 КОНЕЦ
	|	КОНЕЦ");
	
	ПереопределяемыеПоля.Вставить("ОбъемУслугиПотери",				"0");
	ПереопределяемыеПоля.Вставить("ОбъемУслугиПотребленныйПотери",	"__ОбъемУслугиПоСреднему__ * __ДлительностьПериода__ * (Псевдоним.ПотериПроцент / 100) + Псевдоним.ПотериОбъем");
	
	ПодставитьВычисляемыПоля(Схема, МВТ, ТаблицаДанныеДляРасчета, ВыбираемыеПоля, ВычисляемыеПоля, ПереопределяемыеПоля);
		
	Условия 				= Новый Массив;
	Условия.Добавить("НЕ КоэффициентСезоностиОбъемПотребленный = 0");
	Условия.Добавить("
	|ВЫБОР
	|	КОГДА ПриборВведен
	|		ТОГДА НЕ ДанныеДляРасчета.ПоказанияВСрок
	|	КОГДА НачислятьСреднийПотребленныйОбъемДо >= ПериодНачисления
	|		ТОГДА ДанныеДляРасчета.СреднийОбъемПотребленный > 0
	|	ИНАЧЕ ЛОЖЬ 
	|КОНЕЦ");
	Условия.Добавить("РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(НачалоПериода, ДЕНЬ), НАЧАЛОПЕРИОДА(КонецПериода, ДЕНЬ), ДЕНЬ) >= 1");
	Условия.Добавить("НЕ СпособРаспределенияОбъемаПомещения = ЗНАЧЕНИЕ(Перечисление.энргСпособыРаспределенияОбъема.ФиксированныйОбъем)");
	Условия.Добавить("НЕ РасчетТолькоПоПоказаниям");
	Условия.Добавить(
	"ВЫБОР
	|		КОГДА Псевдоним.ЗависитОтУслуги = ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|			ТОГДА Псевдоним.ЕстьСреднийПотребленныйПоВсемТочкамУслуги
	|		ИНАЧЕ Псевдоним.ЕстьСреднийПотребленныйПоВсемТочкамУслугиЗависитОтУслуги
	|	КОНЕЦ");
	//Условия.Добавить(
	//"ВЫБОР
	//|		КОГДА Псевдоним.КорректироватьГодовойОбъем И Псевдоним.НеПрименятьСезонность
	//|			ТОГДА Истина
	//|		ИНАЧЕ МожноНачислятьСреднее
	//|	КОНЕЦ");
	
	Пакет 		= Схема.ПакетЗапросов[Схема.ПакетЗапросов.Количество()-1];
	Оператор 	= Пакет.Операторы[Пакет.Операторы.Количество()-1];
	ДобавитьУсловияОператораЗапроса(Оператор.Отбор,Условия, ВычисляемыеПоля,ТаблицаДанныеДляРасчета);
	
КонецПроцедуры 

#КонецОбласти

Функция ВыбираемыеПоляРезультатНачисления() 
	
	ВыбираемыПоля = Новый Массив;
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","Организация","ОрганизацияПлательщика"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ПериодНачисления"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","Район"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","МКД"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ЧастныйСектор"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","Строение"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","Помещение"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ПомещениеРодитель"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ПорядокПомещения"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ПорядокСпособРаспределенияОбъемаПомещения"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","Абонент"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ТочкаУчета"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ТочкаУчетаРодитель"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","Услуга"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ЗависитОтУслуги"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ПриборУчета"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","Шкала"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ТарифнаяЗона"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ПриборВведен"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","НачалоПериода"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","КонецПериода"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ДокументНачисления"));	
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ДокументНачисленияПометкаУдаления"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","Поставщик"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","КоэффициентСезоности"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","НачальныеПоказания"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","КонечныеПоказания"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","РасчетПоФормуле"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ЗависимаяТочкаУчета"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","КоэффициентФормула"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ЗначениеПлощади"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","КоличествоПрописанных"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","КоличествоСобственников"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","КоличествоПроживающих"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","КоличествоЖильцов"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ВидПлощади"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ПоказанияВСрок"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","КоэффициентПУ"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ТарифнаяГруппа"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ВидБлагоустройства"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ВидДифференцированности"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","КоличествоКомнат"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ДатаПоверки"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ЗакрытаяСхемаГВС"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","СоставнаяУслуга"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","УмножатьНаНормуРодительскойУслуги"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ПлощадьМОП"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ПлощадьАбонентов"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ПлощадьСобственнаяПоставка"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","НаправлениеИспользованияТУ"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","Измеритель"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","СпособРаспределенияОбъемаПомещения"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ФиксированныйОбъемПотребления"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ДоляПотребленияЧислитель"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ДоляПотребленияЗнаменатель"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","КоэффициентРаспределенияОстатка"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ЗавершениеОП"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","УдалитьЗапись"));	
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","НеПрименятьСезонность"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","НачислятьНорму"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","НачислятьПоПрибору"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","Техническая"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ЕстьСреднийПоВсемТочкамУслуги"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","КлючПомещения"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","НормаПотребления"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","СпособНачисления"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ЗначениеТарифа"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ЗначениеТарифаСверхНорматива"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ЗначениеТарифаРЭК"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ОбъемУслугиПотребленный"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ОбъемУслуги"));	
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ОбъемУслугиПотери"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ОбъемУслугиПотребленныйПотери"));	
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","Сумма"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ПовыщающийКоэффициент"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","СниматьНачисленныйСредний"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ЗначениеСоциальнойНормы"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ЗначениеСоциальнойНормыРасчетныйСпособ"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","КоличествоИзмеретелейНаправления"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","КлючНорматива"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","КлючСоцНорматива"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","СоциальнаяНормаЗависитОтРасхода"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","БылУстановленныйПриборВЭтомГоду"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ПрименятьФормулуВсегда"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","РассчитыватьСоцНормуПоСтроке"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","КоэффициентНорматива"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","КоэффициентНормативаНеПрименятьСезонность"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ИспользоватьКоэффициентСдерживанияРостаПлаты"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","НеПрименятьЗависимостьЕслиБольшеОднойТочки"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ПотериОбъем"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ПотериПроцент"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","СтроениеПредставление"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ПомещениеПредставление"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","СоциальнаяНормаПотребления"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ДопСоциальнаяНормаПотребления"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ФизЛицо"));
	
	Возврат ВыбираемыПоля;
КонецФункции

Функция ВычисляемыеПоляРезультатНачисления()
	КоличествоДней = "(ВЫБОР 
	|		КОГДА Псевдоним.ДниИспользованияУслугПриОтсутствии >= 0 
	|			ТОГДА Псевдоним.ДниИспользованияУслугПриОтсутствии 	
	|		ИНАЧЕ РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(Псевдоним.НачалоПериода, ДЕНЬ), НАЧАЛОПЕРИОДА(Псевдоним.КонецПериода, ДЕНЬ), ДЕНЬ) 
	|	КОНЕЦ ";
	
	ВычисляемыеПоля = Новый Структура;
	ВычисляемыеПоля.Вставить("НачалоПериода",		"НАЧАЛОПЕРИОДА(Псевдоним.НачалоПериода, ДЕНЬ)");
	ВычисляемыеПоля.Вставить("Абонент",
	"ВЫБОР
	|	КОГДА Псевдоним.Плательщик = ЗНАЧЕНИЕ(Справочник.энргАбоненты.ПустаяСсылка)
	|		ТОГДА Псевдоним.Абонент
	|	ИНАЧЕ Псевдоним.Плательщик
	|КОНЕЦ");
		
	#Область ПорядокПомещения
	
	ВычисляемыеПоля.Вставить("НормаПотребления", 	"
	|	ВЫРАЗИТЬ(Псевдоним.НормаПотребления  * ВЫБОР
	|		КОГДА Псевдоним.НеПрименятьСезонность
	|			ТОГДА Псевдоним.КоэффициентНормативаНеПрименятьСезонность
	|		ИНАЧЕ Псевдоним.КоэффициентНорматива
	|	КОНЕЦ КАК ЧИСЛО(15,6))");
	
	#КонецОбласти
	
	#Область ПорядокПомещения
	
	ВычисляемыеПоля.Вставить("ДлительностьПериодаПоНормативу", 
	КоличествоДней + " / ВЫБОР
	|				КОГДА Псевдоним.НормативПоДням
	|						И НЕ Псевдоним.НеПрименятьСезонность
	|					ТОГДА 1
	|				ИНАЧЕ Псевдоним.ДнейВПериоде
	|			КОНЕЦ)");
	
	ВычисляемыеПоля.Вставить("ДлительностьПериодаПоНормативуОбъемПотребленный", 
	КоличествоДней + " / ВЫБОР
	|		КОГДА Псевдоним.НормативПоДням
	|			ТОГДА 1
	|		ИНАЧЕ Псевдоним.ДнейВПериоде
	|	КОНЕЦ)");	
	
	ВычисляемыеПоля.Вставить("ДлительностьПериода", 
	КоличествоДней + " / Псевдоним.ДнейВПериоде)");
	
	#КонецОбласти 
	
	#Область ПорядокПомещения
	
	ВычисляемыеПоля.Вставить("ПорядокПомещения", 	"
	|	ВЫБОР
	|		КОГДА ПомещениеРодитель = Помещение
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ");
	
	#КонецОбласти
	
	#Область ПорядокСпособРаспределенияОбъемаПомещения
	
	ВычисляемыеПоля.Вставить("ПорядокСпособРаспределенияОбъемаПомещения", "
	|	ВЫБОР
	|		КОГДА СпособРаспределенияОбъемаПомещения = ЗНАЧЕНИЕ(Перечисление.энргСпособыРаспределенияОбъема.Остаток)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ");
	
	#КонецОбласти
	
	#Область РасходПоПоказаниям
	
	ВычисляемыеПоля.Вставить("РасходПоПоказаниям",	"
	|ВЫБОР
	|			КОГДА РегистрируетОбъем
	|					И НЕ КонечныеПоказания = ДанныеДляРасчета.НачальныеПоказания
	|				ТОГДА КонечныеПоказания
	|			КОГДА РегистрируетОбъем
	|				ТОГДА 0
	|			КОГДА КонечныеПоказания < НачальныеПоказания
	|				ТОГДА МаксимальноВозможныеПоказания - НачальныеПоказания + КонечныеПоказания
	|			ИНАЧЕ КонечныеПоказания - НачальныеПоказания
	|		КОНЕЦ * КоэффициентПУ");
	
	#КонецОбласти
	
	#Область ЗначениеТарифаПоПриборам
	
	ВычисляемыеПоля.Вставить("ЗначениеТарифаПоПриборам","
	|	 ВЫБОР
	|		КОГДА ДанныеДляРасчета.СледующийРегистратор = НЕОПРЕДЕЛЕНО
	|			ТОГДА ДанныеДляРасчета.ЗначениеТарифа
	|		КОГДА ДанныеДляРасчета.СледующийРегистратор ЕСТЬ NULL
	|			ТОГДА ДанныеДляРасчета.ЗначениеТарифа
	|		КОГДА ТИПЗНАЧЕНИЯ(ДанныеДляРасчета.СледующийРегистратор) = ТИП(Документ.энргУстановитьЗначениеТарифа)
	|			ТОГДА ДанныеДляРасчета.ПредыдущееЗначениеТарифа
	|		ИНАЧЕ ДанныеДляРасчета.ЗначениеТарифа
	|	КОНЕЦ");	
	
	#КонецОбласти
	
	#Область ЗначениеТарифаСверхНормативаПоПриборам
	
	ВычисляемыеПоля.Вставить("ЗначениеТарифаСверхНормативаПоПриборам","
	|	ВЫБОР
	|		КОГДА ДанныеДляРасчета.СледующийРегистратор = НЕОПРЕДЕЛЕНО
	|			ТОГДА ДанныеДляРасчета.ЗначениеТарифаСверхНорматива
	|		КОГДА ДанныеДляРасчета.СледующийРегистратор ЕСТЬ NULL
	|			ТОГДА ДанныеДляРасчета.ЗначениеТарифаСверхНорматива
	|		КОГДА ТИПЗНАЧЕНИЯ(ДанныеДляРасчета.СледующийРегистратор) = ТИП(Документ.энргУстановитьЗначениеТарифа)
	|			ТОГДА ДанныеДляРасчета.ПредыдущееЗначениеТарифаСверхНорматива
	|		ИНАЧЕ ДанныеДляРасчета.ЗначениеТарифаСверхНорматива
	|	КОНЕЦ"); 	
	
	#КонецОбласти
	
	#Область ЗначениеТарифаРЭКПоПриборам
	
	ВычисляемыеПоля.Вставить("ЗначениеТарифаРЭКПоПриборам","
	|	ВЫБОР
	|		КОГДА ДанныеДляРасчета.СледующийРегистратор = НЕОПРЕДЕЛЕНО
	|			ТОГДА ДанныеДляРасчета.ЗначениеТарифаРЭК
	|		КОГДА ДанныеДляРасчета.СледующийРегистратор ЕСТЬ NULL
	|			ТОГДА ДанныеДляРасчета.ЗначениеТарифаРЭК
	|		КОГДА ТИПЗНАЧЕНИЯ(ДанныеДляРасчета.СледующийРегистратор) = ТИП(Документ.энргУстановитьЗначениеТарифа)
	|			ТОГДА ДанныеДляРасчета.ПредыдущееЗначениеТарифаРЭК
	|		ИНАЧЕ ДанныеДляРасчета.ЗначениеТарифаРЭК
	|	КОНЕЦ");	
	
	#КонецОбласти
	
	#Область ОбъемУслугиПоНорме
	
	ВычисляемыеПоля.Вставить("ОбъемУслугиПоНорме", 
	"Псевдоним.КоэффициентСезоности * ВЫРАЗИТЬ(Псевдоним.НормаПотребления * ВЫБОР
	|		КОГДА Псевдоним.НеПрименятьСезонность
	|			ТОГДА Псевдоним.КоэффициентНормативаНеПрименятьСезонность
	|		ИНАЧЕ Псевдоним.КоэффициентНорматива
	|	КОНЕЦ КАК ЧИСЛО(15,6)) * ВЫБОР
	|		КОГДА НЕ Псевдоним.НаправлениеИспользованияТУ = ЗНАЧЕНИЕ(Справочник.энргНаправлениеИспользованияТочекУчета.ОсновноеНаправление)
	|				И Псевдоним.ЕстьИзмерителиНаправления
	|			ТОГДА Псевдоним.КоличествоИзмеретелейНаправления
	|		КОГДА Псевдоним.СпособРасчетаНорматива = ЗНАЧЕНИЕ(Перечисление.энргСпособРасчетаНорматива.ЗначениеПлощади)
	|			ТОГДА Псевдоним.ЗначениеПлощади
	|		КОГДА Псевдоним.Абонент = ЗНАЧЕНИЕ(Справочник.энргАбоненты.ПустаяСсылка)
	|			ТОГДА Псевдоним.КоличествоЖильцов 	
	|		КОГДА Псевдоним.СпособРасчетаНорматива = ЗНАЧЕНИЕ(Перечисление.энргСпособРасчетаНорматива.КоличествоПроживающих)
	|			ТОГДА Псевдоним.КоличествоПроживающих
	|		КОГДА Псевдоним.СпособРасчетаНорматива = ЗНАЧЕНИЕ(Перечисление.энргСпособРасчетаНорматива.КоличествоПрописанных)
	|			ТОГДА Псевдоним.КоличествоПрописанных
	|		КОГДА Псевдоним.СпособРасчетаНорматива = ЗНАЧЕНИЕ(Перечисление.энргСпособРасчетаНорматива.КоличествоСобственников)
	|			ТОГДА Псевдоним.КоличествоСобственников
	|		КОГДА Псевдоним.СпособРасчетаНорматива = ЗНАЧЕНИЕ(Перечисление.энргСпособРасчетаНорматива.КоличествоЧеловек)
	|        	ТОГДА ВЫБОР
	|					КОГДА НЕ Псевдоним.КоличествоПроживающих = 0
	|						ТОГДА Псевдоним.КоличествоПроживающих
	|					КОГДА НЕ Псевдоним.КоличествоПрописанных = 0
	|						ТОГДА Псевдоним.КоличествоПрописанных
	|					ИНАЧЕ Псевдоним.КоличествоСобственников
	|				КОНЕЦ
	|	КОНЕЦ * ВЫБОР
	|		КОГДА Псевдоним.ИспользоватьКоэффициентСдерживанияРостаПлаты
	|				И НЕ Псевдоним.МКД = ЗНАЧЕНИЕ(Справочник.энргСтроения.Пустаяссылка)
	|			ТОГДА ВЫБОР
	|					КОГДА Псевдоним.ПлощадьАбонентов - Псевдоним.ПлощадьСобственнаяПоставка + Псевдоним.ПлощадьМОП = 0
	|						ТОГДА 0
	|					ИНАЧЕ (Псевдоним.ПлощадьАбонентов - Псевдоним.ПлощадьСобственнаяПоставка) / (Псевдоним.ПлощадьАбонентов - Псевдоним.ПлощадьСобственнаяПоставка + Псевдоним.ПлощадьМОП)
	|				КОНЕЦ
	|		ИНАЧЕ 1
	|	КОНЕЦ");
	
	#КонецОбласти
	
	ВычисляемыеПоля.Вставить("КоличествоЧеловек", 
	"ВЫБОР
	|	КОГДА Псевдоним.Абонент = ЗНАЧЕНИЕ(Справочник.энргАбоненты.ПустаяСсылка)
	|		ТОГДА Псевдоним.КоличествоЖильцов
	|	КОГДА Псевдоним.СпособРасчетаНорматива = ЗНАЧЕНИЕ(Перечисление.энргСпособРасчетаНорматива.КоличествоПроживающих)
	|		ТОГДА Псевдоним.КоличествоПроживающих
	|	КОГДА Псевдоним.СпособРасчетаНорматива = ЗНАЧЕНИЕ(Перечисление.энргСпособРасчетаНорматива.КоличествоПрописанных)
	|		ТОГДА Псевдоним.КоличествоПрописанных
	|	КОГДА Псевдоним.СпособРасчетаНорматива = ЗНАЧЕНИЕ(Перечисление.энргСпособРасчетаНорматива.КоличествоСобственников)
	|		ТОГДА Псевдоним.КоличествоСобственников
	|	КОГДА Псевдоним.СпособРасчетаНорматива = ЗНАЧЕНИЕ(Перечисление.энргСпособРасчетаНорматива.КоличествоЧеловек)
	|		ТОГДА ВЫБОР
	|				КОГДА НЕ Псевдоним.КоличествоПроживающих = 0
	|					ТОГДА Псевдоним.КоличествоПроживающих
	|				КОГДА НЕ Псевдоним.КоличествоПрописанных = 0
	|					ТОГДА Псевдоним.КоличествоПрописанных
	|				ИНАЧЕ Псевдоним.КоличествоСобственников
	|			КОНЕЦ
	|КОНЕЦ");
	
	#Область ОбъемУслугиПотребленныйПоНорме
	
	ВычисляемыеПоля.Вставить("ОбъемУслугиПотребленныйПоНорме", 
	"ВЫРАЗИТЬ(Псевдоним.НормаПотребления * Псевдоним.КоэффициентНорматива КАК  ЧИСЛО(15,6)) * ВЫБОР
	|		КОГДА НЕ Псевдоним.НаправлениеИспользованияТУ = ЗНАЧЕНИЕ(Справочник.энргНаправлениеИспользованияТочекУчета.ОсновноеНаправление)
	|				И Псевдоним.ЕстьИзмерителиНаправления
	|			ТОГДА Псевдоним.КоличествоИзмеретелейНаправления
	|		КОГДА Псевдоним.СпособРасчетаНорматива = ЗНАЧЕНИЕ(Перечисление.энргСпособРасчетаНорматива.ЗначениеПлощади)
	|			ТОГДА Псевдоним.ЗначениеПлощади
	|		КОГДА Псевдоним.Абонент = ЗНАЧЕНИЕ(Справочник.энргАбоненты.ПустаяСсылка)
	|			ТОГДА Псевдоним.КоличествоЖильцов 	
	|		КОГДА Псевдоним.СпособРасчетаНорматива = ЗНАЧЕНИЕ(Перечисление.энргСпособРасчетаНорматива.КоличествоПроживающих)
	|			ТОГДА Псевдоним.КоличествоПроживающих
	|		КОГДА Псевдоним.СпособРасчетаНорматива = ЗНАЧЕНИЕ(Перечисление.энргСпособРасчетаНорматива.КоличествоПрописанных)
	|			ТОГДА Псевдоним.КоличествоПрописанных
	|		КОГДА Псевдоним.СпособРасчетаНорматива = ЗНАЧЕНИЕ(Перечисление.энргСпособРасчетаНорматива.КоличествоСобственников)
	|			ТОГДА Псевдоним.КоличествоСобственников
	|		КОГДА Псевдоним.СпособРасчетаНорматива = ЗНАЧЕНИЕ(Перечисление.энргСпособРасчетаНорматива.КоличествоЧеловек)
	|        	ТОГДА ВЫБОР
	|					КОГДА НЕ Псевдоним.КоличествоПроживающих = 0
	|						ТОГДА Псевдоним.КоличествоПроживающих
	|					КОГДА НЕ Псевдоним.КоличествоПрописанных = 0
	|						ТОГДА Псевдоним.КоличествоПрописанных
	|					ИНАЧЕ Псевдоним.КоличествоСобственников
	|				КОНЕЦ
	|	КОНЕЦ * ВЫБОР
	|		КОГДА Псевдоним.ИспользоватьКоэффициентСдерживанияРостаПлаты
	|				И НЕ Псевдоним.МКД = ЗНАЧЕНИЕ(Справочник.энргСтроения.Пустаяссылка)
	|			ТОГДА ВЫБОР
	|					КОГДА Псевдоним.ПлощадьАбонентов - Псевдоним.ПлощадьСобственнаяПоставка + Псевдоним.ПлощадьМОП = 0
	|						ТОГДА 0
	|					ИНАЧЕ (Псевдоним.ПлощадьАбонентов - Псевдоним.ПлощадьСобственнаяПоставка) / (Псевдоним.ПлощадьАбонентов - Псевдоним.ПлощадьСобственнаяПоставка + Псевдоним.ПлощадьМОП)
	|				КОНЕЦ
	|		ИНАЧЕ 1
	|	КОНЕЦ");
	
	#КонецОбласти
	
	#Область ОбъемУслугиПоСреднему
	
	ВычисляемыеПоля.Вставить("ОбъемУслугиПоСреднему", 
	"ВЫБОР
	|		КОГДА НЕ Псевдоним.ЗависитОтУслуги = ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|			ТОГДА Псевдоним.СреднийОбъемЗависитОтУслуги
	|		ИНАЧЕ Псевдоним.СреднийОбъем
	|	КОНЕЦ * КоэффициентПУ");
	
	#КонецОбласти
	
	#Область ОбъемУслугиПотребленныйПоСреднему
	
	ВычисляемыеПоля.Вставить("ОбъемУслугиПотребленныйПоСреднему", 
	"ВЫБОР
	|		КОГДА НЕ Псевдоним.ЗависитОтУслуги = ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|			ТОГДА Псевдоним.СреднийОбъемПотребленныйЗависитОтУслуги
	|		ИНАЧЕ Псевдоним.СреднийОбъемПотребленный
	|	КОНЕЦ * КоэффициентПУ");
	
	#КонецОбласти
	
	#Область ЗначениеСоциальнойНормы
	
	ВычисляемыеПоля.Вставить("ЗначениеСоциальнойНормы", 
	"ВЫБОР
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.ПустаяСсылка)
	|			ТОГДА -1
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.СоциальнаяНормаРавнаНормативуПотребления)
	|			ТОГДА __ОбъемУслугиПоНорме__
	|		ИНАЧЕ __НормаПотребления__ * (__КоличествоЧеловек__ * Псевдоним.СоциальнаяНормаПотребления + Псевдоним.ДопСоциальнаяНормаПотребления) 
	|	КОНЕЦ"); 	
	
	#КонецОбласти
	
	#Область ЗначениеСоциальнойНормыРасчетныйСпособ
	
	ВычисляемыеПоля.Вставить("ЗначениеСоциальнойНормыРасчетныйСпособ",
	"ВЫБОР
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.ПустаяСсылка)
	|			ТОГДА __ОбъемУслугиПоНорме__ * ВЫБОР
	|					КОГДА Псевдоним.НормативПоДням
	|							И НЕ Псевдоним.НеПрименятьСезонность
	|						ТОГДА Псевдоним.ДнейВПериоде
	|					ИНАЧЕ 1 
	|				КОНЕЦ
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.СоциальнаяНормаРавнаНормативуПотребления)
	|			ТОГДА __ОбъемУслугиПоНорме__ * ВЫБОР
	|					КОГДА Псевдоним.НормативПоДням
	|							И НЕ Псевдоним.НеПрименятьСезонность
	|						ТОГДА Псевдоним.ДнейВПериоде
	|					ИНАЧЕ 1 
	|				КОНЕЦ
	|		ИНАЧЕ __НормаПотребления__ * (__КоличествоЧеловек__ * Псевдоним.СоциальнаяНормаПотребления + Псевдоним.ДопСоциальнаяНормаПотребления)
	|	КОНЕЦ");
	
	#КонецОбласти
	
	#Область СоциальнаяНормаЗависитОтРасхода
	
	ВычисляемыеПоля.Вставить("СоциальнаяНормаЗависитОтРасхода",
	"ВЫБОР
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		КОГДА Псевдоним.СпособОпределенияСоциальнойНормы = ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияСоциальнойНормы.СоциальнаяНормаРавнаНормативуПотребления)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ");
	
	#КонецОбласти
	 
	#Область ПовыщающийКоэффициент
	
	ВычисляемыеПоля.Вставить("ПовыщающийКоэффициент",
	"ВЫБОР КОГДА Псевдоним.ПроцентВетхости > 0 
	|			ТОГДА 1 
	|		ИНАЧЕ ВЫБОР
	|				КОГДА НЕ Псевдоним.ПовышающийКоэффициент = -1
	|					И НЕ Псевдоним.НетВозможностьУстановкиПУ
	|				ТОГДА Псевдоним.ПовышающийКоэффициент
	|			ИНАЧЕ 1
	|		КОНЕЦ 
	|КОНЕЦ");
	
	#КонецОбласти
	
	#Область ПовыщающийКоэффициент
	
	ВычисляемыеПоля.Вставить("КоэффициентДляНачисленияСреднего", 
	"  ВЫБОР
	|				КОГДА Псевдоним.КорректироватьГодовойОбъем И Псевдоним.НеПрименятьСезонность
	|					ТОГДА 1
	|				КОГДА Псевдоним.МожноНачислятьСреднее
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ");
	
	#КонецОбласти

	Возврат ВычисляемыеПоля;
	
КонецФункции

Процедура ПодставитьВычисляемыПоля(Схема, МВТ, ТаблицаДанныеДляРасчета, ВыбираемыеПоля, ВычисляемыеПоля, ПереопределяемыеПоля)
	
	НоваяСхема  				= Ложь;
	Если Схема = Неопределено Тогда
		Схема					= Новый СхемаЗапроса;
		НоваяСхема 				= Истина;
	КонецЕсли;
	
	Пакет  						= Схема.ПакетЗапросов[Схема.ПакетЗапросов.Количество() - 1];
	Если Не НоваяСхема  Тогда
		
		Пакет.Операторы.Добавить();
	КонецЕсли;
	
	Оператор 					= Пакет.Операторы[Пакет.Операторы.Количество()-1];
	Источник 					= Оператор.Источники.Добавить(Тип("ОписаниеВременнойТаблицыСхемыЗапроса"),ТаблицаДанныеДляРасчета,ТаблицаДанныеДляРасчета).Источник;
	
	Для Каждого Колонка Из МВТ.Таблицы[ТаблицаДанныеДляРасчета].Колонки Цикл
		Источник.ДоступныеПоля.Добавить(Колонка.Имя,Колонка.ТипЗначения);
	КонецЦикла;   	
		
	Для Сч = 0 По ВыбираемыеПоля.ВГраница() Цикл
		ИндексКолонки 			= Неопределено;
		Если Не НоваяСхема Тогда
			Колонка 			= Пакет.Колонки[Сч];
			ИндексКолонки 		= Пакет.Колонки.Индекс(Колонка);
		КонецЕсли;
		
		ОписаниеКолонки 		= ВыбираемыеПоля[Сч];
		ИмяКолонки 				= ?(ОписаниеКолонки.ВыбираемоеПоле = Неопределено ИЛИ ПустаяСтрока(ОписаниеКолонки.ВыбираемоеПоле),ОписаниеКолонки.Псевдоним,ОписаниеКолонки.ВыбираемоеПоле );
		
		Если ПереопределяемыеПоля.Свойство(ИмяКолонки) Тогда 			
			ЗначениеПоля 		= ПодставитьПараметрыВФормулу(ПереопределяемыеПоля[ИмяКолонки],ВычисляемыеПоля, ТаблицаДанныеДляРасчета);			
		ИначеЕсли ВычисляемыеПоля.Свойство(ИмяКолонки) Тогда			
			ЗначениеПоля 		= ПодставитьПараметрыВФормулу(ВычисляемыеПоля[ИмяКолонки],ВычисляемыеПоля, ТаблицаДанныеДляРасчета);						
		Иначе 			
			ЗначениеПоля 		=  ИмяКолонки; 			
		КонецЕсли;
				
		Если ИндексКолонки = Неопределено Тогда
			Оператор.ВыбираемыеПоля.Добавить(ЗначениеПоля);	
		Иначе
			Оператор.ВыбираемыеПоля.Добавить(ЗначениеПоля,ИндексКолонки);			
		КонецЕсли; 	
		
		Если НоваяСхема Тогда
			Колонка 			= Пакет.Колонки[Пакет.Колонки.Количество()-1];
			Колонка.Псевдоним 	= ОписаниеКолонки.Псевдоним;
		КонецЕсли;		
	КонецЦикла;
КонецПроцедуры

Процедура ДобавитьУсловияОператораЗапроса(Отбор,Условия,ВычисляемыеПоля, ТаблицаДанныеДляРасчета)
	
	Для Сч = 0 По Условия.ВГраница() Цикл		
		Формула	= ПодставитьПараметрыВФормулу(Условия[Сч],ВычисляемыеПоля, ТаблицаДанныеДляРасчета); 		
		Отбор.Добавить(Формула);
	КонецЦикла;	
	
КонецПроцедуры

Функция ПодставитьПараметрыВФормулу(Знач Формула, ВычисляемыеПоля, ТаблицаДанныеДляРасчета)
	
	Результат 						= Формула; 	
	Если НЕ СтрНайти(Формула,"__") = 0  Тогда				
		ТекущаяПозиция 				= 1;
		НачалоПараметра  			= СтрНайти(Результат,"__",,1,1);
		ОкончаниеПараметра 			= СтрНайти(Результат,"__",,1,2);
		Пока НЕ ОкончаниеПараметра = 0 Цикл 										
			КлючВычисляемогоПоля 	= Сред(Результат,НачалоПараметра+2,ОкончаниеПараметра-НачалоПараметра-2);
			врФормула  				= ВычисляемыеПоля[КлючВычисляемогоПоля];
			Результат 				= СтрЗаменить(Результат,"__" + КлючВычисляемогоПоля + "__" , врФормула);
			НачалоПараметра  		= СтрНайти(Результат,"__",,ОкончаниеПараметра+1,1);
			ОкончаниеПараметра 		= СтрНайти(Результат,"__",,ОкончаниеПараметра+1,2);
		КонецЦикла;
						
	КонецЕсли;
	
	Результат 						= СтрЗаменить(Результат,"Псевдоним." , ТаблицаДанныеДляРасчета + ".");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область НачислениеЛьгот

Функция ПолучитьТекстЗапросаДляЛьготников()
	Возврат
	
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.Район КАК Район,
	|	ВложенныйЗапрос.ЧастныйСектор КАК ЧастныйСектор,
	|	ВложенныйЗапрос.Строение КАК Строение,
	|	ВложенныйЗапрос.Помещение КАК Помещение,
	|	ВложенныйЗапрос.Абонент КАК Абонент,
	|	ВложенныйЗапрос.Услуга КАК Услуга,
	|	ВложенныйЗапрос.Поставщик КАК Поставщик,
	|	ВложенныйЗапрос.ЗначениеТарифа КАК ЗначениеТарифа,
	|	ВложенныйЗапрос.НачалоПериода КАК НачалоПериода,
	|	ВложенныйЗапрос.КонецПериода КАК КонецПериода,
	|	ВложенныйЗапрос.КолвоЖильцов КАК КолвоЖильцов,
	|	ВложенныйЗапрос.НормаПотребления КАК НормаПотребления,
	|	ВложенныйЗапрос.ОбъемУслуги КАК ОбъемУслуги,
	|	энргВидыУслуг.ВидПлощади <> ЗНАЧЕНИЕ(Перечисление.энргВидыПлощадей.пустаяссылка) КАК РасчетПоПлощади
	|ПОМЕСТИТЬ энргОбъемНачислений
	|ИЗ
	|	(ВЫБРАТЬ
	|		&Организация КАК Организация,
	|		&Район КАК Район,
	|		энргОбъемНачислений.ЧастныйСектор КАК ЧастныйСектор,
	|		энргОбъемНачислений.Строение КАК Строение,
	|		энргОбъемНачислений.Помещение КАК Помещение,
	|		энргОбъемНачислений.Абонент КАК Абонент,
	|		энргОбъемНачислений.Услуга КАК Услуга,
	|		энргОбъемНачислений.Поставщик КАК Поставщик,
	|		энргОбъемНачислений.ЗначениеТарифа КАК ЗначениеТарифа,
	|		энргОбъемНачислений.НачалоПериода КАК НачалоПериода,
	|		энргОбъемНачислений.КонецПериода КАК КонецПериода,
	|		ВЫБОР
	|			КОГДА энргОбъемНачислений.КоличествоПроживающих <> 0
	|				ТОГДА энргОбъемНачислений.КоличествоПроживающих
	|			КОГДА энргОбъемНачислений.КоличествоПрописанных <> 0
	|				ТОГДА энргОбъемНачислений.КоличествоПрописанных
	|			КОГДА энргОбъемНачислений.КоличествоСобственников <> 0
	|				ТОГДА энргОбъемНачислений.КоличествоСобственников
	|		КОНЕЦ КАК КолвоЖильцов,
	|		энргОбъемНачислений.НормаПотребления КАК НормаПотребления,
	|		ВЫБОР
	|			КОГДА энргОбъемНачислений.Услуга.ВидПлощади = ЗНАЧЕНИЕ(Перечисление.энргВидыПлощадей.пустаяссылка)
	|				ТОГДА энргОбъемНачислений.ОбъемУслуги
	|			ИНАЧЕ энргОбъемНачислений.ЗначениеПлощади
	|		КОНЕЦ КАК ОбъемУслуги
	|	ИЗ
	|		(ВЫБРАТЬ
	|			энргОбъемНачисленийОбороты.Период КАК Период,
	|			энргОбъемНачисленийОбороты.Регистратор КАК Регистратор,
	|			энргОбъемНачисленийОбороты.НомерСтроки КАК НомерСтроки
	|		ИЗ
	|			РегистрНакопления.энргОбъемНачислений.Обороты(
	|					&НачалоПериода,
	|					&КонецПериода,
	|					Запись,
	|					Организация = &Организация
	|						И Район = &Район
	|						И ЧастныйСектор = &ЧастныйСектор
	|						И Строение = &Строение) КАК энргОбъемНачисленийОбороты) КАК ВложенныйЗапрос
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.энргОбъемНачислений КАК энргОбъемНачислений
	|			ПО ВложенныйЗапрос.Период = энргОбъемНачислений.Период
	|				И ВложенныйЗапрос.Регистратор = энргОбъемНачислений.Регистратор
	|				И ВложенныйЗапрос.НомерСтроки = энргОбъемНачислений.НомерСтроки) КАК ВложенныйЗапрос
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг КАК энргВидыУслуг
	|		ПО ВложенныйЗапрос.Услуга = энргВидыУслуг.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	энргВзаиморасчетыПоМесяцамОстатки.Организация КАК Организация,
	|	энргВзаиморасчетыПоМесяцамОстатки.Район КАК Район,
	|	энргВзаиморасчетыПоМесяцамОстатки.МКД КАК МКД,
	|	энргВзаиморасчетыПоМесяцамОстатки.Услуга КАК Услуга,
	|	энргВзаиморасчетыПоМесяцамОстатки.Абонент КАК Абонент,
	|	энргВзаиморасчетыПоМесяцамОстатки.Поставщик КАК Поставщик
	|ПОМЕСТИТЬ энргВзаиморасчетыПоМесяцамОстатки
	|ИЗ
	|	РегистрНакопления.энргВзаиморасчетыПоМесяцам.Остатки(
	|			&МесяцЗадолженности,
	|			Организация = &Организация
	|				И Район = &Район
	|				И МКД = &Строение
	|				И ПериодНачисления <= &МесяцЗадолженности) КАК энргВзаиморасчетыПоМесяцамОстатки
	|ГДЕ
	|	энргВзаиморасчетыПоМесяцамОстатки.СуммаОстаток > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	энргОбъемНачислений.Абонент КАК Абонент,
	|	энргОбъемНачислений.Район КАК Район,
	|	энргОбъемНачислений.Организация КАК Организация,
	|	энргОбъемНачислений.Строение КАК Строение,
	|	энргОбъемНачислений.ЗначениеТарифа КАК ЗначениеТарифа,
	|	энргОбъемНачислений.НачалоПериода КАК НачалоПериода,
	|	энргОбъемНачислений.КонецПериода КАК КонецПериода,
	|	энргОбъемНачислений.КолвоЖильцов КАК КолвоЖильцов,
	|	энргОбъемНачислений.НормаПотребления КАК НормаПотребления,
	|	энргОбъемНачислений.ОбъемУслуги КАК ОбъемУслуги,
	|	энргОбъемНачислений.Услуга КАК Услуга,
	|	энргОбъемНачислений.Поставщик КАК Поставщик,
	|	энргОбъемНачислений.РасчетПоПлощади КАК РасчетПоПлощади
	|ПОМЕСТИТЬ ВТ_ТолькоПоОтборам
	|ИЗ
	|	энргОбъемНачислений КАК энргОбъемНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ энргВзаиморасчетыПоМесяцамОстатки КАК энргВзаиморасчетыПоМесяцамОстатки
	|		ПО энргОбъемНачислений.Организация = энргВзаиморасчетыПоМесяцамОстатки.Организация
	|			И энргОбъемНачислений.Район = энргВзаиморасчетыПоМесяцамОстатки.Район
	|			И энргОбъемНачислений.Строение = энргВзаиморасчетыПоМесяцамОстатки.МКД
	|			И энргОбъемНачислений.Услуга = энргВзаиморасчетыПоМесяцамОстатки.Услуга
	|			И энргОбъемНачислений.Абонент = энргВзаиморасчетыПоМесяцамОстатки.Абонент
	|			И энргОбъемНачислений.Поставщик = энргВзаиморасчетыПоМесяцамОстатки.Поставщик
	|ГДЕ
	|	энргВзаиморасчетыПоМесяцамОстатки.Организация ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Начало КАК Период,
	|	энргПроживаниеЖильцовСрезПоследних.Жилец КАК Жилец,
	|	энргПроживаниеЖильцовСрезПоследних.Состояние КАК Состояние,
	|	ВТ_ТолькоПоОтборам.Абонент КАК Абонент
	|ПОМЕСТИТЬ ВТ_Жильцы
	|ИЗ
	|	РегистрСведений.энргПроживаниеЖильцов.СрезПоследних(&Начало, ) КАК энргПроживаниеЖильцовСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТолькоПоОтборам КАК ВТ_ТолькоПоОтборам
	|		ПО энргПроживаниеЖильцовСрезПоследних.Организация = ВТ_ТолькоПоОтборам.Организация
	|			И энргПроживаниеЖильцовСрезПоследних.Район = ВТ_ТолькоПоОтборам.Район
	|			И энргПроживаниеЖильцовСрезПоследних.Абонент = ВТ_ТолькоПоОтборам.Абонент
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(энргПроживаниеЖильцов.Период, ДЕНЬ),
	|	энргПроживаниеЖильцов.Жилец,
	|	энргПроживаниеЖильцов.Состояние,
	|	ВТ_ТолькоПоОтборам.Абонент
	|ИЗ
	|	РегистрСведений.энргПроживаниеЖильцов КАК энргПроживаниеЖильцов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТолькоПоОтборам КАК ВТ_ТолькоПоОтборам
	|		ПО энргПроживаниеЖильцов.Организация = ВТ_ТолькоПоОтборам.Организация
	|			И энргПроживаниеЖильцов.Район = ВТ_ТолькоПоОтборам.Район
	|			И энргПроживаниеЖильцов.Абонент = ВТ_ТолькоПоОтборам.Абонент
	|ГДЕ
	|	энргПроживаниеЖильцов.Период МЕЖДУ &Начало И &Конец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Жильцы.Период КАК ПериодС,
	|	Жильцы.Жилец КАК Жилец,
	|	Жильцы.Состояние КАК Состояние,
	|	ЕСТЬNULL(Жильцы1.Период, &Конец) КАК ПериодПо,
	|	Жильцы.Абонент КАК Абонент
	|ПОМЕСТИТЬ СтабильныеТолькоДляЖильцов
	|ИЗ
	|	ВТ_Жильцы КАК Жильцы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Жильцы КАК Жильцы1
	|		ПО Жильцы.Период < Жильцы1.Период
	|			И Жильцы.Жилец = Жильцы1.Жилец
	|ГДЕ
	|	Жильцы.Период <> &Конец
	|;
	|
	|ВЫБРАТЬ
	|	энргЖильцыЛьготныхКатегорийСрезПоследних.Жилец КАК Жилец,
	|	ВЫБОР
	|		КОГДА энргЖильцыЛьготныхКатегорийСрезПоследних.Состояние
	|			ТОГДА энргЖильцыЛьготныхКатегорийСрезПоследних.ЛьготнаяКатегория
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.энргЛьготныеКатегории.пустаяссылка)
	|	КОНЕЦ КАК Льгота,
	|	&Начало КАК Период,
	|	ВТ_ТолькоПоОтборам.Абонент КАК Абонент
	|ПОМЕСТИТЬ ВТ_Льготы
	|ИЗ
	|	ВТ_ТолькоПоОтборам КАК ВТ_ТолькоПоОтборам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.энргЖильцыЛьготныхКатегорий.СрезПоследних(&Начало, ) КАК энргЖильцыЛьготныхКатегорийСрезПоследних
	|		ПО ВТ_ТолькоПоОтборам.Абонент = энргЖильцыЛьготныхКатегорийСрезПоследних.Абонент
	|			И ВТ_ТолькоПоОтборам.Район = энргЖильцыЛьготныхКатегорийСрезПоследних.Район
	|			И ВТ_ТолькоПоОтборам.Организация = энргЖильцыЛьготныхКатегорийСрезПоследних.Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	энргЖильцыЛьготныхКатегорий.Жилец,
	|	ВЫБОР
	|		КОГДА энргЖильцыЛьготныхКатегорий.Состояние
	|			ТОГДА энргЖильцыЛьготныхКатегорий.ЛьготнаяКатегория
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.энргЛьготныеКатегории.пустаяссылка)
	|	КОНЕЦ,
	|	НАЧАЛОПЕРИОДА(энргЖильцыЛьготныхКатегорий.Период, ДЕНЬ),
	|	ВТ_ТолькоПоОтборам.Абонент
	|ИЗ
	|	РегистрСведений.энргЖильцыЛьготныхКатегорий КАК энргЖильцыЛьготныхКатегорий
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТолькоПоОтборам КАК ВТ_ТолькоПоОтборам
	|		ПО энргЖильцыЛьготныхКатегорий.Организация = ВТ_ТолькоПоОтборам.Организация
	|			И энргЖильцыЛьготныхКатегорий.Район = ВТ_ТолькоПоОтборам.Район
	|			И энргЖильцыЛьготныхКатегорий.Абонент = ВТ_ТолькоПоОтборам.Абонент
	|ГДЕ
	|	энргЖильцыЛьготныхКатегорий.Период МЕЖДУ &Начало И &Конец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Жильцы.Период КАК Период,
	|	ВТ_Жильцы.Жилец КАК Жилец
	|ПОМЕСТИТЬ ПериодыЖильцыЛьготы
	|ИЗ
	|	ВТ_Жильцы КАК ВТ_Жильцы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_Льготы.Период,
	|	ВТ_Льготы.Жилец
	|ИЗ
	|	ВТ_Льготы КАК ВТ_Льготы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПериодыЖильцыЛьготы.Период КАК Период,
	|	ПериодыЖильцыЛьготы.Жилец КАК Жилец
	|ПОМЕСТИТЬ ПериодЖЛБезПовт
	|ИЗ
	|	ПериодыЖильцыЛьготы КАК ПериодыЖильцыЛьготы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодЖЛБезПовт.Период КАК ПериодС,
	|	ПериодЖЛБезПовт.Жилец КАК Жилец,
	|	МИНИМУМ(ЕСТЬNULL(ПериодЖЛБезПовт1.Период, &Конец)) КАК ПериодПо
	|ПОМЕСТИТЬ СтабильныеПериодыДляВсехБезРесурсов
	|ИЗ
	|	ПериодЖЛБезПовт КАК ПериодЖЛБезПовт
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПериодЖЛБезПовт КАК ПериодЖЛБезПовт1
	|		ПО ПериодЖЛБезПовт.Жилец = ПериодЖЛБезПовт1.Жилец
	|			И ПериодЖЛБезПовт.Период < ПериодЖЛБезПовт1.Период
	|ГДЕ
	|	ПериодЖЛБезПовт.Период <> &Конец
	|
	|СГРУППИРОВАТЬ ПО
	|	ПериодЖЛБезПовт.Период,
	|	ПериодЖЛБезПовт.Жилец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Льготы.Жилец КАК Жилец,
	|	ВТ_Льготы.Период КАК ПериодС,
	|	ЕСТЬNULL(ВТ_Льготы1.Период, &Конец) КАК ПериодПо,
	|	ВТ_Льготы.Льгота КАК Льгота
	|ПОМЕСТИТЬ СтабильныеПериодыТолькоДляЛьгот
	|ИЗ
	|	ВТ_Льготы КАК ВТ_Льготы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Льготы КАК ВТ_Льготы1
	|		ПО ВТ_Льготы.Жилец = ВТ_Льготы1.Жилец
	|			И ВТ_Льготы.Период < ВТ_Льготы1.Период
	|ГДЕ
	|	ВТ_Льготы.Период <> &Конец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтабильныеПериодыДляВсехБезРесурсов.ПериодС КАК ПериодС,
	|	СтабильныеПериодыДляВсехБезРесурсов.ПериодПо КАК ПериодПо,
	|	СтабильныеПериодыДляВсехБезРесурсов.Жилец КАК Жилец,
	|	СтабильныеПериодыТолькоДляЛьгот.Льгота КАК Льгота,
	|	СтабильныеТолькоДляЖильцов.Состояние КАК Состояние,
	|	СтабильныеТолькоДляЖильцов.Абонент КАК Абонент
	|ПОМЕСТИТЬ ОбъединенныеСтабильныеПериоды
	|ИЗ
	|	СтабильныеПериодыДляВсехБезРесурсов КАК СтабильныеПериодыДляВсехБезРесурсов
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтабильныеТолькоДляЖильцов КАК СтабильныеТолькоДляЖильцов
	|		ПО СтабильныеПериодыДляВсехБезРесурсов.Жилец = СтабильныеТолькоДляЖильцов.Жилец
	|			И СтабильныеПериодыДляВсехБезРесурсов.ПериодС >= СтабильныеТолькоДляЖильцов.ПериодС
	|			И СтабильныеПериодыДляВсехБезРесурсов.ПериодПо <= СтабильныеТолькоДляЖильцов.ПериодПо
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтабильныеПериодыТолькоДляЛьгот КАК СтабильныеПериодыТолькоДляЛьгот
	|		ПО СтабильныеПериодыДляВсехБезРесурсов.Жилец = СтабильныеПериодыТолькоДляЛьгот.Жилец
	|			И СтабильныеПериодыДляВсехБезРесурсов.ПериодС >= СтабильныеПериодыТолькоДляЛьгот.ПериодС
	|			И СтабильныеПериодыДляВсехБезРесурсов.ПериодПо <= СтабильныеПериодыТолькоДляЛьгот.ПериодПо
	|ГДЕ
	|	СтабильныеТолькоДляЖильцов.Состояние = ЗНАЧЕНИЕ(Перечисление.энргСостояниеЖильцов.регистрация)
	|	И СтабильныеПериодыТолькоДляЛьгот.Льгота <> ЗНАЧЕНИЕ(Справочник.энргЛьготныеКатегории.Пустаяссылка)
	|;
	|
	|ВЫБРАТЬ
	|	ВТ_ТолькоПоОтборам.НачалоПериода КАК Период,
	|	ВТ_ТолькоПоОтборам.Абонент КАК Абонент
	|ПОМЕСТИТЬ ОбъединениеПериодовСНачислениями
	|ИЗ
	|	ВТ_ТолькоПоОтборам КАК ВТ_ТолькоПоОтборам
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ТолькоПоОтборам.КонецПериода,
	|	ВТ_ТолькоПоОтборам.Абонент
	|ИЗ
	|	ВТ_ТолькоПоОтборам КАК ВТ_ТолькоПоОтборам
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОбъединенныеСтабильныеПериоды.ПериодС,
	|	ОбъединенныеСтабильныеПериоды.Абонент
	|ИЗ
	|	ОбъединенныеСтабильныеПериоды КАК ОбъединенныеСтабильныеПериоды
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОбъединенныеСтабильныеПериоды.ПериодПо,
	|	ОбъединенныеСтабильныеПериоды.Абонент
	|ИЗ
	|	ОбъединенныеСтабильныеПериоды КАК ОбъединенныеСтабильныеПериоды
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОбъединениеПериодовСНачислениями.Период КАК Период,
	|	ОбъединениеПериодовСНачислениями.Абонент КАК Абонент
	|ПОМЕСТИТЬ ОбъединениеПериодовСНачислениямиБезПовт
	|ИЗ
	|	ОбъединениеПериодовСНачислениями КАК ОбъединениеПериодовСНачислениями
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОбъединениеПериодовСНачислениямиБезПовт.Абонент КАК Абонент,
	|	ОбъединениеПериодовСНачислениямиБезПовт.Период КАК ПериодC,
	|	МИНИМУМ(ЕСТЬNULL(ОбъединениеПериодовСНачислениямиБезПовт1.Период, &Конец)) КАК ПериодПо
	|ПОМЕСТИТЬ СтабльныеПериодыБезРесурсовОбъединение
	|ИЗ
	|	ОбъединениеПериодовСНачислениямиБезПовт КАК ОбъединениеПериодовСНачислениямиБезПовт
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОбъединениеПериодовСНачислениямиБезПовт КАК ОбъединениеПериодовСНачислениямиБезПовт1
	|		ПО ОбъединениеПериодовСНачислениямиБезПовт.Период < ОбъединениеПериодовСНачислениямиБезПовт1.Период
	|			И ОбъединениеПериодовСНачислениямиБезПовт.Абонент = ОбъединениеПериодовСНачислениямиБезПовт1.Абонент
	|ГДЕ
	|	ОбъединениеПериодовСНачислениямиБезПовт.Период <> &Конец
	|
	|СГРУППИРОВАТЬ ПО
	|	ОбъединениеПериодовСНачислениямиБезПовт.Период,
	|	ОбъединениеПериодовСНачислениямиБезПовт.Абонент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ТолькоПоОтборам.Абонент КАК Абонент,
	|	ВТ_ТолькоПоОтборам.Район КАК Район,
	|	ВТ_ТолькоПоОтборам.Организация КАК Организация,
	|	ВТ_ТолькоПоОтборам.Строение КАК Строение,
	|	ВТ_ТолькоПоОтборам.ЗначениеТарифа КАК ЗначениеТарифа,
	|	СтабльныеПериодыБезРесурсовОбъединение.ПериодC КАК ПериодC,
	|	СтабльныеПериодыБезРесурсовОбъединение.ПериодПо КАК ПериодПо,
	|	ВТ_ТолькоПоОтборам.КолвоЖильцов КАК КолвоЖильцов,
	|	ВТ_ТолькоПоОтборам.НормаПотребления КАК НормаПотребления,
	|	ВТ_ТолькоПоОтборам.ОбъемУслуги КАК ОбъемУслуги,
	|	ОбъединенныеСтабильныеПериоды.Жилец КАК Жилец,
	|	ОбъединенныеСтабильныеПериоды.Льгота КАК Льгота,
	|	ВТ_ТолькоПоОтборам.Услуга КАК Услуга,
	|	ВТ_ТолькоПоОтборам.РасчетПоПлощади КАК РасчетПоПлощади,
	|	ВТ_ТолькоПоОтборам.Поставщик КАК Поставщик,
	|	РАЗНОСТЬДАТ(ВТ_ТолькоПоОтборам.НачалоПериода, ВТ_ТолькоПоОтборам.КонецПериода, ДЕНЬ) КАК РазностьДатПоНачислениям
	|ПОМЕСТИТЬ ПакетДляРасчетаПодготовка
	|ИЗ
	|	СтабльныеПериодыБезРесурсовОбъединение КАК СтабльныеПериодыБезРесурсовОбъединение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОбъединенныеСтабильныеПериоды КАК ОбъединенныеСтабильныеПериоды
	|		ПО СтабльныеПериодыБезРесурсовОбъединение.Абонент = ОбъединенныеСтабильныеПериоды.Абонент
	|			И СтабльныеПериодыБезРесурсовОбъединение.ПериодC >= ОбъединенныеСтабильныеПериоды.ПериодС
	|			И СтабльныеПериодыБезРесурсовОбъединение.ПериодПо <= ОбъединенныеСтабильныеПериоды.ПериодПо
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТолькоПоОтборам КАК ВТ_ТолькоПоОтборам
	|		ПО СтабльныеПериодыБезРесурсовОбъединение.Абонент = ВТ_ТолькоПоОтборам.Абонент
	|			И СтабльныеПериодыБезРесурсовОбъединение.ПериодC >= ВТ_ТолькоПоОтборам.НачалоПериода
	|			И СтабльныеПериодыБезРесурсовОбъединение.ПериодПо <= ВТ_ТолькоПоОтборам.КонецПериода
	|ГДЕ
	|	ВТ_ТолькоПоОтборам.КолвоЖильцов <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПакетДляРасчетаПодготовка.Абонент КАК Абонент,
	|	ПакетДляРасчетаПодготовка.Район КАК Район,
	|	ПакетДляРасчетаПодготовка.Организация КАК Организация,
	|	ПакетДляРасчетаПодготовка.Строение КАК Строение,
	|	ПакетДляРасчетаПодготовка.ЗначениеТарифа КАК ЗначениеТарифа,
	|	ПакетДляРасчетаПодготовка.ПериодC КАК ПериодC,
	|	ПакетДляРасчетаПодготовка.ПериодПо КАК ПериодПо,
	|	ПакетДляРасчетаПодготовка.КолвоЖильцов КАК КолвоЖильцов,
	|	ПакетДляРасчетаПодготовка.НормаПотребления КАК НормаПотребления,
	|	ПакетДляРасчетаПодготовка.ОбъемУслуги КАК ОбъемУслуги,
	|	ПакетДляРасчетаПодготовка.Жилец КАК Жилец,
	|	ПакетДляРасчетаПодготовка.Льгота КАК Льгота,
	|	ПакетДляРасчетаПодготовка.Услуга КАК Услуга,
	|	энргЗначенияСоциальныхНормативовДляЛьгот.ЗначениеНорматива КАК ЗначениеНорматива,
	|	ПакетДляРасчетаПодготовка.РасчетПоПлощади КАК РасчетПоПлощади,
	|	ЕСТЬNULL(энргЗначенияЛьготныхКатегорий.ПроцентОтНачислений, 0) КАК ПроцентЛьготы,
	|	ПакетДляРасчетаПодготовка.Поставщик КАК Поставщик,
	|	ПакетДляРасчетаПодготовка.РазностьДатПоНачислениям КАК РазностьДатПоНачислениям
	|ПОМЕСТИТЬ ПакетДляРасчета
	|ИЗ
	|	ПакетДляРасчетаПодготовка КАК ПакетДляРасчетаПодготовка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.энргИспользованиеСоцНормативовВУслугах.СрезПоследних(&Конец, ) КАК энргИспользованиеСоцНормативовВУслугахСрезПоследних
	|		ПО ПакетДляРасчетаПодготовка.Услуга = энргИспользованиеСоцНормативовВУслугахСрезПоследних.Услуга
	|			И ПакетДляРасчетаПодготовка.Район = энргИспользованиеСоцНормативовВУслугахСрезПоследних.Район
	|			И ПакетДляРасчетаПодготовка.Организация = энргИспользованиеСоцНормативовВУслугахСрезПоследних.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.энргЗначенияСоциальныхНормативовДляЛьгот.СрезПоследних(&Конец, ) КАК энргЗначенияСоциальныхНормативовДляЛьгот
	|		ПО (энргИспользованиеСоцНормативовВУслугахСрезПоследних.Использование)
	|			И ПакетДляРасчетаПодготовка.Организация = энргЗначенияСоциальныхНормативовДляЛьгот.Организация
	|			И ПакетДляРасчетаПодготовка.Район = энргЗначенияСоциальныхНормативовДляЛьгот.Район
	|			И ПакетДляРасчетаПодготовка.КолвоЖильцов = энргЗначенияСоциальныхНормативовДляЛьгот.КоличествоПрописанных
	|			И ПакетДляРасчетаПодготовка.Услуга = энргЗначенияСоциальныхНормативовДляЛьгот.Услуга
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.энргЗначенияЛьготныхКатегорий.СрезПоследних(&Конец, ) КАК энргЗначенияЛьготныхКатегорий
	|		ПО ПакетДляРасчетаПодготовка.Организация = энргЗначенияЛьготныхКатегорий.Организация
	|			И ПакетДляРасчетаПодготовка.Район = энргЗначенияЛьготныхКатегорий.Район
	|			И ПакетДляРасчетаПодготовка.Льгота = энргЗначенияЛьготныхКатегорий.ЛьготнаяКатегория
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПакетДляРасчета.Абонент КАК Абонент,
	|	ПакетДляРасчета.Район КАК Район,
	|	ПакетДляРасчета.Организация КАК Организация,
	|	ПакетДляРасчета.Строение КАК Строение,
	|	ПакетДляРасчета.ЗначениеТарифа КАК ЗначениеТарифа,
	|	МИНИМУМ(ПакетДляРасчета.ПериодC) КАК НачалоПериода,
	|	МАКСИМУМ(ПакетДляРасчета.ПериодПо) КАК КонецПериода,
	|	ПакетДляРасчета.Жилец КАК Жилец,
	|	ПакетДляРасчета.Льгота КАК ЛьготнаяКатегория,
	|	ПакетДляРасчета.ПроцентЛьготы КАК ПроцентЛьготы,
	|	ПакетДляРасчета.Услуга КАК Услуга,
	|	энргНачислениеДляЛьготныхЛиц.Ссылка КАК СсылкаНаСущДок,
	|	энргНачислениеДляЛьготныхЛиц.ПометкаУдаления КАК ПометкаУдаления,
	|	ПакетДляРасчета.Поставщик КАК Поставщик,
	|	СУММА(ВЫБОР
	|			КОГДА ПакетДляРасчета.РасчетПоПлощади
	|				ТОГДА ВЫБОР
	|						КОГДА ПакетДляРасчета.ОбъемУслуги / ПакетДляРасчета.КолвоЖильцов < ПакетДляРасчета.ЗначениеНорматива
	|							ТОГДА ПакетДляРасчета.ОбъемУслуги / ПакетДляРасчета.КолвоЖильцов
	|						ИНАЧЕ ПакетДляРасчета.ЗначениеНорматива
	|					КОНЕЦ * ПакетДляРасчета.ПроцентЛьготы * 0.01 * ПакетДляРасчета.ЗначениеТарифа * ПакетДляРасчета.НормаПотребления * (РАЗНОСТЬДАТ(ПакетДляРасчета.ПериодC, ПакетДляРасчета.ПериодПо, ДЕНЬ) / ПакетДляРасчета.РазностьДатПоНачислениям)
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ПакетДляРасчета.ОбъемУслуги / ПакетДляРасчета.КолвоЖильцов < ПакетДляРасчета.НормаПотребления
	|						ТОГДА ПакетДляРасчета.ОбъемУслуги / ПакетДляРасчета.КолвоЖильцов
	|					ИНАЧЕ ПакетДляРасчета.НормаПотребления
	|				КОНЕЦ * ПакетДляРасчета.ПроцентЛьготы * 0.01 * ПакетДляРасчета.ЗначениеТарифа * (РАЗНОСТЬДАТ(ПакетДляРасчета.ПериодC, ПакетДляРасчета.ПериодПо, ДЕНЬ) / ПакетДляРасчета.РазностьДатПоНачислениям)
	|		КОНЕЦ) КАК СуммаЛьготы
	|ИЗ
	|	ПакетДляРасчета КАК ПакетДляРасчета
	|		ПОЛНОЕ СОЕДИНЕНИЕ Документ.энргНачислениеДляЛьготныхЛиц КАК энргНачислениеДляЛьготныхЛиц
	|		ПО ПакетДляРасчета.Район = энргНачислениеДляЛьготныхЛиц.Район
	|			И ПакетДляРасчета.Организация = энргНачислениеДляЛьготныхЛиц.Организация
	|			И ПакетДляРасчета.Строение = энргНачислениеДляЛьготныхЛиц.МКД
	|			И (энргНачислениеДляЛьготныхЛиц.Дата = &КонецМинусСекунда)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПакетДляРасчета.Абонент,
	|	ПакетДляРасчета.Район,
	|	ПакетДляРасчета.Организация,
	|	ПакетДляРасчета.Строение,
	|	ПакетДляРасчета.ЗначениеТарифа,
	|	ПакетДляРасчета.Жилец,
	|	ПакетДляРасчета.Льгота,
	|	ПакетДляРасчета.ПроцентЛьготы,
	|	ПакетДляРасчета.Услуга,
	|	энргНачислениеДляЛьготныхЛиц.Ссылка,
	|	энргНачислениеДляЛьготныхЛиц.ПометкаУдаления,
	|	ПакетДляРасчета.Поставщик
	|
	|УПОРЯДОЧИТЬ ПО
	|	Строение";
КонецФункции 

#КонецОбласти

#Область РаспределениеМКД

Функция ТекстЗапросаВспомогательныеДанныеРаспределениеМКД(Строение)
	
	Текст 							=
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ПериодНачисления КАК ПериодНачисления,
	|	ВложенныйЗапрос.Район КАК Район,
	|	ВложенныйЗапрос.МКД КАК МКД,
	|	ВложенныйЗапрос.Услуга КАК Услуга,
	|	ВложенныйЗапрос.ТочкаУчета КАК ТочкаУчета,
	|	ВложенныйЗапрос.ПлощадьМОП КАК ПлощадьМОП,
	|	ВложенныйЗапрос.СоставнаяУслуга КАК СоставнаяУслуга,
	|	ВложенныйЗапрос.КлючНорматива КАК КлючНорматива,
	|	ВложенныйЗапрос.ЗавершениеОП КАК ЗавершениеОП,
	|	ЕСТЬNULL(ТипПринадлежностиМКД.ВидТепловогоПункта, ЗНАЧЕНИЕ(Перечисление.энргВидыТепловыхПунктов.ПустаяСсылка)) КАК ВидТепловогоПункта,
	|	ЕСТЬNULL(ТипСхемыГВС.ТипСхемы, ЗНАЧЕНИЕ(Перечисление.энргТипыСхемТеплоснабжения.ПустаяСсылка)) КАК ТипСхемы
	|ПОМЕСТИТЬ УслугиМКДРаспределять
	|ИЗ
	|	(ВЫБРАТЬ
	|		энргСтабильныеПериодыМКД.Организация КАК Организация,
	|		энргСтабильныеПериодыМКД.ПериодНачисления КАК ПериодНачисления,
	|		энргСтабильныеПериодыМКД.Район КАК Район,
	|		энргСтабильныеПериодыМКД.МКД КАК МКД,
	|		энргСтабильныеПериодыМКД.Услуга КАК Услуга,
	|		энргСтабильныеПериодыМКД.ТочкаУчета КАК ТочкаУчета,
	|		энргСтабильныеПериодыМКД.ЗначениеПлощади КАК ПлощадьМОП,
	|		энргСтабильныеПериодыМКД.СоставнаяУслуга КАК СоставнаяУслуга,
	|		энргСтабильныеПериодыМКД.КлючНорматива КАК КлючНорматива,
	|		ДокументыДляРаспределения.ЗавершениеОП КАК ЗавершениеОП,
	|		ВидыУслуг.КорректироватьИндивидуальныйОбъемСУчетомОДПУ КАК КорректироватьИндивидуальныйОбъемСУчетомОДПУ
	|	ИЗ
	|		РегистрСведений.энргСтабильныеПериодыМКД КАК энргСтабильныеПериодыМКД
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыДляРаспределения КАК ДокументыДляРаспределения
	|			ПО энргСтабильныеПериодыМКД.Организация = ДокументыДляРаспределения.Организация
	|				И энргСтабильныеПериодыМКД.ПериодНачисления = ДокументыДляРаспределения.ПериодНачисления
	|				И энргСтабильныеПериодыМКД.Район = ДокументыДляРаспределения.Район
	|				И энргСтабильныеПериодыМКД.МКД = ДокументыДляРаспределения.Строение
	|				И (энргСтабильныеПериодыМКД.НомерПозиции = 0)
	|				И (НЕ энргСтабильныеПериодыМКД.НеРаспределятьНаАбонентов)
	|				И (энргСтабильныеПериодыМКД.Организация = &Организация)
	|				И (энргСтабильныеПериодыМКД.Район = &Район)
	|				И (энргСтабильныеПериодыМКД.МКД = &Строение)
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг КАК ВидыУслуг
	|			ПО энргСтабильныеПериодыМКД.Услуга = ВидыУслуг.Ссылка) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ МКДвУК КАК МКДвУК
	|		ПО ВложенныйЗапрос.Организация = МКДвУК.Организация
	|			И ВложенныйЗапрос.Район = МКДвУК.Район
	|			И ВложенныйЗапрос.МКД = МКДвУК.МКД
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.энргТипПринадлежностиМКД.СрезПоследних(&Период, ) КАК ТипПринадлежностиМКД
	|		ПО ВложенныйЗапрос.Организация = ТипПринадлежностиМКД.Организация
	|			И ВложенныйЗапрос.Район = ТипПринадлежностиМКД.Район
	|			И ВложенныйЗапрос.МКД = ТипПринадлежностиМКД.МКД
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.энргТипСхемыГВС.СрезПоследних(&Период, ) КАК ТипСхемыГВС
	|		ПО ВложенныйЗапрос.Организация = ТипСхемыГВС.Организация
	|			И ВложенныйЗапрос.Район = ТипСхемыГВС.Район
	|			И ВложенныйЗапрос.МКД = ТипСхемыГВС.МКД
	|ГДЕ
	|	ВЫБОР
	|			КОГДА МКДвУК.Организация ЕСТЬ NULL
	|				ТОГДА ИСТИНА
	|			КОГДА ВложенныйЗапрос.КорректироватьИндивидуальныйОбъемСУчетомОДПУ
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УслугиМКДРаспределять.Организация КАК Организация,
	|	УслугиМКДРаспределять.ПериодНачисления КАК ПериодНачисления,
	|	УслугиМКДРаспределять.Район КАК Район,
	|	УслугиМКДРаспределять.МКД КАК МКД,
	|	УслугиМКДРаспределять.Услуга КАК Услуга,
	|	УслугиМКДРаспределять.ПлощадьМОП КАК ПлощадьМОП,
	|	"""" КАК ФормулаРасчетаНормативаПотребления,
	|	ЕСТЬNULL(ЗначенияТекущихНормПотребления.ЗначениеНорматива, 0) КАК ЗначениеНорматива,
	|	энргВидыУслуг.ВидПлощади КАК ВидПлощади,
	|	энргВидыУслуг.ЗависитОтУслуги КАК ЗависитОтУслуги,
	|	ЕСТЬNULL(МКДНеНачислятьТЭ.НеНачислять, ЛОЖЬ) КАК НеНачислятьУслугуАбонентам,
	|	УслугиМКДРаспределять.ЗавершениеОП КАК ЗавершениеОП
	|ПОМЕСТИТЬ УслугиМКДРаспределятьВспомогательныеДанные
	|ИЗ
	|	УслугиМКДРаспределять КАК УслугиМКДРаспределять
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг КАК энргВидыУслуг
	|		ПО УслугиМКДРаспределять.Услуга = энргВидыУслуг.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗначенияТекущихНормПотребления КАК ЗначенияТекущихНормПотребления
	|		ПО УслугиМКДРаспределять.Организация = ЗначенияТекущихНормПотребления.Организация
	|			И УслугиМКДРаспределять.ПериодНачисления = ЗначенияТекущихНормПотребления.ПериодНачисления
	|			И УслугиМКДРаспределять.Район = ЗначенияТекущихНормПотребления.Район
	|			И УслугиМКДРаспределять.КлючНорматива = ЗначенияТекущихНормПотребления.КлючНорматива
	|			И УслугиМКДРаспределять.Услуга = ЗначенияТекущихНормПотребления.Услуга
	|		ЛЕВОЕ СОЕДИНЕНИЕ МКДНеНачислятьТЭ КАК МКДНеНачислятьТЭ
	|		ПО УслугиМКДРаспределять.Организация = МКДНеНачислятьТЭ.Организация
	|			И УслугиМКДРаспределять.ПериодНачисления = МКДНеНачислятьТЭ.ПериодНачисления
	|			И УслугиМКДРаспределять.Район = МКДНеНачислятьТЭ.Район
	|			И УслугиМКДРаспределять.МКД = МКДНеНачислятьТЭ.МКД
	|			И УслугиМКДРаспределять.Услуга = МКДНеНачислятьТЭ.Услуга
	|			И УслугиМКДРаспределять.ТипСхемы = МКДНеНачислятьТЭ.ТипСхемы
	|			И УслугиМКДРаспределять.ВидТепловогоПункта = МКДНеНачислятьТЭ.ПринадлежностьКТепловомуПункту
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ПериодНачисления КАК ПериодНачисления,
	|	ВложенныйЗапрос.Район КАК Район,
	|	ВложенныйЗапрос.Строение КАК Строение,
	|	ВложенныйЗапрос.Помещение КАК Помещение,
	|	ВложенныйЗапрос.ОбъектРасчета КАК ОбъектРасчета,
	|	ВложенныйЗапрос.Услуга КАК Услуга,
	|	ВложенныйЗапрос.ТочкаУчета КАК ТочкаУчета,
	|	ВложенныйЗапрос.НомерПозиции КАК НомерПозиции,
	|	ВложенныйЗапрос.ДатаСостоянияЛицевогоСчета КАК ДатаСостоянияЛицевогоСчета,
	|	энргВидыУслуг.НачислятьПоСостояниюНаНачалоРасчетногоПериода КАК НачислятьПоСостояниюНаНачалоРасчетногоПериода
	|ПОМЕСТИТЬ ПоследниеНомераСтрока
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДокументыДляРаспределения.Организация КАК Организация,
	|		ДокументыДляРаспределения.ПериодНачисления КАК ПериодНачисления,
	|		ДокументыДляРаспределения.Район КАК Район,
	|		ДокументыДляРаспределения.Строение КАК Строение,
	|		энргСтабильныеПериоды.Помещение КАК Помещение,
	|		NULL КАК ОбъектРасчета,
	|		энргСтабильныеПериоды.Услуга КАК Услуга,
	|		энргСтабильныеПериоды.ТочкаУчета КАК ТочкаУчета,
	|		МАКСИМУМ(энргСтабильныеПериоды.НомерПозиции) КАК НомерПозиции,
	|		МАКСИМУМ(энргСтабильныеПериоды.ДатаСостоянияЛицевогоСчета) КАК ДатаСостоянияЛицевогоСчета
	|	ИЗ
	|		ДокументыДляРаспределения КАК ДокументыДляРаспределения
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.энргСтабильныеПериоды КАК энргСтабильныеПериоды
	|			ПО ДокументыДляРаспределения.Организация = энргСтабильныеПериоды.Организация
	|				И ДокументыДляРаспределения.ПериодНачисления = энргСтабильныеПериоды.ПериодНачисления
	|				И ДокументыДляРаспределения.Район = энргСтабильныеПериоды.Район
	|				И ДокументыДляРаспределения.Строение = энргСтабильныеПериоды.Строение
	|				И (энргСтабильныеПериоды.Организация = &Организация)
	|				И (энргСтабильныеПериоды.Район = &Район)
	|				И (НЕ энргСтабильныеПериоды.ЧастныйСектор)
	|				И (энргСтабильныеПериоды.Строение = &Строение)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ДокументыДляРаспределения.Организация,
	|		ДокументыДляРаспределения.ПериодНачисления,
	|		ДокументыДляРаспределения.Район,
	|		ДокументыДляРаспределения.Строение,
	|		энргСтабильныеПериоды.Помещение,
	|		энргСтабильныеПериоды.Услуга,
	|		энргСтабильныеПериоды.ТочкаУчета
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ДокументыДляРаспределения.Организация,
	|		ДокументыДляРаспределения.ПериодНачисления,
	|		ДокументыДляРаспределения.Район,
	|		энргНомераСтрокСтабильногоПериода.МКД,
	|		NULL,
	|		энргНомераСтрокСтабильногоПериода.ОбъектРасчета,
	|		энргНомераСтрокСтабильногоПериода.Услуга,
	|		энргНомераСтрокСтабильногоПериода.ТочкаУчета,
	|		МАКСИМУМ(энргНомераСтрокСтабильногоПериода.НомерПозиции),
	|		МАКСИМУМ(ДАТАВРЕМЯ(1, 1, 1))
	|	ИЗ
	|		ДокументыДляРаспределения КАК ДокументыДляРаспределения
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бестНомераСтрокСтабильногоПериодаНП КАК энргНомераСтрокСтабильногоПериода
	|			ПО ДокументыДляРаспределения.Организация = энргНомераСтрокСтабильногоПериода.Организация
	|				И ДокументыДляРаспределения.ПериодНачисления = энргНомераСтрокСтабильногоПериода.ПериодНачисления
	|				И ДокументыДляРаспределения.Район = энргНомераСтрокСтабильногоПериода.Район
	|				И (энргНомераСтрокСтабильногоПериода.Организация = &Организация)
	|				И (энргНомераСтрокСтабильногоПериода.Район = &Район)
	|				И (энргНомераСтрокСтабильногоПериода.МКД = &Строение)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ДокументыДляРаспределения.Организация,
	|		ДокументыДляРаспределения.ПериодНачисления,
	|		ДокументыДляРаспределения.Район,
	|		энргНомераСтрокСтабильногоПериода.ОбъектРасчета,
	|		энргНомераСтрокСтабильногоПериода.Услуга,
	|		энргНомераСтрокСтабильногоПериода.ТочкаУчета,
	|		энргНомераСтрокСтабильногоПериода.МКД) КАК ВложенныйЗапрос
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг КАК энргВидыУслуг
	|		ПО ВложенныйЗапрос.Услуга = энргВидыУслуг.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоследниеНомераСтрока.Организация КАК Организация,
	|	ПоследниеНомераСтрока.ПериодНачисления КАК ПериодНачисления,
	|	ПоследниеНомераСтрока.Район КАК Район,
	|	ПоследниеНомераСтрока.Строение КАК Строение,
	|	энргСтабильныеПериоды.Помещение КАК Помещение,
	|	энргСтабильныеПериоды.Абонент КАК Абонент,
	|	ПоследниеНомераСтрока.Услуга КАК Услуга,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА энргСтабильныеПериоды.ПриборВведен
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоПриборов,
	|	МАКСИМУМ(энргСтабильныеПериоды.ЗначениеПлощади) КАК ЗначениеПлощади,
	|	МАКСИМУМ(энргСтабильныеПериоды.КоличествоЖильцов) КАК КоличествоЖильцов,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА энргСтабильныеПериоды.Абонент.ФизЛицо = энргСтабильныеПериоды.Поставщик
	|					ИЛИ энргСтабильныеПериоды.Поставщик = ЗНАЧЕНИЕ(Справочник.энргКонтрагенты.ПустаяСсылка)
	|				ТОГДА энргСтабильныеПериоды.ЗначениеПлощади
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПлощадьСобственнаяПоставка,
	|	МАКСИМУМ(энргСтабильныеПериоды.ТарифнаяГруппа) КАК ТарифнаяГруппа,
	|	энргСтабильныеПериоды.Поставщик КАК Поставщик,
	|	МАКСИМУМ(ПоследниеНомераСтрока.ДатаСостоянияЛицевогоСчета) КАК ДатаСостоянияЛицевогоСчета,
	|	NULL КАК Договор
	|ПОМЕСТИТЬ АбонентыДляРаспределения
	|ИЗ
	|	ПоследниеНомераСтрока КАК ПоследниеНомераСтрока
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.энргСтабильныеПериоды КАК энргСтабильныеПериоды
	|		ПО ПоследниеНомераСтрока.Организация = энргСтабильныеПериоды.Организация
	|			И ПоследниеНомераСтрока.ПериодНачисления = энргСтабильныеПериоды.ПериодНачисления
	|			И (энргСтабильныеПериоды.Организация = &Организация)
	|			И (энргСтабильныеПериоды.Район = &Район)
	|			И (НЕ энргСтабильныеПериоды.ЧастныйСектор)
	|			И (энргСтабильныеПериоды.Строение = &Строение)
	|			И ПоследниеНомераСтрока.Район = энргСтабильныеПериоды.Район
	|			И ПоследниеНомераСтрока.Строение = энргСтабильныеПериоды.Строение
	|			И ПоследниеНомераСтрока.Помещение = энргСтабильныеПериоды.Помещение
	|			И ПоследниеНомераСтрока.Услуга = энргСтабильныеПериоды.Услуга
	|			И ПоследниеНомераСтрока.ТочкаУчета = энргСтабильныеПериоды.ТочкаУчета
	|			И (ВЫБОР
	|				КОГДА ПоследниеНомераСтрока.НачислятьПоСостояниюНаНачалоРасчетногоПериода
	|					ТОГДА энргСтабильныеПериоды.НомерПозиции = 0
	|				ИНАЧЕ ПоследниеНомераСтрока.НомерПозиции = энргСтабильныеПериоды.НомерПозиции
	|			КОНЕЦ)
	|			И (энргСтабильныеПериоды.УслугаПодключена)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.энргПомещения КАК энргПомещения
	|		ПО ПоследниеНомераСтрока.Помещение = энргПомещения.Ссылка
	|			И (энргПомещения.Родитель = ЗНАЧЕНИЕ(Справочник.энргПомещения.ПустаяСсылка))
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоследниеНомераСтрока.Организация,
	|	ПоследниеНомераСтрока.ПериодНачисления,
	|	ПоследниеНомераСтрока.Район,
	|	ПоследниеНомераСтрока.Строение,
	|	энргСтабильныеПериоды.Помещение,
	|	энргСтабильныеПериоды.Абонент,
	|	ПоследниеНомераСтрока.Услуга,
	|	энргСтабильныеПериоды.Поставщик
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ПоследниеНомераСтрока.Организация,
	|	ПоследниеНомераСтрока.ПериодНачисления,
	|	ПоследниеНомераСтрока.Район,
	|	ПоследниеНомераСтрока.Строение,
	|	энргСтабильныеПериоды.ОбъектРасчета,
	|	энргСтабильныеПериоды.ОбъектРасчета,
	|	ПоследниеНомераСтрока.Услуга,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА энргСтабильныеПериоды.ПриборВведен
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ),
	|	МАКСИМУМ(энргСтабильныеПериоды.ЗначениеПлощади),
	|	МАКСИМУМ(0),
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА энргСтабильныеПериоды.Договор.Контрагент = энргСтабильныеПериоды.Поставщик
	|					ИЛИ энргСтабильныеПериоды.Поставщик = ЗНАЧЕНИЕ(Справочник.энргКонтрагенты.ПустаяСсылка)
	|				ТОГДА энргСтабильныеПериоды.ЗначениеПлощади
	|			ИНАЧЕ 0
	|		КОНЕЦ),
	|	МАКСИМУМ(энргСтабильныеПериоды.ТарифнаяГруппа),
	|	&Поставщик,
	|	ДАТАВРЕМЯ(1, 1, 1),
	|	энргСтабильныеПериоды.Договор
	|ИЗ
	|	ПоследниеНомераСтрока КАК ПоследниеНомераСтрока
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бестСтабильныеПериодыНП КАК энргСтабильныеПериоды
	|		ПО ПоследниеНомераСтрока.Организация = энргСтабильныеПериоды.Организация
	|			И ПоследниеНомераСтрока.ПериодНачисления = энргСтабильныеПериоды.ПериодНачисления
	|			И (энргСтабильныеПериоды.Организация = &Организация)
	|			И (энргСтабильныеПериоды.Район = &Район)
	|			И (энргСтабильныеПериоды.МКД = &Строение)
	|			И ПоследниеНомераСтрока.Район = энргСтабильныеПериоды.Район
	|			И ПоследниеНомераСтрока.Строение = энргСтабильныеПериоды.МКД
	|			И ПоследниеНомераСтрока.ОбъектРасчета = энргСтабильныеПериоды.ОбъектРасчета
	|			И ПоследниеНомераСтрока.Услуга = энргСтабильныеПериоды.Услуга
	|			И ПоследниеНомераСтрока.ТочкаУчета = энргСтабильныеПериоды.ТочкаУчета
	|			И (ВЫБОР
	|				КОГДА ПоследниеНомераСтрока.НачислятьПоСостояниюНаНачалоРасчетногоПериода
	|					ТОГДА энргСтабильныеПериоды.НомерПозиции = 0
	|				ИНАЧЕ ПоследниеНомераСтрока.НомерПозиции = энргСтабильныеПериоды.НомерПозиции
	|			КОНЕЦ)
	|			И (энргСтабильныеПериоды.ДоговорЗаключен)
	|			И (энргСтабильныеПериоды.ОбъектРасчетаПодключен)
	|			И (энргСтабильныеПериоды.УслугаПодключена)
	|			И (энргСтабильныеПериоды.Договор.ТипДоговора <> ЗНАЧЕНИЕ(Перечисление.бестТипыДоговоров.УправляющаяКомпания))
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоследниеНомераСтрока.Организация,
	|	ПоследниеНомераСтрока.ПериодНачисления,
	|	ПоследниеНомераСтрока.Район,
	|	ПоследниеНомераСтрока.Строение,
	|	энргСтабильныеПериоды.Договор,
	|	энргСтабильныеПериоды.ОбъектРасчета,
	|	ПоследниеНомераСтрока.Услуга,
	|	энргСтабильныеПериоды.ОбъектРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоследниеНомераСтрока.Организация КАК Организация,
	|	ПоследниеНомераСтрока.ПериодНачисления КАК ПериодНачисления,
	|	ПоследниеНомераСтрока.Район КАК Район,
	|	ПоследниеНомераСтрока.Строение КАК Строение,
	|	энргПомещения.Родитель КАК ПомещениеРодитель,
	|	энргСтабильныеПериоды.Помещение КАК Помещение,
	|	энргСтабильныеПериоды.Абонент КАК Абонент,
	|	ПоследниеНомераСтрока.Услуга КАК Услуга,
	|	МАКСИМУМ(энргСтабильныеПериоды.СпособРаспределенияОбъемаПомещения) КАК СпособРаспределенияОбъемаПомещения,
	|	МАКСИМУМ(энргСтабильныеПериоды.ФиксированныйОбъемПотребления) КАК ФиксированныйОбъемПотребления,
	|	МАКСИМУМ(энргСтабильныеПериоды.ДоляПотребленияЧислитель) КАК ДоляПотребленияЧислитель,
	|	МАКСИМУМ(энргСтабильныеПериоды.ДоляПотребленияЗнаменатель) КАК ДоляПотребленияЗнаменатель,
	|	МАКСИМУМ(энргСтабильныеПериоды.ЗначениеПлощади) КАК ЗначениеПлощади,
	|	МАКСИМУМ(энргСтабильныеПериоды.КоличествоПроживающих) КАК КоличествоПроживающих,
	|	МАКСИМУМ(энргСтабильныеПериоды.КоличествоПрописанных) КАК КоличествоПрописанных,
	|	МАКСИМУМ(энргСтабильныеПериоды.КоличествоСобственников) КАК КоличествоСобственников,
	|	МАКСИМУМ(энргСтабильныеПериоды.ТарифнаяГруппа) КАК ТарифнаяГруппа,
	|	МАКСИМУМ(энргСтабильныеПериоды.Поставщик) КАК Поставщик,
	|	МАКСИМУМ(ПоследниеНомераСтрока.ДатаСостоянияЛицевогоСчета) КАК ДатаСостоянияЛицевогоСчета,
	|	МАКСИМУМ(энргСтабильныеПериоды.КлючСоцНорматива) КАК КлючСоцНорматива,
	|	МАКСИМУМ(энргСтабильныеПериоды.НаправлениеИспользованияТУ) КАК НаправлениеИспользованияТУ,
	|	МАКСИМУМ(энргСтабильныеПериоды.ДопСоциальнаяНормаПотребления) КАК ДопСоциальнаяНормаПотребления
	|ПОМЕСТИТЬ АбонентыРазделенныеЛицевыеСчета
	|ИЗ
	|	ПоследниеНомераСтрока КАК ПоследниеНомераСтрока
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.энргСтабильныеПериоды КАК энргСтабильныеПериоды
	|		ПО ПоследниеНомераСтрока.Организация = энргСтабильныеПериоды.Организация
	|			И ПоследниеНомераСтрока.ПериодНачисления = энргСтабильныеПериоды.ПериодНачисления
	|			И (энргСтабильныеПериоды.Организация = &Организация)
	|			И (энргСтабильныеПериоды.Район = &Район)
	|			И (НЕ энргСтабильныеПериоды.ЧастныйСектор)
	|			И (энргСтабильныеПериоды.Строение = &Строение)
	|			И ПоследниеНомераСтрока.Район = энргСтабильныеПериоды.Район
	|			И ПоследниеНомераСтрока.Строение = энргСтабильныеПериоды.Строение
	|			И ПоследниеНомераСтрока.Помещение = энргСтабильныеПериоды.Помещение
	|			И ПоследниеНомераСтрока.Услуга = энргСтабильныеПериоды.Услуга
	|			И ПоследниеНомераСтрока.ТочкаУчета = энргСтабильныеПериоды.ТочкаУчета
	|			И (ВЫБОР
	|				КОГДА ПоследниеНомераСтрока.НачислятьПоСостояниюНаНачалоРасчетногоПериода
	|					ТОГДА энргСтабильныеПериоды.НомерПозиции = 0
	|				ИНАЧЕ ПоследниеНомераСтрока.НомерПозиции = энргСтабильныеПериоды.НомерПозиции
	|			КОНЕЦ)
	|			И (энргСтабильныеПериоды.УслугаПодключена)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.энргПомещения КАК энргПомещения
	|		ПО ПоследниеНомераСтрока.Помещение = энргПомещения.Ссылка
	|			И (НЕ энргПомещения.Родитель = ЗНАЧЕНИЕ(Справочник.энргПомещения.ПустаяСсылка))
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоследниеНомераСтрока.Организация,
	|	ПоследниеНомераСтрока.ПериодНачисления,
	|	ПоследниеНомераСтрока.Район,
	|	ПоследниеНомераСтрока.Строение,
	|	энргСтабильныеПериоды.Помещение,
	|	энргПомещения.Родитель,
	|	энргСтабильныеПериоды.Абонент,
	|	ПоследниеНомераСтрока.Услуга
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ПериодНачисления КАК ПериодНачисления,
	|	ВложенныйЗапрос.Район КАК Район,
	|	ВложенныйЗапрос.Строение КАК Строение,
	|	ВложенныйЗапрос.Услуга КАК Услуга,
	|	ВложенныйЗапрос.ВсегоАбонентов КАК ВсегоАбонентов,
	|	ВложенныйЗапрос.ВсегоСУстановелннымПриборомУчета КАК ВсегоСУстановелннымПриборомУчета,
	|	ВложенныйЗапрос.ВсегоПлощадьАбонентов КАК ВсегоПлощадьАбонентов,
	|	ВложенныйЗапрос.ВсегоПлощадьАбонентовСобственнаяПоставка КАК ВсегоПлощадьАбонентовСобственнаяПоставка,
	|	ЕСТЬNULL(ДокументыРаспределенияМКД.ДокументНачисления, ЗНАЧЕНИЕ(Документ.энргРаспределениеМКД.ПустаяСсылка)) КАК ДокументРаспределения,
	|	ВЫБОР
	|		КОГДА энргВидыУслуг.ВидПлощадиМКД = ЗНАЧЕНИЕ(Перечисление.энргВидыПлощадей.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПлощадьМОПУказана,
	|	энргВидыУслуг.КорректироватьИндивидуальныйОбъемСУчетомОДПУ КАК КорректироватьИндивидуальныйОбъемСУчетомОДПУ,
	|	энргВидыУслуг.ЗависитОтУслуги КАК ЗависитОтУслуги
	|ПОМЕСТИТЬ ДанныеМКДПоУслугам
	|ИЗ
	|	(ВЫБРАТЬ
	|		АбонентыДляРаспределения.Организация КАК Организация,
	|		АбонентыДляРаспределения.ПериодНачисления КАК ПериодНачисления,
	|		АбонентыДляРаспределения.Район КАК Район,
	|		АбонентыДляРаспределения.Строение КАК Строение,
	|		АбонентыДляРаспределения.Услуга КАК Услуга,
	|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ АбонентыДляРаспределения.Помещение) КАК ВсегоАбонентов,
	|		СУММА(АбонентыДляРаспределения.КоличествоПриборов) КАК ВсегоСУстановелннымПриборомУчета,
	|		СУММА(АбонентыДляРаспределения.ЗначениеПлощади) КАК ВсегоПлощадьАбонентов,
	|		СУММА(АбонентыДляРаспределения.ПлощадьСобственнаяПоставка) КАК ВсегоПлощадьАбонентовСобственнаяПоставка
	|	ИЗ
	|		АбонентыДляРаспределения КАК АбонентыДляРаспределения
	|	
	|	СГРУППИРОВАТЬ ПО
	|		АбонентыДляРаспределения.Организация,
	|		АбонентыДляРаспределения.ПериодНачисления,
	|		АбонентыДляРаспределения.Район,
	|		АбонентыДляРаспределения.Строение,
	|		АбонентыДляРаспределения.Услуга) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДокументыРаспределенияМКД КАК ДокументыРаспределенияМКД
	|		ПО ВложенныйЗапрос.Организация = ДокументыРаспределенияМКД.Организация
	|			И ВложенныйЗапрос.ПериодНачисления = ДокументыРаспределенияМКД.ПериодНачисления
	|			И ВложенныйЗапрос.Район = ДокументыРаспределенияМКД.Район
	|			И ВложенныйЗапрос.Строение = ДокументыРаспределенияМКД.МКД
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг КАК энргВидыУслуг
	|		ПО ВложенныйЗапрос.Услуга = энргВидыУслуг.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УслугиМКДРаспределятьВспомогательныеДанные.Район КАК Район,
	|	УслугиМКДРаспределятьВспомогательныеДанные.МКД КАК Строение,
	|	УслугиМКДРаспределятьВспомогательныеДанные.Услуга КАК Услуга,
	|	УслугиМКДРаспределятьВспомогательныеДанные.ПлощадьМОП КАК ПлощадьМОП,
	|	УслугиМКДРаспределятьВспомогательныеДанные.ВидПлощади КАК ВидПлощади,
	|	УслугиМКДРаспределятьВспомогательныеДанные.ЗависитОтУслуги КАК ЗависитОтУслуги,
	|	УслугиМКДРаспределятьВспомогательныеДанные.ЗначениеНорматива КАК ЗначениеНорматива,
	|	УслугиМКДРаспределятьВспомогательныеДанные.ФормулаРасчетаНормативаПотребления КАК ФормулаРасчетаНорматива,
	|	УслугиМКДРаспределятьВспомогательныеДанные.НеНачислятьУслугуАбонентам КАК НеНачислятьУслугуАбонентам,
	|	ЕСТЬNULL(НачисленныйОбъемМКД.ОбъемУслугиНормативОборот, 0) КАК ОбъемУслугиНормативОборот,
	|	ЕСТЬNULL(НачисленныйОбъемМКД.ТарифнаяЗона, ЗНАЧЕНИЕ(Справочник.энргТарифныеЗоны.БезРазбивки)) КАК ТарифнаяЗона,
	|	ЕСТЬNULL(НачисленныйОбъемМКД.СпособНачисления, ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.ПустаяСсылка)) КАК СпособНачисления,
	|	ЕСТЬNULL(НачисленныйОбъемМКД.ОбъемУслугиОборот, 0) КАК ОбъемУслугиОборот,
	|	ЕСТЬNULL(НачисленныйОбъемМКД.ОбъемУслугиПотребленныйОборот, 0) КАК ОбъемУслугиПотребленныйОборот,
	|	ЕСТЬNULL(НачисленныйОбъемМКД.ПоказанияПредоставленыОборот, 0) КАК ПоказанияПредоставлены,
	|	ЕСТЬNULL(НачисленныйОбъемМКД.ПоказанияПредоставленыПотребленныйОборот, 0) КАК ПоказанияПредоставленыПотребленный,
	|	ЕСТЬNULL(НачисленныйОбъемМКД.НазначениеПрибораУчета, ЗНАЧЕНИЕ(ПЕречисление.энргНазначениеПУ.ПустаяСсылка)) КАК НазначениеПрибораУчета,
	|	ЕСТЬNULL(ИсторияСоглашенийОРаспределенииСверхнормативногоОДН.РаспределятьПолностью, ЛОЖЬ) КАК РаспределятьПолностью,
	|	УслугиМКДРаспределятьВспомогательныеДанные.ЗавершениеОП КАК ЗавершениеОП
	|ПОМЕСТИТЬ ОбъемыДляРаспределения
	|ИЗ
	|	УслугиМКДРаспределятьВспомогательныеДанные КАК УслугиМКДРаспределятьВспомогательныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ НачисленныйОбъемМКД КАК НачисленныйОбъемМКД
	|		ПО УслугиМКДРаспределятьВспомогательныеДанные.Организация = НачисленныйОбъемМКД.Организация
	|			И УслугиМКДРаспределятьВспомогательныеДанные.ПериодНачисления = НачисленныйОбъемМКД.ПериодНачисления
	|			И УслугиМКДРаспределятьВспомогательныеДанные.Район = НачисленныйОбъемМКД.Район
	|			И УслугиМКДРаспределятьВспомогательныеДанные.МКД = НачисленныйОбъемМКД.МКД
	|			И УслугиМКДРаспределятьВспомогательныеДанные.Услуга = НачисленныйОбъемМКД.Услуга
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИсторияСоглашенийОРаспределенииСверхнормативногоОДН КАК ИсторияСоглашенийОРаспределенииСверхнормативногоОДН
	|		ПО УслугиМКДРаспределятьВспомогательныеДанные.Организация = ИсторияСоглашенийОРаспределенииСверхнормативногоОДН.Организация
	|			И УслугиМКДРаспределятьВспомогательныеДанные.ПериодНачисления = ИсторияСоглашенийОРаспределенииСверхнормативногоОДН.ПериодНачисления
	|			И УслугиМКДРаспределятьВспомогательныеДанные.Район = ИсторияСоглашенийОРаспределенииСверхнормативногоОДН.Район
	|			И УслугиМКДРаспределятьВспомогательныеДанные.МКД = ИсторияСоглашенийОРаспределенииСверхнормативногоОДН.МКД
	|			И УслугиМКДРаспределятьВспомогательныеДанные.Услуга = ИсторияСоглашенийОРаспределенииСверхнормативногоОДН.Услуга
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	энргОбъемНачисленийОбороты.Организация КАК Организация,
	|	энргОбъемНачисленийОбороты.Район КАК Район,
	|	энргОбъемНачисленийОбороты.Распределение КАК Распределение,
	|	энргОбъемНачисленийОбороты.Строение КАК Строение,
	|	энргОбъемНачисленийОбороты.Помещение КАК Помещение,
	|	энргОбъемНачисленийОбороты.Абонент КАК Абонент,
	|	энргОбъемНачисленийОбороты.Услуга КАК Услуга,
	|	энргОбъемНачисленийОбороты.ТочкаУчета КАК ТочкаУчета,
	|	энргОбъемНачисленийОбороты.ВидНачисления КАК ВидНачисления,
	|	энргОбъемНачисленийОбороты.СпособНачисления КАК СпособНачисления,
	|	энргОбъемНачисленийОбороты.НаправлениеИспользованияТУ КАК НаправлениеИспользованияТУ,
	|	энргОбъемНачисленийОбороты.Измеритель КАК Измеритель,
	|	энргОбъемНачисленийОбороты.ПриборУчета КАК ПриборУчета,
	|	энргОбъемНачисленийОбороты.Шкала КАК Шкала,
	|	энргОбъемНачисленийОбороты.ТарифнаяЗона КАК ТарифнаяЗона,
	|	энргОбъемНачисленийОбороты.ЗначениеТарифа КАК ЗначениеТарифа,
	|	энргОбъемНачисленийОбороты.Поставщик КАК Поставщик,
	|	энргОбъемНачисленийОбороты.ПериодРасчета КАК ПериодРасчета,
	|	энргОбъемНачисленийОбороты.ПериодНачисления КАК ПериодНачисления,
	|	энргОбъемНачисленийОбороты.ЧастныйСектор КАК ЧастныйСектор,
	|	энргОбъемНачисленийОбороты.СверхНорматива КАК СверхНорматива,
	|	энргОбъемНачисленийОбороты.Сумма КАК Сумма,
	|	энргОбъемНачисленийОбороты.ОбъемУслуги КАК ОбъемУслуги,
	|	энргОбъемНачисленийОбороты.ОбъемУслугиПотребленный КАК ОбъемУслугиПотребленный,
	|	энргОбъемНачисленийОбороты.ОбъемУслугиСоцНорма КАК ОбъемУслугиСоцНорма,
	|	энргОбъемНачисленийОбороты.СуммаПоПовышенномуКоэффициенту КАК СуммаПоПовышенномуКоэффициенту,
	|	энргОбъемНачисленийОбороты.НачалоПериода КАК НачалоПериода,
	|	энргОбъемНачисленийОбороты.КонецПериода КАК КонецПериода,
	|	энргОбъемНачисленийОбороты.НачальныеПоказания КАК НачальныеПоказания,
	|	энргОбъемНачисленийОбороты.КонечныеПоказания КАК КонечныеПоказания,
	|	энргОбъемНачисленийОбороты.КоличествоКомнат КАК КоличествоКомнат,
	|	энргОбъемНачисленийОбороты.КоличествоПрописанных КАК КоличествоПрописанных,
	|	0 КАК КоличествоЖильцов,
	|	энргОбъемНачисленийОбороты.ЗначениеПлощади КАК ЗначениеПлощади,
	|	энргОбъемНачисленийОбороты.НормаПотребления КАК НормаПотребления,
	|	энргОбъемНачисленийОбороты.КоэффициентПУ КАК КоэффициентПУ,
	|	энргОбъемНачисленийОбороты.РасчетПоФормуле КАК РасчетПоФормуле,
	|	энргОбъемНачисленийОбороты.ВидБлагоустройства КАК ВидБлагоустройства,
	|	энргОбъемНачисленийОбороты.ТарифнаяГруппа КАК ТарифнаяГруппа,
	|	энргОбъемНачисленийОбороты.ДатаПоверки КАК ДатаПоверки,
	|	энргОбъемНачисленийОбороты.ОтключатьВНеполивнойСезон КАК ОтключатьВНеполивнойСезон,
	|	энргОбъемНачисленийОбороты.ЗависимаяТочкаУчета КАК ЗависимаяТочкаУчета,
	|	энргОбъемНачисленийОбороты.КоэффициентФормула КАК КоэффициентФормула,
	|	энргОбъемНачисленийОбороты.ВидДифференцированности КАК ВидДифференцированности,
	|	энргОбъемНачисленийОбороты.ОснованиеПерерасчета КАК ОснованиеПерерасчета,
	|	энргОбъемНачисленийОбороты.ОснованиеПерерасчетаДата КАК ОснованиеПерерасчетаДата,
	|	энргОбъемНачисленийОбороты.ПриборЗависимой КАК ПриборЗависимой,
	|	энргОбъемНачисленийОбороты.СписатьИзНормы КАК СписатьИзНормы,
	|	энргОбъемНачисленийОбороты.ПовыщающийКоэффициент КАК ПовыщающийКоэффициент,
	|	энргОбъемНачисленийОбороты.КоличествоСобственников КАК КоличествоСобственников,
	|	энргОбъемНачисленийОбороты.КоличествоПроживающих КАК КоличествоПроживающих,
	|	энргОбъемНачисленийОбороты.СниматьНачисленныйСредний КАК СниматьНачисленныйСредний,
	|	энргОбъемНачисленийОбороты.ПлощадьМОП КАК ПлощадьМОП,
	|	энргОбъемНачисленийОбороты.ПлощадьАбонентов КАК ПлощадьАбонентов,
	|	энргОбъемНачисленийОбороты.ПлощадьСобственнаяПоставка КАК ПлощадьСобственнаяПоставка,
	|	энргОбъемНачисленийОбороты.КоэффициентРаспределенияОстатка КАК КоэффициентРаспределенияОстатка,
	|	энргОбъемНачисленийОбороты.ЗначениеСоциальнойНормы КАК ЗначениеСоциальнойНормы,
	|	энргОбъемНачисленийОбороты.СоставнаяУслуга КАК СоставнаяУслуга,
	|	энргОбъемНачисленийОбороты.НеПрименятьСезонность КАК НеПрименятьСезонность,
	|	энргОбъемНачисленийОбороты.ПомещениеРодитель КАК ПомещениеРодитель,
	|	энргОбъемНачисленийОбороты.СоциальнаяНормаПотребления КАК СоциальнаяНормаПотребления,
	|	энргОбъемНачисленийОбороты.ЗначениеТарифаСверхНорматива КАК ЗначениеТарифаСверхНорматива,
	|	энргОбъемНачисленийОбороты.ДопСоциальнаяНормаПотребления КАК ДопСоциальнаяНормаПотребления
	|ПОМЕСТИТЬ ОбъемНачислений
	|ИЗ
	|	РегистрНакопления.энргОбъемНачислений КАК энргОбъемНачисленийОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыНачислений КАК ДокументыНачислений
	|		ПО (НАЧАЛОПЕРИОДА(энргОбъемНачисленийОбороты.Период, МЕСЯЦ) = ДокументыНачислений.ПериодНачисления)
	|			И энргОбъемНачисленийОбороты.Регистратор = ДокументыНачислений.ДокументНачисления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	энргОбъемНачисленийОбороты.Организация,
	|	энргОбъемНачисленийОбороты.Район,
	|	энргОбъемНачисленийОбороты.Распределение,
	|	энргОбъемНачисленийОбороты.Строение,
	|	энргОбъемНачисленийОбороты.Помещение,
	|	ЗНАЧЕНИЕ(Справочник.энргАбоненты.ПустаяСсылка),
	|	энргОбъемНачисленийОбороты.Услуга,
	|	энргОбъемНачисленийОбороты.ТочкаУчета,
	|	энргОбъемНачисленийОбороты.ВидНачисления,
	|	энргОбъемНачисленийОбороты.СпособНачисления,
	|	ЗНАЧЕНИЕ(Справочник.энргНаправлениеИспользованияТочекУчета.ОсновноеНаправление),
	|	ЗНАЧЕНИЕ(Справочник.энргНаправлениеИспользованияТочекУчета.ПустаяСсылка),
	|	энргОбъемНачисленийОбороты.ПриборУчета,
	|	энргОбъемНачисленийОбороты.Шкала,
	|	энргОбъемНачисленийОбороты.ТарифнаяЗона,
	|	энргОбъемНачисленийОбороты.ЗначениеТарифа,
	|	энргОбъемНачисленийОбороты.Поставщик,
	|	энргОбъемНачисленийОбороты.ПериодРасчета,
	|	энргОбъемНачисленийОбороты.ПериодНачисления,
	|	энргОбъемНачисленийОбороты.ЧастныйСектор,
	|	энргОбъемНачисленийОбороты.СверхНорматива,
	|	0,
	|	энргОбъемНачисленийОбороты.ОбъемУслуги,
	|	энргОбъемНачисленийОбороты.ОбъемУслугиПотребленный,
	|	0,
	|	0,
	|	энргОбъемНачисленийОбороты.НачалоПериода,
	|	энргОбъемНачисленийОбороты.КонецПериода,
	|	энргОбъемНачисленийОбороты.НачальныеПоказания,
	|	энргОбъемНачисленийОбороты.КонечныеПоказания,
	|	энргОбъемНачисленийОбороты.КоличествоКомнат,
	|	0,
	|	энргОбъемНачисленийОбороты.КоличествоЖильцов,
	|	энргОбъемНачисленийОбороты.ЗначениеПлощади,
	|	энргОбъемНачисленийОбороты.НормаПотребления,
	|	энргОбъемНачисленийОбороты.КоэффициентПУ,
	|	энргОбъемНачисленийОбороты.РасчетПоФормуле,
	|	энргОбъемНачисленийОбороты.ВидБлагоустройства,
	|	энргОбъемНачисленийОбороты.ТарифнаяГруппа,
	|	энргОбъемНачисленийОбороты.ДатаПоверки,
	|	энргОбъемНачисленийОбороты.ОтключатьВНеполивнойСезон,
	|	энргОбъемНачисленийОбороты.ЗависимаяТочкаУчета,
	|	энргОбъемНачисленийОбороты.КоэффициентРасчета,
	|	энргОбъемНачисленийОбороты.ВидДифференцированности,
	|	энргОбъемНачисленийОбороты.ОснованиеПерерасчета,
	|	энргОбъемНачисленийОбороты.ОснованиеПерерасчетаДата,
	|	энргОбъемНачисленийОбороты.ПриборЗависимой,
	|	энргОбъемНачисленийОбороты.СписатьИзНормы,
	|	энргОбъемНачисленийОбороты.ПовыщающийКоэффициент,
	|	0,
	|	0,
	|	энргОбъемНачисленийОбороты.СниматьНачисленныйСредний,
	|	энргОбъемНачисленийОбороты.ПлощадьМОП,
	|	0,
	|	энргОбъемНачисленийОбороты.ПлощадьСобственнаяПоставка,
	|	0,
	|	0,
	|	ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка),
	|	ЛОЖЬ,
	|	ЗНАЧЕНИЕ(Справочник.энргПомещения.Пустаяссылка),
	|	0,
	|	энргОбъемНачисленийОбороты.ЗначениеТарифаСверхНорматива,
	|	0
	|ИЗ
	|	РегистрНакопления.энргОбъемНачисленийПомещенийСРазделеннымиЛС КАК энргОбъемНачисленийОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыНачислений КАК ДокументыНачислений
	|		ПО (НАЧАЛОПЕРИОДА(энргОбъемНачисленийОбороты.Период, МЕСЯЦ) = ДокументыНачислений.ПериодНачисления)
	|			И энргОбъемНачисленийОбороты.Регистратор = ДокументыНачислений.ДокументНачисления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	энргПроцентРаспределенияОтрицательногоОДНСрезПоследних.Организация КАК Организация,
	|	энргПроцентРаспределенияОтрицательногоОДНСрезПоследних.Район КАК Район,
	|	энргПроцентРаспределенияОтрицательногоОДНСрезПоследних.МКД КАК МКД,
	|	энргПроцентРаспределенияОтрицательногоОДНСрезПоследних.Услуга КАК Услуга,
	|	энргПроцентРаспределенияОтрицательногоОДНСрезПоследних.Процент КАК Процент
	|ПОМЕСТИТЬ ПроцентРаспределенияОтрицательногоОДН
	|ИЗ
	|	РегистрСведений.энргПроцентРаспределенияОтрицательногоОДН.СрезПоследних(
	|			&Период,
	|			(Организация, Район, МКД, Услуга) В
	|				(ВЫБРАТЬ
	|					ДанныеМКДПоУслугам.Организация КАК Организация,
	|					ДанныеМКДПоУслугам.Район КАК Район,
	|					ДанныеМКДПоУслугам.Строение КАК Строение,
	|					ДанныеМКДПоУслугам.Услуга КАК Услуга
	|				ИЗ
	|					ДанныеМКДПоУслугам КАК ДанныеМКДПоУслугам)) КАК энргПроцентРаспределенияОтрицательногоОДНСрезПоследних";
	
	Если Строение = Неопределено Тогда		
		Текст 						= СтрЗаменить(Текст,"И (энргРаспределениеМКД.МКД = &Строение)","");
		Текст 						= СтрЗаменить(Текст,"И (энргНомераСтрокСтабильногоПериода.Строение = &Строение)","");
		Текст 						= СтрЗаменить(Текст,"И (энргСтабильныеПериодыМКД.Строение = &Строение)","");
		Текст 						= СтрЗаменить(Текст,"И (энргСтабильныеПериоды.Строение = &Строение)","");		
		Текст 						= СтрЗаменить(Текст,"И Строение = &Строение","");
		Текст 						= СтрЗаменить(Текст,"И (бестОбъектыРасчета.МКД = &Строение)","");
		Текст 						= СтрЗаменить(Текст,"И МКД = &Строение","");
		Текст 						= СтрЗаменить(Текст,"И (энргСтабильныеПериоды.МКД = &Строение)","");
		Текст 						= СтрЗаменить(Текст,"И (энргНомераСтрокСтабильногоПериода.МКД = &Строение)","");
		Текст 						= СтрЗаменить(Текст,"И (энргСтабильныеПериодыМКД.МКД = &Строение)","");
		Текст 						= СтрЗаменить(Текст,"И (энргДокументыНачислений.МКД = &Строение)","");		
	КонецЕсли;
	
	Возврат Текст;
	
КонецФункции

Функция ТекстЗапросаДанныеДляРаспределения(Строение)
	Текст 							= 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.Район КАК Район,
	|	ВложенныйЗапрос.ПериодНачисления КАК ПериодНачисления,
	|	ВложенныйЗапрос.Строение КАК Строение,
	|	ВложенныйЗапрос.Услуга КАК Услуга,
	|	ВложенныйЗапрос.ВсегоАбонентов КАК ВсегоАбонентов,
	|	ВложенныйЗапрос.ПлощадьМОП КАК ПлощадьМОП,
	|	ВложенныйЗапрос.ВсегоСУстановелннымПриборомУчета КАК ВсегоСУстановелннымПриборомУчета,
	|	ВложенныйЗапрос.ВсегоПлощадьАбонентов КАК ВсегоПлощадьАбонентов,
	|	ВложенныйЗапрос.ВсегоПлощадьАбонентовСобственнаяПоставка КАК ВсегоПлощадьАбонентовСобственнаяПоставка,
	|	ВложенныйЗапрос.КорректироватьИндивидуальныйОбъемСУчетомОДПУ КАК КорректироватьИндивидуальныйОбъемСУчетомОДПУ,
	|	ВложенныйЗапрос.ОбъемУслуги КАК ОбъемУслуги,
	|	ВложенныйЗапрос.ОбъемУслугиПотребленный КАК ОбъемУслугиПотребленный,
	|	ВложенныйЗапрос.ОбъемУслугиНорматив КАК ОбъемУслугиНорматив,
	|	ВложенныйЗапрос.РаспределятьПолностью КАК РаспределятьПолностью,
	|	ВложенныйЗапрос.НачисленаТолькоНорма КАК НачисленаТолькоНорма,
	|	ВложенныйЗапрос.ДокументРаспределения КАК ДокументРаспределения,
	|	ВложенныйЗапрос.ЕстьНачислениеПоПриборам КАК ЕстьНачислениеПоПриборам,
	|	ВложенныйЗапрос.СпособНачисления КАК СпособНачисления,
	|	ВложенныйЗапрос.ТарифнаяЗона КАК ТарифнаяЗона,
	|	ВложенныйЗапрос.ПлощадьМОПУказана КАК ПлощадьМОПУказана,
	|	ВложенныйЗапрос.ВидПлощади КАК ВидПлощади,
	|	ВложенныйЗапрос.ЗависитОтУслуги КАК ЗависитОтУслуги,
	|	ВложенныйЗапрос.ЗначениеНорматива КАК ЗначениеНорматива,
	|	ВложенныйЗапрос.ФормулаРасчетаНорматива КАК ФормулаРасчетаНорматива,
	|	ВложенныйЗапрос.НеРаспределятьСверхнорматив КАК НеРаспределятьСверхнорматив,
	|	ВложенныйЗапрос.НеНачислятьУслугуАбонентам КАК НеНачислятьУслугуАбонентам,
	|	ВложенныйЗапрос.ПоказанияПредоставлены КАК ПоказанияПредоставлены,
	|	ВложенныйЗапрос.ПоказанияПредоставленыПотребленный КАК ПоказанияПредоставленыПотребленный,
	|	ВложенныйЗапрос.ЗавершениеОП КАК ЗавершениеОП,
	|	ВложенныйЗапрос.НазначениеПрибораУчета КАК НазначениеПрибораУчета,
	|	ЕСТЬNULL(ПроцентРаспределенияОтрицательногоОДН.Процент, 0) КАК ПроцентРаспределенияОтрицательногоОбъема
	|ПОМЕСТИТЬ ОсновнаяВыборка
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеМКДПоУслугам.Организация КАК Организация,
	|		ДанныеМКДПоУслугам.Район КАК Район,
	|		ДанныеМКДПоУслугам.ПериодНачисления КАК ПериодНачисления,
	|		ДанныеМКДПоУслугам.Строение КАК Строение,
	|		ДанныеМКДПоУслугам.Услуга КАК Услуга,
	|		ДанныеМКДПоУслугам.ВсегоАбонентов КАК ВсегоАбонентов,
	|		ДанныеМКДПоУслугам.ВсегоСУстановелннымПриборомУчета КАК ВсегоСУстановелннымПриборомУчета,
	|		ДанныеМКДПоУслугам.ВсегоПлощадьАбонентов КАК ВсегоПлощадьАбонентов,
	|		ДанныеМКДПоУслугам.ВсегоПлощадьАбонентовСобственнаяПоставка КАК ВсегоПлощадьАбонентовСобственнаяПоставка,
	|		ДанныеМКДПоУслугам.ПлощадьМОПУказана КАК ПлощадьМОПУказана,
	|		ДанныеМКДПоУслугам.КорректироватьИндивидуальныйОбъемСУчетомОДПУ КАК КорректироватьИндивидуальныйОбъемСУчетомОДПУ,
	|		СУММА(ОбъемыДляРаспределения.ОбъемУслугиОборот) КАК ОбъемУслуги,
	|		СУММА(ОбъемыДляРаспределения.ОбъемУслугиПотребленныйОборот) КАК ОбъемУслугиПотребленный,
	|		СУММА(ОбъемыДляРаспределения.ОбъемУслугиНормативОборот) КАК ОбъемУслугиНорматив,
	|		МАКСИМУМ(ОбъемыДляРаспределения.РаспределятьПолностью) КАК РаспределятьПолностью,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА ОбъемыДляРаспределения.СпособНачисления = ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.ПоНормативу)
	|					ТОГДА ЛОЖЬ
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ) КАК НачисленаТолькоНорма,
	|		МАКСИМУМ(ОбъемыДляРаспределения.ПлощадьМОП) КАК ПлощадьМОП,
	|		ДанныеМКДПоУслугам.ДокументРаспределения КАК ДокументРаспределения,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА ОбъемыДляРаспределения.СпособНачисления = ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.ПоПриборам)
	|					ТОГДА ЛОЖЬ
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ) КАК ЕстьНачислениеПоПриборам,
	|		ОбъемыДляРаспределения.ТарифнаяЗона КАК ТарифнаяЗона,
	|		ОбъемыДляРаспределения.СпособНачисления КАК СпособНачисления,
	|		ОбъемыДляРаспределения.ВидПлощади КАК ВидПлощади,
	|		ОбъемыДляРаспределения.ЗависитОтУслуги КАК ЗависитОтУслуги,
	|		ОбъемыДляРаспределения.НеНачислятьУслугуАбонентам КАК НеНачислятьУслугуАбонентам,
	|		ВЫРАЗИТЬ(ОбъемыДляРаспределения.ФормулаРасчетаНорматива КАК СТРОКА(1000)) КАК ФормулаРасчетаНорматива,
	|		ОбъемыДляРаспределения.ЗначениеНорматива КАК ЗначениеНорматива,
	|		ВЫРАЗИТЬ(ДанныеМКДПоУслугам.Услуга КАК Справочник.энргВидыУслуг).НормативДляИндивидуальных
	|			И ВЫРАЗИТЬ(ДанныеМКДПоУслугам.Услуга КАК Справочник.энргВидыУслуг).КорректироватьИндивидуальныйОбъемСУчетомОДПУ КАК НеРаспределятьСверхнорматив,
	|		МАКСИМУМ(ОбъемыДляРаспределения.ПоказанияПредоставлены) КАК ПоказанияПредоставлены,
	|		МАКСИМУМ(ОбъемыДляРаспределения.ПоказанияПредоставленыПотребленный) КАК ПоказанияПредоставленыПотребленный,
	|		ОбъемыДляРаспределения.ЗавершениеОП КАК ЗавершениеОП,
	|		ОбъемыДляРаспределения.НазначениеПрибораУчета КАК НазначениеПрибораУчета
	|	ИЗ
	|		ДанныеМКДПоУслугам КАК ДанныеМКДПоУслугам
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОбъемыДляРаспределения КАК ОбъемыДляРаспределения
	|			ПО ДанныеМКДПоУслугам.Район = ОбъемыДляРаспределения.Район
	|				И ДанныеМКДПоУслугам.Строение = ОбъемыДляРаспределения.Строение
	|				И ДанныеМКДПоУслугам.Услуга = ОбъемыДляРаспределения.Услуга
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеМКДПоУслугам.Организация,
	|		ДанныеМКДПоУслугам.Район,
	|		ДанныеМКДПоУслугам.ПериодНачисления,
	|		ДанныеМКДПоУслугам.Строение,
	|		ДанныеМКДПоУслугам.Услуга,
	|		ДанныеМКДПоУслугам.ВсегоАбонентов,
	|		ДанныеМКДПоУслугам.ВсегоСУстановелннымПриборомУчета,
	|		ДанныеМКДПоУслугам.ВсегоПлощадьАбонентов,
	|		ДанныеМКДПоУслугам.ВсегоПлощадьАбонентовСобственнаяПоставка,
	|		ДанныеМКДПоУслугам.КорректироватьИндивидуальныйОбъемСУчетомОДПУ,
	|		ДанныеМКДПоУслугам.ПлощадьМОПУказана,
	|		ОбъемыДляРаспределения.ТарифнаяЗона,
	|		ОбъемыДляРаспределения.СпособНачисления,
	|		ДанныеМКДПоУслугам.ДокументРаспределения,
	|		ОбъемыДляРаспределения.ВидПлощади,
	|		ОбъемыДляРаспределения.ЗависитОтУслуги,
	|		ВЫРАЗИТЬ(ОбъемыДляРаспределения.ФормулаРасчетаНорматива КАК СТРОКА(1000)),
	|		ОбъемыДляРаспределения.ЗначениеНорматива,
	|		ОбъемыДляРаспределения.НеНачислятьУслугуАбонентам,
	|		ОбъемыДляРаспределения.ЗавершениеОП,
	|		ОбъемыДляРаспределения.НазначениеПрибораУчета) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПроцентРаспределенияОтрицательногоОДН КАК ПроцентРаспределенияОтрицательногоОДН
	|		ПО ВложенныйЗапрос.Организация = ПроцентРаспределенияОтрицательногоОДН.Организация
	|			И ВложенныйЗапрос.Район = ПроцентРаспределенияОтрицательногоОДН.Район
	|			И ВложенныйЗапрос.Строение = ПроцентРаспределенияОтрицательногоОДН.МКД
	|			И ВложенныйЗапрос.Услуга = ПроцентРаспределенияОтрицательногоОДН.Услуга
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗначенияТекущихТарифов.ПериодНачисления КАК ПериодНачисления,
	|	ЗначенияТекущихТарифов.ГруппаПотребителей КАК ГруппаПотребителей,
	|	ЗначенияТекущихТарифов.Услуга КАК Услуга,
	|	ЗначенияТекущихТарифов.Поставщик КАК Поставщик,
	|	ЗначенияТекущихТарифов.ТарифнаяЗона КАК ТарифнаяЗона,
	|	ЗначенияТекущихТарифов.Значение КАК Значение,
	|	ЗначенияТекущихТарифов.ЗначениеТарифаРЭК КАК ЗначениеТарифаРЭК,
	|	ЗначенияТекущихТарифов.ЗначениеСверхНорматива КАК ЗначениеСверхНорматива,
	|	ЗначенияТекущихТарифов.СтавкаНДС КАК СтавкаНДС,
	|	ЗначенияТекущихТарифов.НДСВнутри КАК НДСВнутри
	|ИЗ
	|	ЗначенияТекущихТарифов КАК ЗначенияТекущихТарифов
	|ГДЕ
	|	(ЗначенияТекущихТарифов.ГруппаПотребителей, ЗначенияТекущихТарифов.Услуга, ЗначенияТекущихТарифов.Поставщик) В
	|			(ВЫБРАТЬ
	|				АбонентыДляРаспределения.ТарифнаяГруппа,
	|				АбонентыДляРаспределения.Услуга,
	|				АбонентыДляРаспределения.Поставщик
	|			ИЗ
	|				АбонентыДляРаспределения КАК АбонентыДляРаспределения)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗначенияТекущихТарифов.ПериодНачисления,
	|	ЗначенияТекущихТарифов.ГруппаПотребителей,
	|	ЗначенияТекущихТарифов.Услуга,
	|	ЗначенияТекущихТарифов.Поставщик,
	|	ЗначенияТекущихТарифов.ТарифнаяЗона,
	|	ЗначенияТекущихТарифов.Значение,
	|	ЗначенияТекущихТарифов.ЗначениеТарифаРЭК,
	|	ЗначенияТекущихТарифов.ЗначениеСверхНорматива,
	|	ЗначенияТекущихТарифов.СтавкаНДС,
	|	ЗначенияТекущихТарифов.НДСВнутри
	|ИЗ
	|	ЗначенияТекущихТарифов КАК ЗначенияТекущихТарифов
	|ГДЕ
	|	(ЗначенияТекущихТарифов.ГруппаПотребителей, ЗначенияТекущихТарифов.Услуга, ЗначенияТекущихТарифов.Поставщик) В
	|			(ВЫБРАТЬ
	|				АбонентыРазделенныеЛицевыеСчета.ТарифнаяГруппа,
	|				АбонентыРазделенныеЛицевыеСчета.Услуга,
	|				АбонентыРазделенныеЛицевыеСчета.Поставщик
	|			ИЗ
	|				АбонентыРазделенныеЛицевыеСчета КАК АбонентыРазделенныеЛицевыеСчета)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОсновнаяВыборка.Организация КАК Организация,
	|	ОсновнаяВыборка.Район КАК Район,
	|	ОсновнаяВыборка.ПериодНачисления КАК ПериодНачисления,
	|	ОсновнаяВыборка.Строение КАК Строение,
	|	ОсновнаяВыборка.Услуга КАК Услуга,
	|	ОсновнаяВыборка.ВсегоАбонентов КАК ВсегоАбонентов,
	|	ОсновнаяВыборка.ПлощадьМОП КАК ПлощадьМОП,
	|	ОсновнаяВыборка.ВсегоСУстановелннымПриборомУчета КАК ВсегоСУстановелннымПриборомУчета,
	|	ОсновнаяВыборка.ВсегоПлощадьАбонентов КАК ВсегоПлощадьАбонентов,
	|	ОсновнаяВыборка.ВсегоПлощадьАбонентовСобственнаяПоставка КАК ВсегоПлощадьАбонентовСобственнаяПоставка,
	|	ОсновнаяВыборка.КорректироватьИндивидуальныйОбъемСУчетомОДПУ КАК КорректироватьИндивидуальныйОбъемСУчетомОДПУ,
	|	ОсновнаяВыборка.ОбъемУслуги КАК ОбъемУслуги,
	|	ОсновнаяВыборка.ОбъемУслугиПотребленный КАК ОбъемУслугиПотребленный,
	|	ОсновнаяВыборка.ОбъемУслугиНорматив КАК ОбъемУслугиНорматив,
	|	ОсновнаяВыборка.РаспределятьПолностью КАК РаспределятьПолностью,
	|	ОсновнаяВыборка.НачисленаТолькоНорма КАК НачисленаТолькоНорма,
	|	ОсновнаяВыборка.ДокументРаспределения КАК ДокументРаспределения,
	|	ОсновнаяВыборка.ЕстьНачислениеПоПриборам КАК ЕстьНачислениеПоПриборам,
	|	ОсновнаяВыборка.СпособНачисления КАК СпособНачисления,
	|	ОсновнаяВыборка.ТарифнаяЗона КАК ТарифнаяЗона,
	|	ОсновнаяВыборка.ПлощадьМОПУказана КАК ПлощадьМОПУказана,
	|	ОсновнаяВыборка.ВидПлощади КАК ВидПлощади,
	|	ОсновнаяВыборка.ЗависитОтУслуги КАК ЗависитОтУслуги,
	|	ОсновнаяВыборка.ЗначениеНорматива КАК ЗначениеНорматива,
	|	ОсновнаяВыборка.ФормулаРасчетаНорматива КАК ФормулаРасчетаНорматива,
	|	ОсновнаяВыборка.НеРаспределятьСверхнорматив КАК НеРаспределятьСверхнорматив,
	|	ОсновнаяВыборка.НеНачислятьУслугуАбонентам КАК НеНачислятьУслугуАбонентам,
	|	ОсновнаяВыборка.ПоказанияПредоставлены КАК ПоказанияПредоставлены,
	|	ОсновнаяВыборка.ПоказанияПредоставленыПотребленный КАК ПоказанияПредоставленыПотребленный,
	|	ОсновнаяВыборка.ЗавершениеОП КАК ЗавершениеОП,
	|	ОсновнаяВыборка.НазначениеПрибораУчета КАК НазначениеПрибораУчета,
	|	ОсновнаяВыборка.ПроцентРаспределенияОтрицательногоОбъема КАК ПроцентРаспределенияОтрицательногоОбъема
	|ИЗ
	|	ОсновнаяВыборка КАК ОсновнаяВыборка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОсновнаяВыборка.Организация,
	|	ОсновнаяВыборка.Район,
	|	ОсновнаяВыборка.ПериодНачисления,
	|	ОсновнаяВыборка.Строение,
	|	ОсновнаяВыборка.Услуга
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АбонентыДляРаспределения.Организация КАК Организация,
	|	АбонентыДляРаспределения.Район КАК Район,
	|	АбонентыДляРаспределения.Строение КАК Строение,
	|	АбонентыДляРаспределения.Помещение КАК Помещение,
	|	АбонентыДляРаспределения.Абонент КАК Абонент,
	|	АбонентыДляРаспределения.Услуга КАК Услуга,
	|	АбонентыДляРаспределения.ЗначениеПлощади КАК ЗначениеПлощадиДляРаспределения,
	|	АбонентыДляРаспределения.ТарифнаяГруппа КАК ТарифнаяГруппаДляРаспределения,
	|	АбонентыДляРаспределения.Поставщик КАК ПоставщикДляРаспределения,
	|	АбонентыДляРаспределения.КоличествоЖильцов КАК КоличествоЖильцов,
	|	АбонентыДляРаспределения.ДатаСостоянияЛицевогоСчета КАК ДатаСостоянияЛицевогоСчета,
	|	ОбъемНачислений.ТочкаУчета КАК ТочкаУчета,
	|	ОбъемНачислений.ВидНачисления КАК ВидНачисления,
	|	ОбъемНачислений.СпособНачисления КАК СпособНачисления,
	|	ОбъемНачислений.НаправлениеИспользованияТУ КАК НаправлениеИспользованияТУ,
	|	ОбъемНачислений.Измеритель КАК Измеритель,
	|	ОбъемНачислений.ПриборУчета КАК ПриборУчета,
	|	ОбъемНачислений.Шкала КАК Шкала,
	|	ОбъемНачислений.ТарифнаяЗона КАК ТарифнаяЗона,
	|	ОбъемНачислений.ЗначениеТарифа КАК ЗначениеТарифа,
	|	ОбъемНачислений.Поставщик КАК Поставщик,
	|	ЕСТЬNULL(ОбъемНачислений.ПериодРасчета,АбонентыДляРаспределения.ПериодНачисления) КАК ПериодРасчета,
	|	ОбъемНачислений.ПериодНачисления КАК ПериодНачисления,
	|	ОбъемНачислений.ЧастныйСектор КАК ЧастныйСектор,
	|	ОбъемНачислений.СверхНорматива КАК СверхНорматива,
	|	ОбъемНачислений.Сумма КАК Сумма,
	|	ЕСТЬNULL(ОбъемНачислений.ОбъемУслуги, 0) КАК ОбъемУслуги,
	|	ЕСТЬNULL(ОбъемНачислений.ОбъемУслугиПотребленный, 0) КАК ОбъемУслугиПотребленный,
	|	ОбъемНачислений.СуммаПоПовышенномуКоэффициенту КАК СуммаПоПовышенномуКоэффициенту,
	|	ЕСТЬNULL(ОбъемНачислений.ОбъемУслугиСоцНорма, 0) КАК ОбъемУслугиСоцНорма,
	|	ОбъемНачислений.НачалоПериода КАК НачалоПериода,
	|	ОбъемНачислений.КонецПериода КАК КонецПериода,
	|	ОбъемНачислений.НачальныеПоказания КАК НачальныеПоказания,
	|	ОбъемНачислений.КонечныеПоказания КАК КонечныеПоказания,
	|	ОбъемНачислений.КоличествоКомнат КАК КоличествоКомнат,
	|	ЕСТЬNULL(ОбъемНачислений.КоличествоПрописанных,0) КАК КоличествоПрописанных,
	|	ОбъемНачислений.ЗначениеПлощади КАК ЗначениеПлощади,
	|	ОбъемНачислений.НормаПотребления КАК НормаПотребления,
	|	ОбъемНачислений.КоэффициентПУ КАК КоэффициентПУ,
	|	ОбъемНачислений.РасчетПоФормуле КАК РасчетПоФормуле,
	|	ОбъемНачислений.ВидБлагоустройства КАК ВидБлагоустройства,
	|	ОбъемНачислений.ТарифнаяГруппа КАК ТарифнаяГруппа,
	|	ОбъемНачислений.ДатаПоверки КАК ДатаПоверки,
	|	ОбъемНачислений.ОтключатьВНеполивнойСезон КАК ОтключатьВНеполивнойСезон,
	|	ОбъемНачислений.ЗависимаяТочкаУчета КАК ЗависимаяТочкаУчета,
	|	ОбъемНачислений.КоэффициентФормула КАК КоэффициентФормула,
	|	ОбъемНачислений.ВидДифференцированности КАК ВидДифференцированности,
	|	ОбъемНачислений.ОснованиеПерерасчета КАК ОснованиеПерерасчета,
	|	ОбъемНачислений.ОснованиеПерерасчетаДата КАК ОснованиеПерерасчетаДата,
	|	ОбъемНачислений.ПриборЗависимой КАК ПриборЗависимой,
	|	ОбъемНачислений.СписатьИзНормы КАК СписатьИзНормы,
	|	ОбъемНачислений.ПовыщающийКоэффициент КАК ПовыщающийКоэффициент,
	|	ЕСТЬNULL(ОбъемНачислений.КоличествоСобственников,0) КАК КоличествоСобственников,
	|	ЕСТЬNULL(ОбъемНачислений.КоличествоПроживающих,0) КАК КоличествоПроживающих,
	|	ОбъемНачислений.СниматьНачисленныйСредний КАК СниматьНачисленныйСредний,
	|	ОбъемНачислений.ПлощадьМОП КАК ПлощадьМОП,
	|	ОбъемНачислений.ПлощадьАбонентов КАК ПлощадьАбонентов,
	|	ОбъемНачислений.ПлощадьСобственнаяПоставка КАК ПлощадьСобственнаяПоставка,
	|	ОбъемНачислений.КоэффициентРаспределенияОстатка КАК КоэффициентРаспределенияОстатка,
	|	ЕСТЬNULL(ОбъемНачислений.ЗначениеСоциальнойНормы, 0) КАК ЗначениеСоциальнойНормы,
	|	ОбъемНачислений.СоставнаяУслуга КАК СоставнаяУслуга,
	|	ОбъемНачислений.НеПрименятьСезонность КАК НеПрименятьСезонность,
	|	ВЫБОР
	|		КОГДА ОбъемНачислений.Абонент ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьИндивидуальныеНачисления,
	|	ЛОЖЬ КАК НП,
	|	ЛОЖЬ КАК ПомещениеСРазделенными,
	|	АбонентыДляРаспределения.Помещение КАК ПомещениеРодитель,
	|	NULL КАК Договор,
	|	ЕСТЬNULL(ОбъемНачислений.СоциальнаяНормаПотребления, 0) КАК СоциальнаяНормаПотребления,
	|	ЕСТЬNULL(ОбъемНачислений.ДопСоциальнаяНормаПотребления, 0) КАК ДопСоциальнаяНормаПотребления,
	|	ОбъемНачислений.ЗначениеТарифаСверхНорматива КАК ЗначениеТарифаСверхНорматива,
	|	ЛОЖЬ КАК РасчетПоФактическомуОбъему
	|ИЗ
	|	АбонентыДляРаспределения КАК АбонентыДляРаспределения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОбъемНачислений КАК ОбъемНачислений
	|		ПО АбонентыДляРаспределения.Район = ОбъемНачислений.Район
	|			И АбонентыДляРаспределения.Строение = ОбъемНачислений.Строение
	|			И АбонентыДляРаспределения.Услуга = ОбъемНачислений.Услуга
	|			И АбонентыДляРаспределения.Помещение = ОбъемНачислений.Помещение
	|ГДЕ
	|	АбонентыДляРаспределения.Помещение ССЫЛКА Справочник.энргПомещения
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	АбонентыДляРаспределения.Организация,
	|	АбонентыДляРаспределения.Район,
	|	АбонентыДляРаспределения.Строение,
	|	АбонентыДляРаспределения.Помещение,
	|	АбонентыДляРаспределения.Абонент,
	|	АбонентыДляРаспределения.Услуга,
	|	АбонентыДляРаспределения.ЗначениеПлощади,
	|	АбонентыДляРаспределения.ТарифнаяГруппа,
	|	АбонентыДляРаспределения.Поставщик,
	|	0,
	|	ДАТАВРЕМЯ(1, 1, 1),
	|	ОбъемНачислений.ТочкаУчета,
	|	ОбъемНачислений.ВидНачисления,
	|	ОбъемНачислений.СпособНачисления,
	|	ОбъемНачислений.НаправлениеИспользованияТУ,
	|	ОбъемНачислений.Измеритель,
	|	ОбъемНачислений.ПриборУчета,
	|	ОбъемНачислений.Шкала,
	|	ОбъемНачислений.ТарифнаяЗона,
	|	ОбъемНачислений.ЗначениеТарифа,
	|	ОбъемНачислений.Поставщик,
	|	ЕСТЬNULL(ОбъемНачислений.ПериодРасчета,АбонентыДляРаспределения.ПериодНачисления),
	|	ОбъемНачислений.ПериодНачисления,
	|	ОбъемНачислений.ЧастныйСектор,
	|	ОбъемНачислений.СверхНорматива,
	|	ОбъемНачислений.Сумма,
	|	ЕСТЬNULL(ОбъемНачислений.ОбъемУслуги, 0),
	|	ЕСТЬNULL(ОбъемНачислений.ОбъемУслугиПотребленный, 0),
	|	ОбъемНачислений.СуммаПоПовышенномуКоэффициенту,
	|	ЕСТЬNULL(ОбъемНачислений.ОбъемУслугиСоцНорма, 0),
	|	ОбъемНачислений.НачалоПериода,
	|	ОбъемНачислений.КонецПериода,
	|	ОбъемНачислений.НачальныеПоказания,
	|	ОбъемНачислений.КонечныеПоказания,
	|	ОбъемНачислений.КоличествоКомнат,
	|	ЕСТЬNULL(ОбъемНачислений.КоличествоПрописанных,0),
	|	ОбъемНачислений.ЗначениеПлощади,
	|	ОбъемНачислений.НормаПотребления,
	|	ОбъемНачислений.КоэффициентПУ,
	|	ОбъемНачислений.РасчетПоФормуле,
	|	ОбъемНачислений.ВидБлагоустройства,
	|	ОбъемНачислений.ТарифнаяГруппа,
	|	ОбъемНачислений.ДатаПоверки,
	|	ОбъемНачислений.ОтключатьВНеполивнойСезон,
	|	ОбъемНачислений.ЗависимаяТочкаУчета,
	|	ОбъемНачислений.КоэффициентФормула,
	|	ОбъемНачислений.ВидДифференцированности,
	|	ОбъемНачислений.ОснованиеПерерасчета,
	|	ОбъемНачислений.ОснованиеПерерасчетаДата,
	|	ОбъемНачислений.ПриборЗависимой,
	|	ОбъемНачислений.СписатьИзНормы,
	|	ОбъемНачислений.ПовыщающийКоэффициент,
	|	ЕСТЬNULL(ОбъемНачислений.КоличествоСобственников,0),
	|	ЕСТЬNULL(ОбъемНачислений.КоличествоПроживающих,0),
	|	ОбъемНачислений.СниматьНачисленныйСредний,
	|	ОбъемНачислений.ПлощадьМОП,
	|	ОбъемНачислений.ПлощадьАбонентов,
	|	ОбъемНачислений.ПлощадьСобственнаяПоставка,
	|	ОбъемНачислений.КоэффициентРаспределенияОстатка,
	|	0,
	|	ОбъемНачислений.СоставнаяУслуга,
	|	ОбъемНачислений.НеПрименятьСезонность,
	|	ВЫБОР
	|		КОГДА ОбъемНачислений.Абонент ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	ИСТИНА,
	|	ЛОЖЬ,
	|	АбонентыДляРаспределения.Помещение,
	|	ОбъемНачислений.Договор,
	|	0,
	|	0,
	|	ОбъемНачислений.ЗначениеТарифа,
	|	ЕСТЬNULL(ОбъемНачислений.РасчетПоФактическомуОбъему,ЛОЖЬ) КАК РасчетПоФактическомуОбъему
	|ИЗ
	|	АбонентыДляРаспределения КАК АбонентыДляРаспределения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОбъемНачисленийНП КАК ОбъемНачислений
	|		ПО АбонентыДляРаспределения.Район = ОбъемНачислений.Район
	|			И АбонентыДляРаспределения.Строение = ОбъемНачислений.Строение
	|			И АбонентыДляРаспределения.Услуга = ОбъемНачислений.Услуга
	|			И АбонентыДляРаспределения.Абонент = ОбъемНачислений.Абонент
	|			И АбонентыДляРаспределения.Договор = ОбъемНачислений.Договор
	|ГДЕ
	|	АбонентыДляРаспределения.Абонент ССЫЛКА Справочник.бестОбъектыРасчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АбонентыРазделенныеЛицевыеСчета.Организация,
	|	АбонентыРазделенныеЛицевыеСчета.Район,
	|	АбонентыРазделенныеЛицевыеСчета.Строение,
	|	АбонентыРазделенныеЛицевыеСчета.Помещение,
	|	АбонентыРазделенныеЛицевыеСчета.Абонент,
	|	АбонентыРазделенныеЛицевыеСчета.Услуга,
	|	АбонентыРазделенныеЛицевыеСчета.ЗначениеПлощади,
	|	АбонентыРазделенныеЛицевыеСчета.ТарифнаяГруппа,
	|	АбонентыРазделенныеЛицевыеСчета.Поставщик,
	|	0,
	|	АбонентыРазделенныеЛицевыеСчета.ДатаСостоянияЛицевогоСчета,
	|	ОбъемНачислений.ТочкаУчета,
	|	ОбъемНачислений.ВидНачисления,
	|	ОбъемНачислений.СпособНачисления,
	|	ОбъемНачислений.НаправлениеИспользованияТУ,
	|	ОбъемНачислений.Измеритель,
	|	ОбъемНачислений.ПриборУчета,
	|	ОбъемНачислений.Шкала,
	|	ОбъемНачислений.ТарифнаяЗона,
	|	ОбъемНачислений.ЗначениеТарифа,
	|	ОбъемНачислений.Поставщик,
	|	ОбъемНачислений.ПериодРасчета,
	|	ОбъемНачислений.ПериодНачисления,
	|	ОбъемНачислений.ЧастныйСектор,
	|	ОбъемНачислений.СверхНорматива,
	|	ОбъемНачислений.Сумма,
	|	ЕСТЬNULL(ОбъемНачислений.ОбъемУслуги, 0),
	|	ЕСТЬNULL(ОбъемНачислений.ОбъемУслугиПотребленный, 0),
	|	ОбъемНачислений.СуммаПоПовышенномуКоэффициенту,
	|	ЕСТЬNULL(ОбъемНачислений.ОбъемУслугиСоцНорма, 0),
	|	ОбъемНачислений.НачалоПериода,
	|	ОбъемНачислений.КонецПериода,
	|	ОбъемНачислений.НачальныеПоказания,
	|	ОбъемНачислений.КонечныеПоказания,
	|	ОбъемНачислений.КоличествоКомнат,
	|	ОбъемНачислений.КоличествоПрописанных,
	|	ОбъемНачислений.ЗначениеПлощади,
	|	ОбъемНачислений.НормаПотребления,
	|	ОбъемНачислений.КоэффициентПУ,
	|	ОбъемНачислений.РасчетПоФормуле,
	|	ОбъемНачислений.ВидБлагоустройства,
	|	ОбъемНачислений.ТарифнаяГруппа,
	|	ОбъемНачислений.ДатаПоверки,
	|	ОбъемНачислений.ОтключатьВНеполивнойСезон,
	|	ОбъемНачислений.ЗависимаяТочкаУчета,
	|	ОбъемНачислений.КоэффициентФормула,
	|	ОбъемНачислений.ВидДифференцированности,
	|	ОбъемНачислений.ОснованиеПерерасчета,
	|	ОбъемНачислений.ОснованиеПерерасчетаДата,
	|	ОбъемНачислений.ПриборЗависимой,
	|	ОбъемНачислений.СписатьИзНормы,
	|	ОбъемНачислений.ПовыщающийКоэффициент,
	|	ОбъемНачислений.КоличествоСобственников,
	|	ОбъемНачислений.КоличествоПроживающих,
	|	ОбъемНачислений.СниматьНачисленныйСредний,
	|	ОбъемНачислений.ПлощадьМОП,
	|	ОбъемНачислений.ПлощадьАбонентов,
	|	ОбъемНачислений.ПлощадьСобственнаяПоставка,
	|	ОбъемНачислений.КоэффициентРаспределенияОстатка,
	|	ОбъемНачислений.ЗначениеСоциальнойНормы,
	|	ОбъемНачислений.СоставнаяУслуга,
	|	ОбъемНачислений.НеПрименятьСезонность,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ИСТИНА,
	|	АбонентыРазделенныеЛицевыеСчета.ПомещениеРодитель,
	|	NULL,
	|	ЕСТЬNULL(ОбъемНачислений.СоциальнаяНормаПотребления, 0),
	|	ЕСТЬNULL(ОбъемНачислений.ДопСоциальнаяНормаПотребления, 0),
	|	ОбъемНачислений.ЗначениеТарифаСверхНорматива,
	|	ЛОЖЬ
	|ИЗ
	|	АбонентыРазделенныеЛицевыеСчета КАК АбонентыРазделенныеЛицевыеСчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОбъемНачислений КАК ОбъемНачислений
	|		ПО АбонентыРазделенныеЛицевыеСчета.Район = ОбъемНачислений.Район
	|			И АбонентыРазделенныеЛицевыеСчета.Строение = ОбъемНачислений.Строение
	|			И АбонентыРазделенныеЛицевыеСчета.Услуга = ОбъемНачислений.Услуга
	|			И АбонентыРазделенныеЛицевыеСчета.Помещение = ОбъемНачислений.Помещение
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	ПериодРасчета,
	|	Район,
	|	Строение,
	|	Услуга,
	|	Помещение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеМКДПоУслугам.Организация КАК Организация,
	|	ДанныеМКДПоУслугам.Район КАК Район,
	|	ДанныеМКДПоУслугам.Строение КАК Строение,
	|	ДанныеМКДПоУслугам.Услуга КАК Услуга,
	|	энргОбъемНачислений.Период КАК Период,
	|	энргОбъемНачислений.Регистратор КАК Регистратор,
	|	энргОбъемНачислений.НомерСтроки КАК НомерСтроки,
	|	энргОбъемНачислений.Активность КАК Активность,
	|	энргОбъемНачислений.Распределение КАК Распределение,
	|	энргОбъемНачислений.Помещение КАК Помещение,
	|	энргОбъемНачислений.Абонент КАК Абонент,
	|	энргОбъемНачислений.ТочкаУчета КАК ТочкаУчета,
	|	энргОбъемНачислений.ВидНачисления КАК ВидНачисления,
	|	энргОбъемНачислений.СпособНачисления КАК СпособНачисления,
	|	энргОбъемНачислений.НаправлениеИспользованияТУ КАК НаправлениеИспользованияТУ,
	|	энргОбъемНачислений.Измеритель КАК Измеритель,
	|	энргОбъемНачислений.ПриборУчета КАК ПриборУчета,
	|	энргОбъемНачислений.Шкала КАК Шкала,
	|	энргОбъемНачислений.ТарифнаяЗона КАК ТарифнаяЗона,
	|	энргОбъемНачислений.ЗначениеТарифа КАК ЗначениеТарифа,
	|	энргОбъемНачислений.Поставщик КАК Поставщик,
	|	энргОбъемНачислений.ПериодРасчета КАК ПериодРасчета,
	|	энргОбъемНачислений.ПериодНачисления КАК ПериодНачисления,
	|	энргОбъемНачислений.ЧастныйСектор КАК ЧастныйСектор,
	|	энргОбъемНачислений.СверхНорматива КАК СверхНорматива,
	|	энргОбъемНачислений.Сумма КАК Сумма,
	|	энргОбъемНачислений.ОбъемУслуги КАК ОбъемУслуги,
	|	энргОбъемНачислений.ОбъемУслугиПотребленный КАК ОбъемУслугиПотребленный,
	|	энргОбъемНачислений.НачалоПериода КАК НачалоПериода,
	|	энргОбъемНачислений.КонецПериода КАК КонецПериода,
	|	энргОбъемНачислений.НачальныеПоказания КАК НачальныеПоказания,
	|	энргОбъемНачислений.КонечныеПоказания КАК КонечныеПоказания,
	|	энргОбъемНачислений.КоличествоКомнат КАК КоличествоКомнат,
	|	энргОбъемНачислений.КоличествоПрописанных КАК КоличествоПрописанных,
	|	энргОбъемНачислений.ЗначениеПлощади КАК ЗначениеПлощади,
	|	энргОбъемНачислений.НормаПотребления КАК НормаПотребления,
	|	энргОбъемНачислений.КоэффициентПУ КАК КоэффициентПУ,
	|	энргОбъемНачислений.РасчетПоФормуле КАК РасчетПоФормуле,
	|	энргОбъемНачислений.ВидБлагоустройства КАК ВидБлагоустройства,
	|	энргОбъемНачислений.ТарифнаяГруппа КАК ТарифнаяГруппа,
	|	энргОбъемНачислений.ДатаПоверки КАК ДатаПоверки,
	|	энргОбъемНачислений.ОтключатьВНеполивнойСезон КАК ОтключатьВНеполивнойСезон,
	|	энргОбъемНачислений.ЗависимаяТочкаУчета КАК ЗависимаяТочкаУчета,
	|	энргОбъемНачислений.КоэффициентФормула КАК КоэффициентФормула,
	|	энргОбъемНачислений.ВидДифференцированности КАК ВидДифференцированности,
	|	энргОбъемНачислений.ОснованиеПерерасчета КАК ОснованиеПерерасчета,
	|	энргОбъемНачислений.ОснованиеПерерасчетаДата КАК ОснованиеПерерасчетаДата,
	|	энргОбъемНачислений.ПриборЗависимой КАК ПриборЗависимой,
	|	энргОбъемНачислений.СписатьИзНормы КАК СписатьИзНормы,
	|	энргОбъемНачислений.ПовыщающийКоэффициент КАК ПовыщающийКоэффициент,
	|	энргОбъемНачислений.КоличествоСобственников КАК КоличествоСобственников,
	|	энргОбъемНачислений.КоличествоПроживающих КАК КоличествоПроживающих,
	|	энргОбъемНачислений.СниматьНачисленныйСредний КАК СниматьНачисленныйСредний,
	|	энргОбъемНачислений.ПлощадьМОП КАК ПлощадьМОП,
	|	энргОбъемНачислений.ПлощадьАбонентов КАК ПлощадьАбонентов,
	|	энргОбъемНачислений.ПлощадьСобственнаяПоставка КАК ПлощадьСобственнаяПоставка,
	|	энргОбъемНачислений.КоэффициентРаспределенияОстатка КАК КоэффициентРаспределенияОстатка,
	|	энргОбъемНачислений.ОбъемУслугиСоцНорма КАК ОбъемУслугиСоцНорма,
	|	энргОбъемНачислений.СоставнаяУслуга КАК СоставнаяУслуга,
	|	энргОбъемНачислений.НеПрименятьСезонность КАК НеПрименятьСезонность,
	|	энргОбъемНачислений.ПомещениеРодитель КАК ПомещениеРодитель,
	|	энргОбъемНачислений.ДопСоциальнаяНормаПотребления КАК ДопСоциальнаяНормаПотребления
	|ИЗ
	|	ДанныеМКДПоУслугам КАК ДанныеМКДПоУслугам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОбъемНачисленийПоПриборуУчетаКорректироватьИндивидуальныйОбъем КАК энргОбъемНачислений
	|		ПО ДанныеМКДПоУслугам.Организация = энргОбъемНачислений.Организация
	|			И ДанныеМКДПоУслугам.ПериодНачисления = энргОбъемНачислений.ПериодНачисления
	|			И ДанныеМКДПоУслугам.Район = энргОбъемНачислений.Район
	|			И ДанныеМКДПоУслугам.Строение = энргОбъемНачислений.Строение
	|			И ДанныеМКДПоУслугам.Услуга = энргОбъемНачислений.Услуга
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	ПериодНачисления,
	|	Район,
	|	Строение,
	|	Услуга
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РазличныеМКД.Организация КАК Организация,
	|	РазличныеМКД.ПериодНачисления КАК ПериодНачисления,
	|	РазличныеМКД.Район КАК Район,
	|	РазличныеМКД.Строение КАК Строение,
	|	АбонентыРазделенныеЛицевыеСчета.ПомещениеРодитель КАК ПомещениеРодитель,
	|	АбонентыРазделенныеЛицевыеСчета.Помещение КАК Помещение,
	|	АбонентыРазделенныеЛицевыеСчета.Абонент КАК Абонент,
	|	АбонентыРазделенныеЛицевыеСчета.Услуга КАК Услуга,
	|	АбонентыРазделенныеЛицевыеСчета.СпособРаспределенияОбъемаПомещения КАК СпособРаспределенияОбъемаПомещения,
	|	ЕСТЬNULL(АбонентыРазделенныеЛицевыеСчета.ФиксированныйОбъемПотребления,0) КАК ФиксированныйОбъемПотребления,
	|	ЕСТЬNULL(АбонентыРазделенныеЛицевыеСчета.ДоляПотребленияЧислитель,0) КАК ДоляПотребленияЧислитель,
	|	ЕСТЬNULL(АбонентыРазделенныеЛицевыеСчета.ДоляПотребленияЗнаменатель,0) КАК ДоляПотребленияЗнаменатель,
	|	ЕСТЬNULL(АбонентыРазделенныеЛицевыеСчета.ЗначениеПлощади,0) КАК ЗначениеПлощади,
	|	ЕСТЬNULL(АбонентыРазделенныеЛицевыеСчета.КоличествоПроживающих,0) КАК КоличествоПроживающих,
	|	ЕСТЬNULL(АбонентыРазделенныеЛицевыеСчета.КоличествоПрописанных,0) КАК КоличествоПрописанных,
	|	ЕСТЬNULL(АбонентыРазделенныеЛицевыеСчета.КоличествоСобственников,0) КАК КоличествоСобственников,
	|	АбонентыРазделенныеЛицевыеСчета.ТарифнаяГруппа КАК ТарифнаяГруппа,
	|	АбонентыРазделенныеЛицевыеСчета.Поставщик КАК Поставщик,
	|	АбонентыРазделенныеЛицевыеСчета.КлючСоцНорматива КАК КлючСоцНорматива,
	|	АбонентыРазделенныеЛицевыеСчета.НаправлениеИспользованияТУ КАК НаправлениеИспользованияТУ,
	|	ЕСТЬNULL(АбонентыРазделенныеЛицевыеСчета.ДопСоциальнаяНормаПотребления,0) КАК ДопСоциальнаяНормаПотребления
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ОсновнаяВыборка.Организация КАК Организация,
	|		ОсновнаяВыборка.ПериодНачисления КАК ПериодНачисления,
	|		ОсновнаяВыборка.Район КАК Район,
	|		ОсновнаяВыборка.Строение КАК Строение
	|	ИЗ
	|		ОсновнаяВыборка КАК ОсновнаяВыборка) КАК РазличныеМКД
	|		ЛЕВОЕ СОЕДИНЕНИЕ АбонентыРазделенныеЛицевыеСчета КАК АбонентыРазделенныеЛицевыеСчета
	|		ПО РазличныеМКД.Организация = АбонентыРазделенныеЛицевыеСчета.Организация
	|			И РазличныеМКД.ПериодНачисления = АбонентыРазделенныеЛицевыеСчета.ПериодНачисления
	|			И РазличныеМКД.Район = АбонентыРазделенныеЛицевыеСчета.Район
	|			И РазличныеМКД.Строение = АбонентыРазделенныеЛицевыеСчета.Строение
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	ПериодНачисления,
	|	Район,
	|	Строение,
	|	ПомещениеРодитель,
	|	Помещение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеМКДПоУслугам.Организация КАК Организация,
	|	ДанныеМКДПоУслугам.Район КАК Район,
	|	ДанныеМКДПоУслугам.Строение КАК Строение,
	|	ДанныеМКДПоУслугам.Услуга КАК Услуга,
	|	бестОбъемНачисленийНП.Период КАК Период,
	|	бестОбъемНачисленийНП.Регистратор КАК Регистратор,
	|	бестОбъемНачисленийНП.НомерСтроки КАК НомерСтроки,
	|	бестОбъемНачисленийНП.Активность КАК Активность,
	|	бестОбъемНачисленийНП.Распределение КАК Распределение,
	|	бестОбъемНачисленийНП.ТочкаУчета КАК ТочкаУчета,
	|	бестОбъемНачисленийНП.ВидНачисления КАК ВидНачисления,
	|	бестОбъемНачисленийНП.СпособНачисления КАК СпособНачисления,
	|	бестОбъемНачисленийНП.ПриборУчета КАК ПриборУчета,
	|	бестОбъемНачисленийНП.Шкала КАК Шкала,
	|	бестОбъемНачисленийНП.ТарифнаяЗона КАК ТарифнаяЗона,
	|	бестОбъемНачисленийНП.Поставщик КАК Поставщик,
	|	бестОбъемНачисленийНП.ПериодРасчета КАК ПериодРасчета,
	|	бестОбъемНачисленийНП.ПериодНачисления КАК ПериодНачисления,
	|	бестОбъемНачисленийНП.ОбъемУслуги КАК ОбъемУслуги,
	|	бестОбъемНачисленийНП.ОбъемУслугиПотребленный КАК ОбъемУслугиПотребленный,
	|	бестОбъемНачисленийНП.НачалоПериода КАК НачалоПериода,
	|	бестОбъемНачисленийНП.КонецПериода КАК КонецПериода,
	|	бестОбъемНачисленийНП.НачальныеПоказания КАК НачальныеПоказания,
	|	бестОбъемНачисленийНП.КонечныеПоказания КАК КонечныеПоказания,
	|	бестОбъемНачисленийНП.ЗначениеПлощади КАК ЗначениеПлощади,
	|	бестОбъемНачисленийНП.НормаПотребления КАК НормаПотребления,
	|	бестОбъемНачисленийНП.РасчетПоФормуле КАК РасчетПоФормуле,
	|	бестОбъемНачисленийНП.ДатаПоверки КАК ДатаПоверки,
	|	бестОбъемНачисленийНП.ЗависимаяТочкаУчета КАК ЗависимаяТочкаУчета,
	|	бестОбъемНачисленийНП.КоэффициентФормула КАК КоэффициентФормула,
	|	бестОбъемНачисленийНП.ВидДифференцированности КАК ВидДифференцированности,
	|	бестОбъемНачисленийНП.СписатьИзНормы КАК СписатьИзНормы,
	|	бестОбъемНачисленийНП.ПовыщающийКоэффициент КАК ПовыщающийКоэффициент,
	|	бестОбъемНачисленийНП.СоставнаяУслуга КАК СоставнаяУслуга,
	|	бестОбъемНачисленийНП.НеПрименятьСезонность КАК НеПрименятьСезонность,
	|	бестОбъемНачисленийНП.Договор КАК Договор,
	|	бестОбъемНачисленийНП.МКД КАК МКД,
	|	бестОбъемНачисленийНП.ОбъектРасчета КАК ОбъектРасчета,
	|	бестОбъемНачисленийНП.ПлощадьМОП КАК ПлощадьМОП,
	|	бестОбъемНачисленийНП.ПлощадьАбонентов КАК ПлощадьАбонентов,
	|	бестОбъемНачисленийНП.ПлощадьСобственнаяПоставка КАК ПлощадьСобственнаяПоставка,
	|	бестОбъемНачисленийНП.ДолевоеРаспределение КАК ДолевоеРаспределение,
	|	бестОбъемНачисленийНП.ОбъемПоПрибору КАК ОбъемПоПрибору,
	|	бестОбъемНачисленийНП.КоличествоЧасовШтатнойРаботыПУ КАК КоличествоЧасовШтатнойРаботыПУ,
	|	бестОбъемНачисленийНП.ОбъемДосчитанный КАК ОбъемДосчитанный,
	|	бестОбъемНачисленийНП.ЗначениеНагрузки КАК ЗначениеНагрузки,
	|	бестОбъемНачисленийНП.ЗначениеНормативаЗаДень КАК ЗначениеНормативаЗаДень,
	|	бестОбъемНачисленийНП.ОбъектУчаствуетВРаспределенииМКД КАК ОбъектУчаствуетВРаспределенииМКД,
	|	бестОбъемНачисленийНП.СпособРасчетаНорматива КАК СпособРасчетаНорматива,
	|	бестОбъемНачисленийНП.ТемператураВнутриПомещения КАК ТемператураВнутриПомещения
	|ИЗ
	|	ДанныеМКДПоУслугам КАК ДанныеМКДПоУслугам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОбъемНачисленийНППоПриборуУчетаКорректироватьИндивидуальныйОбъем КАК бестОбъемНачисленийНП
	|		ПО ДанныеМКДПоУслугам.Организация = бестОбъемНачисленийНП.Организация
	|			И ДанныеМКДПоУслугам.ПериодНачисления = бестОбъемНачисленийНП.ПериодНачисления
	|			И ДанныеМКДПоУслугам.Район = бестОбъемНачисленийНП.Район
	|			И ДанныеМКДПоУслугам.Услуга = бестОбъемНачисленийНП.Услуга
	|			И ДанныеМКДПоУслугам.Строение = бестОбъемНачисленийНП.МКД
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	ПериодНачисления,
	|	Район,
	|	Строение,
	|	Услуга
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ПериодНачисления КАК ПериодНачисления,
	|	ВложенныйЗапрос.Район КАК Район,
	|	ВложенныйЗапрос.Строение КАК Строение,
	|	ВложенныйЗапрос.Услуга КАК Услуга,
	|	ЕСТЬNULL(ОтрицательныйОбъемРаспределения.ПериодНачисленияОбъема, ДАТАВРЕМЯ(1, 1, 1)) КАК ПериодНачисленияОбъема,
	|	ЕСТЬNULL(ОтрицательныйОбъемРаспределения.ОбъемУслуги, 0) КАК ОбъемУслуги,
	|	ЕСТЬNULL(ОтрицательныйОбъемРаспределения.ОбъемУслугиПотребленный, 0) КАК ОбъемУслугиПотребленный
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ДанныеМКДПоУслугам.Организация КАК Организация,
	|		ДанныеМКДПоУслугам.ПериодНачисления КАК ПериодНачисления,
	|		ДанныеМКДПоУслугам.Район КАК Район,
	|		ДанныеМКДПоУслугам.Строение КАК Строение,
	|		ДанныеМКДПоУслугам.Услуга КАК Услуга
	|	ИЗ
	|		ДанныеМКДПоУслугам КАК ДанныеМКДПоУслугам) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОтрицательныйОбъемРаспределения КАК ОтрицательныйОбъемРаспределения
	|		ПО ВложенныйЗапрос.Организация = ОтрицательныйОбъемРаспределения.Организация
	|			И ВложенныйЗапрос.ПериодНачисления = ОтрицательныйОбъемРаспределения.ПериодНачисления
	|			И ВложенныйЗапрос.Район = ОтрицательныйОбъемРаспределения.Район
	|			И ВложенныйЗапрос.Строение = ОтрицательныйОбъемРаспределения.МКД
	|			И ВложенныйЗапрос.Услуга = ОтрицательныйОбъемРаспределения.Услуга
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	ПериодНачисления,
	|	Район,
	|	Строение,
	|	Услуга
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗначенияТекущихСоциальныхНормативов.Организация КАК Организация,
	|	ЗначенияТекущихСоциальныхНормативов.ПериодНачисления КАК ПериодНачисления,
	|	ЗначенияТекущихСоциальныхНормативов.Район КАК Район,
	|	ЗначенияТекущихСоциальныхНормативов.КлючНорматива КАК КлючСоцНорматива,
	|	ЗначенияТекущихСоциальныхНормативов.Услуга КАК Услуга,
	|	ЗначенияТекущихСоциальныхНормативов.НаправлениеИспользованияТУ КАК НаправлениеИспользованияТУ,
	|	ЗначенияТекущихСоциальныхНормативов.ЗначениеНорматива КАК ЗначениеНорматива
	|ИЗ
	|	ЗначенияТекущихСоциальныхНормативов КАК ЗначенияТекущихСоциальныхНормативов";
	
	Возврат Текст;
	
КонецФункции

Функция ТекстЗапросаНормативныеДанныеРаспределения()
	Текст  = 
	"ВЫБРАТЬ
	|	энргЗначенияНормативовПотребленияСрезПоследних.Организация КАК Организация,
	|	&ПериодНачисления КАК ПериодНачисления,
	|	энргЗначенияНормативовПотребленияСрезПоследних.Район КАК Район,
	|	энргЗначенияНормативовПотребленияСрезПоследних.КлючНорматива КАК КлючНорматива,
	|	энргЗначенияНормативовПотребленияСрезПоследних.Услуга КАК Услуга,
	|	энргЗначенияНормативовПотребленияСрезПоследних.ЗначениеНорматива КАК ЗначениеНорматива
	|ПОМЕСТИТЬ ЗначенияТекущихНормПотребления
	|ИЗ
	|	РегистрСведений.энргЗначенияНормативовПотребления.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И Район = &Район
	|				И ТипНачисления = ЗНАЧЕНИЕ(Перечисление.энргТипыНачислений.ОбщедомовыеНачисления)
	|				И НаправлениеИспользованияТУ = ЗНАЧЕНИЕ(Справочник.энргНаправлениеИспользованияТочекУчета.ОсновноеНаправление)) КАК энргЗначенияНормативовПотребленияСрезПоследних
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	энргЗначенияНормативовПотребленияСрезПоследних.Организация,
	|	&ПериодНачисления,
	|	энргЗначенияНормативовПотребленияСрезПоследних.Район,
	|	энргЗначенияНормативовПотребленияСрезПоследних.КлючНорматива,
	|	энргЗначенияНормативовПотребленияСрезПоследних.Услуга,
	|	энргЗначенияНормативовПотребленияСрезПоследних.ЗначениеНорматива
	|ИЗ
	|	РегистрСведений.энргЗначенияНормативовПотребления.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И Район = &Район
	|				И ТипНачисления = ЗНАЧЕНИЕ(Перечисление.энргТипыНачислений.ИндивидуальныеНачисления)
	|				И НаправлениеИспользованияТУ = ЗНАЧЕНИЕ(Справочник.энргНаправлениеИспользованияТочекУчета.ОсновноеНаправление)) КАК энргЗначенияНормативовПотребленияСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг КАК энргВидыУслуг
	|		ПО энргЗначенияНормативовПотребленияСрезПоследних.Услуга = энргВидыУслуг.Ссылка
	|			И (энргВидыУслуг.НормативДляИндивидуальных)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	энргЗначенияТарифовСрезПоследних.Организация КАК Организация,
	|	&ПериодНачисления КАК ПериодНачисления,
	|	энргЗначенияТарифовСрезПоследних.Район КАК Район,
	|	энргЗначенияТарифовСрезПоследних.ГруппаПотребителей КАК ГруппаПотребителей,
	|	энргЗначенияТарифовСрезПоследних.Услуга КАК Услуга,
	|	энргЗначенияТарифовСрезПоследних.Поставщик КАК Поставщик,
	|	энргЗначенияТарифовСрезПоследних.ТарифнаяЗона КАК ТарифнаяЗона,
	|	энргЗначенияТарифовСрезПоследних.Значение КАК Значение,
	|	энргЗначенияТарифовСрезПоследних.ЗначениеСверхНорматива КАК ЗначениеСверхНорматива,
	|	энргЗначенияТарифовСрезПоследних.ЗначениеРЭК КАК ЗначениеТарифаРЭК,
	|	энргЗначенияТарифовСрезПоследних.СтавкаНДС КАК СтавкаНДС,
	|	энргЗначенияТарифовСрезПоследних.НДСВнутри КАК НДСВнутри
	|ПОМЕСТИТЬ ЗначенияТекущихТарифов
	|ИЗ
	|	РегистрСведений.энргЗначенияТарифов.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И Район = &Район) КАК энргЗначенияТарифовСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////	
	|ВЫБРАТЬ
	|	энргЗначенияСоциальныхНормативовСрезПоследних.Организация КАК Организация,
	|	&ПериодНачисления КАК ПериодНачисления,
	|	энргЗначенияСоциальныхНормативовСрезПоследних.Район КАК Район,
	|	энргЗначенияСоциальныхНормативовСрезПоследних.КлючНорматива КАК КлючНорматива,
	|	энргЗначенияСоциальныхНормативовСрезПоследних.Услуга КАК Услуга,
	|	энргЗначенияСоциальныхНормативовСрезПоследних.НаправлениеИспользованияТУ КАК НаправлениеИспользованияТУ,
	|	энргЗначенияСоциальныхНормативовСрезПоследних.ЗначениеНорматива КАК ЗначениеНорматива
	|ПОМЕСТИТЬ ЗначенияТекущихСоциальныхНормативов
	|ИЗ
	|	РегистрСведений.энргЗначенияСоциальныхНормативов.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И Район = &Район
	|				И ТипНачисления = ЗНАЧЕНИЕ(Перечисление.энргТипыНачислений.ИндивидуальныеНачисления)) КАК энргЗначенияСоциальныхНормативовСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	энргНастройкаНачисленияГВСМКДСрезПоследних.Организация КАК Организация,
	|	&ПериодНачисления КАК ПериодНачисления,
	|	энргНастройкаНачисленияГВСМКДСрезПоследних.Район КАК Район,
	|	энргНастройкаНачисленияГВСМКДСрезПоследних.МКД КАК МКД,
	|	энргНастройкаНачисленияГВСМКДСрезПоследних.Услуга КАК Услуга,
	|	энргНастройкаНачисленияГВСМКДСрезПоследних.ТипСхемы КАК ТипСхемы,
	|	энргНастройкаНачисленияГВСМКДСрезПоследних.ПринадлежностьКТепловомуПункту КАК ПринадлежностьКТепловомуПункту,
	|	энргНастройкаНачисленияГВСМКДСрезПоследних.НеНачислять КАК НеНачислять
	|ПОМЕСТИТЬ МКДНеНачислятьТЭ
	|ИЗ
	|	РегистрСведений.энргНастройкаНачисленияГВСМКД.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И Район = &Район) КАК энргНастройкаНачисленияГВСМКДСрезПоследних";
	
	Возврат Текст;
	
КонецФункции

Функция ТекстЗапросаДокументыДляРаспределенияМКД() 
	
	Текст  = 
	"ВЫБРАТЬ
	|	энргФормыУправленияМКДСрезПоследних.Организация КАК Организация,
	|	энргФормыУправленияМКДСрезПоследних.Район КАК Район,
	|	энргФормыУправленияМКДСрезПоследних.МКД КАК МКД
	|ПОМЕСТИТЬ МКДвУК
	|ИЗ
	|	РегистрСведений.энргФормыУправленияМКД.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И Район = &Район
	|				И МКД = &Строение) КАК энргФормыУправленияМКДСрезПоследних
	|ГДЕ
	|	энргФормыУправленияМКДСрезПоследних.ФормаУправления = ЗНАЧЕНИЕ(Перечисление.энргФормыУправленияМКД.УК)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	энргОтложенныеДвиженияДокументов.Организация КАК Организация,
	|	энргОтложенныеДвиженияДокументов.ПериодНачисления КАК ПериодНачисления,
	|	энргОтложенныеДвиженияДокументов.Район КАК Район,
	|	энргОтложенныеДвиженияДокументов.Строение КАК Строение,
	|	&ЗавершениеОП
	|ПОМЕСТИТЬ ДокументыДляРаспределения
	|ИЗ
	|	РегистрСведений.энргОтложенныеДвиженияДокументов КАК энргОтложенныеДвиженияДокументов
	|ГДЕ
	|	энргОтложенныеДвиженияДокументов.Организация = &Организация
	|	И энргОтложенныеДвиженияДокументов.ПериодНачисления = &ПериодНачисления
	|	И энргОтложенныеДвиженияДокументов.Район = &Район
	|	И энргОтложенныеДвиженияДокументов.РазделЗаписи = ЗНАЧЕНИЕ(Перечисление.энргРазделыЗаписи.РаспределениеМКД)
	|	И НЕ энргОтложенныеДвиженияДокументов.ЧастныйСектор
	|	И энргОтложенныеДвиженияДокументов.Строение = &Строение";
	
	Возврат Текст
	
КонецФункции

Функция ТекстЗапросаСозданныеДокументыРаспределения()
	
	Текст = 
	"ВЫБРАТЬ
	|	энргДокументыНачислений.ПериодНачисления КАК ПериодНачисления,
	|	энргДокументыНачислений.ДокументНачисления КАК ДокументНачисления
	|ПОМЕСТИТЬ ДокументыНачислений
	|ИЗ
	|	РегистрСведений.энргДокументыНачислений КАК энргДокументыНачислений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыДляРаспределения КАК ДокументыДляРаспределения
	|		ПО энргДокументыНачислений.Организация = ДокументыДляРаспределения.Организация
	|			И энргДокументыНачислений.ПериодНачисления = ДокументыДляРаспределения.ПериодНачисления
	|			И энргДокументыНачислений.Район = ДокументыДляРаспределения.Район
	|			И (энргДокументыНачислений.ВидОперацийНачисления = ЗНАЧЕНИЕ(Перечисление.энргВидыОперацийНачисления.Индивидуальные))
	|			И энргДокументыНачислений.МКД = ДокументыДляРаспределения.Строение
	|			И (энргДокументыНачислений.Организация = &Организация)
	|			И (энргДокументыНачислений.ПериодНачисления = &ПериодНачисления)
	|			И (энргДокументыНачислений.МКД = &Строение)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	энргДокументыНачислений.ПериодНачисления,
	|	энргДокументыНачислений.ДокументНачисления
	|ИЗ
	|	РегистрСведений.энргДокументыНачислений КАК энргДокументыНачислений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыДляРаспределения КАК ДокументыДляРаспределения
	|		ПО энргДокументыНачислений.Организация = ДокументыДляРаспределения.Организация
	|			И энргДокументыНачислений.ПериодНачисления = ДокументыДляРаспределения.ПериодНачисления
	|			И энргДокументыНачислений.Район = ДокументыДляРаспределения.Район
	|			И (энргДокументыНачислений.ВидОперацийНачисления = ЗНАЧЕНИЕ(Перечисление.энргВидыОперацийНачисления.ПерерасчетСредних))
	|			И энргДокументыНачислений.МКД = ДокументыДляРаспределения.Строение
	|			И (энргДокументыНачислений.Организация = &Организация)
	|			И (энргДокументыНачислений.ПериодНачисления = &ПериодНачисления)
	|			И (энргДокументыНачислений.МКД = &Строение)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	энргДокументыНачислений.Организация КАК Организация,
	|	энргДокументыНачислений.ПериодНачисления КАК ПериодНачисления,
	|	энргДокументыНачислений.Район КАК Район,
	|	энргДокументыНачислений.МКД КАК МКД,
	|	энргДокументыНачислений.ДокументНачисления КАК ДокументНачисления
	|ПОМЕСТИТЬ ДокументыРаспределенияМКД
	|ИЗ
	|	РегистрСведений.энргДокументыНачислений КАК энргДокументыНачислений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыДляРаспределения КАК ДокументыДляРаспределения
	|		ПО энргДокументыНачислений.Организация = ДокументыДляРаспределения.Организация
	|			И энргДокументыНачислений.ПериодНачисления = ДокументыДляРаспределения.ПериодНачисления
	|			И энргДокументыНачислений.Район = ДокументыДляРаспределения.Район
	|			И (энргДокументыНачислений.ВидОперацийНачисления = ЗНАЧЕНИЕ(Перечисление.энргВидыОперацийНачисления.РаспределениеМКД))
	|			И энргДокументыНачислений.МКД = ДокументыДляРаспределения.Строение
	|			И (энргДокументыНачислений.Организация = &Организация)
	|			И (энргДокументыНачислений.ПериодНачисления = &ПериодНачисления)
	|			И (энргДокументыНачислений.МКД = &Строение)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	энргИсторияСоглашенийОРаспределенииСверхнормативногоОДНСрезПоследних.Организация КАК Организация,
	|	&ПериодНачисления КАК ПериодНачисления,
	|	энргИсторияСоглашенийОРаспределенииСверхнормативногоОДНСрезПоследних.Район КАК Район,
	|	энргИсторияСоглашенийОРаспределенииСверхнормативногоОДНСрезПоследних.МКД КАК МКД,
	|	энргИсторияСоглашенийОРаспределенииСверхнормативногоОДНСрезПоследних.Услуга КАК Услуга,
	|	энргИсторияСоглашенийОРаспределенииСверхнормативногоОДНСрезПоследних.РаспределятьПолностью КАК РаспределятьПолностью
	|ПОМЕСТИТЬ ИсторияСоглашенийОРаспределенииСверхнормативногоОДН
	|ИЗ
	|	РегистрСведений.энргИсторияСоглашенийОРаспределенииСверхнормативногоОДН.СрезПоследних(
	|			&ПериодНачисления,
	|			Организация = &Организация
	|				И МКД = &Строение
	|				И Район = &Район) КАК энргИсторияСоглашенийОРаспределенииСверхнормативногоОДНСрезПоследних";
	
	Возврат Текст;
	
КонецФункции

Функция ТекстЗапросаОбъемыНачисленийМКДДляРаспределения()
	Текст  = 
	"ВЫБРАТЬ
	|	энргОбъемНачисленийМКДОбороты.Организация КАК Организация,
	|	&ПериодНачисления КАК ПериодНачисления,
	|	энргОбъемНачисленийМКДОбороты.Район КАК Район,
	|	энргОбъемНачисленийМКДОбороты.МКД КАК МКД,
	|	энргОбъемНачисленийМКДОбороты.Услуга КАК Услуга,
	|	СУММА(энргОбъемНачисленийМКДОбороты.ОбъемУслугиНормативОборот) КАК ОбъемУслугиНормативОборот,
	|	энргОбъемНачисленийМКДОбороты.ТарифнаяЗона КАК ТарифнаяЗона,
	|	энргОбъемНачисленийМКДОбороты.СпособНачисления КАК СпособНачисления,
	|	СУММА(энргОбъемНачисленийМКДОбороты.ОбъемУслугиОборот) КАК ОбъемУслугиОборот,
	|	СУММА(энргОбъемНачисленийМКДОбороты.ОбъемУслугиПотребленныйОборот) КАК ОбъемУслугиПотребленныйОборот,
	|	СУММА(энргОбъемНачисленийМКДОбороты.ПоказанияПредоставленыОборот) КАК ПоказанияПредоставленыОборот,
	|	СУММА(энргОбъемНачисленийМКДОбороты.ПоказанияПредоставленыПотребленныйОборот) КАК ПоказанияПредоставленыПотребленныйОборот,
	|	энргОбъемНачисленийМКД.НазначениеПрибораУчета КАК НазначениеПрибораУчета
	|ПОМЕСТИТЬ НачисленныйОбъемМКД
	|ИЗ
	|	РегистрНакопления.энргОбъемНачисленийМКД.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Запись,
	|			Организация = &Организация
	|				И Район = &Район
	|				И МКД = &Строение
	|				И НЕ СпособНачисления = ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.КорректировкаСезонныхУслуг)) КАК энргОбъемНачисленийМКДОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.энргОбъемНачисленийМКД КАК энргОбъемНачисленийМКД
	|		ПО энргОбъемНачисленийМКДОбороты.Период = энргОбъемНачисленийМКД.Период
	|			И энргОбъемНачисленийМКДОбороты.Регистратор = энргОбъемНачисленийМКД.Регистратор
	|			И энргОбъемНачисленийМКДОбороты.НомерСтроки = энргОбъемНачисленийМКД.НомерСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	энргОбъемНачисленийМКДОбороты.Организация,
	|	энргОбъемНачисленийМКДОбороты.Район,
	|	энргОбъемНачисленийМКДОбороты.МКД,
	|	энргОбъемНачисленийМКДОбороты.Услуга,
	|	энргОбъемНачисленийМКДОбороты.ТарифнаяЗона,
	|	энргОбъемНачисленийМКДОбороты.СпособНачисления,
	|	энргОбъемНачисленийМКД.НазначениеПрибораУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(энргОбъемНачислений.Период, МЕСЯЦ) КАК ПериодНачисления,
	|	энргОбъемНачислений.Период КАК Период,
	|	энргОбъемНачислений.Регистратор КАК Регистратор,
	|	энргОбъемНачислений.НомерСтроки КАК НомерСтроки,
	|	энргОбъемНачислений.Активность КАК Активность,
	|	энргОбъемНачислений.Организация КАК Организация,
	|	энргОбъемНачислений.Район КАК Район,
	|	энргОбъемНачислений.Распределение КАК Распределение,
	|	энргОбъемНачислений.Строение КАК Строение,
	|	энргОбъемНачислений.Помещение КАК Помещение,
	|	энргОбъемНачислений.Абонент КАК Абонент,
	|	энргОбъемНачислений.Услуга КАК Услуга,
	|	энргОбъемНачислений.ТочкаУчета КАК ТочкаУчета,
	|	энргОбъемНачислений.ВидНачисления КАК ВидНачисления,
	|	энргОбъемНачислений.СпособНачисления КАК СпособНачисления,
	|	энргОбъемНачислений.НаправлениеИспользованияТУ КАК НаправлениеИспользованияТУ,
	|	энргОбъемНачислений.Измеритель КАК Измеритель,
	|	энргОбъемНачислений.ПриборУчета КАК ПриборУчета,
	|	энргОбъемНачислений.Шкала КАК Шкала,
	|	энргОбъемНачислений.ТарифнаяЗона КАК ТарифнаяЗона,
	|	энргОбъемНачислений.ЗначениеТарифа КАК ЗначениеТарифа,
	|	энргОбъемНачислений.Поставщик КАК Поставщик,
	|	энргОбъемНачислений.ПериодРасчета КАК ПериодРасчета,
	|	энргОбъемНачислений.ЧастныйСектор КАК ЧастныйСектор,
	|	энргОбъемНачислений.СверхНорматива КАК СверхНорматива,
	|	энргОбъемНачислений.Сумма КАК Сумма,
	|	энргОбъемНачислений.ОбъемУслуги КАК ОбъемУслуги,
	|	энргОбъемНачислений.ОбъемУслугиПотребленный КАК ОбъемУслугиПотребленный,
	|	энргОбъемНачислений.ОбъемУслугиСоцНорма КАК ОбъемУслугиСоцНорма,
	|	энргОбъемНачислений.НачалоПериода КАК НачалоПериода,
	|	энргОбъемНачислений.КонецПериода КАК КонецПериода,
	|	энргОбъемНачислений.НачальныеПоказания КАК НачальныеПоказания,
	|	энргОбъемНачислений.КонечныеПоказания КАК КонечныеПоказания,
	|	энргОбъемНачислений.КоличествоКомнат КАК КоличествоКомнат,
	|	энргОбъемНачислений.КоличествоПрописанных КАК КоличествоПрописанных,
	|	энргОбъемНачислений.ЗначениеПлощади КАК ЗначениеПлощади,
	|	энргОбъемНачислений.НормаПотребления КАК НормаПотребления,
	|	энргОбъемНачислений.КоэффициентПУ КАК КоэффициентПУ,
	|	энргОбъемНачислений.РасчетПоФормуле КАК РасчетПоФормуле,
	|	энргОбъемНачислений.ВидБлагоустройства КАК ВидБлагоустройства,
	|	энргОбъемНачислений.ТарифнаяГруппа КАК ТарифнаяГруппа,
	|	энргОбъемНачислений.ДатаПоверки КАК ДатаПоверки,
	|	энргОбъемНачислений.ОтключатьВНеполивнойСезон КАК ОтключатьВНеполивнойСезон,
	|	энргОбъемНачислений.ЗависимаяТочкаУчета КАК ЗависимаяТочкаУчета,
	|	энргОбъемНачислений.КоэффициентФормула КАК КоэффициентФормула,
	|	энргОбъемНачислений.ВидДифференцированности КАК ВидДифференцированности,
	|	энргОбъемНачислений.ОснованиеПерерасчета КАК ОснованиеПерерасчета,
	|	энргОбъемНачислений.ОснованиеПерерасчетаДата КАК ОснованиеПерерасчетаДата,
	|	энргОбъемНачислений.ПриборЗависимой КАК ПриборЗависимой,
	|	энргОбъемНачислений.СписатьИзНормы КАК СписатьИзНормы,
	|	энргОбъемНачислений.ПовыщающийКоэффициент КАК ПовыщающийКоэффициент,
	|	энргОбъемНачислений.КоличествоСобственников КАК КоличествоСобственников,
	|	энргОбъемНачислений.КоличествоПроживающих КАК КоличествоПроживающих,
	|	энргОбъемНачислений.СниматьНачисленныйСредний КАК СниматьНачисленныйСредний,
	|	энргОбъемНачислений.ПлощадьМОП КАК ПлощадьМОП,
	|	энргОбъемНачислений.ПлощадьАбонентов КАК ПлощадьАбонентов,
	|	энргОбъемНачислений.ПлощадьСобственнаяПоставка КАК ПлощадьСобственнаяПоставка,
	|	энргОбъемНачислений.КоэффициентРаспределенияОстатка КАК КоэффициентРаспределенияОстатка,
	|	энргОбъемНачислений.ЗначениеСоциальнойНормы КАК ЗначениеСоциальнойНормы,
	|	энргОбъемНачислений.СоставнаяУслуга КАК СоставнаяУслуга,
	|	энргОбъемНачислений.НеПрименятьСезонность КАК НеПрименятьСезонность,
	|	энргОбъемНачислений.ПомещениеРодитель КАК ПомещениеРодитель,
	|	энргОбъемНачислений.ДопСоциальнаяНормаПотребления КАК ДопСоциальнаяНормаПотребления
	|ПОМЕСТИТЬ ОбъемНачисленийПоПриборуУчетаКорректироватьИндивидуальныйОбъем
	|ИЗ
	|	РегистрНакопления.энргОбъемНачислений.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Запись,
	|			Организация = &Организация
	|				И Район = &Район
	|				И НЕ Распределение
	|				И НЕ ЧастныйСектор
	|				И Строение = &Строение
	|				И ВидНачисления = ЗНАЧЕНИЕ(Перечисление.энргВидыНачислений.Начисление)
	|				И СпособНачисления В (ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.ПоПриборам), ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.НачислениеПоСреднему))
	|				И Услуга В
	|					(ВЫБРАТЬ
	|						энргВидыУслуг.Ссылка КАК Ссылка
	|					ИЗ
	|						Справочник.энргВидыУслуг КАК энргВидыУслуг
	|					ГДЕ
	|						энргВидыУслуг.КорректироватьИндивидуальныйОбъемСУчетомОДПУ)) КАК энргОбъемНачисленийОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.энргОбъемНачислений КАК энргОбъемНачислений
	|		ПО энргОбъемНачисленийОбороты.Период = энргОбъемНачислений.Период
	|			И энргОбъемНачисленийОбороты.Регистратор = энргОбъемНачислений.Регистратор
	|			И энргОбъемНачисленийОбороты.НомерСтроки = энргОбъемНачислений.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(бестОбъемНачисленийНП.Период, МЕСЯЦ) КАК ПериодНачисления,
	|	бестОбъемНачисленийНП.Период КАК Период,
	|	бестОбъемНачисленийНП.Регистратор КАК Регистратор,
	|	бестОбъемНачисленийНП.НомерСтроки КАК НомерСтроки,
	|	бестОбъемНачисленийНП.Активность КАК Активность,
	|	бестОбъемНачисленийНП.Организация КАК Организация,
	|	бестОбъемНачисленийНП.Район КАК Район,
	|	бестОбъемНачисленийНП.Распределение КАК Распределение,
	|	бестОбъемНачисленийНП.Договор КАК Договор,
	|	бестОбъемНачисленийНП.МКД КАК МКД,
	|	бестОбъемНачисленийНП.ОбъектРасчета КАК ОбъектРасчета,
	|	бестОбъемНачисленийНП.Услуга КАК Услуга,
	|	бестОбъемНачисленийНП.ТочкаУчета КАК ТочкаУчета,
	|	бестОбъемНачисленийНП.ВидНачисления КАК ВидНачисления,
	|	бестОбъемНачисленийНП.СпособНачисления КАК СпособНачисления,
	|	бестОбъемНачисленийНП.ПриборУчета КАК ПриборУчета,
	|	бестОбъемНачисленийНП.Шкала КАК Шкала,
	|	бестОбъемНачисленийНП.ТарифнаяЗона КАК ТарифнаяЗона,
	|	бестОбъемНачисленийНП.Поставщик КАК Поставщик,
	|	бестОбъемНачисленийНП.ПериодРасчета КАК ПериодРасчета,
	|	бестОбъемНачисленийНП.ДолевоеРаспределение КАК ДолевоеРаспределение,
	|	бестОбъемНачисленийНП.ОбъемПоПрибору КАК ОбъемПоПрибору,
	|	бестОбъемНачисленийНП.ОбъемУслуги КАК ОбъемУслуги,
	|	бестОбъемНачисленийНП.ОбъемУслугиПотребленный КАК ОбъемУслугиПотребленный,
	|	бестОбъемНачисленийНП.КоличествоЧасовШтатнойРаботыПУ КАК КоличествоЧасовШтатнойРаботыПУ,
	|	бестОбъемНачисленийНП.ОбъемДосчитанный КАК ОбъемДосчитанный,
	|	бестОбъемНачисленийНП.НачалоПериода КАК НачалоПериода,
	|	бестОбъемНачисленийНП.КонецПериода КАК КонецПериода,
	|	бестОбъемНачисленийНП.НачальныеПоказания КАК НачальныеПоказания,
	|	бестОбъемНачисленийНП.КонечныеПоказания КАК КонечныеПоказания,
	|	бестОбъемНачисленийНП.ЗначениеПлощади КАК ЗначениеПлощади,
	|	бестОбъемНачисленийНП.НормаПотребления КАК НормаПотребления,
	|	бестОбъемНачисленийНП.РасчетПоФормуле КАК РасчетПоФормуле,
	|	бестОбъемНачисленийНП.ДатаПоверки КАК ДатаПоверки,
	|	бестОбъемНачисленийНП.ЗависимаяТочкаУчета КАК ЗависимаяТочкаУчета,
	|	бестОбъемНачисленийНП.КоэффициентРасчета КАК КоэффициентФормула,
	|	бестОбъемНачисленийНП.ВидДифференцированности КАК ВидДифференцированности,
	|	бестОбъемНачисленийНП.СписатьИзНормы КАК СписатьИзНормы,
	|	бестОбъемНачисленийНП.ПовыщающийКоэффициент КАК ПовыщающийКоэффициент,
	|	бестОбъемНачисленийНП.СоставнаяУслуга КАК СоставнаяУслуга,
	|	бестОбъемНачисленийНП.НеПрименятьСезонность КАК НеПрименятьСезонность,
	|	бестОбъемНачисленийНП.ЗначениеНагрузки КАК ЗначениеНагрузки,
	|	бестОбъемНачисленийНП.ЗначениеНормативаЗаДень КАК ЗначениеНормативаЗаДень,
	|	бестОбъемНачисленийНП.ОбъектУчаствуетВРаспределенииМКД КАК ОбъектУчаствуетВРаспределенииМКД,
	|	бестОбъемНачисленийНП.СпособРасчетаНорматива КАК СпособРасчетаНорматива,
	|	бестОбъемНачисленийНП.ТемператураВнутриПомещения КАК ТемператураВнутриПомещения,
	|	бестОбъемНачисленийНП.ПлощадьМОП КАК ПлощадьМОП,
	|	бестОбъемНачисленийНП.ПлощадьАбонентов КАК ПлощадьАбонентов,
	|	бестОбъемНачисленийНП.ПлощадьСобственнаяПоставка КАК ПлощадьСобственнаяПоставка
	|ПОМЕСТИТЬ ОбъемНачисленийНППоПриборуУчетаКорректироватьИндивидуальныйОбъем
	|ИЗ
	|	РегистрНакопления.бестОбъемНачисленийНП.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Запись,
	|			Организация = &Организация
	|				И Район = &Район
	|				И НЕ Распределение
	|				И МКД = &Строение
	|				И ВидНачисления = ЗНАЧЕНИЕ(Перечисление.энргВидыНачислений.Начисление)
	|				И СпособНачисления В (ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.ПоПриборам), ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.НачислениеПоСреднему))
	|				И Услуга В
	|					(ВЫБРАТЬ
	|						энргВидыУслуг.Ссылка КАК Ссылка
	|					ИЗ
	|						Справочник.энргВидыУслуг КАК энргВидыУслуг
	|					ГДЕ
	|						энргВидыУслуг.КорректироватьИндивидуальныйОбъемСУчетомОДПУ)) КАК бестОбъемНачисленийНПОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.бестОбъемНачисленийНП КАК бестОбъемНачисленийНП
	|		ПО бестОбъемНачисленийНПОбороты.Период = бестОбъемНачисленийНП.Период
	|			И бестОбъемНачисленийНПОбороты.Регистратор = бестОбъемНачисленийНП.Регистратор
	|			И бестОбъемНачисленийНПОбороты.НомерСтроки = бестОбъемНачисленийНП.НомерСтроки
	|			И (бестОбъемНачисленийНП.ОбъектУчаствуетВРаспределенииМКД)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(энргОбъемНачисленийОбороты.Период, МЕСЯЦ) КАК ПериодНачисления,
	|	энргОбъемНачисленийОбороты.Район КАК Район,
	|	энргОбъемНачисленийОбороты.Организация КАК Организация,
	|	энргОбъемНачисленийОбороты.Распределение КАК Распределение,
	|	бестОбъектыРасчета.МКД КАК Строение,
	|	энргОбъемНачисленийОбороты.ОбъектРасчета КАК Абонент,
	|	энргОбъемНачисленийОбороты.ОбъектРасчета КАК Помещение,
	|	энргОбъемНачисленийОбороты.Услуга КАК Услуга,
	|	энргОбъемНачисленийОбороты.ТочкаУчета КАК ТочкаУчета,
	|	энргОбъемНачисленийОбороты.ВидНачисления КАК ВидНачисления,
	|	энргОбъемНачисленийОбороты.СпособНачисления КАК СпособНачисления,
	|	ЗНАЧЕНИЕ(Справочник.энргНаправлениеИспользованияТочекУчета.ОсновноеНаправление) КАК НаправлениеИспользованияТУ,
	|	ЗНАЧЕНИЕ(Справочник.энргНаправлениеИспользованияТочекУчета.Пустаяссылка) КАК Измеритель,
	|	энргОбъемНачисленийОбороты.ПриборУчета КАК ПриборУчета,
	|	энргОбъемНачисленийОбороты.Шкала КАК Шкала,
	|	энргОбъемНачисленийОбороты.ТарифнаяЗона КАК ТарифнаяЗона,
	|	1 КАК ЗначениеТарифа,
	|	энргОбъемНачисленийОбороты.Поставщик КАК Поставщик,
	|	энргОбъемНачисленийОбороты.ПериодРасчета КАК ПериодРасчета,
	|	ЛОЖЬ КАК ЧастныйСектор,
	|	ЛОЖЬ КАК СверхНорматива,
	|	0 КАК Сумма,
	|	энргОбъемНачисленийОбороты.ОбъемУслуги КАК ОбъемУслуги,
	|	энргОбъемНачисленийОбороты.ОбъемУслугиПотребленный КАК ОбъемУслугиПотребленный,
	|	0 КАК СуммаПоПовышенномуКоэффициенту,
	|	энргОбъемНачисленийОбороты.НачалоПериода КАК НачалоПериода,
	|	энргОбъемНачисленийОбороты.КонецПериода КАК КонецПериода,
	|	энргОбъемНачисленийОбороты.НачальныеПоказания КАК НачальныеПоказания,
	|	энргОбъемНачисленийОбороты.КонечныеПоказания КАК КонечныеПоказания,
	|	0 КАК КоличествоКомнат,
	|	0 КАК КоличествоПрописанных,
	|	0 КАК КоличествоЖильцов,
	|	энргОбъемНачисленийОбороты.ЗначениеПлощади КАК ЗначениеПлощади,
	|	энргОбъемНачисленийОбороты.НормаПотребления КАК НормаПотребления,
	|	0 КАК КоэффициентПУ,
	|	энргОбъемНачисленийОбороты.РасчетПоФормуле КАК РасчетПоФормуле,
	|	ЗНАЧЕНИЕ(Справочник.энргВидыБлагоустройств.ПустаяСсылка) КАК ВидБлагоустройства,
	|	ЗНАЧЕНИЕ(Справочник.энргГруппыПотребителей.ПустаяСсылка) КАК ТарифнаяГруппа,
	|	энргОбъемНачисленийОбороты.ДатаПоверки КАК ДатаПоверки,
	|	ЛОЖЬ КАК ОтключатьВНеполивнойСезон,
	|	энргОбъемНачисленийОбороты.ЗависимаяТочкаУчета КАК ЗависимаяТочкаУчета,
	|	энргОбъемНачисленийОбороты.КоэффициентРасчета КАК КоэффициентФормула,
	|	энргОбъемНачисленийОбороты.ВидДифференцированности КАК ВидДифференцированности,
	|	"""" КАК ОснованиеПерерасчета,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ОснованиеПерерасчетаДата,
	|	ЗНАЧЕНИЕ(Справочник.энргПриборыУчетаАбонента.ПустаяСсылка) КАК ПриборЗависимой,
	|	ЛОЖЬ КАК СписатьИзНормы,
	|	энргОбъемНачисленийОбороты.ПовыщающийКоэффициент КАК ПовыщающийКоэффициент,
	|	0 КАК КоличествоСобственников,
	|	0 КАК КоличествоПроживающих,
	|	ЛОЖЬ КАК СниматьНачисленныйСредний,
	|	энргОбъемНачисленийОбороты.ПлощадьМОП КАК ПлощадьМОП,
	|	энргОбъемНачисленийОбороты.ПлощадьАбонентов КАК ПлощадьАбонентов,
	|	энргОбъемНачисленийОбороты.ПлощадьСобственнаяПоставка КАК ПлощадьСобственнаяПоставка,
	|	0 КАК КоэффициентРаспределенияОстатка,
	|	0 КАК ОбъемУслугиСоцНорма,
	|	энргОбъемНачисленийОбороты.СоставнаяУслуга КАК СоставнаяУслуга,
	|	энргОбъемНачисленийОбороты.НеПрименятьСезонность КАК НеПрименятьСезонность,
	|	ЗНАЧЕНИЕ(Справочник.энргПомещения.ПустаяСсылка) КАК ПомещениеРодитель,
	|	энргОбъемНачисленийОбороты.Договор КАК Договор,
	|	ВЫБОР
	|		КОГДА энргОбъемНачисленийОбороты.РасчетПоФактическомуПотреблению
	|			ТОГДА НЕ энргОбъемНачисленийОбороты.НеПрименятьСезонность
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РасчетПоФактическомуОбъему
	|ПОМЕСТИТЬ ОбъемНачисленийНП
	|ИЗ
	|	РегистрНакопления.бестОбъемНачисленийНП КАК энргОбъемНачисленийОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.бестОбъектыРасчета КАК бестОбъектыРасчета
	|		ПО энргОбъемНачисленийОбороты.ОбъектРасчета = бестОбъектыРасчета.Ссылка
	|			И (бестОбъектыРасчета.МКД = &Строение)
	|			И (энргОбъемНачисленийОбороты.Период = &Период)
	|			И (энргОбъемНачисленийОбороты.Организация = &Организация)
	|			И (энргОбъемНачисленийОбороты.Район = &Район)
	|			И (НЕ энргОбъемНачисленийОбороты.Распределение)
	|			И (НЕ энргОбъемНачисленийОбороты.Договор.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.бестТипыДоговоров.УправляющаяКомпания))
	|			И (энргОбъемНачисленийОбороты.ОбъектУчаствуетВРаспределенииМКД)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	энргОтрицательныйОбъемРаспределенияМКДОстатки.Организация КАК Организация,
	|	&ПериодНачисления КАК ПериодНачисления,
	|	энргОтрицательныйОбъемРаспределенияМКДОстатки.Район КАК Район,
	|	энргОтрицательныйОбъемРаспределенияМКДОстатки.МКД КАК МКД,
	|	энргОтрицательныйОбъемРаспределенияМКДОстатки.ПериодНачисления КАК ПериодНачисленияОбъема,
	|	энргОтрицательныйОбъемРаспределенияМКДОстатки.Услуга КАК Услуга,
	|	энргОтрицательныйОбъемРаспределенияМКДОстатки.ОбъемУслугиОстаток КАК ОбъемУслуги,
	|	энргОтрицательныйОбъемРаспределенияМКДОстатки.ОбъемУслугиПотребленныйОстаток КАК ОбъемУслугиПотребленный
	|ПОМЕСТИТЬ ОтрицательныйОбъемРаспределения
	|ИЗ
	|	РегистрНакопления.энргОтрицательныйОбъемРаспределенияМКД.Остатки(
	|			&НачалоПериода,
	|			Организация = &Организация
	|				И Район = &Район
	|				И МКД = &Строение) КАК энргОтрицательныйОбъемРаспределенияМКДОстатки";
	
	Возврат Текст;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область Начислить_ВспомогательныеПроцедурыИФункции

Функция РезультатЗапросаИндивидуальныеНачисления(МВТ,ДокументНачисленияПустаяСсылка) 			
	ПолучитьСтабильныеПериоды(МВТ,ДокументНачисленияПустаяСсылка);
	ПолучитьДанныеДляРасчета(МВТ,ЛОЖЬ,Ложь,"энргНачисление");
	Возврат РассчитатьИндивидуальныйОбъемПотребления(МВТ);
КонецФункции

Процедура ОбработатьРезультатЗапросаНачислений(РезультатЗапроса, Делегат)
	
	Перем ТекПериодНачисления, ТекОрганизация, ТекРайон, ТекСтроение,ТекМКД,ТекПомещениеРодитель,ТекПомещение,ТекТочкаУчета, ТекНачалоПериода,
	ТекКонецПериода, ГраницыПериодаНачисления, АктуальныеЗначенияПотерь;
	
	Ошибки 										= "";
	ИнформацияДляОшибки							= "";
	Выборка  									= РезультатЗапроса.выбрать();
	
	ТекЧастныйСектор							= Ложь;	
	НачисленияПоУслугам 						= Новый Соответствие;
	НачисленияПоУслугамПомещения 				= Новый Соответствие;
	ПлощадиПомещенийПоУслугам 					= Новый Соответствие;
		
	ПересчитатьСтроки 							= Новый Массив;
	ПересчитатьСтрокиПоПлощади 					= Новый Массив;
	ПересчитатьСтрокиПоКоличествуЧеловек 		= Новый Соответствие;
	ПересчитатьСтрокиПоДолям			 		= Новый Соответствие;
	ПересчитатьСтрокиПоФормуле 					= Новый Соответствие;
	ДеревоТочекУчета 							= Новый Соответствие;
	ОстатокСоциальнойНормы 						= Новый Соответствие;
	ОбъемыПомещенийССоглашением 				= Новый Соответствие;
	ЗаписиСтороннихПоставщиков					= Новый Массив;
		
	Набор 										= Неопределено;
	НаборОбъемПомещений 						= Неопределено;
			
 	Пока Выборка.следующий() цикл
		// Потомки помещения
		Если НЕ ТекПериодНачисления = Выборка.ПериодНачисления
			ИЛИ НЕ ТекПомещениеРодитель = Выборка.ПомещениеРодитель Тогда
			Если Не ТекПомещениеРодитель = Неопределено Тогда
				ПересчитатьСтрокиНачисление(Набор, НаборОбъемПомещений, НачисленияПоУслугамПомещения, ПересчитатьСтроки, ПересчитатьСтрокиПоПлощади, ПересчитатьСтрокиПоКоличествуЧеловек, ПересчитатьСтрокиПоДолям, ПлощадиПомещенийПоУслугам, ОстатокСоциальнойНормы, ОбъемыПомещенийССоглашением, Ошибки, ИнформацияДляОшибки);
			КонецЕсли;
			ПересчитатьСтроки 						= Новый Массив;
			ПересчитатьСтрокиПоПлощади 				= Новый Массив;
			ПересчитатьСтрокиПоКоличествуЧеловек 	= Новый Соответствие;
			ПересчитатьСтрокиПоДолям			 	= Новый Соответствие;
			ПлощадиПомещенийПоУслугам 				= Новый Соответствие;
			НачисленияПоУслугамПомещения 			= Новый Соответствие;			
		КонецЕсли;
		// Помещение
		Если НЕ ТекПериодНачисления = Выборка.ПериодНачисления
			ИЛИ НЕ ТекЧастныйСектор = Выборка.ЧастныйСектор
			ИЛИ НЕ ТекСтроение = Выборка.Строение
			ИЛИ НЕ ТекПомещение = Выборка.Помещение Тогда
			Если НЕ ТекПериодНачисления = Неопределено Тогда
				РассчитатьДеревоТочекУчета(ДеревоТочекУчета, Набор, НаборОбъемПомещений, ОстатокСоциальнойНормы, Ошибки, ИнформацияДляОшибки);									
			КонецЕсли;			
			ДеревоТочекУчета 					= Новый Соответствие;			
		КонецЕсли;		
		
		// Помещение в рамках периода
		Если НЕ ТекПериодНачисления = Выборка.ПериодНачисления
			ИЛИ НЕ ТекЧастныйСектор = Выборка.ЧастныйСектор
			ИЛИ НЕ ТекСтроение = Выборка.Строение
			ИЛИ НЕ ТекПомещение = Выборка.Помещение
			ИЛИ НЕ ТекНачалоПериода = Выборка.НачалоПериода
			ИЛИ НЕ ТекКонецПериода = Выборка.КонецПериода Тогда			
			НачисленияПоУслугам 				= Новый Соответствие;			
		КонецЕсли;		
		 		
		Если НЕ ТекПериодНачисления = Выборка.ПериодНачисления			
			ИЛИ НЕ ТекМКД = Выборка.МКД Тогда			
			Если НЕ ТекМКД = Неопределено Тогда				
				ПересчитатьСтрокиПоФормуле(Набор, НаборОбъемПомещений, ПересчитатьСтрокиПоФормуле);				
				ПересчитатьСоциальнуюНорму(Набор, НаборОбъемПомещений, ОстатокСоциальнойНормы);				
				УдалитьЗаписиСторонихПоставщиков(ЗаписиСтороннихПоставщиков, Набор);
				//ЗаписатьНаборыЗаписейНачисление(ДокументОбъект, Набор, НаборВыполненные, НаборОбъемПомещений, Ошибки);
				Делегат.ПослеПроведенияМКД(Ошибки);
			КонецЕсли;
			ЗаписиСтороннихПоставщиков			= Новый Массив;
			ДокументОбъект  					= Неопределено;			
			Делегат.ПередПроведениемМКД(Выборка.МКД,Выборка.ДокументНачисления, Выборка.ДокументНачисленияПометкаУдаления);
			Набор 								= Делегат.НаборОбъемНачислений;
			НаборОбъемПомещений 				= Делегат.НаборОбъемНачисленийПомещений;
			//ПрочитатьНаборыЗаписейНачисление(Выборка, ДокументОбъект, Помещение, Набор, НаборОбъемПомещений, НаборВыполненные, Перечисления.энргВидыОперацийНачисления.Индивидуальные);
			ПересчитатьТехническиеТочки			= Новый Массив;
			ПересчитатьТехническиеТочкиПомещ	= Новый Массив;
			ПересчитатьСтрокиПоФормуле 			= Новый Соответствие;
			ОстатокСоциальнойНормы 				= Новый Соответствие;
		КонецЕсли; 				
				
		ЗаполнитьНаборыЗаписейНачисление(Выборка, Набор, НаборОбъемПомещений, НачисленияПоУслугам, НачисленияПоУслугамПомещения, ПересчитатьСтроки, ПересчитатьСтрокиПоПлощади, ПересчитатьСтрокиПоКоличествуЧеловек,ПересчитатьСтрокиПоДолям,ПлощадиПомещенийПоУслугам, ПересчитатьСтрокиПоФормуле, ПересчитатьТехническиеТочки, ПересчитатьТехническиеТочкиПомещ, ДеревоТочекУчета, ОстатокСоциальнойНормы, ЗаписиСтороннихПоставщиков, ОбъемыПомещенийССоглашением);
			
		ТекОрганизация 							= Выборка.Организация;
		ТекПериодНачисления 					= Выборка.ПериодНачисления;
		ТекРайон 								= Выборка.Район;
		ТекМКД 									= Выборка.МКД;
		ТекЧастныйСектор						= Выборка.ЧастныйСектор;
		ТекСтроение								= Выборка.Строение;
		ТекПомещениеРодитель 					= Выборка.ПомещениеРодитель;
		ТекПомещение							= Выборка.Помещение;
		ТекТочкаУчета							= Выборка.ТочкаУчета;
		ТекНачалоПериода						= Выборка.НачалоПериода;
		ТекКонецПериода 						= Выборка.КонецПериода;
		ТекЗавершениеОП 						= Выборка.ЗавершениеОП;
		ИнформацияДляОшибки = "Остановились на строении '" + Выборка.СтроениеПредставление + "'" + ?(ЗначениеЗаполнено(Выборка.Помещение)," и помещении '" + Выборка.ПомещениеПредставление + "'", "");		
	КонецЦикла;	
	
	Если НЕ ТекПериодНачисления = Неопределено Тогда 
		РассчитатьДеревоТочекУчета(ДеревоТочекУчета, Набор, НаборОбъемПомещений, ОстатокСоциальнойНормы, Ошибки, ИнформацияДляОшибки);		
		ПересчитатьСтрокиНачисление(Набор, НаборОбъемПомещений, НачисленияПоУслугамПомещения, ПересчитатьСтроки, ПересчитатьСтрокиПоПлощади, ПересчитатьСтрокиПоКоличествуЧеловек, ПересчитатьСтрокиПоДолям, ПлощадиПомещенийПоУслугам, ОстатокСоциальнойНормы, ОбъемыПомещенийССоглашением, Ошибки, ИнформацияДляОшибки);
		ПересчитатьСтрокиПоФормуле(Набор, НаборОбъемПомещений, ПересчитатьСтрокиПоФормуле);
		ПересчитатьСоциальнуюНорму(Набор, НаборОбъемПомещений, ОстатокСоциальнойНормы);		
		УдалитьЗаписиСторонихПоставщиков(ЗаписиСтороннихПоставщиков, Набор);
	КонецЕсли; 	

	Если Не ТекМКД = Неопределено Тогда
		Делегат.ПослеПроведенияМКД(Ошибки);
	КонецЕсли;
		
	Если Не ПустаяСтрока(Ошибки) Тогда
		ВызватьИсключение Ошибки;
	КонецЕсли;
	
КонецПроцедуры

Процедура УдалитьЗаписиСторонихПоставщиков(Знач ЗаписиСтороннихПоставщиков, Набор)
	
	Перем СтрокаНабора, Сч;
	
	Для Сч = 0 По ЗаписиСтороннихПоставщиков.ВГраница() Цикл
		СтрокаНабора 				 	= Набор.Получить(ЗаписиСтороннихПоставщиков[Сч]);
 		Набор.Удалить(СтрокаНабора);
	КонецЦикла;

КонецПроцедуры

Процедура ПересчитатьСтрокиНачисление(Набор, НаборОбъемПомещений, НачисленияПоУслугамПомещения, ПересчитатьСтроки, ПересчитатьСтрокиПоПлощади, ПересчитатьСтрокиПоКоличествуЧеловек, ПересчитатьСтрокиПоДолям, ПлощадиПомещенийПоУслугам, ОстатокСоциальнойНормы, ОбъемыПомещенийССоглашением,Ошибки, ИнформацияДляОшибки)
	
	Попытка
		Если ПересчитатьСтрокиПоПлощади.Количество() > 0 Тогда
			
			СуммаПлощадейПотомков 							= 0;
			мПомещения 										= Новый Массив;
			Для Сч = 0 По ПересчитатьСтрокиПоПлощади.ВГраница() Цикл
				СтрокНабора 								= Набор.Получить(ПересчитатьСтрокиПоПлощади[Сч]);
				Если мПомещения.Найти(СтрокНабора.Помещение) = Неопределено Тогда
					СуммаПлощадейПотомков 					=  СуммаПлощадейПотомков + СтрокНабора.ЗначениеПлощади;
					мПомещения.Добавить(СтрокНабора.Помещение);
				КонецЕсли;		 
			КонецЦикла;
			
			Для Сч = 0 По ПересчитатьСтрокиПоПлощади.ВГраница() Цикл
				СтрокНабора 								= Набор.Получить(ПересчитатьСтрокиПоПлощади[Сч]);					
				Если НЕ ПлощадиПомещенийПоУслугам[СтрокНабора.Услуга][СтрокНабора.НачалоПериода].Площадь = 0  и НЕ СтрокНабора.ОбъемУслуги = 0 Тогда
					СтрокНабора.ОбъемУслуги 				= (НачисленияПоУслугамПомещения[СтрокНабора.Услуга][СтрокНабора.ТарифнаяЗона][СтрокНабора.НачалоПериода][СтрокНабора.СоставнаяУслуга].ОбъемУслуги * СтрокНабора.ЗначениеПлощади / СуммаПлощадейПотомков);
					СтрокНабора.ЗначениеСоциальнойНормы 	= (НачисленияПоУслугамПомещения[СтрокНабора.Услуга][СтрокНабора.ТарифнаяЗона][СтрокНабора.НачалоПериода][СтрокНабора.СоставнаяУслуга].ЗначениеСоциальнойНормы * СтрокНабора.ЗначениеПлощади / СуммаПлощадейПотомков);
				ИначеЕсли НЕ СтрокНабора.ОбъемУслуги = 0 Тогда
					СтрокНабора.ОбъемУслуги 				= 0;
					СтрокНабора.ЗначениеСоциальнойНормы 	= 0;
				КонецЕсли;
				
				Если НЕ ПлощадиПомещенийПоУслугам[СтрокНабора.Услуга][СтрокНабора.НачалоПериода].Площадь = 0  и НЕ СтрокНабора.ОбъемУслугиПотребленный = 0 Тогда
					СтрокНабора.ОбъемУслугиПотребленный		= (НачисленияПоУслугамПомещения[СтрокНабора.Услуга][СтрокНабора.ТарифнаяЗона][СтрокНабора.НачалоПериода][СтрокНабора.СоставнаяУслуга].ОбъемУслугиПотребленный * СтрокНабора.ЗначениеПлощади / СуммаПлощадейПотомков);
					СтрокНабора.ЗначениеСоциальнойНормы 	= (НачисленияПоУслугамПомещения[СтрокНабора.Услуга][СтрокНабора.ТарифнаяЗона][СтрокНабора.НачалоПериода][СтрокНабора.СоставнаяУслуга].ЗначениеСоциальнойНормы * СтрокНабора.ЗначениеПлощади / СуммаПлощадейПотомков);
				ИначеЕсли НЕ СтрокНабора.ОбъемУслугиПотребленный = 0 Тогда
					СтрокНабора.ОбъемУслугиПотребленный 	= 0;
					СтрокНабора.ЗначениеСоциальнойНормы 	= 0;
				КонецЕсли;
				
				ОстатокСоциальнойНормы[СтрокНабора.КлючПомещения][СтрокНабора.Услуга][СтрокНабора.НаправлениеИспользованияТУ].Остаток = СтрокНабора.ЗначениеСоциальнойНормы;
				
			КонецЦикла;				
		КонецЕсли;  	
		
		Если ПересчитатьСтрокиПоКоличествуЧеловек.Количество() > 0 Тогда
			Для Каждого КлючЗначениеУслуга Из НачисленияПоУслугамПомещения Цикл
				Для Каждого КлючЗначениеТарифнаяЗона Из КлючЗначениеУслуга.Значение Цикл
					Для Каждого КлючЗначениеНачалоПериода Из КлючЗначениеТарифнаяЗона.Значение Цикл
						
						мСоставныеУслуги = Новый Массив;
						
						Для Каждого КлючЗначениеСоставнаяУслуга Из КлючЗначениеНачалоПериода.Значение Цикл
							
							Если ЗначениеЗаполнено(КлючЗначениеСоставнаяУслуга.Ключ) Тогда
								мСоставныеУслуги.Добавить(КлючЗначениеСоставнаяУслуга.Ключ);
							КонецЕсли;
							
							ОсталосьРаспределитьОбъемИтого  						= 0;
							ОсталосьРаспределитьОбъемПотребленныйИтого 				= 0;
							
							Для Сч = 0 По КлючЗначениеСоставнаяУслуга.Значение.СтрокиНабораПомещения.ВГраница() Цикл
								СтрокаНабораПомещения 								= НаборОбъемПомещений.Получить(КлючЗначениеСоставнаяУслуга.Значение.СтрокиНабораПомещения[Сч]);
								КоличествоЖильцовПомещения 							= КлючЗначениеСоставнаяУслуга.Значение.КоличествоЧеловек;
								ОсталосьРаспределитьОбъем 							= СтрокаНабораПомещения.ОбъемУслуги;
								ОсталосьРаспределитьОбъемПотребленный 				= СтрокаНабораПомещения.ОбъемУслугиПотребленный;
								РаспределитьОбъемОбщий 								= СтрокаНабораПомещения.ОбъемУслуги;
								РаспределитьОбъемПотребленныйОбщий 					= СтрокаНабораПомещения.ОбъемУслугиПотребленный;
								СоотвествиеНомеровСтрок 							= Новый Соответствие;   																					
								ИндексПомещения 									= 0;						
								
								ОсталосьРаспределитьОбъемИтого 						= ОсталосьРаспределитьОбъемИтого + ОсталосьРаспределитьОбъем;
								ОсталосьРаспределитьОбъемПотребленныйИтого 			= ОсталосьРаспределитьОбъемПотребленныйИтого + ОсталосьРаспределитьОбъемПотребленный;
								
								Если ОсталосьРаспределитьОбъем = 0 и ОсталосьРаспределитьОбъемПотребленный = 0 Тогда
									Продолжить;
								КонецЕсли; 								
								
								Для Каждого КлючЗначениеПомещение Из ПересчитатьСтрокиПоКоличествуЧеловек Цикл
									
									ИндексСтрокиПотомка 							= 0;
									Если НЕ СоотвествиеНомеровСтрок[КлючЗначениеПомещение.Ключ] = Неопределено Тогда
										ИндексСтрокиПотомка 						= СоотвествиеНомеровСтрок[КлючЗначениеПомещение.Ключ];
									КонецЕсли; 								
									
									Если КлючЗначениеПомещение.Значение[КлючЗначениеУслуга.Ключ] = Неопределено 
										ИЛИ КлючЗначениеПомещение.Значение[КлючЗначениеУслуга.Ключ][КлючЗначениеТарифнаяЗона.Ключ] =Неопределено
										ИЛИ КлючЗначениеПомещение.Значение[КлючЗначениеУслуга.Ключ][КлючЗначениеТарифнаяЗона.Ключ][КлючЗначениеНачалоПериода.Ключ] = Неопределено
										ИЛИ КлючЗначениеПомещение.Значение[КлючЗначениеУслуга.Ключ][КлючЗначениеТарифнаяЗона.Ключ][КлючЗначениеНачалоПериода.Ключ][КлючЗначениеСоставнаяУслуга.Ключ] = Неопределено Тогда
										Продолжить;									
									Иначе
										СтрокиНачисленияПотомка						= КлючЗначениеПомещение.Значение[КлючЗначениеУслуга.Ключ][КлючЗначениеТарифнаяЗона.Ключ][КлючЗначениеНачалоПериода.Ключ][КлючЗначениеСоставнаяУслуга.Ключ];
									КонецЕсли;								
									
									Если СтрокиНачисленияПотомка.Количество() = 0  Тогда
										А 											= 0;
									КонецЕсли;					
									
									СтрокаНабораПотомка 								= Набор.Получить(СтрокиНачисленияПотомка[0]);
									ДанныеАбонента 										= Новый Структура("КоличествоЖильцов,КоличествоПроживающих,КоличествоПрописанных,КоличествоСобственников");
									ЗаполнитьЗначенияСвойств(ДанныеАбонента,СтрокаНабораПотомка);									
									КоличествоЖильцов 									= энргРаботаСПараметрамиРасчетаАбонентаСервер.КоличествоЧеловек(ДанныеАбонента);
									
									Если ИндексПомещения = ПересчитатьСтрокиПоКоличествуЧеловек.Количество() -1 Тогда
										РаспределяемОбъем 								= ОсталосьРаспределитьОбъем;
										РаспределяемОбъемПотребленный					= ОсталосьРаспределитьОбъемПотребленный;
									Иначе
										РаспределяемОбъем 								= РаспределитьОбъемОбщий * КоличествоЖильцов /  КоличествоЖильцовПомещения;
										РаспределяемОбъемПотребленный					= РаспределитьОбъемПотребленныйОбщий * КоличествоЖильцов /  КоличествоЖильцовПомещения;
									КонецЕсли;
									
									Для ИндексСтрокиНачисления = 0 По СтрокиНачисленияПотомка.ВГраница() Цикл
										СтрокаНабораПотомка 							= Набор.Получить(СтрокиНачисленияПотомка[ИндексСтрокиНачисления]);
										СтрокаНабораПотомка.СпособНачисления 			= СтрокаНабораПомещения.СпособНачисления;
										СтрокаНабораПотомка.ПриборУчета		 			= СтрокаНабораПомещения.ПриборУчета;
										СтрокаНабораПотомка.Шкала 						= СтрокаНабораПомещения.Шкала;								
										СтрокаНабораПотомка.ПовыщающийКоэффициент 		= ?(СтрокаНабораПомещения.ПовыщающийКоэффициент = СтрокаНабораПотомка.ПовыщающийКоэффициент, СтрокаНабораПомещения.ПовыщающийКоэффициент, СтрокаНабораПотомка.ПовыщающийКоэффициент);
										СтрокаНабораПотомка.СниматьНачисленныйСредний 	= СтрокаНабораПомещения.СниматьНачисленныйСредний;
										СтрокаНабораПотомка.ЗначениеСоциальнойНормы 	= СтрокаНабораПомещения.ЗначениеСоциальнойНормы * КоличествоЖильцов /  КоличествоЖильцовПомещения;
										
										Распределили 									= Ложь;								
										Если СтрокаНабораПотомка.ОбъемУслуги = 0 и СтрокаНабораПотомка.ОбъемУслугиПотребленный = 0 И НЕ ОсталосьРаспределитьОбъем = 0 И НЕ ОсталосьРаспределитьОбъемПотребленный = 0
											ИЛИ ОсталосьРаспределитьОбъем = 0 И ОсталосьРаспределитьОбъемПотребленный = 0 Тогда
											СтрокаНабораПотомка.ОбъемУслуги		 		= РаспределяемОбъем;
											СтрокаНабораПотомка.ОбъемУслугиПотребленный	= РаспределяемОбъемПотребленный;
											Распределили								= Истина;
										КонецЕсли;
										
										Если НЕ Распределили И НЕ СтрокаНабораПотомка.ОбъемУслуги = 0 И НЕ ОсталосьРаспределитьОбъем = 0 Тогда
											СтрокаНабораПотомка.ОбъемУслуги		 		= РаспределяемОбъем;
										КонецЕсли; 	
										
										Если НЕ Распределили  и НЕ СтрокаНабораПотомка.ОбъемУслугиПотребленный = 0 И НЕ ОсталосьРаспределитьОбъемПотребленный = 0 Тогда
											СтрокаНабораПотомка.ОбъемУслугиПотребленный	= РаспределяемОбъемПотребленный;
										КонецЕсли;						
										
										ОстатокСоциальнойНормы[СтрокаНабораПотомка.КлючПомещения][СтрокаНабораПотомка.Услуга][СтрокаНабораПотомка.НаправлениеИспользованияТУ].Остаток = СтрокаНабораПотомка.ЗначениеСоциальнойНормы;
										
										ИндексСтрокиПотомка 							= ИндексСтрокиПотомка + 1;
										
										Если СоотвествиеНомеровСтрок[КлючЗначениеПомещение.Ключ] = Неопределено Тогда
											СоотвествиеНомеровСтрок.Вставить(КлючЗначениеПомещение.Ключ, ИндексСтрокиПотомка);
										Иначе
											СоотвествиеНомеровСтрок[КлючЗначениеПомещение.Ключ] = ИндексСтрокиПотомка;
										КонецЕсли;
									КонецЦикла;
									
									ОсталосьРаспределитьОбъем 							= ОсталосьРаспределитьОбъем - РаспределяемОбъем;
									ОсталосьРаспределитьОбъемПотребленный 				= ОсталосьРаспределитьОбъемПотребленный - РаспределяемОбъемПотребленный;
									
									ИндексПомещения 									= ИндексПомещения + 1;							
								КонецЦикла;
							КонецЦикла;
							
							Для Каждого КлючЗначениеПомещение Из ПересчитатьСтрокиПоКоличествуЧеловек Цикл
								
								Если КлючЗначениеПомещение.Значение[КлючЗначениеУслуга.Ключ] = Неопределено 
									ИЛИ КлючЗначениеПомещение.Значение[КлючЗначениеУслуга.Ключ][КлючЗначениеТарифнаяЗона.Ключ] =Неопределено
									ИЛИ КлючЗначениеПомещение.Значение[КлючЗначениеУслуга.Ключ][КлючЗначениеТарифнаяЗона.Ключ][КлючЗначениеНачалоПериода.Ключ] = Неопределено
									ИЛИ КлючЗначениеПомещение.Значение[КлючЗначениеУслуга.Ключ][КлючЗначениеТарифнаяЗона.Ключ][КлючЗначениеНачалоПериода.Ключ][КлючЗначениеСоставнаяУслуга.Ключ] = Неопределено Тогда
									Продолжить;
								КонецЕсли;	
								
								ИндексСтрокиПотомка 								= СоотвествиеНомеровСтрок[КлючЗначениеПомещение.Ключ];
								
								Если ИндексСтрокиПотомка = Неопределено Тогда
									 ИндексСтрокиПотомка 							= 0;
								КонецЕсли;
								
								СтрокиНачисленияПотомка								= КлючЗначениеПомещение.Значение[КлючЗначениеУслуга.Ключ][КлючЗначениеТарифнаяЗона.Ключ][КлючЗначениеНачалоПериода.Ключ][КлючЗначениеСоставнаяУслуга.Ключ];
								Для ИндексСтроки = ИндексСтрокиПотомка По СтрокиНачисленияПотомка.ВГраница() Цикл
									СтрокаНабораПотомка 							= Набор.Получить(СтрокиНачисленияПотомка[ИндексСтроки]);
									СтрокаНабораПотомка.ОбъемУслуги		 			= 0;
									СтрокаНабораПотомка.ОбъемУслугиПотребленный		= 0;
								КонецЦикла;								
							КонецЦикла;						
						КонецЦикла;
						
						// очистим составные услуги на которые не прозошло начисления
						Для Каждого КлючЗначениеПомещение Из ПересчитатьСтрокиПоКоличествуЧеловек Цикл
							Если КлючЗначениеПомещение.Значение[КлючЗначениеУслуга.Ключ] = Неопределено 
								ИЛИ КлючЗначениеПомещение.Значение[КлючЗначениеУслуга.Ключ][КлючЗначениеТарифнаяЗона.Ключ] =Неопределено
								ИЛИ КлючЗначениеПомещение.Значение[КлючЗначениеУслуга.Ключ][КлючЗначениеТарифнаяЗона.Ключ][КлючЗначениеНачалоПериода.Ключ] = Неопределено Тогда
								Продолжить;
							КонецЕсли;
							
							СоовествиеСоставныеУслуги 								= КлючЗначениеПомещение.Значение[КлючЗначениеУслуга.Ключ][КлючЗначениеТарифнаяЗона.Ключ][КлючЗначениеНачалоПериода.Ключ];
							Для Каждого КлючЗначениеСоставнаяУслуга Из СоовествиеСоставныеУслуги Цикл
								Если НЕ мСоставныеУслуги.Найти(КлючЗначениеСоставнаяУслуга.Ключ) = Неопределено ИЛИ НЕ ЗначениеЗаполнено(КлючЗначениеСоставнаяУслуга.Ключ) Тогда
									Продолжить;
								КонецЕсли;						
								Для Сч = 0 По КлючЗначениеСоставнаяУслуга.Значение.ВГраница() Цикл
									СтрокаНабораПотомка 							= Набор[КлючЗначениеСоставнаяУслуга.Значение[Сч]];
									СтрокаНабораПотомка.СпособНачисления 			= Перечисления.энргСпособНачислений.ПоНормативу;
									СтрокаНабораПотомка.ПриборУчета 				= Справочники.энргПриборыУчетаАбонента.ПустаяСсылка();
									СтрокаНабораПотомка.Шкала		 				= Справочники.энргШкалыПриборовУчета.ПустаяСсылка();
									СтрокаНабораПотомка.СниматьНачисленныйСредний 	= Ложь;
									СтрокаНабораПотомка.ЗначениеСоциальнойНормы 	= 0;
									СтрокаНабораПотомка.ОбъемУслуги		 			= 0;
									СтрокаНабораПотомка.ОбъемУслугиПотребленный		= 0;
									СтрокаНабораПотомка.Сумма						= 0;
								КонецЦикла;							
							КонецЦикла;						
						КонецЦикла;					
					КонецЦикла;				
				КонецЦикла; 			
			КонецЦикла;
		КонецЕсли;
		
		Если ПересчитатьСтрокиПоДолям.Количество() > 0 Тогда
			Для Каждого КлючЗначениеПомещение Из ПересчитатьСтрокиПоДолям Цикл
				Для Каждого КлючЗначениеУслуга Из КлючЗначениеПомещение.Значение Цикл				
					Для Каждого КлючЗначениеТарифнаяЗона Из  КлючЗначениеУслуга.Значение Цикл					
						Для Каждого КлючЗначениеНачалоПериода Из КлючЗначениеТарифнаяЗона.Значение Цикл
							Для Каждого КлючЗначениеСоставнаяУслуга Из КлючЗначениеНачалоПериода.Значение Цикл
								мТочкиПомещения 								= Новый Массив; 						
								НачислениеПоУслугеПомещения						= НачисленияПоУслугамПомещения[КлючЗначениеУслуга.Ключ][КлючЗначениеТарифнаяЗона.Ключ][КлючЗначениеНачалоПериода.Ключ][КлючЗначениеСоставнаяУслуга.Ключ];
								СтрокиНабораПомещения 							= НачислениеПоУслугеПомещения.СтрокиНабораПомещения;
								ИндексСтроки 									= 0;
								ИндексУслуги 									= 0;
								
								Если ИндексУслуги > 0 Тогда
									Для Сч = 0 По КлючЗначениеСоставнаяУслуга.Значение.СтрокиНабора.ВГраница() Цикл
										СтрокаНабора 							= Набор.Получить(КлючЗначениеСоставнаяУслуга.Значение.СтрокиНабора[Сч]);
										СтрокаНабора.ОбъемУслугиПотребленный   	= 0;
										СтрокаНабора.ОбъемУслуги               	= 0;																
									КонецЦикла;							
									Продолжить;
								КонецЕсли;
								
								Для Индекс = 0 По СтрокиНабораПомещения.ВГраница() Цикл
									
									СтрокаНабораПомещения 						= НаборОбъемПомещений.Получить(СтрокиНабораПомещения[Индекс]);
									
									Если СтрокаНабораПомещения.ОбъемУслуги  = 0 И
										 СтрокаНабораПомещения.ОбъемУслугиПотребленный = 0 Тогда
										 Продолжить;
									 КонецЕсли;
									 									
									ЕстьПотребленный 							= ЗначениеЗаполнено(СтрокаНабораПомещения.ОбъемУслугиПотребленный);
									//Если СтрокаНабораПомещения.ОбъемУслуги = 0 Тогда
									//	Продолжить;
									//КонецЕсли;							
									
									Если ИндексСтроки > КлючЗначениеСоставнаяУслуга.Значение.СтрокиНабора.ВГраница() Тогда
										СтрокаНабора 							= Набор.добавить();
										ЗаполнитьЗначенияСвойств(СтрокаНабора, Набор[КлючЗначениеСоставнаяУслуга.Значение.СтрокиНабора[0]]);								
									Иначе
										Для каждого ИндексСтр из КлючЗначениеСоставнаяУслуга.Значение.СтрокиНабора Цикл
											СтрокаНабора 							= Набор.Получить(ИндексСтр);
											Если (ЕстьПотребленный и ЗначениеЗаполнено(СтрокаНабора.ОбъемУслугиПотребленный))
												ИЛИ (НЕ ЕстьПотребленный и ЗначениеЗаполнено(СтрокаНабора.ОбъемУслуги)) Тогда
												Прервать;
											Иначе
												СтрокаНабора = Неопределено;
											КонецЕсли;
										КонецЦикла;
									КонецЕсли;	
									
									Если СтрокаНабора = Неопределено Тогда
										Продолжить;;
									КонецЕсли;
									
									КоличествоЖильцов 							= ?(НЕ СтрокаНабора.КоличествоПроживающих = 0, СтрокаНабора.КоличествоПроживающих, ?(НЕ СтрокаНабора.КоличествоПрописанных = 0, СтрокаНабора.КоличествоПрописанных, СтрокаНабора.КоличествоСобственников));
									
									Если НЕ СтрокаНабора.СпособНачисления = Перечисления.энргСпособНачислений.ПоПриборам Тогда 																				
										Если ЕстьПотребленный Тогда
											СтрокаНабора.ОбъемУслугиПотребленный= СтрокаНабораПомещения.ОбъемУслугиПотребленный * КлючЗначениеСоставнаяУслуга.Значение.ДоляПотребленияЧислитель / КлючЗначениеСоставнаяУслуга.Значение.ДоляПотребленияЗнаменатель;
										Иначе
											СтрокаНабора.ОбъемУслуги 			= СтрокаНабораПомещения.ОбъемУслуги * КлючЗначениеСоставнаяУслуга.Значение.ДоляПотребленияЧислитель / КлючЗначениеСоставнаяУслуга.Значение.ДоляПотребленияЗнаменатель; 
										КонецЕсли;	
									КонецЕсли;
									
									НачисленияПоУслугамПомещения[СтрокаНабора.Услуга][СтрокаНабора.ТарифнаяЗона][СтрокаНабора.НачалоПериода][СтрокаНабора.СоставнаяУслуга].ОбъемУслугиОстаток 				= НачисленияПоУслугамПомещения[СтрокаНабора.Услуга][СтрокаНабора.ТарифнаяЗона][СтрокаНабора.НачалоПериода][СтрокаНабора.СоставнаяУслуга].ОбъемУслугиОстаток - СтрокаНабора.ОбъемУслуги;
									НачисленияПоУслугамПомещения[СтрокаНабора.Услуга][СтрокаНабора.ТарифнаяЗона][СтрокаНабора.НачалоПериода][СтрокаНабора.СоставнаяУслуга].ОбъемУслугиПотребленныйОстаток 	= НачисленияПоУслугамПомещения[СтрокаНабора.Услуга][СтрокаНабора.ТарифнаяЗона][СтрокаНабора.НачалоПериода][СтрокаНабора.СоставнаяУслуга].ОбъемУслугиПотребленныйОстаток - СтрокаНабора.ОбъемУслугиПотребленный;
									
									СтрокаНабора.СпособНачисления 				= СтрокаНабораПомещения.СпособНачисления;
									СтрокаНабора.ПриборУчета 					= СтрокаНабораПомещения.ПриборУчета;
									СтрокаНабора.Шкала 							= СтрокаНабораПомещения.Шкала;
									СтрокаНабора.ПовыщающийКоэффициент 			= СтрокаНабораПомещения.ПовыщающийКоэффициент;
									СтрокаНабора.СниматьНачисленныйСредний 		= СтрокаНабораПомещения.СниматьНачисленныйСредний;
									Если НачислениеПоУслугеПомещения.ЗначениеСоциальнойНормы = - 1 Тогда
										СтрокаНабора.ЗначениеСоциальнойНормы 	= -1;
									ИначеЕсли НачислениеПоУслугеПомещения.КоличествоЧеловек = 0 Тогда
										СтрокаНабора.ЗначениеСоциальнойНормы 	= 0;
									Иначе
										СтрокаНабора.ЗначениеСоциальнойНормы 	= НачислениеПоУслугеПомещения.ЗначениеСоциальнойНормы * КлючЗначениеСоставнаяУслуга.Значение.ДоляПотребленияЧислитель / КлючЗначениеСоставнаяУслуга.Значение.ДоляПотребленияЗнаменатель;
									КонецЕсли;
									
									ИндексСтроки 								= ИндексСтроки + 1;
								КонецЦикла;	
								
								ИндексУслуги 									= ИндексУслуги + 1;
								
								Для Сч = ИндексСтроки По КлючЗначениеСоставнаяУслуга.Значение.СтрокиНабора.ВГраница() Цикл							
									СтрокаНабора 								= Набор.Получить(КлючЗначениеСоставнаяУслуга.Значение.СтрокиНабора[Сч]);
									СтрокаНабора.ОбъемУслугиПотребленный   		= 0;
									СтрокаНабора.ОбъемУслуги               		= 0;
								КонецЦикла;						
							КонецЦикла;
						КонецЦикла;
					КонецЦикла;				
				КонецЦикла;			
			КонецЦикла;	
			
			// Распределяем остаток
			Для Каждого КлючЗначениеПомещение Из ПересчитатьСтрокиПоДолям Цикл
				Для Каждого КлючЗначениеУслуга Из КлючЗначениеПомещение.Значение Цикл				
					Для Каждого КлючЗначениеТарифнаяЗона Из  КлючЗначениеУслуга.Значение Цикл					
						Для Каждого КлючЗначениеНачалоПериода Из КлючЗначениеТарифнаяЗона.Значение Цикл
							Для Каждого КлючЗначениеСоставнаяУслуга Из КлючЗначениеНачалоПериода.Значение Цикл
								СтрокиНабораПомещения 							= КлючЗначениеСоставнаяУслуга.Значение.СтрокиНабора;
								НачислениеПоУслугеПомещения						= НачисленияПоУслугамПомещения[КлючЗначениеУслуга.Ключ][КлючЗначениеТарифнаяЗона.Ключ][КлючЗначениеНачалоПериода.Ключ][КлючЗначениеСоставнаяУслуга.Ключ];
								ОстатокОбъемУслуги								= НачислениеПоУслугеПомещения.ОбъемУслугиОстаток;
								ОстатокОбъемУслугиПотребленный					= НачислениеПоУслугеПомещения.ОбъемУслугиПотребленныйОстаток;
								СтрокаНабораПомещения 							= Набор.Получить(СтрокиНабораПомещения[0]);
								Если НЕ ОстатокОбъемУслуги = 0 Тогда
									НоваяСтрокаНабора 							= Набор.добавить();
									ЗаполнитьЗначенияСвойств(НоваяСтрокаНабора,СтрокаНабораПомещения);
									НоваяСтрокаНабора.ОбъемУслуги 				= ОстатокОбъемУслуги * НоваяСтрокаНабора.КоэффициентРаспределенияОстатка;
									НоваяСтрокаНабора.ОбъемУслугиПотребленный 	= 0;
								КонецЕсли;
								
								Если НЕ ОстатокОбъемУслугиПотребленный = 0 Тогда
									НоваяСтрокаНабора 							= Набор.добавить();
									ЗаполнитьЗначенияСвойств(НоваяСтрокаНабора,СтрокаНабораПомещения);
									НоваяСтрокаНабора.ОбъемУслугиПотребленный	= ОстатокОбъемУслугиПотребленный * НоваяСтрокаНабора.КоэффициентРаспределенияОстатка;
									НоваяСтрокаНабора.ОбъемУслуги 				= 0;
								КонецЕсли;
							КонецЦикла;
						КонецЦикла;
					КонецЦикла;				
				КонецЦикла;			
			КонецЦикла;	
		КонецЕсли; 
		
		Если ПересчитатьСтроки.Количество() > 0 Тогда
			Для Сч = 0 По ПересчитатьСтроки.ВГраница() Цикл
				СтрокНабора 													= Набор.Получить(ПересчитатьСтроки[Сч]);
				Если ЗначениеЗаполнено(СтрокНабора.ОбъемУслуги) тогда
					ОбъемУслуги 												= (НачисленияПоУслугамПомещения[СтрокНабора.Услуга][СтрокНабора.ТарифнаяЗона][СтрокНабора.НачалоПериода][СтрокНабора.СоставнаяУслуга].ОбъемУслуги - НачисленияПоУслугамПомещения[СтрокНабора.Услуга][СтрокНабора.ТарифнаяЗона][СтрокНабора.НачалоПериода][СтрокНабора.СоставнаяУслуга].ОбъемУслугиОстаток) * СтрокНабора.КоэффициентРаспределенияОстатка;
					Если НЕ ОбъемУслуги = 0 Тогда
						НоваяСтрока 											= Набор.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокНабора);
						НоваяСтрока.ОбъемУслуги 								= ОбъемУслуги;
						НоваяСтрока.ОбъемУслугиПотребленный 					= 0;
					КонецЕсли;
				КонецЕсли;
				
				Если ЗначениеЗаполнено(СтрокНабора.ОбъемУслугиПотребленный) тогда
					ОбъемУслугиПотребленный 									= (НачисленияПоУслугамПомещения[СтрокНабора.Услуга][СтрокНабора.ТарифнаяЗона][СтрокНабора.НачалоПериода][СтрокНабора.СоставнаяУслуга].ОбъемУслугиПотребленный - НачисленияПоУслугамПомещения[СтрокНабора.Услуга][СтрокНабора.ТарифнаяЗона][СтрокНабора.НачалоПериода][СтрокНабора.СоставнаяУслуга].ОбъемУслугиПотребленныйОстаток)* СтрокНабора.КоэффициентРаспределенияОстатка;
					Если НЕ ОбъемУслугиПотребленный = 0 Тогда
						НоваяСтрока 											= Набор.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокНабора);
						НоваяСтрока.ОбъемУслугиПотребленный						= ОбъемУслугиПотребленный;	
						НоваяСтрока.ОбъемУслуги 								= 0;
					КонецЕсли;
				КонецЕсли;	
			КонецЦикла;				
		КонецЕсли;
	Исключение
		ИнформацияОбОшибке  					= ИнформацияОбОшибке();
		Ошибки 									= Ошибки +  
		Символы.ПС + ИнформацияДляОшибки + Символы.ПС + КраткоеПредставлениеОшибки(ИнформацияОбОшибке);
	КонецПопытки;
КонецПроцедуры

Процедура ПересчитатьСтрокиПоФормуле(Набор, НаборОбъемПомещений, ПересчитатьСтрокиПоФормуле)
	
	СпособПоФормуле 												= Перечисления.энргСпособНачислений.ПоФормуламРасчета;
	СпособПоПриборам 												= Перечисления.энргСпособНачислений.ПоПриборам;
	СпособПоСреднему 												= Перечисления.энргСпособНачислений.НачислениеПоСреднему;
	СпособПоНормативу	 											= Перечисления.энргСпособНачислений.ПоНормативу;
	
	Для Каждого СтрокаПоФормуле Из ПересчитатьСтрокиПоФормуле Цикл 																			 
		Для Каждого СтрокаПериод Из СтрокаПоФормуле.Значение Цикл
			ОбъемУслуги 											= 0;
			ОбъемУслугиПотребленный 								= 0;
			ПараметрыФормулы 										= СтрокаПериод.Значение.ПараметрыФормулы;
			ПрименятьФормулуВсегда 									= СтрокаПериод.Значение.ПрименятьФормулуВсегда;
			НачисленияПоУслугам 									= Новый Соответствие;			
			ВсеНачисленияПоПрибору 									= Истина;
			ЕстьРасходПоПриборуПоВсемТочкам 						= Истина;
			
			Для Каждого ПараметрФормулы Из ПараметрыФормулы Цикл
				//Если НЕ мТочкиУчета.Найти(ПараметрФормулы.ТочкаУчета) = Неопределено Тогда
				//	Продолжить;
				//КонецЕсли;
				Если НЕ ПараметрФормулы.СпособНачисления  = СпособПоПриборам
					И НЕ ПараметрФормулы.СпособНачисления  = СпособПоСреднему Тогда
					ЕстьРасходПоПриборуПоВсемТочкам 				= Ложь;
				КонецЕсли;
				
				Если НЕ ПараметрФормулы.СпособНачисления  = СпособПоПриборам Тогда
					// чтобы снять этот объем когда придут все показания
					ВсеНачисленияПоПрибору 							= Ложь;
					яСтрокаНабора 									= Набор.Получить(ПараметрФормулы.ИндексСтроки);
					яСтрокаНабора.СниматьНачисленныйСредний 		= Истина;
				КонецЕсли;
				
				Если НачисленияПоУслугам[ПараметрФормулы.Услуга] = Неопределено Тогда
					НачисленияПоУслугам.Вставить(ПараметрФормулы.Услуга, Новый Структура("ОбъемУслуги,ОбъемУслугиПотребленный,ВсеНачисленияПоПрибору,ЕстьРасходПоПриборуПоВсемТочкам",0,0,Ложь,Ложь));
				КонецЕсли;  				
				НачисленияПоУслугам[ПараметрФормулы.Услуга].ЕстьРасходПоПриборуПоВсемТочкам = ЕстьРасходПоПриборуПоВсемТочкам;
				НачисленияПоУслугам[ПараметрФормулы.Услуга].ВсеНачисленияПоПрибору 			= ВсеНачисленияПоПрибору;
				НачисленияПоУслугам[ПараметрФормулы.Услуга].ОбъемУслуги 					= НачисленияПоУслугам[ПараметрФормулы.Услуга].ОбъемУслуги + ПараметрФормулы.ОбъемУслуги * ПараметрФормулы.КоэффициентФормула;
				НачисленияПоУслугам[ПараметрФормулы.Услуга].ОбъемУслугиПотребленный			= НачисленияПоУслугам[ПараметрФормулы.Услуга].ОбъемУслугиПотребленный + ПараметрФормулы.ОбъемУслугиПотребленный * ПараметрФормулы.КоэффициентФормула;
				///мТочкиУчета.Добавить(ПараметрФормулы.ТочкаУчета);
			КонецЦикла;
			
			Если НЕ ВсеНачисленияПоПрибору Тогда				
				Для Каждого ПараметрФормулы Из ПараметрыФормулы Цикл					
					яСтрокаНабора 										= Набор.Получить(ПараметрФормулы.ИндексСтроки);
					яСтрокаНабора.СниматьНачисленныйСреднийПоФормулам	= Истина;
				КонецЦикла;				
			КонецЕсли; 			
			
			ИндексыСтрок 											= СтрокаПериод.Значение.ИндексыСтрок;
			
			Для Сч = 0 По ИндексыСтрок.ВГраница() Цикл
				СтрокаНабора 										= Набор.Получить(ИндексыСтрок[Сч]);
				ОбъемУслугиБыло 									= СтрокаНабора.ОбъемУслуги;
				ОбъемУслугиПотребленныйБыло 						= СтрокаНабора.ОбъемУслугиПотребленный;
				СтрокаНабора.ОбъемУслуги							= 0;				
				СтрокаНабора.ОбъемУслугиПотребленный				= 0;
				Если НЕ ПрименятьФормулуВсегда И НЕ ЕстьРасходПоПриборуПоВсемТочкам И ЗначениеЗаполнено(СтрокаНабора.ЗависитОтУслуги) Тогда
					СтрокаНабора.СпособНачисления 					= СпособПоФормуле;
					ОбъемУслуги 									= 0;
					ОбъемУслугиПотребленный 						= 0;
				    ВсеНачисленияПоПрибору 							= НачисленияПоУслугам[СтрокаНабора.ЗависитОтУслуги].ВсеНачисленияПоПрибору;					
				ИначеЕсли НЕ ПрименятьФормулуВсегда И НЕ ЕстьРасходПоПриборуПоВсемТочкам Тогда
					СтрокаНабора.СпособНачисления 					= СпособПоНормативу;
					ОбъемУслуги 									= РассчитатьОбъемУслугиСтроктНабораПоНормативу(СтрокаНабора);
					ОбъемУслугиПотребленный 						= 0;
				    ВсеНачисленияПоПрибору 							= НачисленияПоУслугам[СтрокаНабора.Услуга].ВсеНачисленияПоПрибору;					
				ИначеЕсли ЗначениеЗаполнено(СтрокаНабора.ЗависитОтУслуги) и ЗначениеЗаполнено(НачисленияПоУслугам[СтрокаНабора.ЗависитОтУслуги]) Тогда
					ОбъемУслуги 									= НачисленияПоУслугам[СтрокаНабора.ЗависитОтУслуги].ОбъемУслуги;
					ОбъемУслугиПотребленный 						= НачисленияПоУслугам[СтрокаНабора.ЗависитОтУслуги].ОбъемУслугиПотребленный;
					ВсеНачисленияПоПрибору 							= НачисленияПоУслугам[СтрокаНабора.ЗависитОтУслуги].ВсеНачисленияПоПрибору;
					СтрокаНабора.СпособНачисления 					= СпособПоФормуле;
				ИначеЕсли ЗначениеЗаполнено(НачисленияПоУслугам[СтрокаНабора.ЗависитОтУслуги]) Тогда 	
					ОбъемУслуги 									= НачисленияПоУслугам[СтрокаНабора.Услуга].ОбъемУслуги;
					ОбъемУслугиПотребленный 						= НачисленияПоУслугам[СтрокаНабора.Услуга].ОбъемУслугиПотребленный;
					ВсеНачисленияПоПрибору 							= НачисленияПоУслугам[СтрокаНабора.Услуга].ВсеНачисленияПоПрибору;
					СтрокаНабора.СпособНачисления 					= СпособПоФормуле;
				ИначеЕсли ЕстьРасходПоПриборуПоВсемТочкам И НЕ НачисленияПоУслугам[СтрокаНабора.Услуга] = Неопределено Тогда					
					ОбъемУслуги 									= НачисленияПоУслугам[СтрокаНабора.Услуга].ОбъемУслуги;
					ОбъемУслугиПотребленный 						= НачисленияПоУслугам[СтрокаНабора.Услуга].ОбъемУслугиПотребленный;
					ВсеНачисленияПоПрибору 							= НачисленияПоУслугам[СтрокаНабора.Услуга].ВсеНачисленияПоПрибору;
					СтрокаНабора.СпособНачисления 					= СпособПоФормуле;	
				Иначе
					ОбъемУслуги 									= 0;
					ОбъемУслугиПотребленный 						= 0;
					ВсеНачисленияПоПрибору 							= Ложь;
					СтрокаНабора.СпособНачисления 					= СпособПоФормуле;
				КонецЕсли;
				
				Если НЕ ОбъемУслугиБыло = 0 Тогда
					СтрокаНабора.ОбъемУслуги						= ОбъемУслуги;
				КонецЕсли;
				Если Не ОбъемУслугиПотребленныйБыло = 0 Тогда
					СтрокаНабора.ОбъемУслугиПотребленный			= ОбъемУслугиПотребленный;
				КонецЕсли;				
				СтрокаНабора.СуммаПоПовышенномуКоэффициенту			= 0;
				СтрокаНабора.ПовыщающийКоэффициент					= 0;
				СтрокаНабора.СниматьНачисленныйСредний 				= НЕ ВсеНачисленияПоПрибору;
				СтрокаНабора.СниматьНачисленныйСреднийЗависимыхТочек= НЕ ВсеНачисленияПоПрибору;
				СтрокаНабора.КоэффициентФормула 					= 1;
			КонецЦикла;
			
 			ИндексыСтрок 											= СтрокаПериод.Значение.ИндексыСтрокПомещений;
			
			Для Сч = 0 По ИндексыСтрок.ВГраница() Цикл
				СтрокаНабора 										= НаборОбъемПомещений.Получить(ИндексыСтрок[Сч]);
				ОбъемУслугиБыло 									= СтрокаНабора.ОбъемУслуги;
				ОбъемУслугиПотребленныйБыло 						= СтрокаНабора.ОбъемУслугиПотребленный;
				СтрокаНабора.ОбъемУслуги							= 0;				
				СтрокаНабора.ОбъемУслугиПотребленный				= 0;
				Если НЕ ПрименятьФормулуВсегда И НЕ ЕстьРасходПоПриборуПоВсемТочкам И ЗначениеЗаполнено(СтрокаНабора.ЗависитОтУслуги) Тогда
					ОбъемУслуги 									= 0;
					ОбъемУслугиПотребленный 						= 0;
				    ВсеНачисленияПоПрибору 							= НачисленияПоУслугам[СтрокаНабора.ЗависитОтУслуги].ВсеНачисленияПоПрибору;
				ИначеЕсли НЕ ПрименятьФормулуВсегда И НЕ ЕстьРасходПоПриборуПоВсемТочкам Тогда
					ОбъемУслуги 									= 0;
					ОбъемУслугиПотребленный 						= 0;
				    ВсеНачисленияПоПрибору 							= НачисленияПоУслугам[СтрокаНабора.Услуга].ВсеНачисленияПоПрибору;
				ИначеЕсли ЗначениеЗаполнено(СтрокаНабора.ЗависитОтУслуги) и ЗначениеЗаполнено(НачисленияПоУслугам[СтрокаНабора.ЗависитОтУслуги]) Тогда
					ОбъемУслуги 									= НачисленияПоУслугам[СтрокаНабора.ЗависитОтУслуги].ОбъемУслуги;
					ОбъемУслугиПотребленный 						= НачисленияПоУслугам[СтрокаНабора.ЗависитОтУслуги].ОбъемУслугиПотребленный;
					ВсеНачисленияПоПрибору 							= НачисленияПоУслугам[СтрокаНабора.ЗависитОтУслуги].ВсеНачисленияПоПрибору;
				ИначеЕсли ЗначениеЗаполнено(НачисленияПоУслугам[СтрокаНабора.ЗависитОтУслуги]) Тогда					
					ОбъемУслуги 									= НачисленияПоУслугам[СтрокаНабора.Услуга].ОбъемУслуги;
					ОбъемУслугиПотребленный 						= НачисленияПоУслугам[СтрокаНабора.Услуга].ОбъемУслугиПотребленный;
					ВсеНачисленияПоПрибору 							= НачисленияПоУслугам[СтрокаНабора.Услуга].ВсеНачисленияПоПрибору;
				Иначе
					ОбъемУслуги 									= 0;
					ОбъемУслугиПотребленный 						= 0;
					ВсеНачисленияПоПрибору 							= Ложь;
				КонецЕсли;
				СтрокаНабора.СпособНачисления 						= СпособПоФормуле;
				Если НЕ ОбъемУслугиБыло = 0 Тогда
					СтрокаНабора.ОбъемУслуги						= ОбъемУслуги;
				КонецЕсли;
				Если Не ОбъемУслугиПотребленныйБыло = 0 Тогда
					СтрокаНабора.ОбъемУслугиПотребленный			= ОбъемУслугиПотребленный;
				КонецЕсли;
				СтрокаНабора.СуммаПоПовышенномуКоэффициенту			= 0;
				СтрокаНабора.ПовыщающийКоэффициент					= 0;			
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьНаборыЗаписейНачисление(Выборка, Набор, НаборОбъемПомещений, НачисленияПоУслугам, НачисленияПоУслугамПомещения, ПересчитатьСтроки, ПересчитатьСтрокиПоПлощади, ПересчитатьСтрокиПоКоличествуЧеловек,ПересчитатьСтрокиПоДолям, ПлощадиПомещенийПоУслугам, ПересчитатьСтрокиПоФормуле, ПересчитатьТехническиеТочки, ПересчитатьТехническиеТочкиПомещения,ДеревоТочекУчета, ОстатокСоциальнойНормы, ЗаписиСтороннихПоставщиков, ОбъемыПомещенийССоглашением)
	
	ВидНачисления 											= Перечисления.энргВидыНачислений.Начисление;	
	ЕстьСумма 												= Истина;
	ЕстьНачисления 											= Истина;
	КлючФормулы 											= "ИндексыСтрок,ИндексыСтрокПомещений,ПараметрыФормулы, ПрименятьФормулуВсегда";
	КлючиПараметровФормулы 									= "ТочкаУчета,Услуга,КоэффициентФормула,ИндексСтроки,СпособНачисления,ОбъемУслуги,ОбъемУслугиПотребленный";
	ЕстьАбонент 											= Ложь;
	
	Если ЗначениеЗаполнено(Выборка.Абонент) И Выборка.ПомещениеРодитель = Выборка.Помещение Тогда		 
		СтрокНабора 										= Набор.добавить();
		ЗаполнитьЗначенияСвойств(СтрокНабора,Выборка);
		СтрокНабора.Период									= Выборка.ЗавершениеОП-1;
		СтрокНабора.ВидНачисления 							= ВидНачисления;
		СтрокНабора.ПериодРасчета 							= Выборка.ПериодНачисления;
		СтрокНабора.ОбъемУслуги 							= Выборка.ОбъемУслуги;
		ЕстьАбонент 										= Истина;
	ИначеЕсли  ЗначениеЗаполнено(Выборка.Абонент) и Выборка.СпособРаспределенияОбъемаПомещения = Перечисления.энргСпособыРаспределенияОбъема.ДолевоеРаспределение Тогда
		
		СтрокНабора 										= Набор.добавить();
		ЗаполнитьЗначенияСвойств(СтрокНабора,Выборка);
		СтрокНабора.Период									= Выборка.ЗавершениеОП-1;
		СтрокНабора.ВидНачисления 							= ВидНачисления;
		СтрокНабора.ПериодРасчета 							= Выборка.ПериодНачисления;
		
		ЕстьАбонент 										= Истина;
		
		ЗаполнитьПомещенияССоглашением(ОбъемыПомещенийССоглашением, Выборка);
							
		Если ПересчитатьСтрокиПоДолям[Выборка.Помещение] = Неопределено Тогда
			СтрокиНабора  								= Новый Массив;
			СтрокиНабора.Добавить(Набор.Индекс(СтрокНабора));
			
			СоотвествиеСоставнаяУслуга 					= Новый Соответствие;
			СоотвествиеСоставнаяУслуга.Вставить(Выборка.СоставнаяУслуга, Новый Структура("СтрокиНабора,ДоляПотребленияЧислитель,ДоляПотребленияЗнаменатель", СтрокиНабора, Выборка.ДоляПотребленияЧислитель, Выборка.ДоляПотребленияЗнаменатель));
			
			СоотвествиеНачалоПериода 					= Новый Соответствие;
			СоотвествиеНачалоПериода.Вставить(Выборка.НачалоПериода, СоотвествиеСоставнаяУслуга);
			
			СоотвествиеТарифнаяЗона 					= Новый Соответствие;
			СоотвествиеТарифнаяЗона.Вставить(Выборка.ТарифнаяЗона,СоотвествиеНачалоПериода); 
			
			СоотвествиеУслуга 							= Новый Соответствие;
			СоотвествиеУслуга.Вставить(Выборка.Услуга, СоотвествиеТарифнаяЗона);			
			
			ПересчитатьСтрокиПоДолям.Вставить(Выборка.Помещение, СоотвествиеУслуга);
		ИначеЕсли ПересчитатьСтрокиПоДолям[Выборка.Помещение][Выборка.Услуга] = Неопределено Тогда
			СтрокиНабора  								= Новый Массив;
			СтрокиНабора.Добавить(Набор.Индекс(СтрокНабора));
			
			СоотвествиеСоставнаяУслуга 					= Новый Соответствие;
			СоотвествиеСоставнаяУслуга.Вставить(Выборка.СоставнаяУслуга, Новый Структура("СтрокиНабора,ДоляПотребленияЧислитель,ДоляПотребленияЗнаменатель", СтрокиНабора, Выборка.ДоляПотребленияЧислитель, Выборка.ДоляПотребленияЗнаменатель));
			
			СоотвествиеНачалоПериода 					= Новый Соответствие;
			СоотвествиеНачалоПериода.Вставить(Выборка.НачалоПериода, СоотвествиеСоставнаяУслуга);
			
			СоотвествиеТарифнаяЗона 					= Новый Соответствие;
			СоотвествиеТарифнаяЗона.Вставить(Выборка.ТарифнаяЗона,СоотвествиеНачалоПериода);
			
			ПересчитатьСтрокиПоДолям[Выборка.Помещение].Вставить(Выборка.Услуга, СоотвествиеТарифнаяЗона);
		ИначеЕсли ПересчитатьСтрокиПоДолям[Выборка.Помещение][Выборка.Услуга][Выборка.ТарифнаяЗона] = Неопределено Тогда
			СтрокиНабора  								= Новый Массив;
			СтрокиНабора.Добавить(Набор.Индекс(СтрокНабора));
			
			СоотвествиеСоставнаяУслуга 					= Новый Соответствие;
			СоотвествиеСоставнаяУслуга.Вставить(Выборка.СоставнаяУслуга, Новый Структура("СтрокиНабора,ДоляПотребленияЧислитель,ДоляПотребленияЗнаменатель", СтрокиНабора, Выборка.ДоляПотребленияЧислитель, Выборка.ДоляПотребленияЗнаменатель));
			
			СоотвествиеНачалоПериода 					= Новый Соответствие;
			СоотвествиеНачалоПериода.Вставить(Выборка.НачалоПериода, СоотвествиеСоставнаяУслуга);
			
			ПересчитатьСтрокиПоДолям[Выборка.Помещение][Выборка.Услуга].Вставить(Выборка.ТарифнаяЗона,СоотвествиеНачалоПериода)
		ИначеЕсли ПересчитатьСтрокиПоДолям[Выборка.Помещение][Выборка.Услуга][Выборка.ТарифнаяЗона][Выборка.НачалоПериода] = Неопределено Тогда
			СтрокиНабора  								= Новый Массив;
			СтрокиНабора.Добавить(Набор.Индекс(СтрокНабора)); 				
			
			СоотвествиеСоставнаяУслуга 					= Новый Соответствие;
			СоотвествиеСоставнаяУслуга.Вставить(Выборка.СоставнаяУслуга, Новый Структура("СтрокиНабора,ДоляПотребленияЧислитель,ДоляПотребленияЗнаменатель", СтрокиНабора, Выборка.ДоляПотребленияЧислитель, Выборка.ДоляПотребленияЗнаменатель));
						
			ПересчитатьСтрокиПоДолям[Выборка.Помещение][Выборка.Услуга][Выборка.ТарифнаяЗона].Вставить(Выборка.НачалоПериода, СоотвествиеСоставнаяУслуга);
		ИначеЕсли ПересчитатьСтрокиПоДолям[Выборка.Помещение][Выборка.Услуга][Выборка.ТарифнаяЗона][Выборка.НачалоПериода][Выборка.СоставнаяУслуга] = Неопределено Тогда
			 			
			СтрокиНабора  								= Новый Массив;
			СтрокиНабора.Добавить(Набор.Индекс(СтрокНабора)); 				
			
			ЗначениеСоотвествия 					= Новый Структура("СтрокиНабора,ДоляПотребленияЧислитель,ДоляПотребленияЗнаменатель", СтрокиНабора, Выборка.ДоляПотребленияЧислитель, Выборка.ДоляПотребленияЗнаменатель);
					
			ПересчитатьСтрокиПоДолям[Выборка.Помещение][Выборка.Услуга][Выборка.ТарифнаяЗона][Выборка.НачалоПериода].Вставить(Выборка.СоставнаяУслуга, ЗначениеСоотвествия)			
		Иначе
			ПересчитатьСтрокиПоДолям[Выборка.Помещение][Выборка.Услуга][Выборка.ТарифнаяЗона][Выборка.НачалоПериода][Выборка.СоставнаяУслуга].СтрокиНабора.Добавить(Набор.Индекс(СтрокНабора));
		КонецЕсли;		
		
	ИначеЕсли  ЗначениеЗаполнено(Выборка.Абонент) и Выборка.СпособРаспределенияОбъемаПомещения = Перечисления.энргСпособыРаспределенияОбъема.ФиксированныйОбъем Тогда 
		
		ЗаполнитьПомещенияССоглашением(ОбъемыПомещенийССоглашением, Выборка);
		
		СтрокНабора 										= Набор.добавить();
		ЗаполнитьЗначенияСвойств(СтрокНабора,Выборка);
		СтрокНабора.Период									= Выборка.ЗавершениеОП-1;
		СтрокНабора.ВидНачисления 							= ВидНачисления;
		СтрокНабора.ПериодРасчета 							= Выборка.ПериодНачисления;
		ЕстьАбонент 										= Истина;
				
	ИначеЕсли  ЗначениеЗаполнено(Выборка.Абонент) и Выборка.СпособРаспределенияОбъемаПомещения = Перечисления.энргСпособыРаспределенияОбъема.Остаток Тогда
		
		ЗаполнитьПомещенияССоглашением(ОбъемыПомещенийССоглашением, Выборка);
		
		СтрокНабора 										= Набор.добавить();
		ЗаполнитьЗначенияСвойств(СтрокНабора,Выборка);
		СтрокНабора.Период									= Выборка.ЗавершениеОП-1;
		СтрокНабора.ВидНачисления 							= ВидНачисления;
		СтрокНабора.ПериодРасчета 							= Выборка.ПериодНачисления;
		ЕстьАбонент 										= Истина;
		
		ПересчитатьСтроки.Добавить(Набор.Индекс(СтрокНабора));
		
	ИначеЕсли ЗначениеЗаполнено(Выборка.Абонент) Тогда
		
		СтрокНабора 										= Набор.добавить();
		ЗаполнитьЗначенияСвойств(СтрокНабора,Выборка);
		СтрокНабора.Период									= Выборка.ЗавершениеОП-1;
		СтрокНабора.ВидНачисления 							= ВидНачисления;
		СтрокНабора.ПериодРасчета 							= Выборка.ПериодНачисления;
		ЕстьАбонент 										= Истина;
		КоличествоЖильцов 									= ?(НЕ Выборка.КоличествоПроживающих = 0, Выборка.КоличествоПроживающих, ?(НЕ Выборка.КоличествоПрописанных = 0, Выборка.КоличествоПрописанных, Выборка.КоличествоСобственников));
			
		Если ЗначениеЗаполнено(Выборка.ВидПлощади) Тогда
			ПересчитатьСтрокиПоПлощади.Добавить(Набор.Индекс(СтрокНабора));
		Иначе
			Если ПересчитатьСтрокиПоКоличествуЧеловек[Выборка.Помещение] = Неопределено Тогда
				СтрокиНабора  								= Новый Массив;
				СтрокиНабора.Добавить(Набор.Индекс(СтрокНабора));
				
				СоотвествиеСоставнаяУслуга 					= Новый Соответствие;
				СоотвествиеСоставнаяУслуга.Вставить(Выборка.СоставнаяУслуга, СтрокиНабора);
				
				СоотвествиеНачалоПериода 					= Новый Соответствие;
				СоотвествиеНачалоПериода.Вставить(Выборка.НачалоПериода, СоотвествиеСоставнаяУслуга);
				
				СоотвествиеТарифнаяЗона 					= Новый Соответствие;
				СоотвествиеТарифнаяЗона.Вставить(Выборка.ТарифнаяЗона,СоотвествиеНачалоПериода); 
				
				СоотвествиеУслуга 							= Новый Соответствие;
				СоотвествиеУслуга.Вставить(Выборка.Услуга, СоотвествиеТарифнаяЗона);			
				
				ПересчитатьСтрокиПоКоличествуЧеловек.Вставить(Выборка.Помещение, СоотвествиеУслуга);
			ИначеЕсли ПересчитатьСтрокиПоКоличествуЧеловек[Выборка.Помещение][Выборка.Услуга] = Неопределено Тогда
				СтрокиНабора  								= Новый Массив;
				СтрокиНабора.Добавить(Набор.Индекс(СтрокНабора));
				
				СоотвествиеСоставнаяУслуга 					= Новый Соответствие;
				СоотвествиеСоставнаяУслуга.Вставить(Выборка.СоставнаяУслуга, СтрокиНабора);
				
				СоотвествиеНачалоПериода 					= Новый Соответствие;
				СоотвествиеНачалоПериода.Вставить(Выборка.НачалоПериода, СоотвествиеСоставнаяУслуга);
				
				СоотвествиеТарифнаяЗона 					= Новый Соответствие;
				СоотвествиеТарифнаяЗона.Вставить(Выборка.ТарифнаяЗона,СоотвествиеНачалоПериода);
				
				ПересчитатьСтрокиПоКоличествуЧеловек[Выборка.Помещение].Вставить(Выборка.Услуга, СоотвествиеТарифнаяЗона);
				
			ИначеЕсли ПересчитатьСтрокиПоКоличествуЧеловек[Выборка.Помещение][Выборка.Услуга][Выборка.ТарифнаяЗона] = Неопределено Тогда
				СтрокиНабора  								= Новый Массив;
				СтрокиНабора.Добавить(Набор.Индекс(СтрокНабора));
				
				СоотвествиеСоставнаяУслуга 					= Новый Соответствие;
				СоотвествиеСоставнаяУслуга.Вставить(Выборка.СоставнаяУслуга, СтрокиНабора);
				
				СоотвествиеНачалоПериода 					= Новый Соответствие;
				СоотвествиеНачалоПериода.Вставить(Выборка.НачалоПериода, СоотвествиеСоставнаяУслуга);
				
				ПересчитатьСтрокиПоКоличествуЧеловек[Выборка.Помещение][Выборка.Услуга].Вставить(Выборка.ТарифнаяЗона,СоотвествиеНачалоПериода);
				
			ИначеЕсли ПересчитатьСтрокиПоКоличествуЧеловек[Выборка.Помещение][Выборка.Услуга][Выборка.ТарифнаяЗона][Выборка.НачалоПериода] = Неопределено Тогда
				СтрокиНабора  								= Новый Массив;
				СтрокиНабора.Добавить(Набор.Индекс(СтрокНабора)); 
				
				СоотвествиеСоставнаяУслуга 					= Новый Соответствие;
				СоотвествиеСоставнаяУслуга.Вставить(Выборка.СоставнаяУслуга, СтрокиНабора);
				
				ПересчитатьСтрокиПоКоличествуЧеловек[Выборка.Помещение][Выборка.Услуга][Выборка.ТарифнаяЗона].Вставить(Выборка.НачалоПериода, СоотвествиеСоставнаяУслуга)
			ИначеЕсли ПересчитатьСтрокиПоКоличествуЧеловек[Выборка.Помещение][Выборка.Услуга][Выборка.ТарифнаяЗона][Выборка.НачалоПериода][Выборка.СоставнаяУслуга] = Неопределено Тогда
				СтрокиНабора  								= Новый Массив;
				СтрокиНабора.Добавить(Набор.Индекс(СтрокНабора));
				ПересчитатьСтрокиПоКоличествуЧеловек[Выборка.Помещение][Выборка.Услуга][Выборка.ТарифнаяЗона][Выборка.НачалоПериода].Вставить(Выборка.СоставнаяУслуга,СтрокиНабора); 
			Иначе
				ПересчитатьСтрокиПоКоличествуЧеловек[Выборка.Помещение][Выборка.Услуга][Выборка.ТарифнаяЗона][Выборка.НачалоПериода][Выборка.СоставнаяУслуга].Добавить(Набор.Индекс(СтрокНабора))
			КонецЕсли;
		КонецЕсли;		
	Иначе
		СтрокНабора 										= НаборОбъемПомещений.добавить();
		ЗаполнитьЗначенияСвойств(СтрокНабора,Выборка);
		СтрокНабора.Период									= Выборка.ЗавершениеОП-1;
		СтрокНабора.ВидНачисления 							= ВидНачисления;
		СтрокНабора.ПериодРасчета 							= Выборка.ПериодНачисления;
		ЕстьСумма 											= Ложь;
		
		Если НачисленияПоУслугамПомещения[Выборка.Услуга] = Неопределено Тогда
			
			СтрокиНабораПомещения 							= Новый Массив;
			СтрокиНабораПомещения.Добавить(НаборОбъемПомещений.Индекс(СтрокНабора));
						
			ЗначениеСоотвествия 							= Новый Структура("
			|СтрокиНабораПомещения,КоличествоЧеловек,ОбъемУслуги,
			|ОбъемУслугиПотребленный,ОбъемУслугиОстаток,ОбъемУслугиПотребленныйОстаток,ЗначениеСоциальнойНормы,
			|ПовыщающийКоэффициент,СниматьНачисленныйСредний",
			СтрокиНабораПомещения,Выборка.КоличествоЖильцов,Выборка.ОбъемУслуги,
			Выборка.ОбъемУслугиПотребленный,Выборка.ОбъемУслуги,Выборка.ОбъемУслугиПотребленный, Выборка.ЗначениеСоциальнойНормы,
			Выборка.ПовыщающийКоэффициент, Выборка.СниматьНачисленныйСредний);
			
			СоотвествиеСоставнаяУслуга 						= Новый Соответствие;
			СоотвествиеСоставнаяУслуга.Вставить(Выборка.СоставнаяУслуга, ЗначениеСоотвествия); 
			
			СоотвествиеНачалоПериода 						= Новый Соответствие;
			СоотвествиеНачалоПериода.Вставить(Выборка.НачалоПериода, СоотвествиеСоставнаяУслуга);
			
			СоотвествиеТарифнаяЗона 						= Новый Соответствие;
			СоотвествиеТарифнаяЗона.Вставить(Выборка.ТарифнаяЗона, СоотвествиеНачалоПериода);	
			
			НачисленияПоУслугамПомещения.Вставить(Выборка.Услуга,СоотвествиеТарифнаяЗона);			
						
		ИначеЕсли НачисленияПоУслугамПомещения[Выборка.Услуга][Выборка.ТарифнаяЗона] = Неопределено Тогда
			
			СтрокиНабораПомещения 							= Новый Массив;
			СтрокиНабораПомещения.Добавить(НаборОбъемПомещений.Индекс(СтрокНабора));
						
			ЗначениеСоотвествия 							= Новый Структура("
			|СтрокиНабораПомещения,КоличествоЧеловек,ОбъемУслуги,
			|ОбъемУслугиПотребленный,ОбъемУслугиОстаток,ОбъемУслугиПотребленныйОстаток,ЗначениеСоциальнойНормы,
			|ПовыщающийКоэффициент,СниматьНачисленныйСредний",
			СтрокиНабораПомещения,Выборка.КоличествоЖильцов,Выборка.ОбъемУслуги,
			Выборка.ОбъемУслугиПотребленный,Выборка.ОбъемУслуги,Выборка.ОбъемУслугиПотребленный, Выборка.ЗначениеСоциальнойНормы,
			Выборка.ПовыщающийКоэффициент, Выборка.СниматьНачисленныйСредний);
			
			СоотвествиеСоставнаяУслуга 						= Новый Соответствие;
			СоотвествиеСоставнаяУслуга.Вставить(Выборка.СоставнаяУслуга, ЗначениеСоотвествия);
			
			СоотвествиеНачалоПериода 						= Новый Соответствие;
			СоотвествиеНачалоПериода.Вставить(Выборка.НачалоПериода, СоотвествиеСоставнаяУслуга);
			
			НачисленияПоУслугамПомещения[Выборка.Услуга].Вставить(Выборка.ТарифнаяЗона, СоотвествиеНачалоПериода);
						
		ИначеЕсли НачисленияПоУслугамПомещения[Выборка.Услуга][Выборка.ТарифнаяЗона][Выборка.НачалоПериода] = Неопределено Тогда
			
			СтрокиНабораПомещения 							= Новый Массив;
			СтрокиНабораПомещения.Добавить(НаборОбъемПомещений.Индекс(СтрокНабора));
						
			ЗначениеСоотвествия 							= Новый Структура("
			|СтрокиНабораПомещения,КоличествоЧеловек,ОбъемУслуги,
			|ОбъемУслугиПотребленный,ОбъемУслугиОстаток,ОбъемУслугиПотребленныйОстаток,ЗначениеСоциальнойНормы,
			|ПовыщающийКоэффициент,СниматьНачисленныйСредний",
			СтрокиНабораПомещения,Выборка.КоличествоЖильцов,Выборка.ОбъемУслуги,
			Выборка.ОбъемУслугиПотребленный,Выборка.ОбъемУслуги,Выборка.ОбъемУслугиПотребленный, Выборка.ЗначениеСоциальнойНормы,
			Выборка.ПовыщающийКоэффициент, Выборка.СниматьНачисленныйСредний);
			
			СоотвествиеСоставнаяУслуга 						= Новый Соответствие;
			СоотвествиеСоставнаяУслуга.Вставить(Выборка.СоставнаяУслуга, ЗначениеСоотвествия);
						
			НачисленияПоУслугамПомещения[Выборка.Услуга][Выборка.ТарифнаяЗона].Вставить(Выборка.НачалоПериода, СоотвествиеСоставнаяУслуга);
			
		ИначеЕсли НачисленияПоУслугамПомещения[Выборка.Услуга][Выборка.ТарифнаяЗона][Выборка.НачалоПериода][Выборка.СоставнаяУслуга] = Неопределено Тогда
			
			СтрокиНабораПомещения 							= Новый Массив;
			СтрокиНабораПомещения.Добавить(НаборОбъемПомещений.Индекс(СтрокНабора));
			
			ЗначениеСоотвествия 							= Новый Структура("
			|СтрокиНабораПомещения,КоличествоЧеловек,ОбъемУслуги,
			|ОбъемУслугиПотребленный,ОбъемУслугиОстаток,ОбъемУслугиПотребленныйОстаток,ЗначениеСоциальнойНормы,
			|ПовыщающийКоэффициент,СниматьНачисленныйСредний",
			СтрокиНабораПомещения,Выборка.КоличествоЖильцов,Выборка.ОбъемУслуги,
			Выборка.ОбъемУслугиПотребленный,Выборка.ОбъемУслуги,Выборка.ОбъемУслугиПотребленный, Выборка.ЗначениеСоциальнойНормы,
			Выборка.ПовыщающийКоэффициент, Выборка.СниматьНачисленныйСредний);
			
			НачисленияПоУслугамПомещения[Выборка.Услуга][Выборка.ТарифнаяЗона][Выборка.НачалоПериода].Вставить(Выборка.СоставнаяУслуга, ЗначениеСоотвествия);
			
		Иначе	
			СтрокиНабораПомещения 							= НачисленияПоУслугамПомещения[Выборка.Услуга][Выборка.ТарифнаяЗона][Выборка.НачалоПериода][Выборка.СоставнаяУслуга].СтрокиНабораПомещения;
			СтрокиНабораПомещения.Добавить(НаборОбъемПомещений.Индекс(СтрокНабора));
			                                                                                                                                           	
			НачисленияПоУслугамПомещения[Выборка.Услуга][Выборка.ТарифнаяЗона][Выборка.НачалоПериода][Выборка.СоставнаяУслуга].КоличествоЧеловек 				= Выборка.КоличествоЖильцов;
			НачисленияПоУслугамПомещения[Выборка.Услуга][Выборка.ТарифнаяЗона][Выборка.НачалоПериода][Выборка.СоставнаяУслуга].ОбъемУслуги 						= НачисленияПоУслугамПомещения[Выборка.Услуга][Выборка.ТарифнаяЗона][Выборка.НачалоПериода][Выборка.СоставнаяУслуга].ОбъемУслуги + Выборка.ОбъемУслуги;
			НачисленияПоУслугамПомещения[Выборка.Услуга][Выборка.ТарифнаяЗона][Выборка.НачалоПериода][Выборка.СоставнаяУслуга].ОбъемУслугиОстаток 				= НачисленияПоУслугамПомещения[Выборка.Услуга][Выборка.ТарифнаяЗона][Выборка.НачалоПериода][Выборка.СоставнаяУслуга].ОбъемУслугиОстаток + Выборка.ОбъемУслуги;
			НачисленияПоУслугамПомещения[Выборка.Услуга][Выборка.ТарифнаяЗона][Выборка.НачалоПериода][Выборка.СоставнаяУслуга].ОбъемУслугиПотребленныйОстаток 	= НачисленияПоУслугамПомещения[Выборка.Услуга][Выборка.ТарифнаяЗона][Выборка.НачалоПериода][Выборка.СоставнаяУслуга].ОбъемУслугиПотребленныйОстаток + Выборка.ОбъемУслугиПотребленный;
			НачисленияПоУслугамПомещения[Выборка.Услуга][Выборка.ТарифнаяЗона][Выборка.НачалоПериода][Выборка.СоставнаяУслуга].ОбъемУслугиПотребленный			= НачисленияПоУслугамПомещения[Выборка.Услуга][Выборка.ТарифнаяЗона][Выборка.НачалоПериода][Выборка.СоставнаяУслуга].ОбъемУслугиПотребленный + Выборка.ОбъемУслугиПотребленный;
			НачисленияПоУслугамПомещения[Выборка.Услуга][Выборка.ТарифнаяЗона][Выборка.НачалоПериода][Выборка.СоставнаяУслуга].ЗначениеСоциальнойНормы 			= Выборка.ЗначениеСоциальнойНормы;
		КонецЕсли;		
	КонецЕсли;
	
	// Начисления поставщиков из РС "Поставщики не начислять"
	Если ЕстьАбонент И Выборка.УдалитьЗапись Тогда
		ЗаписиСтороннихПоставщиков.Вставить(0, Набор.Индекс(СтрокНабора));
	КонецЕсли;
	
	Если Выборка.ПомещениеРодитель = Выборка.Помещение И ЗначениеЗаполнено(Выборка.ЗависитОтУслуги) И НЕ Выборка.РасчетПоФормуле И НЕ ЗначениеЗаполнено(Выборка.ЗависимаяТочкаУчета) Тогда
		ОбъемУслуги 										= 0;
		ОбъемУслугиПотребленный								= 0;
		СниматьНачисленныйСредний							= Выборка.СниматьНачисленныйСредний;
		
		Если НЕ НачисленияПоУслугам.Получить(Выборка.ТочкаУчета) = Неопределено 
			И НЕ НачисленияПоУслугам[Выборка.ТочкаУчета][Выборка.ЗависитОтУслуги] = Неопределено
			И НЕ НачисленияПоУслугам[Выборка.ТочкаУчета][Выборка.ЗависитОтУслуги][Выборка.Шкала][Выборка.ТарифнаяЗона] = Неопределено
			И НЕ НачисленияПоУслугам[Выборка.ТочкаУчета][Выборка.ЗависитОтУслуги][Выборка.Шкала][Выборка.ТарифнаяЗона][Выборка.СпособНачисления] = Неопределено Тогда 
			Если НЕ СтрокНабора.ОбъемУслуги = 0 Тогда
				ОбъемУслуги 								= НачисленияПоУслугам[Выборка.ТочкаУчета][Выборка.ЗависитОтУслуги][Выборка.Шкала][Выборка.ТарифнаяЗона][Выборка.СпособНачисления].ОбъемУслуги;
			КонецЕсли;
			
			Если НЕ СтрокНабора.ОбъемУслугиПотребленный = 0 Тогда
				ОбъемУслугиПотребленный 					= НачисленияПоУслугам[Выборка.ТочкаУчета][Выборка.ЗависитОтУслуги][Выборка.Шкала][Выборка.ТарифнаяЗона][Выборка.СпособНачисления].ОбъемУслугиПотребленный;
			КонецЕсли;
			
			Если Не Выборка.НеПрименятьЗависимостьЕслиБольшеОднойТочки Тогда
				СниматьНачисленныйСредний						= НачисленияПоУслугам[Выборка.ТочкаУчета][Выборка.ЗависитОтУслуги][Выборка.Шкала][Выборка.ТарифнаяЗона][Выборка.СпособНачисления].СниматьНачисленныйСредний;
			КонецЕсли;
		КонецЕсли;	
		    
		ОбъемУслуги 										= ОбъемУслуги * ?(Выборка.УмножатьНаНормуРодительскойУслуги,Выборка.НормаПотребления,1);
		ОбъемУслугиПотребленный 							= ОбъемУслугиПотребленный * ?(Выборка.УмножатьНаНормуРодительскойУслуги,Выборка.НормаПотребления,1);
				
		СтрокНабора.ОбъемУслуги 							= ОбъемУслуги;
		СтрокНабора.ОбъемУслугиПотребленный 				= ОбъемУслугиПотребленный;                 
		СтрокНабора.СниматьНачисленныйСредний 				= СниматьНачисленныйСредний;
						
		Если Не ЗначениеЗаполнено(Выборка.Абонент) Тогда				
			НачисленияПоУслугамПомещения[Выборка.Услуга][Выборка.ТарифнаяЗона][Выборка.НачалоПериода][Выборка.СоставнаяУслуга].ОбъемУслуги 				= НачисленияПоУслугамПомещения[Выборка.Услуга][Выборка.ТарифнаяЗона][Выборка.НачалоПериода][Выборка.СоставнаяУслуга].ОбъемУслуги + СтрокНабора.ОбъемУслуги - Выборка.ОбъемУслуги;
			НачисленияПоУслугамПомещения[Выборка.Услуга][Выборка.ТарифнаяЗона][Выборка.НачалоПериода][Выборка.СоставнаяУслуга].ОбъемУслугиПотребленный 	= НачисленияПоУслугамПомещения[Выборка.Услуга][Выборка.ТарифнаяЗона][Выборка.НачалоПериода][Выборка.СоставнаяУслуга].ОбъемУслугиПотребленный + СтрокНабора.ОбъемУслугиПотребленный - Выборка.ОбъемУслугиПотребленный;
		КонецЕсли;	  
	КонецЕсли; 
			
	ИзменитьОстатокСоциальнойНормы(ОстатокСоциальнойНормы, Выборка.КлючПомещения, Выборка.Услуга, Выборка.НаправлениеИспользованияТУ, Выборка.ЗначениеСоциальнойНормы, Набор, НаборОбъемПомещений, СтрокНабора, Выборка.СоциальнаяНормаЗависитОтРасхода, Выборка.РассчитыватьСоцНормуПоСтроке);
	
	Если Выборка.РасчетПоФормуле Тогда
		Если НЕ ПересчитатьСтрокиПоФормуле[Выборка.ТочкаУчета] = Неопределено И НЕ ПересчитатьСтрокиПоФормуле[Выборка.ТочкаУчета][Выборка.НачалоПериода] = Неопределено Тогда
			Если ЕстьАбонент Тогда
				ПересчитатьСтрокиПоФормуле[Выборка.ТочкаУчета][Выборка.НачалоПериода].ИндексыСтрок.Добавить(Набор.Индекс(СтрокНабора));
			Иначе
				ПересчитатьСтрокиПоФормуле[Выборка.ТочкаУчета][Выборка.НачалоПериода].ИндексыСтрокПомещений.Добавить(НаборОбъемПомещений.Индекс(СтрокНабора));				
			КонецЕсли;			
		ИначеЕсли НЕ ПересчитатьСтрокиПоФормуле[Выборка.ТочкаУчета] = Неопределено Тогда
			ИндексыСтрок 									= Новый Массив;
			ИндексыСтрокПомещения 							= Новый Массив;
			Если ЕстьАбонент Тогда
				ИндексыСтрок.Добавить(Набор.Индекс(СтрокНабора));
			Иначе
				ИндексыСтрокПомещения.Добавить(НаборОбъемПомещений.Индекс(СтрокНабора));
			КонецЕсли;
			ПересчитатьСтрокиПоФормуле[Выборка.ТочкаУчета].Вставить(Выборка.НачалоПериода, Новый Структура(КлючФормулы, ИндексыСтрок,ИндексыСтрокПомещения,Новый Массив, Выборка.ПрименятьФормулуВсегда));
		Иначе			
			ИндексыСтрок 									= Новый Массив;
			ИндексыСтрокПомещения 							= Новый Массив;			
			Если ЕстьАбонент Тогда
				ИндексыСтрок.Добавить(Набор.Индекс(СтрокНабора));
			Иначе
				ИндексыСтрокПомещения.Добавить(НаборОбъемПомещений.Индекс(СтрокНабора));
			КонецЕсли;			
			СоотвествиеПериод 								= Новый Соответствие;
			СоотвествиеПериод.Вставить(Выборка.НачалоПериода, Новый Структура(КлючФормулы, ИндексыСтрок,ИндексыСтрокПомещения,Новый Массив, Выборка.ПрименятьФормулуВсегда));
			ПересчитатьСтрокиПоФормуле.Вставить(Выборка.ТочкаУчета, СоотвествиеПериод);
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Выборка.ЗависимаяТочкаУчета) Тогда
		Если ПересчитатьСтрокиПоФормуле[Выборка.ЗависимаяТочкаУчета] = Неопределено Тогда
		    ИндексыСтрок 									= Новый Массив;
			ИндексыСтрокПомещения 							= Новый Массив;
			СоотвествиеПериод 								= Новый Соответствие;
			СоотвествиеПериод.Вставить(Выборка.НачалоПериода, Новый Структура(КлючФормулы, ИндексыСтрок,ИндексыСтрокПомещения,Новый Массив, Выборка.ПрименятьФормулуВсегда));
			ПересчитатьСтрокиПоФормуле.Вставить(Выборка.ЗависимаяТочкаУчета,СоотвествиеПериод);
		ИначеЕсли ПересчитатьСтрокиПоФормуле[Выборка.ЗависимаяТочкаУчета][Выборка.НачалоПериода] = Неопределено Тогда 				
			ИндексыСтрок 									= Новый Массив;
			ИндексыСтрокПомещения 							= Новый Массив; 			
			ПересчитатьСтрокиПоФормуле[Выборка.ЗависимаяТочкаУчета].Вставить(Выборка.НачалоПериода, Новый Структура(КлючФормулы, ИндексыСтрок,ИндексыСтрокПомещения,Новый Массив, Выборка.ПрименятьФормулуВсегда));				
		КонецЕсли;
		
		ПараметрФормулы 									= Новый Структура(КлючиПараметровФормулы);
		ПараметрФормулы.ТочкаУчета 							= Выборка.ТочкаУчета;
		ПараметрФормулы.Услуга 								= Выборка.Услуга;
		ПараметрФормулы.КоэффициентФормула					= Выборка.КоэффициентФормула;
		ПараметрФормулы.СпособНачисления					= Выборка.СпособНачисления;
		ПараметрФормулы.ОбъемУслуги 						= СтрокНабора.ОбъемУслуги;
		ПараметрФормулы.ОбъемУслугиПотребленный 			= СтрокНабора.ОбъемУслугиПотребленный;
		ПараметрФормулы.ИндексСтроки 						= Набор.Индекс(СтрокНабора);
		ПересчитатьСтрокиПоФормуле[Выборка.ЗависимаяТочкаУчета][Выборка.НачалоПериода].ПараметрыФормулы.Добавить(ПараметрФормулы);			
	КонецЕсли;
	
	Если НачисленияПоУслугам[Выборка.ТочкаУчета] = Неопределено Тогда
		СоотвествиеПоУслугам 								= Новый Соответствие;
		СоотвествиеПоШкалам 								= Новый Соответствие;
		СоотвествиеПоТарифнамЗонам 							= Новый Соответствие;
		СоотвествиеПоСпособам 								= Новый Соответствие;
		СоотвествиеПоСпособам.Вставить(Выборка.СпособНачисления, Новый Структура("ОбъемУслуги,ОбъемУслугиПотребленный,СниматьНачисленныйСредний", Выборка.ОбъемУслуги, Выборка.ОбъемУслугиПотребленный, Выборка.СниматьНачисленныйСредний));
		СоотвествиеПоТарифнамЗонам.Вставить(Выборка.ТарифнаяЗона, СоотвествиеПоСпособам);
		СоотвествиеПоШкалам.Вставить(Выборка.Шкала, СоотвествиеПоТарифнамЗонам);
		СоотвествиеПоУслугам.Вставить(Выборка.Услуга, СоотвествиеПоШкалам);
		НачисленияПоУслугам.Вставить(Выборка.ТочкаУчета,СоотвествиеПоУслугам)
	ИначеЕсли НачисленияПоУслугам[Выборка.ТочкаУчета][Выборка.Услуга] = Неопределено Тогда
		СоотвествиеПоШкалам 								= Новый Соответствие;
		СоотвествиеПоТарифнамЗонам 							= Новый Соответствие;
		СоотвествиеПоСпособам 								= Новый Соответствие;
		СоотвествиеПоСпособам.Вставить(Выборка.СпособНачисления, Новый Структура("ОбъемУслуги,ОбъемУслугиПотребленный,СниматьНачисленныйСредний", Выборка.ОбъемУслуги, Выборка.ОбъемУслугиПотребленный, Выборка.СниматьНачисленныйСредний));
		СоотвествиеПоТарифнамЗонам.Вставить(Выборка.ТарифнаяЗона, СоотвествиеПоСпособам);
		СоотвествиеПоШкалам.Вставить(Выборка.Шкала, СоотвествиеПоТарифнамЗонам);
		НачисленияПоУслугам[Выборка.ТочкаУчета].Вставить(Выборка.Услуга,СоотвествиеПоШкалам)
	ИначеЕсли НачисленияПоУслугам[Выборка.ТочкаУчета][Выборка.Услуга][Выборка.Шкала] = Неопределено Тогда
		СоотвествиеПоТарифнамЗонам 							= Новый Соответствие;
		СоотвествиеПоСпособам 								= Новый Соответствие;
		СоотвествиеПоСпособам.Вставить(Выборка.СпособНачисления, Новый Структура("ОбъемУслуги,ОбъемУслугиПотребленный,СниматьНачисленныйСредний", Выборка.ОбъемУслуги, Выборка.ОбъемУслугиПотребленный, Выборка.СниматьНачисленныйСредний));
		СоотвествиеПоТарифнамЗонам.Вставить(Выборка.ТарифнаяЗона, СоотвествиеПоСпособам);
		НачисленияПоУслугам[Выборка.ТочкаУчета][Выборка.Услуга].Вставить(Выборка.Шкала, СоотвествиеПоТарифнамЗонам);
	ИначеЕсли НачисленияПоУслугам[Выборка.ТочкаУчета][Выборка.Услуга][Выборка.Шкала][Выборка.ТарифнаяЗона] = Неопределено Тогда
		СоотвествиеПоСпособам 								= Новый Соответствие;
		СоотвествиеПоСпособам.Вставить(Выборка.СпособНачисления, Новый Структура("ОбъемУслуги,ОбъемУслугиПотребленный,СниматьНачисленныйСредний", Выборка.ОбъемУслуги, Выборка.ОбъемУслугиПотребленный, Выборка.СниматьНачисленныйСредний));
		НачисленияПоУслугам[Выборка.ТочкаУчета][Выборка.Услуга][Выборка.Шкала].Вставить(Выборка.ТарифнаяЗона, СоотвествиеПоСпособам);
	ИначеЕсли НачисленияПоУслугам[Выборка.ТочкаУчета][Выборка.Услуга][Выборка.Шкала][Выборка.ТарифнаяЗона][Выборка.СпособНачисления] = Неопределено Тогда
		НачисленияПоУслугам[Выборка.ТочкаУчета][Выборка.Услуга][Выборка.Шкала][Выборка.ТарифнаяЗона].Вставить(Выборка.СпособНачисления, Новый Структура("ОбъемУслуги,ОбъемУслугиПотребленный,СниматьНачисленныйСредний", Выборка.ОбъемУслуги, Выборка.ОбъемУслугиПотребленный, Выборка.СниматьНачисленныйСредний));
	Иначе	
		НачисленияПоУслугам[Выборка.ТочкаУчета][Выборка.Услуга][Выборка.Шкала][Выборка.ТарифнаяЗона][Выборка.СпособНачисления].ОбъемУслуги = НачисленияПоУслугам[Выборка.ТочкаУчета][Выборка.Услуга][Выборка.Шкала][Выборка.ТарифнаяЗона][Выборка.СпособНачисления].ОбъемУслуги + Выборка.ОбъемУслуги;
		НачисленияПоУслугам[Выборка.ТочкаУчета][Выборка.Услуга][Выборка.Шкала][Выборка.ТарифнаяЗона][Выборка.СпособНачисления].ОбъемУслугиПотребленный = НачисленияПоУслугам[Выборка.ТочкаУчета][Выборка.Услуга][Выборка.Шкала][Выборка.ТарифнаяЗона][Выборка.СпособНачисления].ОбъемУслугиПотребленный + Выборка.ОбъемУслугиПотребленный;
	КонецЕсли; 		   		                                                 
	
	// запоминаем значения площадей для того чтобы пересчитать объем коммунальных квартир		
	Если Выборка.ПорядокПомещения  = 0 Тогда
		// если будут возникать ошибки суммарной площади (изменений в один день) исправить соотвествие на хранение площадей для каждого помещения
		НачалоПериода 			= НачалоДня(Выборка.НачалоПериода);
		Если ПлощадиПомещенийПоУслугам[Выборка.Услуга] = Неопределено Тогда
			ПлощадиПоПериодам  = Новый Соответствие;
			ПлощадиПоПериодам.Вставить(НачалоПериода, Новый Структура("Площадь,Помещения",Выборка.ЗначениеПлощади, Новый Массив));
			ПлощадиПомещенийПоУслугам.Вставить(Выборка.Услуга, ПлощадиПоПериодам);
		ИначеЕсли ПлощадиПомещенийПоУслугам[Выборка.Услуга][НачалоПериода] = Неопределено Тогда
			ПлощадиПомещенийПоУслугам[Выборка.Услуга].Вставить(НачалоПериода, Новый Структура("Площадь,Помещения",Выборка.ЗначениеПлощади, Новый Массив));
		ИначеЕсли ПлощадиПомещенийПоУслугам[Выборка.Услуга][НачалоПериода].Помещения.Найти(Выборка.Помещение) = Неопределено Тогда 
			ПлощадиПомещенийПоУслугам[Выборка.Услуга][НачалоПериода].Площадь = ПлощадиПомещенийПоУслугам[Выборка.Услуга][НачалоПериода].Площадь + Выборка.ЗначениеПлощади;
			ПлощадиПомещенийПоУслугам[Выборка.Услуга][НачалоПериода].Помещения.добавить(Выборка.Помещение);
		КонецЕсли;
	КонецЕсли;		
	
	Если Выборка.Техническая и ЕстьАбонент Тогда
		ПересчитатьТехническиеТочки.Добавить(Набор.Индекс(СтрокНабора));
	ИначеЕсли Выборка.Техническая Тогда
		ПересчитатьТехническиеТочкиПомещения.Добавить(НаборОбъемПомещений.Индекс(СтрокНабора));		
	КонецЕсли;	
	
		
	Если ДеревоТочекУчета[Выборка.КонецПериода] = Неопределено Тогда
		СтрокиНабора  									= Новый Массив;
		СтрокиНабора.Добавить(Набор.Индекс(СтрокНабора));
		
		СоотвествиеУслуги 								= Новый Соответствие;
		СоотвествиеУслуги.Вставить(Выборка.Услуга, СтрокиНабора);
		
		СоотвествиеТочки 								= Новый Соответствие;
		СоотвествиеТочки.Вставить(Выборка.ТочкаУчета, СоотвествиеУслуги);
		
		ДанныеТочкиУчета 								= Новый Соответствие;
		ДанныеТочкиУчета.Вставить(Выборка.ТочкаУчетаРодитель, СоотвествиеТочки);		
		
		ДеревоТочекУчета.Вставить(Выборка.КонецПериода, ДанныеТочкиУчета);
	ИначеЕсли ДеревоТочекУчета[Выборка.КонецПериода][Выборка.ТочкаУчетаРодитель] = Неопределено Тогда		
		
		СтрокиНабора  									= Новый Массив;
		СтрокиНабора.Добавить(Набор.Индекс(СтрокНабора));
		
		СоотвествиеУслуги 								= Новый Соответствие;
		СоотвествиеУслуги.Вставить(Выборка.Услуга, СтрокиНабора);
		
		СоотвествиеТочки 								= Новый Соответствие;
		СоотвествиеТочки.Вставить(Выборка.ТочкаУчета, СоотвествиеУслуги);
				
		ДеревоТочекУчета[Выборка.КонецПериода].Вставить(Выборка.ТочкаУчетаРодитель, СоотвествиеТочки);
		
	ИначеЕсли ДеревоТочекУчета[Выборка.КонецПериода][Выборка.ТочкаУчетаРодитель][Выборка.ТочкаУчета] = Неопределено Тогда
		СтрокиНабора  									= Новый Массив;
		СтрокиНабора.Добавить(Набор.Индекс(СтрокНабора));
		
		СоотвествиеУслуги 								= Новый Соответствие;
		СоотвествиеУслуги.Вставить(Выборка.Услуга, СтрокиНабора);
				
		ДеревоТочекУчета[Выборка.КонецПериода][Выборка.ТочкаУчетаРодитель].Вставить(Выборка.ТочкаУчета, СоотвествиеУслуги);
		
	ИначеЕсли ДеревоТочекУчета[Выборка.КонецПериода][Выборка.ТочкаУчетаРодитель][Выборка.ТочкаУчета][Выборка.Услуга] = Неопределено Тогда
		СтрокиНабора  									= Новый Массив;
		СтрокиНабора.Добавить(Набор.Индекс(СтрокНабора));		
				
		ДеревоТочекУчета[Выборка.КонецПериода][Выборка.ТочкаУчетаРодитель][Выборка.ТочкаУчета].Вставить(Выборка.Услуга, СтрокиНабора);
	Иначе
		
		ДеревоТочекУчета[Выборка.КонецПериода][Выборка.ТочкаУчетаРодитель][Выборка.ТочкаУчета][Выборка.Услуга].Добавить(Набор.Индекс(СтрокНабора)); 	
	КонецЕсли;
	
	
	//закрытая схема
	Если Выборка.ЗакрытаяСхемаГВС Тогда
		СтрокНабора.ОбъемУслуги 							= 0;
		СтрокНабора.Сумма 									= 0;
	КонецЕсли;

КонецПроцедуры

Процедура РассчитатьДеревоТочекУчета(ДеревоТочекУчета,Набор, НаборОбъемПомещений,ОстатокСоциальнойНормы, Ошибки, ИнформацияДляОшибки)
	
	Попытка
		Для Каждого КлючЗначениеПериод Из ДеревоТочекУчета Цикл
			Дерево  								= Новый Массив;
			
			Если КлючЗначениеПериод.Значение.Количество() = 1 Тогда
				Продолжить;
			КонецЕсли;	
			
			Для Каждого Вершины Из КлючЗначениеПериод.Значение Цикл
				Если ЗначениеЗаполнено(Вершины.Ключ) Тогда
					Продолжить;
				КонецЕсли;
				
				Для Каждого КлючЗначение ИЗ Вершины.Значение Цикл 				
					Дерево.Добавить(Новый Структура("ТочкаУчета, Услуги, Потомки", КлючЗначение.Ключ, КлючЗначение.Значение, Новый Массив));					
				КонецЦикла;			
			КонецЦикла;
			
			Для Каждого Вершина Из Дерево Цикл 			
				ЗаполнитьДеревоТочекУчетаРекурсивно(КлючЗначениеПериод.Значение, Вершина.ТочкаУчета, Вершина.Потомки, Вершина.Услуги);		
			КонецЦикла;	
			
			Для Каждого Вершина Из Дерево Цикл
				
				Если Вершина.Потомки.Количество() = 0 Тогда
					Продолжить;
				КонецЕсли;
				
				Для Каждого УслугаВершины из Вершина.Услуги Цикл 
					
					СтрокиНабора 													= УслугаВершины.Значение;
					ДанныеСтрокиНачислений 											= Набор.Получить(СтрокиНабора[0]);
					
					ОбщаяСуммаЗначениеСоциальнойНормы 								= 0; //"ЗначениеСоциальнойНормы" необходимо будет определять если у всей ветки "ОбщаяСуммаЗначениеСоциальнойНормы" больше 0
					ОбщееЗначениеСоциальнойНормыОбъемПотребленный 					= 0;
					ДанныеИспользованияСоцНормы										= ОпределитьОбщуюСуммуЗначениеСоциальнойНормыРекурсия(Набор, Вершина.Потомки, ОбщаяСуммаЗначениеСоциальнойНормы, ОбщееЗначениеСоциальнойНормыОбъемПотребленный, УслугаВершины.Ключ);		
					ПриборУчетаГоловнойТочкиВведен 									= ЗначениеЗаполнено(ДанныеСтрокиНачислений.ПриборУчета);
					Если (ДанныеСтрокиНачислений.СпособНачисления  = Перечисления.энргСпособНачислений.ПоПриборам
						ИЛИ ДанныеСтрокиНачислений.СпособНачисления  = Перечисления.энргСпособНачислений.НачислениеПоСреднему) Тогда
						
						ОчиститьОбъемУслугиТочекУчетаДереревоРекурсия(Набор, Вершина.Потомки, УслугаВершины.Ключ, ДанныеСтрокиНачислений);
						
						Для Сч = 0 По СтрокиНабора.ВГраница() Цикл
							ДанныеСтрокиНачислений 									= Набор.Получить(СтрокиНабора[Сч]);
							
							Если НЕ ДанныеСтрокиНачислений.ОбъемУслуги = 0 И ДанныеИспользованияСоцНормы.СоциальнаяНормаИспользуется Тогда 
								ОстатокСоциальнойНормы[ДанныеСтрокиНачислений.КлючПомещения]
								[ДанныеСтрокиНачислений.Услуга]
								[ДанныеСтрокиНачислений.НаправлениеИспользованияТУ]
								.Остаток 											= ОбщаяСуммаЗначениеСоциальнойНормы;
							КонецЕсли;
							
							Если НЕ ДанныеСтрокиНачислений.ОбъемУслугиПотребленный = 0 И ДанныеИспользованияСоцНормы.СоциальнаяНормаПотребленныйИспользуется Тогда
								ОстатокСоциальнойНормы[ДанныеСтрокиНачислений.КлючПомещения]
								[ДанныеСтрокиНачислений.Услуга]
								[ДанныеСтрокиНачислений.НаправлениеИспользованияТУ]
								.ОстатокПотребленный 								= ОбщееЗначениеСоциальнойНормыОбъемПотребленный;
							КонецЕсли; 
							
							Если НЕ ДанныеСтрокиНачислений.ОбъемУслуги  = 0 Тогда
								ДанныеСтрокиНачислений.ЗначениеСоциальнойНормы 		= ОбщаяСуммаЗначениеСоциальнойНормы;	
							КонецЕсли;
							
							Если НЕ ДанныеСтрокиНачислений.ОбъемУслугиПотребленный  = 0 Тогда
								ДанныеСтрокиНачислений.ЗначениеСоциальнойНормы 		= ОбщееЗначениеСоциальнойНормыОбъемПотребленный;	
							КонецЕсли;
							
							Если ДанныеСтрокиНачислений.ОбъемУслуги  = 0 и ДанныеСтрокиНачислений.ОбъемУслугиПотребленный  = 0 Тогда
								ДанныеСтрокиНачислений.ЗначениеСоциальнойНормы 		= 0;
							КонецЕсли;												
						КонецЦикла;
						
					Иначе
						
						Если ЗначениеЗаполнено(ДанныеСтрокиНачислений.ПриборУчета) Тогда
							УстановитьСниматьНачисленныйСреднийПотомковРекурсия(Набор, Вершина.Потомки, УслугаВершины.Ключ, ПриборУчетаГоловнойТочкиВведен);
						КонецЕсли;

						Для Сч  = 0 По СтрокиНабора.ВГраница() Цикл
							ДанныеСтрокиНачислений 									= Набор.Получить(СтрокиНабора[Сч]);
							ДанныеСтрокиНачислений.СпособНачисления 				= Перечисления.энргСпособНачислений.Расчетный; 					
							ДанныеСтрокиНачислений.ОбъемУслуги 						= 0;
							ДанныеСтрокиНачислений.СуммаПоПовышенномуКоэффициенту 	= 0;
							ДанныеСтрокиНачислений.Сумма 							= 0;
							
							ДанныеСтрокиНачислений.ЗначениеСоциальнойНормы 			= 0;
							ДанныеСтрокиНачислений.ОбъемУслугиПотребленный			= 0;										
						КонецЦикла;
					КонецЕсли; 				
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	Исключение
		ИнформацияОбОшибке  					= ИнформацияОбОшибке();
		Ошибки 									= Ошибки +  
		Символы.ПС + ИнформацияДляОшибки + Символы.ПС + КраткоеПредставлениеОшибки(ИнформацияОбОшибке);
	КонецПопытки;
КонецПроцедуры

Процедура ПересчитатьСоциальнуюНорму(Набор, НаборОбъемПомещений, ОстатокСоциальнойНормы)
	  	
	Для Каждого КлючЗначениеПомещение Из ОстатокСоциальнойНормы Цикл		
		Для Каждого КлючЗначениеУслуга Из КлючЗначениеПомещение.Значение Цикл
			Для Каждого КлючЗначениеНаправление Из КлючЗначениеУслуга.Значение Цикл
				СтруктураСоциальнойНормы 							= КлючЗначениеНаправление.Значение;
				Если СтруктураСоциальнойНормы.Остаток < 0 Тогда
					Продолжить;
				КонецЕсли;			
								
				ИндексыСтрок 															= СтруктураСоциальнойНормы.ИндексыСтрок;
				ИндексыСтрокПомещения													= СтруктураСоциальнойНормы.ИндексыСтрокПомещения; 				
				
				СтрокиНабораОбъемСверхНормы 											= Новый Массив;
				СтрокиНабораОбъемПотребленныйСверхНормы 								= Новый Массив;
				ОписаниеСтрокиСверхНормы 												= "Индекс,ОбъемСверхНормы,НоваяСтрока";
				Для Сч = 0 По ИндексыСтрок.ВГраница() Цикл
					СтрокаНабора  														= Набор.Получить(ИндексыСтрок[Сч]);
					
					Если СтрокаНабора.СпособНачисления = Перечисления.энргСпособНачислений.СреднееПоНормативу и НЕ СтруктураСоциальнойНормы.РассчитыватьСоцНормуПоСтроке Тогда
						Продолжить;
					КонецЕсли;
										
					Если СтруктураСоциальнойНормы.РассчитыватьСоцНормуПоСтроке Тогда
						ИспользуемОбъем 												= Мин(СтрокаНабора.ЗначениеСоциальнойНормы, СтрокаНабора.ОбъемУслуги);
						ИспользуемОбъемПотребленный										= Мин(СтрокаНабора.ЗначениеСоциальнойНормы, СтрокаНабора.ОбъемУслугиПотребленный);
					Иначе
						ИспользуемОбъем 												= Мин(СтруктураСоциальнойНормы.Остаток, СтрокаНабора.ОбъемУслуги);
						ИспользуемОбъемПотребленный										= Мин(СтруктураСоциальнойНормы.ОстатокПотребленный, СтрокаНабора.ОбъемУслугиПотребленный);
					КонецЕсли;
					
					Если ИспользуемОбъем < СтрокаНабора.ОбъемУслуги и СтруктураСоциальнойНормы.Остаток > 0 Тогда						
						ДанныеСтрокиОбъем 												= Новый Структура(ОписаниеСтрокиСверхНормы);
						ДанныеСтрокиОбъем.Индекс 										= ИндексыСтрок[Сч];
						ДанныеСтрокиОбъем.ОбъемСверхНормы 								= СтрокаНабора.ОбъемУслуги - ИспользуемОбъем;
						ДанныеСтрокиОбъем.НоваяСтрока 									= Истина;
						
						СтрокаНабора.ОбъемУслуги 										= ИспользуемОбъем;
						СтрокаНабора.ОбъемУслугиСоцНорма 								= ИспользуемОбъем;
						СтрокиНабораОбъемСверхНормы.Добавить(ДанныеСтрокиОбъем); 						
					ИначеЕсли ИспользуемОбъем < СтрокаНабора.ОбъемУслуги и НЕ СтрокаНабора.ОбъемУслуги = 0 Тогда
						ДанныеСтрокиОбъем 												= Новый Структура(ОписаниеСтрокиСверхНормы);
						ДанныеСтрокиОбъем.Индекс 										= ИндексыСтрок[Сч];
						ДанныеСтрокиОбъем.ОбъемСверхНормы 								= СтрокаНабора.ОбъемУслуги - ИспользуемОбъем;
						ДанныеСтрокиОбъем.НоваяСтрока 									= Ложь;				
						СтрокиНабораОбъемСверхНормы.Добавить(ДанныеСтрокиОбъем);
					КонецЕсли; 
					
					Если ИспользуемОбъемПотребленный < СтрокаНабора.ОбъемУслугиПотребленный и СтруктураСоциальнойНормы.ОстатокПотребленный > 0 Тогда						
						ДанныеСтрокиОбъем 												= Новый Структура(ОписаниеСтрокиСверхНормы);
						ДанныеСтрокиОбъем.Индекс 										= ИндексыСтрок[Сч];
						ДанныеСтрокиОбъем.ОбъемСверхНормы 								= СтрокаНабора.ОбъемУслугиПотребленный - ИспользуемОбъемПотребленный;
						ДанныеСтрокиОбъем.НоваяСтрока 									= Истина;
						
						СтрокаНабора.ОбъемУслугиПотребленный 							= ИспользуемОбъемПотребленный;
						СтрокаНабора.ОбъемУслугиПотребленныйСоцНорма 					= ИспользуемОбъемПотребленный;
						СтрокиНабораОбъемПотребленныйСверхНормы.Добавить(ДанныеСтрокиОбъем); 						
					ИначеЕсли ИспользуемОбъемПотребленный < СтрокаНабора.ОбъемУслугиПотребленный и НЕ СтрокаНабора.ОбъемУслугиПотребленный = 0 Тогда
						ДанныеСтрокиОбъем 												= Новый Структура(ОписаниеСтрокиСверхНормы);
						ДанныеСтрокиОбъем.Индекс 										= ИндексыСтрок[Сч];
						ДанныеСтрокиОбъем.ОбъемСверхНормы 								= СтрокаНабора.ОбъемУслугиПотребленный - ИспользуемОбъемПотребленный;
						ДанныеСтрокиОбъем.НоваяСтрока 									= Ложь;
						СтрокиНабораОбъемПотребленныйСверхНормы.Добавить(ДанныеСтрокиОбъем);
					КонецЕсли;
					
					СтруктураСоциальнойНормы.Остаток 					= СтруктураСоциальнойНормы.Остаток - ИспользуемОбъем;  
					СтруктураСоциальнойНормы.ОстатокПотребленный 		= СтруктураСоциальнойНормы.ОстатокПотребленный - ИспользуемОбъемПотребленный;					
				КонецЦикла;
												
				Для Сч  = 0 По СтрокиНабораОбъемСверхНормы.ВГраница() Цикл
					ДанныеСтроки 										= СтрокиНабораОбъемСверхНормы[Сч];
					Если ДанныеСтроки.НоваяСтрока Тогда
						НоваяСтрока 									= Набор.Добавить();
						СтрокаНабора 									= Набор.Получить(СтрокиНабораОбъемСверхНормы[Сч].Индекс);
						ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаНабора);
					Иначе
						НоваяСтрока 									= Набор.Получить(СтрокиНабораОбъемСверхНормы[Сч].Индекс);
					КонецЕсли;
					
					НоваяСтрока.ОбъемУслуги 							= ДанныеСтроки.ОбъемСверхНормы;
					НоваяСтрока.ОбъемУслугиПотребленный 				= 0;
					НоваяСтрока.ОбъемУслугиСоцНорма 					= 0;
					НоваяСтрока.ОбъемУслугиПотребленныйСоцНорма 		= 0;
					НоваяСтрока.СверхНорматива 							= Истина;
					НоваяСтрока.ЗначениеТарифа 							= НоваяСтрока.ЗначениеТарифаСверхНорматива;
				КонецЦикла;
				
				Для Сч  = 0 По СтрокиНабораОбъемПотребленныйСверхНормы.ВГраница() Цикл
					ДанныеСтроки 										= СтрокиНабораОбъемПотребленныйСверхНормы[Сч];
					Если ДанныеСтроки.НоваяСтрока Тогда
						НоваяСтрока 									= Набор.Добавить();
						СтрокаНабора 									= Набор.Получить(ДанныеСтроки.Индекс);
						ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаНабора); 						
					Иначе
						НоваяСтрока 									= Набор.Получить(ДанныеСтроки.Индекс);						
					КонецЕсли;
					   					
					НоваяСтрока.ОбъемУслуги 							= 0;
					НоваяСтрока.ОбъемУслугиСоцНорма 					= 0;
					НоваяСтрока.СверхНорматива 							= Истина;
					НоваяСтрока.ЗначениеТарифа 							= НоваяСтрока.ЗначениеТарифаСверхНорматива;					
					НоваяСтрока.ОбъемУслугиПотребленныйСоцНорма 		= 0;
					НоваяСтрока.ОбъемУслугиПотребленный 				= ДанныеСтроки.ОбъемСверхНормы;				
				КонецЦикла;
				
				СтрокиНабораОбъемСверхНормы 											= Новый Массив;
				СтрокиНабораОбъемПотребленныйСверхНормы 								= Новый Массив;
				ОписаниеСтрокиСверхНормы 												= "Индекс,ОбъемСверхНормы,НоваяСтрока";
				
				Для Сч = 0 По ИндексыСтрокПомещения.ВГраница() Цикл
					СтрокаНабора  														= НаборОбъемПомещений.Получить(ИндексыСтрокПомещения[Сч]);
					
					Если СтрокаНабора.СпособНачисления = Перечисления.энргСпособНачислений.СреднееПоНормативу Тогда
						Продолжить;
					КонецЕсли;
					
					ИспользуемОбъем 													= Мин(СтруктураСоциальнойНормы.Остаток, СтрокаНабора.ОбъемУслуги);
					ИспользуемОбъемПотребленный											= Мин(СтруктураСоциальнойНормы.ОстатокПотребленный, СтрокаНабора.ОбъемУслугиПотребленный);
					
					Если ИспользуемОбъем < СтрокаНабора.ОбъемУслуги и СтруктураСоциальнойНормы.Остаток > 0 Тогда						
						ДанныеСтрокиОбъем 												= Новый Структура(ОписаниеСтрокиСверхНормы);
						ДанныеСтрокиОбъем.Индекс 										= ИндексыСтрокПомещения[Сч];
						ДанныеСтрокиОбъем.ОбъемСверхНормы 								= СтрокаНабора.ОбъемУслуги - ИспользуемОбъем;
						ДанныеСтрокиОбъем.НоваяСтрока 									= Истина;
						
						СтрокаНабора.ОбъемУслуги 										= ИспользуемОбъем;
						СтрокаНабора.ОбъемУслугиСоцНорма 								= ИспользуемОбъем;
						СтрокиНабораОбъемСверхНормы.Добавить(ДанныеСтрокиОбъем); 						
					ИначеЕсли ИспользуемОбъем < СтрокаНабора.ОбъемУслуги и НЕ СтрокаНабора.ОбъемУслуги = 0 Тогда
						ДанныеСтрокиОбъем 												= Новый Структура(ОписаниеСтрокиСверхНормы);
						ДанныеСтрокиОбъем.Индекс 										= ИндексыСтрокПомещения[Сч];
						ДанныеСтрокиОбъем.ОбъемСверхНормы 								= СтрокаНабора.ОбъемУслуги - ИспользуемОбъем;
						ДанныеСтрокиОбъем.НоваяСтрока 									= Ложь;				
						СтрокиНабораОбъемСверхНормы.Добавить(ДанныеСтрокиОбъем);
					КонецЕсли; 
					
					Если ИспользуемОбъемПотребленный < СтрокаНабора.ОбъемУслугиПотребленный и СтруктураСоциальнойНормы.ОстатокПотребленный > 0 Тогда						
						ДанныеСтрокиОбъем 												= Новый Структура(ОписаниеСтрокиСверхНормы);
						ДанныеСтрокиОбъем.Индекс 										= ИндексыСтрокПомещения[Сч];
						ДанныеСтрокиОбъем.ОбъемСверхНормы 								= СтрокаНабора.ОбъемУслугиПотребленный - ИспользуемОбъемПотребленный;
						ДанныеСтрокиОбъем.НоваяСтрока 									= Истина;
						
						СтрокаНабора.ОбъемУслугиПотребленный 							= ИспользуемОбъемПотребленный;
						СтрокаНабора.ОбъемУслугиПотребленныйСоцНорма 					= ИспользуемОбъемПотребленный;
						СтрокиНабораОбъемПотребленныйСверхНормы.Добавить(ДанныеСтрокиОбъем); 						
					ИначеЕсли ИспользуемОбъемПотребленный < СтрокаНабора.ОбъемУслугиПотребленный и НЕ СтрокаНабора.ОбъемУслугиПотребленный = 0 Тогда
						ДанныеСтрокиОбъем 												= Новый Структура(ОписаниеСтрокиСверхНормы);
						ДанныеСтрокиОбъем.Индекс 										= ИндексыСтрокПомещения[Сч];
						ДанныеСтрокиОбъем.ОбъемСверхНормы 								= СтрокаНабора.ОбъемУслугиПотребленный - ИспользуемОбъемПотребленный;
						ДанныеСтрокиОбъем.НоваяСтрока 									= Ложь;
						СтрокиНабораОбъемПотребленныйСверхНормы.Добавить(ДанныеСтрокиОбъем);
					КонецЕсли;
					
					СтруктураСоциальнойНормы.Остаток 					= СтруктураСоциальнойНормы.Остаток - ИспользуемОбъем;  
					СтруктураСоциальнойНормы.ОстатокПотребленный 		= СтруктураСоциальнойНормы.ОстатокПотребленный - ИспользуемОбъемПотребленный;					
				КонецЦикла;
												
				Для Сч  = 0 По СтрокиНабораОбъемСверхНормы.ВГраница() Цикл
					ДанныеСтроки 										= СтрокиНабораОбъемСверхНормы[Сч];
					Если ДанныеСтроки.НоваяСтрока Тогда
						НоваяСтрока 									= НаборОбъемПомещений.Добавить();
						СтрокаНабора 									= НаборОбъемПомещений.Получить(СтрокиНабораОбъемСверхНормы[Сч].Индекс);
						ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаНабора);
					Иначе
						НоваяСтрока 									= НаборОбъемПомещений.Получить(СтрокиНабораОбъемСверхНормы[Сч].Индекс);
					КонецЕсли;
					
					НоваяСтрока.ОбъемУслуги 							= ДанныеСтроки.ОбъемСверхНормы;
					НоваяСтрока.ОбъемУслугиПотребленный 				= 0;
					НоваяСтрока.ОбъемУслугиСоцНорма 					= 0;
					НоваяСтрока.СверхНорматива 							= Истина;
					НоваяСтрока.ЗначениеТарифа 							= НоваяСтрока.ЗначениеТарифаСверхНорматива;
				КонецЦикла;
				
				Для Сч  = 0 По СтрокиНабораОбъемПотребленныйСверхНормы.ВГраница() Цикл
					ДанныеСтроки 										= СтрокиНабораОбъемПотребленныйСверхНормы[Сч];
					Если ДанныеСтроки.НоваяСтрока Тогда
						НоваяСтрока 									= НаборОбъемПомещений.Добавить();
						СтрокаНабора 									= НаборОбъемПомещений.Получить(ДанныеСтроки.Индекс);
						ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаНабора); 						
					Иначе
						НоваяСтрока 									= НаборОбъемПомещений.Получить(ДанныеСтроки.Индекс);						
					КонецЕсли;
					   					
					НоваяСтрока.ОбъемУслуги 							= 0;
					НоваяСтрока.ОбъемУслугиСоцНорма 					= 0;
					НоваяСтрока.СверхНорматива 							= Истина;
					НоваяСтрока.ЗначениеТарифа 							= НоваяСтрока.ЗначениеТарифаСверхНорматива;					
					
					НоваяСтрока.ОбъемУслугиПотребленный 				= ДанныеСтроки.ОбъемСверхНормы;				
				КонецЦикла;					
			КонецЦикла;		
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПересчитатьСоциальнуюНормуДляНабора(Набор, СтрокаНабора, СтруктураСоциальнойНормы, ИндексыСтрок, Сч, ПересчитатьТехническиеТочки, ПересчитыватьСумму)	
	
	ОстатокОбъем					= СтруктураСоциальнойНормы.Остаток;
	ОстатокОбъемПотребленный		= СтруктураСоциальнойНормы.ОстатокПотребленный; 	
	
	ЕстьОбъемУслуги 				= СтрокаНабора.ОбъемУслуги > 0;
	ЕстьОбъемУслугиПотребленный		= СтрокаНабора.ОбъемУслугиПотребленный > 0;
	
	Если НЕ ЕстьОбъемУслуги и НЕ ЕстьОбъемУслугиПотребленный Тогда
		Возврат;
	КонецЕсли;
	
	Если СтруктураСоциальнойНормы.Остаток = 0 Тогда					
		Если ЕстьОбъемУслуги Тогда
			СтрокаНабора.ОбъемУслугиСоцНорма 			= СтрокаНабора.ОбъемУслугиПотребленный;
		КонецЕсли;				
		СтрокаНабора.СверхНорматива 					= Истина;
		СтрокаНабора.ЗначениеТарифа						= СтрокаНабора.ЗначениеТарифаСверхНорматива;
	КонецЕсли;
	
	Если СтруктураСоциальнойНормы.ОстатокПотребленный = 0 Тогда					
		Если ЕстьОбъемУслугиПотребленный Тогда
			СтрокаНабора.ОбъемУслугиСоцНорма 			= СтрокаНабора.ОбъемУслуги;
		КонецЕсли;
				
		СтрокаНабора.СверхНорматива 					= Истина;
		Если ПересчитыватьСумму Тогда 
			СтрокаНабора.ЗначениеТарифа					= СтрокаНабора.ЗначениеТарифаСверхНорматива;			
		КонецЕсли;
	КонецЕсли;
	
	Если СтруктураСоциальнойНормы.Остаток = 0 и  СтруктураСоциальнойНормы.ОстатокПотребленный = 0 Тогда
		Возврат
	КонецЕсли;
		
	ИспользуемОбъем										= Мин(ОстатокОбъем, СтрокаНабора.ОбъемУслуги);
	ИспользуемОбъемПотребленный							= Мин(ОстатокОбъемПотребленный, СтрокаНабора.ОбъемУслугиПотребленный);
		
	Если (ИспользуемОбъем > 0 и ИспользуемОбъем = СтрокаНабора.ОбъемУслуги) И 
		(ИспользуемОбъемПотребленный > 0 и ИспользуемОбъемПотребленный = СтрокаНабора.ОбъемУслугиПотребленный) Тогда
		
		СтрокаНабора.ОбъемУслугиСоцНорма 				= ИспользуемОбъем;
		СтрокаНабора.ОбъемУслугиПотребленныйСоцНорма 	= ИспользуемОбъемПотребленный;
		
	ИначеЕсли ИспользуемОбъем > 0 И ИспользуемОбъем = СтрокаНабора.ОбъемУслуги Тогда
		
		СтрокаНабора.ОбъемУслугиСоцНорма 				= ИспользуемОбъем;
		Если ЕстьОбъемУслугиПотребленный Тогда
			ПересчитатьСоциальнуюНормуВЗависимостиОтИмениРесурса("ОбъемУслугиПотребленный","ОбъемУслугиПотребленныйСоцНорма", Набор, СтрокаНабора, ПересчитатьТехническиеТочки, ИндексыСтрок, Сч, ИспользуемОбъемПотребленный, ПересчитыватьСумму);
		КонецЕсли;
		
	ИначеЕсли ИспользуемОбъемПотребленный > 0 И ИспользуемОбъемПотребленный = СтрокаНабора.ОбъемУслугиПотребленный Тогда
		
		СтрокаНабора.ОбъемУслугиПотребленныйСоцНорма 	= ИспользуемОбъемПотребленный;
		Если ЕстьОбъемУслуги Тогда
			ПересчитатьСоциальнуюНормуВЗависимостиОтИмениРесурса("ОбъемУслуги","ОбъемУслугиСоцНорма", Набор, СтрокаНабора, ПересчитатьТехническиеТочки, ИндексыСтрок, Сч, ИспользуемОбъем, ПересчитыватьСумму);
		КонецЕсли;
		
	ИначеЕсли ИспользуемОбъем > 0 И ИспользуемОбъемПотребленный > 0 Тогда
		
		РазделитьСверхНорматив(Набор, СтрокаНабора, ПересчитатьТехническиеТочки, ИндексыСтрок, Сч, ИспользуемОбъем, ИспользуемОбъемПотребленный, ПересчитыватьСумму);
		
	ИначеЕсли ИспользуемОбъем > 0 Тогда
		
		РазделитьСверхНорматив(Набор, СтрокаНабора, ПересчитатьТехническиеТочки, ИндексыСтрок, Сч, ИспользуемОбъем, 0, ПересчитыватьСумму);
		Если ЕстьОбъемУслугиПотребленный Тогда
			ПересчитатьСоциальнуюНормуВЗависимостиОтИмениРесурса("ОбъемУслугиПотребленный","ОбъемУслугиПотребленныйСоцНорма", Набор, СтрокаНабора, ПересчитатьТехническиеТочки, ИндексыСтрок, Сч, ИспользуемОбъемПотребленный, ПересчитыватьСумму);
		КонецЕсли;
		
	ИначеЕсли ИспользуемОбъемПотребленный > 0 Тогда					
		
		РазделитьСверхНорматив(Набор, СтрокаНабора, ПересчитатьТехническиеТочки, ИндексыСтрок, Сч, 0, ИспользуемОбъемПотребленный, ПересчитыватьСумму);
		Если ЕстьОбъемУслуги Тогда
			ПересчитатьСоциальнуюНормуВЗависимостиОтИмениРесурса("ОбъемУслуги","ОбъемУслугиСоцНорма", Набор, СтрокаНабора, ПересчитатьТехническиеТочки, ИндексыСтрок, Сч, ИспользуемОбъем, ПересчитыватьСумму);
		КонецЕсли;
		
	ИначеЕсли СтрокаНабора.ОбъемУслуги > 0 И СтрокаНабора.ОбъемУслугиПотребленный > 0 Тогда
		СтрокаНабора.СверхНорматива 					= Истина;
		Если ПересчитыватьСумму Тогда
			СтрокаНабора.ЗначениеТарифа 				= СтрокаНабора.ЗначениеТарифаСверхНорматива;			
		КонецЕсли;
		
	ИначеЕсли СтрокаНабора.ОбъемУслуги > 0 Тогда
		СтрокаНабора.СверхНорматива 					= Истина;
		Если ПересчитыватьСумму Тогда
			СтрокаНабора.ЗначениеТарифа 				= СтрокаНабора.ЗначениеТарифаСверхНорматива;			
		КонецЕсли;
		
		Если ЕстьОбъемУслугиПотребленный Тогда
			ПересчитатьСоциальнуюНормуВЗависимостиОтИмениРесурса("ОбъемУслугиПотребленный","ОбъемУслугиПотребленныйСоцНорма", Набор, СтрокаНабора, ПересчитатьТехническиеТочки, ИндексыСтрок, Сч, ИспользуемОбъемПотребленный, ПересчитыватьСумму);
		КонецЕсли;
	ИначеЕсли СтрокаНабора.ОбъемУслуги > 0 Тогда
		СтрокаНабора.СверхНорматива 					= Истина;
		Если ПересчитыватьСумму Тогда
			СтрокаНабора.ЗначениеТарифа 				= СтрокаНабора.ЗначениеТарифаСверхНорматива;			
		КонецЕсли;
		
		Если ЕстьОбъемУслуги Тогда
			ПересчитатьСоциальнуюНормуВЗависимостиОтИмениРесурса("ОбъемУслуги","ОбъемУслугиСоцНорма", Набор, СтрокаНабора, ПересчитатьТехническиеТочки, ИндексыСтрок, Сч, ИспользуемОбъем, ПересчитыватьСумму);
		КонецЕсли;
	КонецЕсли;
	
	СтруктураСоциальнойНормы.Остаток					= СтруктураСоциальнойНормы.Остаток - ИспользуемОбъем;
	СтруктураСоциальнойНормы.ОстатокПотребленный 		= СтруктураСоциальнойНормы.ОстатокПотребленный - ИспользуемОбъемПотребленный;
	
КонецПроцедуры

//ПересчитатьСоциальнуюНормуВЗависимостиОтИмениРесурса
//Вызывается в случае когда Объем услуги и Объем услуги потребленный расходятся в условиях пересчета социальной нормы
Процедура ПересчитатьСоциальнуюНормуВЗависимостиОтИмениРесурса(ИмяРесурсаОбъема,ИмяРесурсаОбъемаСоцНормы, Набор, СтрокаНабора, ПересчитатьТехническиеТочки, ИндексыСтрок, Сч, Используем, ПересчитыватьСумму)
	
	Если Используем > 0 И Используем = СтрокаНабора[ИмяРесурсаОбъема] Тогда
		СтрокаНабора[ИмяРесурсаОбъемаСоцНормы] 			= Используем;
	ИначеЕсли Используем > 0 Тогда
		Если ИмяРесурсаОбъема = "ОбъемУслуги" Тогда
			ИспользуемОбъемУслуги 		= Используем;
			ИспользуемОбъемПотребленный = 0;
		Иначе 
			ИспользуемОбъемУслуги 		= 0;
			ИспользуемОбъемПотребленный = Используем;
		КонецЕсли;		
		РазделитьСверхНорматив(Набор, СтрокаНабора, ПересчитатьТехническиеТочки, ИндексыСтрок, Сч, ИспользуемОбъемУслуги, ИспользуемОбъемПотребленный, ПересчитыватьСумму)
		
	ИначеЕсли СтрокаНабора[ИмяРесурсаОбъема] > 0 Тогда
		СтрокаНабора.СверхНорматива 	= Истина;
		Если ПересчитыватьСумму Тогда
			СтрокаНабора.ЗначениеТарифа = СтрокаНабора.ЗначениеТарифаСверхНорматива;			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура РазделитьСверхНорматив(Набор, СтрокаНабора, ПересчитатьТехническиеТочки, ИндексыСтрок, Сч, ИспользуемОбъемУслуги, ИспользуемОбъемПотребленный, ПересчитыватьСумму)
	СтрокаСверхНормы 							= Набор.Добавить();
	ЗаполнитьЗначенияСвойств(СтрокаСверхНормы, СтрокаНабора);
	СтрокаСверхНормы.СверхНорматива 			= Истина;
	СтрокаСверхНормы.ОбъемУслуги 				= ?(ИспользуемОбъемУслуги > 0, СтрокаСверхНормы.ОбъемУслуги - ИспользуемОбъемУслуги,0);
	СтрокаСверхНормы.ОбъемУслугиПотребленный 	= ?(ИспользуемОбъемПотребленный > 0, СтрокаСверхНормы.ОбъемУслугиПотребленный - ИспользуемОбъемПотребленный,0);
	
	Если ПересчитыватьСумму Тогда
		СтрокаСверхНормы.ЗначениеТарифа 			= СтрокаСверхНормы.ЗначениеТарифаСверхНорматива;		
	КонецЕсли;
	
	Если НЕ ПересчитатьТехническиеТочки.Найти(ИндексыСтрок[Сч]) = Неопределено Тогда
		ПересчитатьТехническиеТочки.Добавить(Набор.Индекс(СтрокаСверхНормы));
	КонецЕсли;	
	
	Если ИспользуемОбъемУслуги > 0 Тогда
		СтрокаНабора.ОбъемУслуги 						= ИспользуемОбъемУслуги;
		СтрокаНабора.ОбъемУслугиСоцНорма 				= ИспользуемОбъемУслуги;
	КонецЕсли;
	Если ИспользуемОбъемПотребленный > 0 Тогда
		СтрокаНабора.ОбъемУслугиПотребленный 			= ИспользуемОбъемПотребленный;
		СтрокаНабора.ОбъемУслугиПотребленныйСоцНорма 	= ИспользуемОбъемПотребленный;
	КонецЕсли;	
КонецПроцедуры

Процедура ЗаполнитьДеревоТочекУчетаРекурсивно(ДеревоТочекУчета,Родитель,Потомки,Услуги)
	Коллекция  			= ДеревоТочекУчета[Родитель];
	
	Если Коллекция = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого КлючЗначение Из Коллекция Цикл
		врПотомки  		= Новый Массив;
		ЗаполнитьДеревоТочекУчетаРекурсивно(ДеревоТочекУчета, КлючЗначение.Ключ, врПотомки, КлючЗначение.Значение);
		Потомки.Добавить(Новый Структура("ТочкаУчета, Потомки, Услуги", КлючЗначение.Ключ, врПотомки, КлючЗначение.Значение)); 		
	КонецЦикла;
КонецПроцедуры

Процедура ОчиститьОбъемУслугиТочекУчетаДереревоРекурсия(Набор, Потомки, Услуга, ДанныеСтрокиРодителя)
	
	Для Каждого СтрокаПотомка Из Потомки Цикл
		СтрокиНабора 										= СтрокаПотомка.Услуги[Услуга];
		Если СтрокиНабора = Неопределено Тогда
			Продолжить;
		КонецЕсли; 	
		
		Для Сч = 0 По СтрокиНабора.ВГраница() Цикл
			ДанныеСтрокиНачислений 							=  Набор.Получить(СтрокиНабора[Сч]);			
			ДанныеСтрокиНачислений.ОбъемУслуги  			= 0;
			ДанныеСтрокиНачислений.ОбъемУслугиПотребленный  = 0;
			ДанныеСтрокиНачислений.Сумма  					= 0;
			ДанныеСтрокиНачислений.СверхНорматива 			= Ложь; 			
		КонецЦикла;
		ОчиститьОбъемУслугиТочекУчетаДереревоРекурсия(Набор, СтрокаПотомка.Потомки, Услуга, ДанныеСтрокиРодителя);
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьСниматьНачисленныйСреднийПотомковРекурсия(Набор, Потомки, Услуга, ПриборУчетаГоловнойТочкиВведен)
	
	Для Каждого СтрокаПотомка Из Потомки Цикл
		СтрокиНабора 											= СтрокаПотомка.Услуги[Услуга];
		Если СтрокиНабора = Неопределено Тогда
			Продолжить;
		КонецЕсли; 	
		
		Для Сч = 0 По СтрокиНабора.ВГраница() Цикл
			ДанныеСтрокиНачислений 								= Набор.Получить(СтрокиНабора[Сч]);			
			ДанныеСтрокиНачислений.СниматьНачисленныйСредний	= Истина;
			ДанныеСтрокиНачислений.ПовыщающийКоэффициент 		= ?(ПриборУчетаГоловнойТочкиВведен,1,ДанныеСтрокиНачислений.ПовыщающийКоэффициент);  
		КонецЦикла;
		УстановитьСниматьНачисленныйСреднийПотомковРекурсия(Набор, СтрокаПотомка.Потомки, Услуга, ПриборУчетаГоловнойТочкиВведен);
	КонецЦикла;
	
КонецПроцедуры

Функция СуммаНормативовПотомковРекурсия(Набор, Потомки, Услуга, ПриборУчетаГоловнойТочкиВведен) 
	
	врНорматив 												= Новый Структура("ОбъемУслуги,Сумма,СуммаПоПовышенномуКоэффициенту", 0, 0, 0);
	Для Каждого СтрокаПотомка Из Потомки Цикл
		Если СтрокаПотомка.Потомки.Количество()  = 0 Тогда
			СтрокиНабора 									= СтрокаПотомка.Услуги[Услуга];
			Если СтрокиНабора = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Для Сч = 0 По СтрокиНабора.ВГраница() Цикл
				СтрокаНабора 								= Набор.Получить(СтрокиНабора[Сч]);
				Если НЕ Услуга = СтрокаНабора.Услуга Тогда
					Продолжить;
				КонецЕсли;
				СтрокаНабора.ПовыщающийКоэффициент 			= ?(ПриборУчетаГоловнойТочкиВведен,1,СтрокаНабора.ПовыщающийКоэффициент);
				РегистрыНакопления.энргОбъемНачислений.РассчитатьСуммуПоПотребленномуОбъему(СтрокаНабора);
				
				врНорматив.ОбъемУслуги 						= врНорматив.ОбъемУслуги + СтрокаНабора.ОбъемУслугиПотребленный;
				врНорматив.Сумма 							= врНорматив.Сумма + СтрокаНабора.Сумма;
				врНорматив.СуммаПоПовышенномуКоэффициенту 	= врНорматив.СуммаПоПовышенномуКоэффициенту + СтрокаНабора.СуммаПоПовышенномуКоэффициенту;
			КонецЦикла;			
		Иначе
			яНорматив 										= СуммаНормативовПотомковРекурсия(Набор, СтрокаПотомка.Потомки, Услуга, ПриборУчетаГоловнойТочкиВведен);
			врНорматив.ОбъемУслуги 							= врНорматив.ОбъемУслуги + яНорматив.ОбъемУслугиПотребленный;
			врНорматив.Сумма 								= врНорматив.Сумма + яНорматив.Сумма;
			врНорматив.СуммаПоПовышенномуКоэффициенту 		= врНорматив.СуммаПоПовышенномуКоэффициенту + яНорматив.СуммаПоПовышенномуКоэффициенту;
		КонецЕсли;		
	КонецЦикла;
	
	Возврат врНорматив;
	
КонецФункции

Функция ОпределитьОбщуюСуммуЗначениеСоциальнойНормыРекурсия(Набор, Потомки, ОбщаяСуммаЗначениеСоциальнойНормы, ОбщееЗначениеСоциальнойНормыОбъемПотребленный, Услуга);
	
	СоциальнаяНормаИспользуется 								= Ложь;
	СоциальнаяНормаПотребленныйИспользуется 					= Ложь;
	
	Для Каждого СтрокаПотомка Из Потомки Цикл
		
		СтрокиНабора 											= СтрокаПотомка.Услуги[Услуга];
		Если СтрокиНабора = Неопределено Тогда
			Продолжить;
		КонецЕсли;	
		
		Для Сч = 0 По СтрокиНабора.ВГраница() Цикл  			
			ДанныеСтрокиНачислений 								= Набор.Получить(СтрокиНабора[Сч]);			 
			Если НЕ ДанныеСтрокиНачислений.ОбъемУслуги = 0 Тогда
				ОбщаяСуммаЗначениеСоциальнойНормы 				= ОбщаяСуммаЗначениеСоциальнойНормы + ?(ДанныеСтрокиНачислений.ЗначениеСоциальнойНормы = -1,ДанныеСтрокиНачислений.ЗначениеСоциальнойНормыРасчетныйСпособ,ДанныеСтрокиНачислений.ЗначениеСоциальнойНормы);
				Если НЕ ДанныеСтрокиНачислений.ЗначениеСоциальнойНормы = -1 Тогда
					СоциальнаяНормаИспользуется 				= Истина;
				КонецЕсли;				
			КонецЕсли;
			Если НЕ ДанныеСтрокиНачислений.ОбъемУслугиПотребленный = 0 Тогда
				ОбщееЗначениеСоциальнойНормыОбъемПотребленный 	= ОбщееЗначениеСоциальнойНормыОбъемПотребленный + ?(ДанныеСтрокиНачислений.ЗначениеСоциальнойНормы = -1,ДанныеСтрокиНачислений.ЗначениеСоциальнойНормыРасчетныйСпособ,ДанныеСтрокиНачислений.ЗначениеСоциальнойНормы);
				Если НЕ ДанныеСтрокиНачислений.ЗначениеСоциальнойНормы = -1 Тогда
					СоциальнаяНормаПотребленныйИспользуется 	= Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		ДанныеИспользования		 								= ОпределитьОбщуюСуммуЗначениеСоциальнойНормыРекурсия(Набор, СтрокаПотомка.Потомки, ОбщаяСуммаЗначениеСоциальнойНормы, ОбщееЗначениеСоциальнойНормыОбъемПотребленный, Услуга);
		
		СоциальнаяНормаИспользуется 							= Макс(СоциальнаяНормаИспользуется, ДанныеИспользования.СоциальнаяНормаИспользуется);
		СоциальнаяНормаПотребленныйИспользуется					= Макс(СоциальнаяНормаПотребленныйИспользуется, ДанныеИспользования.СоциальнаяНормаПотребленныйИспользуется);		
	КонецЦикла;	
	
	Возврат Новый Структура("СоциальнаяНормаИспользуется,СоциальнаяНормаПотребленныйИспользуется", СоциальнаяНормаПотребленныйИспользуется, СоциальнаяНормаПотребленныйИспользуется);
	
КонецФункции

Процедура ИзменитьОстатокСоциальнойНормы(ОстатокСоциальнойНормы, КлючПомещения, Услуга, НаправлениеИспользованияТУ, ЗначениеСоциальнойНормы, Набор, НаборОбъемПомещений, СтрокНабора, СоциальнаяНормаЗависитОтРасхода, РассчитыватьСоцНормуПоСтроке);
	
	ТочностьОбъема											= Метаданные.РегистрыНакопления.энргОбъемНачислений.Ресурсы.ОбъемУслуги.Тип.КвалификаторыЧисла.РазрядностьДробнойЧасти;
	окрЗначениеСоциальнойНормы 								= Окр(ЗначениеСоциальнойНормы,ТочностьОбъема);
	ЕстьАбонент 											= Набор.Индекс(СтрокНабора) >= 0;
	
	КлючиОписанияСоциальнойНормы 							= "КонецПериода,Остаток,ОстатокПотребленный,ИндексыСтрок,ИндексыСтрокПомещения, РассчитыватьСоцНормуПоСтроке";
	яЗначениеСоциальнойНормы 								= 0;
	яЗначениеСоциальнойНормыОбъемПотребленный 				= 0;
	
	Если НЕ СтрокНабора.ОбъемУслуги = 0 Тогда
		яЗначениеСоциальнойНормы 							= окрЗначениеСоциальнойНормы;
	КонецЕсли;
	
	Если НЕ СтрокНабора.ОбъемУслугиПотребленный = 0 Тогда
		яЗначениеСоциальнойНормыОбъемПотребленный 			= окрЗначениеСоциальнойНормы;
	КонецЕсли;
		
	Если ОстатокСоциальнойНормы[КлючПомещения] = Неопределено Тогда
		ИндексыСтрок 										= Новый Массив;
		ИндексыСтрокПомещения 								= Новый Массив;
		Если ЕстьАбонент Тогда
			ИндексыСтрок.Добавить(Набор.Индекс(СтрокНабора));
		Иначе
			ИндексыСтрокПомещения.Добавить(НаборОбъемПомещений.Индекс(СтрокНабора));
		КонецЕсли;
		СоотвествиеНаправление  							= Новый Соответствие;
		СоотвествиеУслуга		  							= Новый Соответствие;
		ОписаниеСоциальнойНормы  							= Новый Структура(КлючиОписанияСоциальнойНормы, СтрокНабора.КонецПериода,яЗначениеСоциальнойНормы,яЗначениеСоциальнойНормыОбъемПотребленный,ИндексыСтрок,ИндексыСтрокПомещения, РассчитыватьСоцНормуПоСтроке);
		СоотвествиеНаправление.Вставить(НаправлениеИспользованияТУ, ОписаниеСоциальнойНормы);
		СоотвествиеУслуга.Вставить(Услуга, СоотвествиеНаправление);
		ОстатокСоциальнойНормы.Вставить(КлючПомещения, СоотвествиеУслуга);
	ИначеЕсли ОстатокСоциальнойНормы[КлючПомещения][Услуга] = Неопределено Тогда		
		ИндексыСтрок 										= Новый Массив;
		ИндексыСтрокПомещения 								= Новый Массив;
		Если ЕстьАбонент Тогда
			ИндексыСтрок.Добавить(Набор.Индекс(СтрокНабора));
		Иначе
			ИндексыСтрокПомещения.Добавить(НаборОбъемПомещений.Индекс(СтрокНабора));
		КонецЕсли;
		ОписаниеСоциальнойНормы  							= Новый Структура(КлючиОписанияСоциальнойНормы, СтрокНабора.КонецПериода,яЗначениеСоциальнойНормы,яЗначениеСоциальнойНормыОбъемПотребленный,ИндексыСтрок,ИндексыСтрокПомещения, РассчитыватьСоцНормуПоСтроке);
		СоотвествиеНаправление  							= Новый Соответствие;
		СоотвествиеНаправление.Вставить(НаправлениеИспользованияТУ, ОписаниеСоциальнойНормы);																																 
		ОстатокСоциальнойНормы[КлючПомещения].Вставить(Услуга, СоотвествиеНаправление);		
	ИначеЕсли ОстатокСоциальнойНормы[КлючПомещения][Услуга][НаправлениеИспользованияТУ] = Неопределено Тогда
		ИндексыСтрок 										= Новый Массив;
		ИндексыСтрокПомещения 								= Новый Массив;
		Если ЕстьАбонент Тогда
			ИндексыСтрок.Добавить(Набор.Индекс(СтрокНабора));
		Иначе
			ИндексыСтрокПомещения.Добавить(НаборОбъемПомещений.Индекс(СтрокНабора));
		КонецЕсли;
		ОписаниеСоциальнойНормы  							= Новый Структура(КлючиОписанияСоциальнойНормы, СтрокНабора.КонецПериода,яЗначениеСоциальнойНормы,яЗначениеСоциальнойНормыОбъемПотребленный,ИндексыСтрок,ИндексыСтрокПомещения, РассчитыватьСоцНормуПоСтроке);
		ОстатокСоциальнойНормы[КлючПомещения][Услуга].Вставить(НаправлениеИспользованияТУ, ОписаниеСоциальнойНормы);
	ИначеЕсли ОстатокСоциальнойНормы[КлючПомещения][Услуга][НаправлениеИспользованияТУ].КонецПериода = СтрокНабора.КонецПериода и НЕ СоциальнаяНормаЗависитОтРасхода Тогда
		
		Если НЕ СтрокНабора.ОбъемУслуги = 0 Тогда
			ОстатокСоциальнойНормы[КлючПомещения][Услуга][НаправлениеИспользованияТУ].Остаток 				= окрЗначениеСоциальнойНормы;
		КонецЕсли;
		
		Если НЕ СтрокНабора.ОбъемУслугиПотребленный = 0 Тогда
			ОстатокСоциальнойНормы[КлючПомещения][Услуга][НаправлениеИспользованияТУ].ОстатокПотребленный 	= окрЗначениеСоциальнойНормы;
		КонецЕсли;   		
		
		Если ЕстьАбонент Тогда
			ОстатокСоциальнойНормы[КлючПомещения][Услуга][НаправлениеИспользованияТУ].ИндексыСтрок.Добавить(Набор.Индекс(СтрокНабора));
		Иначе
			ОстатокСоциальнойНормы[КлючПомещения][Услуга][НаправлениеИспользованияТУ].ИндексыСтрокПомещения.Добавить(НаборОбъемПомещений.Индекс(СтрокНабора));
		КонецЕсли; 	
		
	ИначеЕсли ОстатокСоциальнойНормы[КлючПомещения][Услуга][НаправлениеИспользованияТУ].КонецПериода < СтрокНабора.КонецПериода и НЕ СоциальнаяНормаЗависитОтРасхода Тогда
		ОстатокСоциальнойНормы[КлючПомещения][Услуга][НаправлениеИспользованияТУ].Остаток 				= окрЗначениеСоциальнойНормы;
		ОстатокСоциальнойНормы[КлючПомещения][Услуга][НаправлениеИспользованияТУ].ОстатокПотребленный 	= окрЗначениеСоциальнойНормы;
		Если ЕстьАбонент Тогда
			ОстатокСоциальнойНормы[КлючПомещения][Услуга][НаправлениеИспользованияТУ].ИндексыСтрок.Добавить(Набор.Индекс(СтрокНабора));
		Иначе
			ОстатокСоциальнойНормы[КлючПомещения][Услуга][НаправлениеИспользованияТУ].ИндексыСтрокПомещения.Добавить(НаборОбъемПомещений.Индекс(СтрокНабора));
		КонецЕсли;
	ИначеЕсли СоциальнаяНормаЗависитОтРасхода Тогда
		ОстатокСоциальнойНормы[КлючПомещения][Услуга][НаправлениеИспользованияТУ].Остаток = ОстатокСоциальнойНормы[КлючПомещения][Услуга][НаправлениеИспользованияТУ].Остаток + яЗначениеСоциальнойНормы;
		ОстатокСоциальнойНормы[КлючПомещения][Услуга][НаправлениеИспользованияТУ].ОстатокПотребленный = ОстатокСоциальнойНормы[КлючПомещения][Услуга][НаправлениеИспользованияТУ].ОстатокПотребленный + яЗначениеСоциальнойНормыОбъемПотребленный;
		Если ЕстьАбонент Тогда
			ОстатокСоциальнойНормы[КлючПомещения][Услуга][НаправлениеИспользованияТУ].ИндексыСтрок.Добавить(Набор.Индекс(СтрокНабора));
		Иначе
			ОстатокСоциальнойНормы[КлючПомещения][Услуга][НаправлениеИспользованияТУ].ИндексыСтрокПомещения.Добавить(НаборОбъемПомещений.Индекс(СтрокНабора));
		КонецЕсли;		
	ИначеЕсли ЕстьАбонент Тогда		
		ОстатокСоциальнойНормы[КлючПомещения][Услуга][НаправлениеИспользованияТУ].ИндексыСтрок.Добавить(Набор.Индекс(СтрокНабора));
	Иначе		
		ОстатокСоциальнойНормы[КлючПомещения][Услуга][НаправлениеИспользованияТУ].ИндексыСтрокПомещения.Добавить(НаборОбъемПомещений.Индекс(СтрокНабора));
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПомещенияССоглашением(ОбъемыПомещенийССоглашением, Выборка)
	Если ОбъемыПомещенийССоглашением[Выборка.Услуга] = Неопределено Тогда
		
		СоотвествиеУслуга  = Новый Соответствие;
		СоотвествиеУслуга.Вставить(Выборка.ПомещениеРодитель, Новый Структура("ОбъемУслуги,ОбъемУслугиПотребленный, ВсеПоПриборам",Выборка.ОбъемУслуги,Выборка.ОбъемУслугиПотребленный,Выборка.СпособНачисления = Перечисления.энргСпособНачислений.ПоПриборам));
		
		ОбъемыПомещенийССоглашением.Вставить(Выборка.Услуга, СоотвествиеУслуга);
		
	ИначеЕсли ОбъемыПомещенийССоглашением[Выборка.Услуга][Выборка.ПомещениеРодитель] = Неопределено Тогда
		
		ОбъемыПомещенийССоглашением[Выборка.Услуга].Вставить(Выборка.ПомещениеРодитель, Новый Структура("ОбъемУслуги,ОбъемУслугиПотребленный,ВсеПоПриборам",Выборка.ОбъемУслуги,Выборка.ОбъемУслугиПотребленный,Выборка.СпособНачисления = Перечисления.энргСпособНачислений.ПоПриборам));
		
	Иначе
		
		ОбъемыПомещенийССоглашением[Выборка.Услуга][Выборка.ПомещениеРодитель].ОбъемУслуги 			= ОбъемыПомещенийССоглашением[Выборка.Услуга][Выборка.ПомещениеРодитель].ОбъемУслуги + Выборка.ОбъемУслуги;
		ОбъемыПомещенийССоглашением[Выборка.Услуга][Выборка.ПомещениеРодитель].ОбъемУслугиПотребленный = ОбъемыПомещенийССоглашением[Выборка.Услуга][Выборка.ПомещениеРодитель].ОбъемУслугиПотребленный + Выборка.ОбъемУслугиПотребленный;
		Если Выборка.СпособНачисления <> Перечисления.энргСпособНачислений.ПоПриборам Тогда
			ОбъемыПомещенийССоглашением[Выборка.Услуга][Выборка.ПомещениеРодитель].ВсеПоПриборам 		= Ложь;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область НачислениеПоРассрочке_ВспомогательныеФункции

// Рассчет процентов происходит на остаток суммы
Процедура ДифференцированныйСпособРасчетаПроцентов(Организация, ПериодНачисления,Район,МКД,Документ,КонецПериодаРасчета)
	
	Запрос  								= Новый Запрос;
	Запрос.УстановитьПараметр("Организация",		Организация);
	Запрос.УстановитьПараметр("ПериодНачисления",	ПериодНачисления);
	Запрос.УстановитьПараметр("КонецПериодаРасчета",КонецПериодаРасчета);
	Запрос.УстановитьПараметр("Район",				Район);
	Запрос.УстановитьПараметр("Организация",			Организация);
	Текст  									= ТекстЗапросаДифференцированныйСпособРасчетаПроцентов();
	
	Если МКД = Неопределено тогда
		Текст 								= СтрЗаменить(Текст,"И энргСтабильныеПериоды.МКД = &МКД","");
		Текст 								= СтрЗаменить(Текст,"И (энргСтабильныеПериоды.МКД = &МКД)","");
		Текст 								= СтрЗаменить(Текст,"И МКД = &МКД","");
		Текст 								= СтрЗаменить(Текст,"И (энргНачислениеПоРассрочке.МКД = &МКД)","");
	иначе
		Запрос.УстановитьПараметр("МКД",МКД);
	КонецЕсли;
	
	Запрос.Текст 							= Текст;
	РезЗадолженность						= Запрос.Выполнить();
	
	// читаем ставку рефинансирования
	Запрос  		= Новый Запрос;
	Запрос.УстановитьПараметр("КонецПериодаРасчета",КонецПериодаРасчета);
	Запрос.Текст 	="ВЫБРАТЬ
	|	энргСтавкиРефинансированияСрезПоследних.Коэффициент
	|ИЗ
	|	РегистрСведений.энргСтавкиРефинансирования.СрезПоследних(&КонецПериодаРасчета, ) КАК энргСтавкиРефинансированияСрезПоследних";
	Результат 								= Запрос.Выполнить();
	
	Если Результат.Пустой() тогда
		Возврат;
	иначе
		Выборка  							= Результат.Выбрать();
		Выборка.Следующий();
		СтРеф  								= Выборка.Коэффициент;
	КонецЕсли;
	
	Выборка  								= РезЗадолженность.Выбрать();
	ТекДом 									= Неопределено;
	ДокументОбъект 							= Неопределено;
	Пока Выборка.Следующий() цикл
		Если Документ = Неопределено тогда
			ТабЧасть 						= Документ.НачисленияАбонентам;			 
		иначеЕсли ТекДом <>  Выборка.МКД тогда // первая строка выборки
			
			Если ТекДом<>Неопределено тогда
				ДокументОбъект.ДополнительныеСвойства.Вставить("ПроведениеРазрешено",Истина);
				ДокументОбъект.записать(РежимЗаписиДокумента.Проведение);
			КонецЕсли; 		
			
			Если ЗначениеЗаполнено(Выборка.ДокументНачисления) тогда
				ДокументОбъект  			= Выборка.ДокументНачисления.получитьОбъект();
			иначе
				ДокументОбъект  			= Документы.энргНачислениеПоРассрочке.СоздатьДокумент();
				ДокументОбъект.Дата 		= КонецПериодаРасчета;
			КонецЕсли;
			
			ДокументОбъект.ПометкаУдаления = ложь;
			ДокументОбъект.Район 			= Район;
			ДокументОбъект.МКД 			= Выборка.МКД;
			ТабЧасть 						= ДокументОбъект.НачисленияАбонентам
		КонецЕсли; 		
		СтрокаТЧ  							= ТабЧасть.Добавить();
		СтрокаТЧ.Абонент 					= Выборка.Абонент;
		СтрокаТЧ.СуммаНачисленныхПроцентов	= Выборка.Задолженность * СтРеф /(12* 100);
		ТекДом 								= Выборка.МКД;
	КонецЦикла;
	
	Если Документ = Неопределено и ДокументОбъект<>Неопределено тогда
		ДокументОбъект.ДополнительныеСвойства.Вставить("ПроведениеРазрешено",Истина);
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли; 
	
КонецПроцедуры

// Применяется когда абонент платит одну и ту же сумму каждый месяц
Процедура АннуитетныйСпособРасчетаПроцентов(ПериодНачисления,Организация,Район,МКД)
	
	
	
КонецПроцедуры

Функция ТекстЗапросаДифференцированныйСпособРасчетаПроцентов()
	Текст 	=
	"ВЫБРАТЬ
	|	энргСтабильныеПериоды.Организация КАК Организация,
	|	энргСтабильныеПериоды.ПериодНачисления КАК ПериодНачисления,
	|	энргСтабильныеПериоды.Район КАК Район,
	|	энргСтабильныеПериоды.МКД КАК МКД,
	|	энргСтабильныеПериоды.Абонент КАК Абонент,
	|	энргСтабильныеПериоды.Услуга КАК Услуга,
	|	энргСтабильныеПериоды.ТочкаУчета КАК ТочкаУчета,
	|	МАКСИМУМ(энргСтабильныеПериоды.НомерПозиции) КАК НомерПозиции
	|ПОМЕСТИТЬ НомерПозиций
	|ИЗ
	|	РегистрСведений.энргСтабильныеПериоды КАК энргСтабильныеПериоды
	|ГДЕ
	|	энргСтабильныеПериоды.Организация = &Организация
	|	И энргСтабильныеПериоды.ПериодНачисления = &ПериодНачисления
	|	И энргСтабильныеПериоды.Район = &Район
	|	И энргСтабильныеПериоды.МКД = &МКД
	|
	|СГРУППИРОВАТЬ ПО
	|	энргСтабильныеПериоды.Организация,
	|	энргСтабильныеПериоды.ПериодНачисления,
	|	энргСтабильныеПериоды.МКД,
	|	энргСтабильныеПериоды.Район,
	|	энргСтабильныеПериоды.Услуга,
	|	энргСтабильныеПериоды.ТочкаУчета,
	|	энргСтабильныеПериоды.Абонент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	энргСтабильныеПериоды.МКД КАК МКД,
	|	энргСтабильныеПериоды.Абонент КАК Абонент
	|ПОМЕСТИТЬ ОткрытыеЛС
	|ИЗ
	|	НомерПозиций КАК НомерПозиций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.энргСтабильныеПериоды КАК энргСтабильныеПериоды
	|		ПО НомерПозиций.Организация = энргСтабильныеПериоды.Организация
	|			И НомерПозиций.ПериодНачисления = энргСтабильныеПериоды.ПериодНачисления
	|			И НомерПозиций.Район = энргСтабильныеПериоды.Район
	|			И НомерПозиций.МКД = энргСтабильныеПериоды.МКД
	|			И НомерПозиций.Абонент = энргСтабильныеПериоды.Абонент
	|			И НомерПозиций.Услуга = энргСтабильныеПериоды.Услуга
	|			И НомерПозиций.ТочкаУчета = энргСтабильныеПериоды.ТочкаУчета
	|			И НомерПозиций.НомерПозиции = энргСтабильныеПериоды.НомерПозиции
	|			И (энргСтабильныеПериоды.УслугаПодключена)
	|			И (энргСтабильныеПериоды.Организация = &Организация)
	|			И (энргСтабильныеПериоды.ПериодНачисления = &ПериодНачисления)
	|			И (энргСтабильныеПериоды.Район = &Район)
	|			И (энргСтабильныеПериоды.МКД = &МКД)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	энргЗадолженностьПоРассрочкеОстатки.МКД КАК МКД,
	|	энргЗадолженностьПоРассрочкеОстатки.Абонент КАК Абонент,
	|	энргЗадолженностьПоРассрочкеОстатки.СуммаЗадолженностиОстаток КАК СуммаЗадолженностиОстаток
	|ПОМЕСТИТЬ ЗадолженностьПоРассрочке
	|ИЗ
	|	РегистрНакопления.энргЗадолженностьПоРассрочке.Остатки(
	|			&ПериодНачисления,
	|			Организация = &Организация
	|				И Район = &Район
	|				И МКД = &МКД) КАК энргЗадолженностьПоРассрочкеОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗадолженностьПоРассрочке.МКД КАК МКД,
	|	ЗадолженностьПоРассрочке.Абонент КАК Абонент,
	|	ЗадолженностьПоРассрочке.СуммаЗадолженностиОстаток КАК СуммаЗадолженностиОстаток
	|ПОМЕСТИТЬ ДанныеДляНачислений
	|ИЗ
	|	ОткрытыеЛС КАК ОткрытыеЛС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЗадолженностьПоРассрочке КАК ЗадолженностьПоРассрочке
	|		ПО ОткрытыеЛС.МКД = ЗадолженностьПоРассрочке.МКД
	|			И ОткрытыеЛС.Абонент = ЗадолженностьПоРассрочке.Абонент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДляНачислений.МКД КАК МКД,
	|	ДанныеДляНачислений.Абонент КАК Абонент,
	|	ДанныеДляНачислений.СуммаЗадолженностиОстаток КАК Задолженность,
	|	ЕСТЬNULL(энргНачислениеПоРассрочке.Ссылка, ЗНАЧЕНИЕ(Документ.энргНачислениеПоРассрочке.ПустаяСсылка)) КАК ДокументНачисления
	|ИЗ
	|	ДанныеДляНачислений КАК ДанныеДляНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.энргНачислениеПоРассрочке КАК энргНачислениеПоРассрочке
	|		ПО ДанныеДляНачислений.МКД = энргНачислениеПоРассрочке.МКД
	|			И (энргНачислениеПоРассрочке.Организация = &Организация)
	|			И (энргНачислениеПоРассрочке.Район = &Район)
	|			И (энргНачислениеПоРассрочке.Дата = &КонецПериодаРасчета)
	|			И (энргНачислениеПоРассрочке.МКД = &МКД)
	|
	|УПОРЯДОЧИТЬ ПО
	|	МКД
	|ИТОГИ
	|	МАКСИМУМ(ДокументНачисления)
	|ПО
	|	МКД";
	Возврат Текст;
КонецФункции

#КонецОбласти

#Область ЗакрытьПериодДляРедактирования_ВспомогательныеФункции

Функция ДокуметЗакрытияПериода(Организация,ПериодНачисления,Район)
	
	Запрос  		= Новый Запрос;
	Запрос.УстановитьПараметр("ПериодНачисления",	ПериодНачисления);
	Запрос.УстановитьПараметр("Организация",		Организация);
	Запрос.УстановитьПараметр("Район",				Район);
	Запрос.Текст 	="ВЫБРАТЬ ПЕРВЫЕ 1
	|	энргЗакрытиеПериода.Ссылка
	|ИЗ
	|	Документ.энргЗакрытиеПериода КАК энргЗакрытиеПериода
	|ГДЕ
	|	НЕ энргЗакрытиеПериода.ПометкаУдаления
	|	И энргЗакрытиеПериода.Район = &Район
	|	И энргЗакрытиеПериода.Организация = &Организация
	|	И энргЗакрытиеПериода.ПериодНачисления = &ПериодНачисления";
	Результат  		= Запрос.Выполнить();
	Выборка  		= Результат.Выбрать();
	Если Выборка.Следующий() тогда
		Возврат  Выборка.Ссылка;
	КонецЕсли;
	Возврат Документы.энргЗакрытиеПериода.ПустаяСсылка();	
КонецФункции

#КонецОбласти

#Область РаспредениеОбъемаМКД_ВспомогательныеПроцедуры

Процедура РаспределитьОбъемПоУслугеМКД(ПериодНачисления, Организация, Район, МКД, Услуга, ГраницыПериода, ЗначенияТарифов, ДанныеПоУслуге, ДокументОбъект, РаспределениеОбъемаПоУслугам, НаборОтрицательныйОбъемРаспределения, НаборЗаписей, НаборЗаписейПомещение,НаборЗаписейНП, НаборЗаписейСверхНорма, ИспользоватьТарифРек)
	
	// УсловиеОтопления - если есть начисления по прибору
	// и всего абонентов = всего с прибором
	ПустаяТочкаУчета 										= Справочники.энргТочкиУчета.ПустаяСсылка();
	ВидНачисления 											= Перечисления.энргВидыНачислений.Начисление;
	
	РаспределениеПоАбонентам 								= Новый Соответствие;
	 	
	ЕстьПотреблениеПоПрибору 								= ДанныеПоУслуге.ПоказанияПредоставлены <> 0 или НЕ ДанныеПоУслуге.ОбъемПоПрибору = 0;	
	ТочностьОбъемаНачислений 								= Метаданные.РегистрыНакопления.энргОбъемНачислений.Ресурсы.ОбъемУслуги.Тип.КвалификаторыЧисла.РазрядностьДробнойЧасти;
	НазначениеПрибораУчета 									= ДанныеПоУслуге.НазначениеПрибораУчета;
	// TODO
	// FIX ME
	// Добавить распределение в разбивки тарифных зон
	//НадоРаспределитьПоФакту									= ДанныеПоУслуге.ОбъемПотребленныйПоПрибору + ДанныеПоУслуге.ОбъемПотребленныйБезПрибора;
	
	Если ДанныеПоУслуге.НеНачислятьУслугуАбонентам Тогда
		НадоРаспределить									= ДанныеПоУслуге.ОбъемПотребленныйПоПрибору + ДанныеПоУслуге.ОбъемПотребленныйБезПрибора;
	Иначе
		НадоРаспределить 									= ДанныеПоУслуге.ОбъемПоПрибору + ДанныеПоУслуге.ОбъемБезПрибора;
	КонецЕсли;
	ВидНачисления 											= Перечисления.энргВидыНачислений.НачислениеОДН;	
	СпособНачисленияОДН 									= Перечисления.энргСпособНачислений.ПустаяСсылка();
	ОбщийОбъемНачислений 									= ДанныеПоУслуге.ОбщийОбъемНачислений;
	ОбщийОбъемНачисленийПомещений 							= ДанныеПоУслуге.ОбщийОбъемНачисленийПомещений;
	
	Если ДанныеПоУслуге.КорректироватьИндивидуальныйОбъемСУчетомОДПУ и ЕстьПотреблениеПоПрибору И ДанныеПоУслуге.ВсеПоПрибору Тогда
		ОсталосьРаспределить 								= НадоРаспределить - ДанныеПоУслуге.ПотреблениеАбонентов; 		
		СпособНачисленияОДН 								= ДанныеПоУслуге.СпособНачисленияМКД;
	ИначеЕсли ДанныеПоУслуге.КорректироватьИндивидуальныйОбъемСУчетомОДПУ и НЕ ЕстьПотреблениеПоПрибору Тогда
		// Списываем начисленный индивидуальный объем по прибору учета
		Для Каждого СтрокаНачисленийАбонента ИЗ ДанныеПоУслуге.ОбъемПоПриборуКорректировать Цикл 
			Если ЗначениеЗаполнено(СтрокаНачисленийАбонента.Абонент) Тогда
				яНабор 										= НаборЗаписей;
				яНаборОбщий 								= ОбщийОбъемНачислений;
			Иначе
				яНабор 										= НаборЗаписейПомещение;
				яНаборОбщий 								= ОбщийОбъемНачисленийПомещений;
			КонецЕсли;			
			
			Если СтрокаНачисленийАбонента.СпособНачисления  = Перечисления.энргСпособНачислений.ПоПриборам 
				ИЛИ СтрокаНачисленийАбонента.СпособНачисления  = Перечисления.энргСпособНачислений.НачислениеПоСреднему Тогда
				Если НЕ СтрокаНачисленийАбонента.ОбъемУслуги = 0 ИЛИ НЕ СтрокаНачисленийАбонента.Сумма = 0 Тогда
					СтрокаНабора  				= яНабор.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаНабора, СтрокаНачисленийАбонента,,"ОбъемУслугиПотребленный");
					СтрокаНабора.Распределение 				= Истина;
					СтрокаНабора.ОбъемУслуги 				= -СтрокаНабора.ОбъемУслуги;
					СтрокаНабора.Сумма 						= -СтрокаНабора.Сумма;
					СтрокаНабора.Период 					= ГраницыПериода.ЗавершениеОП-1;
					ЗаполнитьЗначенияСвойств(яНаборОбщий.Добавить(),СтрокаНабора,,"ОбъемУслугиПотребленный");
				КонецЕсли;
				
				Если СтрокаНачисленийАбонента.ПомещениеРодитель = СтрокаНачисленийАбонента.Помещение Тогда
					// добавляем новую строку начислений
					СтрокаНабора  							= яНабор.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаНабора, СтрокаНачисленийАбонента,,"ОбъемУслугиПотребленный");
					СтрокаНабора.Распределение 				= Истина;
					СтрокаНабора.СпособНачисления 			= Перечисления.энргСпособНачислений.ПоНормативу;
					ОбъемУслуги 							= СтрокаНабора.НормаПотребления * СтрокаНабора.ЗначениеПлощади * ((СтрокаНабора.ПлощадьАбонентов - СтрокаНабора.ПлощадьСобственнаяПоставка) / (СтрокаНабора.ПлощадьАбонентов - СтрокаНабора.ПлощадьСобственнаяПоставка + СтрокаНабора.ПлощадьМОП)) * (СтрокаНабора.КонецПериода - СтрокаНабора.НачалоПериода) / (ГраницыПериода.ДнейВПериоде * 86400);
					СтрокаНабора.ОбъемУслуги 				= ОбъемУслуги;
					СтрокаНабора.Сумма 						= СтрокаНабора.ОбъемУслуги * СтрокаНабора.ЗначениеТарифа;
					СтрокаНабора.Период 					= ГраницыПериода.ЗавершениеОП-1;
					ЗаполнитьЗначенияСвойств(яНаборОбщий.Добавить(),СтрокаНабора,,"ОбъемУслугиПотребленный");
					РазделенныеЛицевыеСчета 				= ДанныеПоУслуге.РазделенныеЛицевыеСчета;
					
					Если НЕ РазделенныеЛицевыеСчета[СтрокаНачисленийАбонента.Помещение] = Неопределено Тогда
						ОсталосьВнутриПомещения 			= ОбъемУслуги;
						ПомещенияПотомки					= РазделенныеЛицевыеСчета[СтрокаНачисленийАбонента.Помещение];
						СуммаПлощадейПомещения 				= 0;
						Для Каждого ПомещениеПотомок Из ПомещенияПотомки Цикл
							ДанныеПомещения  				= ПомещениеПотомок.Значение[Услуга];
							СуммаПлощадейПомещения 			= СуммаПлощадейПомещения + ДанныеПомещения.Значениеплощади; 
						КонецЦикла;		
						
						ПереасчитатьСтроки 					= Новый Массив;
						
						Для Каждого ПомещениеПотомок Из ПомещенияПотомки Цикл
							ДанныеПомещения  				= ПомещениеПотомок.Значение[Услуга];				                 		
							
							ХэшСтрокиТарифа 				= ХэшСтрокиТарифа(ДанныеПомещения.ТарифнаяГруппа,Услуга,ДанныеПомещения.Поставщик,Справочники.энргТарифныеЗоны.БезРазбивки); 
							ЗначениеТарифа 					= ?(ЗначенияТарифов[ХэшСтрокиТарифа] = Неопределено, Новый Структура("Значение", 0), ЗначенияТарифов[ХэшСтрокиТарифа]);
							СтрокаНабора  					= НаборЗаписей.Добавить();
							ЗаполнитьЗначенияСвойств(СтрокаНабора, СтрокаНачисленийАбонента,,"ОбъемУслугиПотребленный");
							СтрокаНабора.Распределение 		= Истина;
							СтрокаНабора.Период 			= ГраницыПериода.ЗавершениеОП-1;
							СтрокаНабора.Помещение			= ПомещениеПотомок.Ключ;
							СтрокаНабора.Абонент			= ДанныеПомещения.Абонент;						
							
							Если ДанныеПомещения.СпособРаспределенияОбъемаПомещения = Перечисления.энргСпособыРаспределенияОбъема.ФиксированныйОбъем Тогда
								СтрокаНабора.ОбъемУслуги 	= ДанныеПомещения.ФиксированныйОбъемПотребления;
								ОсталосьВнутриПомещения 	= ОсталосьВнутриПомещения - СтрокаНабора.ОбъемУслуги;
							ИначеЕсли ДанныеПомещения.СпособРаспределенияОбъемаПомещения = Перечисления.энргСпособыРаспределенияОбъема.ДолевоеРаспределение Тогда
								СтрокаНабора.ОбъемУслуги = ОбъемУслуги * ДанныеПомещения.ДоляПотребленияЧислитель / ДанныеПомещения.ДоляПотребленияЗнаменатель;
								ОсталосьВнутриПомещения 	= ОсталосьВнутриПомещения - СтрокаНабора.ОбъемУслуги;
							ИначеЕсли ДанныеПомещения.СпособРаспределенияОбъемаПомещения = Перечисления.энргСпособыРаспределенияОбъема.Остаток Тогда	
								ПереасчитатьСтроки.Добавить(НаборЗаписей.Индекс(СтрокаНабора));
							Иначе
								Если ЗначениеЗаполнено(ДанныеПоУслуге.ВидПлощади) Тогда
									СтрокаНабора.ОбъемУслуги = ?(НЕ СуммаПлощадейПомещения = 0, ОбъемУслуги * ДанныеПомещения.ЗначениеПлощади / СуммаПлощадейПомещения, 0);
								Иначе
									СтрокаНабора.ОбъемУслуги = ?(НЕ СтрокаНачисленийАбонента.КоличествоЖильцов = 0, ОбъемУслуги * ДанныеПомещения.КоличествоПроживающих / СтрокаНачисленийАбонента.КоличествоЖильцов, 0);
								КонецЕсли;
								ОсталосьВнутриПомещения 	= ОсталосьВнутриПомещения - СтрокаНабора.ОбъемУслуги;
							КонецЕсли;											
							
							СтрокаНабора.Сумма				= СтрокаНабора.ОбъемУслуги * ЗначениеТарифа.Значение;				
						КонецЦикла;
						
						Если ПереасчитатьСтроки.Количество() > 0 Тогда
							Для Сч = 0 По ПереасчитатьСтроки.ВГраница() Цикл
								СтрокаНабора 				= НаборЗаписей.Получить(ПереасчитатьСтроки[Сч]);
								СтрокаНабора.ОбъемУслуги 	= ОсталосьВнутриПомещения;
								СтрокаНабора.Сумма			= СтрокаНабора.ОбъемУслуги * ЗначениеТарифа.Значение;
							КонецЦикла;						
						КонецЕсли;					
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;			
		КонецЦикла;
		
		Для Каждого СтрокаНачисленийНП ИЗ ДанныеПоУслуге.ОбъемПоПриборуНПКорректировать Цикл 
			Если ЗначениеЗаполнено(СтрокаНачисленийНП.ОбъектРасчета) Тогда
				яНабор 										= НаборЗаписейНП;
				яНаборОбщий 								= ОбщийОбъемНачислений;
			Иначе
				яНабор 										= НаборЗаписейПомещение;
				яНаборОбщий 								= ОбщийОбъемНачисленийПомещений;
			КонецЕсли;			
			
			Если СтрокаНачисленийНП.СпособНачисления  = Перечисления.энргСпособНачислений.ПоПриборам 
				ИЛИ СтрокаНачисленийНП.СпособНачисления  = Перечисления.энргСпособНачислений.НачислениеПоСреднему Тогда
				Если НЕ СтрокаНачисленийНП.ОбъемУслуги = 0 Тогда
					СтрокаНабора  				= яНабор.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаНабора, СтрокаНачисленийНП,,"ОбъемУслугиПотребленный");
					СтрокаНабора.Распределение 				= Истина;
					СтрокаНабора.ОбъемУслуги 				= -СтрокаНабора.ОбъемУслуги;
					СтрокаНабора.Период 					= ГраницыПериода.ЗавершениеОП-1;
					ЗаполнитьЗначенияСвойств(яНаборОбщий.Добавить(),СтрокаНабора,,"ОбъемУслугиПотребленный");
				КонецЕсли;
				
				
				// добавляем новую строку начислений
				СтрокаНабора  							= яНабор.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаНабора, СтрокаНачисленийНП,,"ОбъемУслугиПотребленный");
				СтрокаНабора.Распределение 				= Истина;
				СтрокаНабора.СпособНачисления 			= Перечисления.энргСпособНачислений.ПоНормативу;
				ОбъемУслуги 							= СтрокаНабора.НормаПотребления * СтрокаНабора.ЗначениеПлощади * ((СтрокаНабора.ПлощадьАбонентов - СтрокаНабора.ПлощадьСобственнаяПоставка) / (СтрокаНабора.ПлощадьАбонентов - СтрокаНабора.ПлощадьСобственнаяПоставка + СтрокаНабора.ПлощадьМОП)) * (СтрокаНабора.КонецПериода - СтрокаНабора.НачалоПериода) / (ГраницыПериода.ДнейВПериоде * 86400);

				СтрокаНабора.ОбъемУслуги 				= ОбъемУслуги;
				СтрокаНабора.Период 					= ГраницыПериода.ЗавершениеОП-1;
				ЗаполнитьЗначенияСвойств(яНаборОбщий.Добавить(),СтрокаНабора,,"ОбъемУслугиПотребленный");
				
			КонецЕсли;			
		КонецЦикла;
		
		// просто распределяем объем по нормативу
		ОсталосьРаспределить 								= НадоРаспределить;
		
		СпособНачисленияОДН 								= Перечисления.энргСпособНачислений.ПоНормативу;
	ИначеЕсли ДанныеПоУслуге.КорректироватьИндивидуальныйОбъемСУчетомОДПУ и ДанныеПоУслуге.ВсегоПлощадьАбонентовПоПрибору > 0 Тогда
		// Высчитываем потребление приборников на 1м2
		ОбъемНаКвМ 											= 0; 		
		СпособНачисленияОДН 								= Перечисления.энргСпособНачислений.ПоПриборам;
		Если  ДанныеПоУслуге.ВсегоПлощадьАбонентовПоПрибору <> 0 Тогда
			ОбъемНаКвМ 										= ДанныеПоУслуге.ПотреблениеАбонентовПоПрибору / ДанныеПоУслуге.ВсегоПлощадьАбонентовПоПрибору;			
		КонецЕсли;
		// Высчитываем "виртуальный" расход абонентов без прибора и корректируем объем потребления абонентов без прибора
		ПотреблениеАбонентов								= ДанныеПоУслуге.ПотреблениеАбонентовПоПрибору;
		Для Каждого СтрокаНачисленийАбонента ИЗ ДанныеПоУслуге.НачисленияАбонентовБезПрибора Цикл
			// снимаем начисленный ранее объем
			ЗначениеПлощади 								= ДанныеПоУслуге.ПлощадиАбонентов[СтрокаНачисленийАбонента.Помещение];
			ЕстьСуммаНачислений 							= Ложь;
			Если ЗначениеЗаполнено(СтрокаНачисленийАбонента.Абонент) Тогда
				яНабор 										= НаборЗаписей;
				яНаборОбщий 								= ОбщийОбъемНачислений;
				ЕстьСуммаНачислений 						= Истина;
			Иначе
				яНабор 										= НаборЗаписейПомещение;
				яНаборОбщий 								= ОбщийОбъемНачисленийПомещений;
			КонецЕсли;
			
			ИндексАбонента 									= Неопределено;
			
			// ищем строку в массиве
			Для Сч = 0 По ДанныеПоУслуге.АбонентыДляРаспределения.ВГраница() Цикл
				Если ДанныеПоУслуге.АбонентыДляРаспределения[Сч].Абонент = СтрокаНачисленийАбонента.Абонент или (ЗначениеЗаполнено(СтрокаНачисленийАбонента.ПомещениеРодитель) и ДанныеПоУслуге.АбонентыДляРаспределения[Сч].Помещение = СтрокаНачисленийАбонента.ПомещениеРодитель) Тогда
					ИндексАбонента 							= Сч;
					Прервать;
				КонецЕсли;					
			КонецЦикла;
			
			СоцПлощадь = 0;	
			
			Если НЕ СтрокаНачисленийАбонента.ОбъемУслуги = 0 ИЛИ НЕ СтрокаНачисленийАбонента.Сумма = 0 Тогда
				СтрокаНабора  								= яНабор.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаНабора, СтрокаНачисленийАбонента,,"ОбъемУслугиПотребленный");
				СтрокаНабора.Период 						= ГраницыПериода.ЗавершениеОП-1;
				СтрокаНабора.Распределение 					= Истина;
				СтрокаНабора.ОбъемУслуги 					= -СтрокаНабора.ОбъемУслуги;
				СтрокаНабора.ОбъемУслугиСоцНорма 			= -СтрокаНабора.ОбъемУслугиСоцНорма;
				СтрокаНабора.ОбъемУслугиПотребленный 		= 0;
				
				Если ЕстьСуммаНачислений Тогда
					СтрокаНабора.Сумма 						= -СтрокаНабора.Сумма;
				КонецЕсли;
				
				ДанныеАбонента 								= ДанныеПоУслуге.АбонентыДляРаспределения[ИндексАбонента];
				ДанныеАбонента.ОбъемУслуги 					= ДанныеАбонента.ОбъемУслуги + СтрокаНабора.ОбъемУслуги;
				ДанныеАбонента.ОбъемУслугиСоцНорма 			= ДанныеАбонента.ОбъемУслугиСоцНорма + СтрокаНабора.ОбъемУслугиСоцНорма;
				СоцПлощадь 									= ДанныеАбонента.СоцПлощадь;
				
				ЗаполнитьЗначенияСвойств(яНаборОбщий.Добавить(),СтрокаНабора,,"ОбъемУслугиПотребленный");
			КонецЕсли;
			
			Если СтрокаНачисленийАбонента.СверхНорматива Тогда
				Продолжить;
			КонецЕсли;
				
			Если СтрокаНачисленийАбонента.ПомещениеРодитель = СтрокаНачисленийАбонента.Помещение и ЗначениеЗаполнено(СтрокаНачисленийАбонента.Абонент) Тогда
				
				КоэфДлительностиПериода 				= (СтрокаНачисленийАбонента.КонецПериода - СтрокаНачисленийАбонента.НачалоПериода)/(ГраницыПериода.ЗавершениеОП - ГраницыПериода.НачалоОП);
				ОбъемУслуги 							= Окр(ЗначениеПлощади * ОбъемНаКвМ * КоэфДлительностиПериода,ТочностьОбъемаНачислений);
				ПотреблениеАбонентов 					= ПотреблениеАбонентов + ОбъемУслуги;		
				
				СуммаПлощадейПомещения 					= 0;
				
				РазбитьПоСоцНорме(яНабор,яНаборОбщий,НаборЗаписей,СтрокаНачисленийАбонента,ОбъемУслуги,СоцПлощадь,СпособНачисленияОДН,ГраницыПериода,ДанныеПоУслуге,ЕстьСуммаНачислений,ЗначенияТарифов,Услуга,ПотреблениеАбонентов,СуммаПлощадейПомещения,Ложь);
				
				
				//ЗначениеПлощади 							= ДанныеПоУслуге.ПлощадиАбонентов[СтрокаНачисленийАбонента.Помещение];			
				//СтрокаНабора  								= яНабор.Добавить();
				//ЗаполнитьЗначенияСвойств(СтрокаНабора, СтрокаНачисленийАбонента,,"ОбъемУслугиПотребленный");
				//СтрокаНабора.Распределение 					= Истина;
				//СтрокаНабора.СпособНачисления				= СпособНачисленияОДН;
				//КоэфДлительностиПериода 					= (СтрокаНачисленийАбонента.КонецПериода - СтрокаНачисленийАбонента.НачалоПериода)/(День(ГраницыПериода.ЗавершениеОП-1) * 86400);
				////ОбъемУслуги 								= СтрокаНабора.НормаПотребления * СтрокаНабора.ЗначениеПлощади * ((СтрокаНабора.ПлощадьАбонентов - СтрокаНабора.ПлощадьСобственнаяПоставка) / (СтрокаНабора.ПлощадьАбонентов - СтрокаНабора.ПлощадьСобственнаяПоставка + СтрокаНабора.ПлощадьМОП)) * (СтрокаНабора.КонецПериода - СтрокаНабора.НачалоПериода) / (ГраницыПериода.ДнейВПериоде * 86400);
				//ОбъемУслуги 								= ЗначениеПлощади * ОбъемНаКвМ * КоэфДлительностиПериода;
				//
				//СтрокаНабора.ОбъемУслуги 					= ОбъемУслуги;
				//СтрокаНабора.ОбъемУслугиПотребленный 		= 0;
				//СтрокаНабора.ОбъемУслугиСоцНорма 			= Мин(СтрокаНабора.ЗначениеСоциальнойНормы, ОбъемУслуги);
				//
				//СтрокаНабора.Период 						= ГраницыПериода.ЗавершениеОП-1;			
				//ПотреблениеАбонентов 						= ПотреблениеАбонентов + СтрокаНабора.ОбъемУслуги;
				//
				////отэк
				////СтрокаНабора  								= яНабор.Добавить();
				////ЗаполнитьЗначенияСвойств(СтрокаНабора, СтрокаНачисленийАбонента,,"ОбъемУслугиПотребленный");
				////СтрокаНабора.Распределение 					= Истина;
				////СтрокаНабора.СпособНачисления				= СпособНачисленияОДН;
				////КоэфДлительностиПериода 					= (СтрокаНачисленийАбонента.КонецПериода - СтрокаНачисленийАбонента.НачалоПериода)/(День(ГраницыПериода.ЗавершениеОП-1) * 86400);
				////ОбъемУслуги 								= СтрокаНабора.ПлощадьМОП*СтрокаНабора.НормаПотребления * СтрокаНабора.ЗначениеПлощади * ((СтрокаНабора.ПлощадьАбонентов - СтрокаНабора.ПлощадьСобственнаяПоставка) / (СтрокаНабора.ПлощадьАбонентов - СтрокаНабора.ПлощадьСобственнаяПоставка + СтрокаНабора.ПлощадьМОП)) * (СтрокаНабора.КонецПериода - СтрокаНабора.НачалоПериода) / (ГраницыПериода.ДнейВПериоде * 86400) / СтрокаНабора.ПлощадьАбонентов;
				//////ОбъемУслуги 								= ЗначениеПлощади * ОбъемНаКвМ * КоэфДлительностиПериода;
				////
				////СтрокаНабора.ОбъемУслуги 					= ОбъемУслуги;
				////СтрокаНабора.ОбъемУслугиПотребленный 		= 0;
				////СтрокаНабора.ОбъемУслугиСоцНорма 			= Мин(СтрокаНабора.ЗначениеСоциальнойНормы, ОбъемУслуги);
				////
				////СтрокаНабора.Период 						= ГраницыПериода.ЗавершениеОП-1;			
				////ПотреблениеАбонентов 						= ПотреблениеАбонентов + СтрокаНабора.ОбъемУслуги;
				////отэк

				////---
				//
				//
				//
				//Если СтрокаНабора.ОбъемУслуги > СтрокаНабора.ОбъемУслугиСоцНорма и СтрокаНабора.ОбъемУслугиСоцНорма > 0 Тогда
				//	ОбъемСверхНормы 						= СтрокаНабора.ОбъемУслуги - СтрокаНабора.ОбъемУслугиСоцНорма; 
				//	СтрокаНабора.ОбъемУслуги 				= ОбъемСверхНормы;
				//	
				//	СтрокаСверхНормы 						= яНабор.Добавить();
				//	ЗаполнитьЗначенияСвойств(СтрокаСверхНормы, СтрокаНабора,,"ОбъемУслугиПотребленный");
				//	СтрокаСверхНормы.ОбъемУслуги 			= ОбъемСверхНормы;
				//	СтрокаСверхНормы.СверхНорматива 		= Истина;
				//	СтрокаСверхНормы.ЗначениеТарифа 		= СтрокаСверхНормы.ЗначениеТарифаСверхНорматива;
				//	СтрокаСверхНормы.ОбъемУслугиСоцНорма 	= 0;
				//	СтрокаСверхНормы.ОбъемУслугиПотребленный= 0;
				//	
				//	Если ЕстьСуммаНачислений Тогда
				//		СтрокаСверхНормы.Сумма 				= СтрокаНабора.ОбъемУслуги * СтрокаНачисленийАбонента.ЗначениеТарифа;
				//	КонецЕсли;
				//	ЗаполнитьЗначенияСвойств(яНаборОбщий.Добавить(),СтрокаСверхНормы,,"ОбъемУслугиПотребленный");
				//КонецЕсли;				
				//
				//ДанныеАбонента 								= ДанныеПоУслуге.АбонентыДляРаспределения[ИндексАбонента];
				//ДанныеАбонента.ОбъемУслугиСоцНорма 			= ДанныеАбонента.ОбъемУслугиСоцНорма + СтрокаНабора.ОбъемУслугиСоцНорма;								
				////---
				//
				//Если ЕстьСуммаНачислений Тогда
				//	СтрокаНабора.Сумма 						= СтрокаНабора.ОбъемУслуги * СтрокаНачисленийАбонента.ЗначениеТарифа;
				//КонецЕсли;
				//ЗаполнитьЗначенияСвойств(яНаборОбщий.Добавить(),СтрокаНабора,,"ОбъемУслугиПотребленный");
				//
				//РазделенныеЛицевыеСчета 					= ДанныеПоУслуге.РазделенныеЛицевыеСчета;
				//
				//Если НЕ РазделенныеЛицевыеСчета[СтрокаНачисленийАбонента.Помещение] = Неопределено Тогда
				//	ОсталосьВнутриПомещения 				= ОбъемУслуги;
				//	ПомещенияПотомки						= РазделенныеЛицевыеСчета[СтрокаНачисленийАбонента.Помещение];
				//	СуммаПлощадейПомещения 					= 0;
				//	
				//	Для Каждого ПомещениеПотомок Из ПомещенияПотомки Цикл
				//		ДанныеПомещения  					= ПомещениеПотомок.Значение[Услуга];
				//		СуммаПлощадейПомещения 				= СуммаПлощадейПомещения + ДанныеПомещения.Значениеплощади; 
				//	КонецЦикла;		
				//	
				//	ПереасчитатьСтроки 						= Новый Массив;
				//	
				//	Для Каждого ПомещениеПотомок Из ПомещенияПотомки Цикл
				//		ДанныеПомещения  					= ПомещениеПотомок.Значение[Услуга];				                 		
				//		
				//		ХэшСтрокиТарифа 					= ХэшСтрокиТарифа(ДанныеПомещения.ТарифнаяГруппа,Услуга,ДанныеПомещения.Поставщик,Справочники.энргТарифныеЗоны.БезРазбивки); 
				//		ЗначениеТарифа 						= ?(ЗначенияТарифов[ХэшСтрокиТарифа] = Неопределено, Новый Структура("Значение", 0), ЗначенияТарифов[ХэшСтрокиТарифа]);
				//		СтрокаНабора  						= НаборЗаписей.Добавить();
				//		ЗаполнитьЗначенияСвойств(СтрокаНабора, СтрокаНачисленийАбонента,,"ОбъемУслугиПотребленный");
				//		СтрокаНабора.Распределение 			= Истина;
				//		СтрокаНабора.СпособНачисления		= СпособНачисленияОДН;
				//		СтрокаНабора.Период 				= ГраницыПериода.ЗавершениеОП-1;
				//		СтрокаНабора.Помещение				= ПомещениеПотомок.Ключ;
				//		СтрокаНабора.Абонент				= ДанныеПомещения.Абонент;						
				//		
				//		Если ДанныеПомещения.СпособРаспределенияОбъемаПомещения = Перечисления.энргСпособыРаспределенияОбъема.ФиксированныйОбъем Тогда
				//			СтрокаНабора.ОбъемУслуги 		= ДанныеПомещения.ФиксированныйОбъемПотребления;
				//			ОсталосьВнутриПомещения 		= ОсталосьВнутриПомещения - СтрокаНабора.ОбъемУслуги;
				//		ИначеЕсли ДанныеПомещения.СпособРаспределенияОбъемаПомещения = Перечисления.энргСпособыРаспределенияОбъема.ДолевоеРаспределение Тогда
				//			СтрокаНабора.ОбъемУслуги = ОбъемУслуги * ДанныеПомещения.ДоляПотребленияЧислитель / ДанныеПомещения.ДоляПотребленияЗнаменатель;
				//			ОсталосьВнутриПомещения 		= ОсталосьВнутриПомещения - СтрокаНабора.ОбъемУслуги;
				//		ИначеЕсли ДанныеПомещения.СпособРаспределенияОбъемаПомещения = Перечисления.энргСпособыРаспределенияОбъема.Остаток Тогда	
				//			ПереасчитатьСтроки.Добавить(НаборЗаписей.Индекс(СтрокаНабора));
				//		Иначе
				//			Если ЗначениеЗаполнено(ДанныеПоУслуге.ВидПлощади) Тогда
				//				СтрокаНабора.ОбъемУслуги 	= ?(НЕ СуммаПлощадейПомещения = 0, ОбъемУслуги * ДанныеПомещения.ЗначениеПлощади / СуммаПлощадейПомещения, 0);
				//			Иначе
				//				СтрокаНабора.ОбъемУслуги 	= ?(НЕ СтрокаНачисленийАбонента.КоличествоЖильцов = 0, ОбъемУслуги * ДанныеПомещения.КоличествоПроживающих / СтрокаНачисленийАбонента.КоличествоЖильцов, 0);
				//			КонецЕсли;
				//			ОсталосьВнутриПомещения 		= ОсталосьВнутриПомещения - СтрокаНабора.ОбъемУслуги;
				//		КонецЕсли;											
				//		
				//		СтрокаНабора.Сумма					= СтрокаНабора.ОбъемУслуги * ЗначениеТарифа.Значение;				
				//	КонецЦикла;
				//	
				//	Если ПереасчитатьСтроки.Количество() > 0 Тогда
				//		Для Сч = 0 По ПереасчитатьСтроки.ВГраница() Цикл
				//			СтрокаНабора 					= НаборЗаписей.Получить(ПереасчитатьСтроки[Сч]);
				//			СтрокаНабора.ОбъемУслуги 		= ОсталосьВнутриПомещения;
				//			СтрокаНабора.Сумма				= СтрокаНабора.ОбъемУслуги * ЗначениеТарифа.Значение;
				//		КонецЦикла;						
				//	КонецЕсли;					
				//КонецЕсли;
			КонецЕсли;			
		КонецЦикла;
		
		//объем потребления НП без прибора
		Для Каждого СтрокаНачисленийНП ИЗ ДанныеПоУслуге.НачисленияНПБезПрибора Цикл
			// снимаем начисленный ранее объем
			ЗначениеПлощади 								= ДанныеПоУслуге.ПлощадиАбонентов[СтрокаНачисленийНП.ОбъектРасчета];
			ЕстьСуммаНачислений 							= Ложь;
			Если ЗначениеЗаполнено(СтрокаНачисленийНП.ОбъектРасчета) Тогда
				яНабор 										= НаборЗаписейНП;
				яНаборОбщий 								= ОбщийОбъемНачислений;
				ЕстьСуммаНачислений 						= Истина;
			Иначе
				яНабор 										= НаборЗаписейПомещение;
				яНаборОбщий 								= ОбщийОбъемНачисленийПомещений;
			КонецЕсли;		
			
			Если НЕ СтрокаНачисленийНП.ОбъемУслуги = 0 Тогда
				СтрокаНабора  								= яНабор.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаНабора, СтрокаНачисленийНП,,"ОбъемУслугиПотребленный");
				СтрокаНабора.Период 						= ГраницыПериода.ЗавершениеОП-1;
				СтрокаНабора.Распределение 					= Истина;
				СтрокаНабора.ОбъемУслуги 					= -СтрокаНабора.ОбъемУслуги;				
				ЗаполнитьЗначенияСвойств(яНаборОбщий.Добавить(),СтрокаНабора,,"ОбъемУслугиПотребленный");
			КонецЕсли;
			
			
			СтрокаНабора  								= яНабор.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаНабора, СтрокаНачисленийНП,,"ОбъемУслугиПотребленный");
			СтрокаНабора.Распределение 					= Истина;
			СтрокаНабора.СпособНачисления				= СпособНачисленияОДН;
			КоэфДлительностиПериода 					= (СтрокаНачисленийНП.КонецПериода - СтрокаНачисленийНП.НачалоПериода)/(ГраницыПериода.ЗавершениеОП - ГраницыПериода.НачалоОП);
			ОбъемУслуги 								= ЗначениеПлощади * ОбъемНаКвМ * КоэфДлительностиПериода; 			
			СтрокаНабора.ОбъемУслуги 					= ОбъемУслуги;			
			СтрокаНабора.ОбъемУслугиПотребленный 		= 0;			
			СтрокаНабора.Период 						= ГраницыПериода.ЗавершениеОП-1;			
			ПотреблениеАбонентов 						= ПотреблениеАбонентов + СтрокаНабора.ОбъемУслуги;
						
			ЗаполнитьЗначенияСвойств(яНаборОбщий.Добавить(),СтрокаНабора,,"ОбъемУслугиПотребленный");
			
		КонецЦикла;

		
		ОсталосьРаспределить 								= НадоРаспределить - ПотреблениеАбонентов;		
	ИначеЕсли ДанныеПоУслуге.КорректироватьИндивидуальныйОбъемСУчетомОДПУ и ЕстьПотреблениеПоПрибору Тогда
		ОтапливаемаяПлощадь									= ДанныеПоУслуге.ВсегоПлощадьАбонентов - ДанныеПоУслуге.ВсегоПлощадьАбонентовСобственнаяПоставка + ДанныеПоУслуге.ПлощадьМОП;
		Если ДанныеПоУслуге.НеНачислятьУслугуАбонентам Тогда
			ОбъемНаКвМ 										= ?(ОтапливаемаяПлощадь = 0, 0, ДанныеПоУслуге.ОбъемПотребленныйПоПрибору / ОтапливаемаяПлощадь);
		Иначе
			ОбъемНаКвМ 										= ?(ОтапливаемаяПлощадь = 0, 0, ДанныеПоУслуге.ОбъемПоПрибору / ОтапливаемаяПлощадь);
		КонецЕсли; 	
		
		СпособНачисленияОДН 								= Перечисления.энргСпособНачислений.ПоПриборам;
		ПотреблениеАбонентов								= 0; 		
		
		ПомещениеНачислили 									= Новый Соответствие;
		
		Для Каждого СтрокаНачисленийАбонента ИЗ ДанныеПоУслуге.НачисленияАбонентовБезПрибора Цикл
			
				ЕстьСуммаНачислений 						= Ложь;
				Если ЗначениеЗаполнено(СтрокаНачисленийАбонента.Абонент) Тогда
					яНабор 									= НаборЗаписей;
					яНаборОбщий 							= ОбщийОбъемНачислений;
					ЕстьСуммаНачислений 					= Истина;
				Иначе
					яНабор 									= НаборЗаписейПомещение;
					яНаборОбщий 							= ОбщийОбъемНачисленийПомещений;
				КонецЕсли;
				
				ЗначениеПлощади 							= ДанныеПоУслуге.ПлощадиАбонентов[СтрокаНачисленийАбонента.Помещение];
				
				// снимаем начисленный ранее объем
				Если НЕ СтрокаНачисленийАбонента.ОбъемУслуги = 0 ИЛИ НЕ СтрокаНачисленийАбонента.Сумма = 0 Тогда
					СтрокаНабора  								= яНабор.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаНабора, СтрокаНачисленийАбонента,,"ОбъемУслугиПотребленный");
					СтрокаНабора.Распределение 					= Истина;
					СтрокаНабора.ОбъемУслуги 					= -СтрокаНабора.ОбъемУслуги;
					//Снятие объема потребленного при сторнировании объема услуги
					СтрокаНабора.ОбъемУслугиПотребленный 		= 0;
					//Снятие объема потребленного при сторнировании объема услуги
					СтрокаНабора.Период 						= ГраницыПериода.ЗавершениеОП-1;
					Если ЕстьСуммаНачислений Тогда
						СтрокаНабора.Сумма 						= -СтрокаНабора.Сумма;
					КонецЕсли;
					ЗаполнитьЗначенияСвойств(яНаборОбщий.Добавить(),СтрокаНабора,,"ОбъемУслугиПотребленный");
				КонецЕсли;
				  				
				Если СтрокаНачисленийАбонента.СверхНорматива Тогда
					Продолжить;
				КонецЕсли;
				
				Если СтрокаНачисленийАбонента.ПомещениеРодитель = СтрокаНачисленийАбонента.Помещение Тогда
					
					Если Не ПомещениеНачислили[СтрокаНачисленийАбонента.Помещение] = Неопределено Тогда
						Продолжить;
					КонецЕсли;
					
					ИндексАбонента 							= Неопределено;
					
					// ищем строку в массиве
					Для Сч = 0 По ДанныеПоУслуге.АбонентыДляРаспределения.ВГраница() Цикл
						Если ДанныеПоУслуге.АбонентыДляРаспределения[Сч].Абонент = СтрокаНачисленийАбонента.Абонент или (ЗначениеЗаполнено(СтрокаНачисленийАбонента.ПомещениеРодитель) и ДанныеПоУслуге.АбонентыДляРаспределения[Сч].Помещение = СтрокаНачисленийАбонента.ПомещениеРодитель) Тогда
							ИндексАбонента 					= Сч;
							Прервать;
						КонецЕсли;					
					КонецЦикла; 					
					
					КоэфДлительностиПериода 				= 1;
					СоцПлощадь								= 0;
					Если НЕ ИндексАбонента = Неопределено Тогда
						ДатаСостоянияЛицевогоСчета 			= ДанныеПоУслуге.АбонентыДляРаспределения[Сч].ДатаСостоянияЛицевогоСчета;
						СоцПлощадь 							= ДанныеПоУслуге.АбонентыДляРаспределения[Сч].СоцПлощадь;
						Если ЗначениеЗаполнено(ДатаСостоянияЛицевогоСчета) и ДатаСостоянияЛицевогоСчета <= ГраницыПериода.НачалоОП Тогда
							КоэфДлительностиПериода 		= 1;
						ИначеЕсли ЗначениеЗаполнено(ДатаСостоянияЛицевогоСчета) Тогда 
							КоэфДлительностиПериода 		= (ГраницыПериода.НачалоОП - ДатаСостоянияЛицевогоСчета) / (ГраницыПериода.ЗавершениеОП - ГраницыПериода.НачалоОП);
						КонецЕсли;						
					КонецЕсли;					
					
					ОбъемУслуги 							= Окр(ЗначениеПлощади * ОбъемНаКвМ * КоэфДлительностиПериода,ТочностьОбъемаНачислений);
					ПотреблениеАбонентов 					= ПотреблениеАбонентов + ОбъемУслуги;		
					
					СуммаПлощадейПомещения 					= 0; 					
					
					РазбитьПоСоцНорме(яНабор,яНаборОбщий,НаборЗаписей,СтрокаНачисленийАбонента,ОбъемУслуги,СоцПлощадь,СпособНачисленияОДН,ГраницыПериода,ДанныеПоУслуге,ЕстьСуммаНачислений,ЗначенияТарифов,Услуга,ПотреблениеАбонентов,СуммаПлощадейПомещения,Ложь);
					
					ПомещениеНачислили.Вставить(СтрокаНачисленийАбонента.Помещение, Истина);					
				КонецЕсли;
		КонецЦикла;
		
		Для Каждого СтрокаНачисленийНП ИЗ ДанныеПоУслуге.НачисленияНПБезПрибора Цикл
			ЕстьСуммаНачислений 							= Ложь;
					
			Если ЗначениеЗаполнено(СтрокаНачисленийНП.ОбъектРасчета) Тогда
				яНабор 										= НаборЗаписейНП;
				яНаборОбщий 								= ОбщийОбъемНачислений;
				ЕстьСуммаНачислений 						= Истина;
			Иначе
				яНабор 										= НаборЗаписейПомещение;
				яНаборОбщий 								= ОбщийОбъемНачисленийПомещений;
			КонецЕсли;	
			
			ЗначениеПлощади 								= ДанныеПоУслуге.ПлощадиАбонентов[СтрокаНачисленийНП.ОбъектРасчета];
			
			// снимаем начисленный ранее объем
			Если НЕ СтрокаНачисленийНП.ОбъемУслуги = 0  Тогда
				СтрокаНабора  								= яНабор.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаНабора, СтрокаНачисленийНП,,"ОбъемУслугиПотребленный");
				СтрокаНабора.Распределение 					= Истина;
				СтрокаНабора.ОбъемУслуги 					= -СтрокаНабора.ОбъемУслуги;				
				СтрокаНабора.Период 						= ГраницыПериода.ЗавершениеОП-1;
				
				ЗаполнитьЗначенияСвойств(яНаборОбщий.Добавить(),СтрокаНабора,,"ОбъемУслугиПотребленный");
			КонецЕсли;
			
			СтрокаНабора  								= яНабор.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаНабора, СтрокаНачисленийНП,,"ОбъемУслугиПотребленный");
			СтрокаНабора.Распределение 					= Истина;
			СтрокаНабора.СпособНачисления				= СпособНачисленияОДН;
			ОбъемУслуги 								= ЗначениеПлощади * ОбъемНаКвМ;			
			КоэфДлительностиПериода 					= (СтрокаНачисленийНП.КонецПериода - СтрокаНачисленийНП.НачалоПериода)/(ГраницыПериода.ЗавершениеОП - ГраницыПериода.НачалоОП);
			СтрокаНабора.ОбъемУслуги 					= ОбъемУслуги * КоэфДлительностиПериода;			
			СтрокаНабора.ОбъемУслугиПотребленный 		= 0;			
			СтрокаНабора.Период 						= ГраницыПериода.ЗавершениеОП-1;			
			ПотреблениеАбонентов 						= ПотреблениеАбонентов + СтрокаНабора.ОбъемУслуги;			
			ЗаполнитьЗначенияСвойств(яНаборОбщий.Добавить(),СтрокаНабора,,"ОбъемУслугиПотребленный");
			
		КонецЦикла;
		ОсталосьРаспределить 								= НадоРаспределить - ПотреблениеАбонентов;		
	ИначеЕсли ЕстьПотреблениеПоПрибору и НазначениеПрибораУчета = Перечисления.энргНазначениеПУ.МОП Тогда
		ОсталосьРаспределить 								= НадоРаспределить;		
		СпособНачисленияОДН 								= ДанныеПоУслуге.СпособНачисленияМКД;
	ИначеЕсли ЕстьПотреблениеПоПрибору Тогда
		ОсталосьРаспределить 								= НадоРаспределить - ДанныеПоУслуге.ПотреблениеАбонентов;		
		СпособНачисленияОДН 								= ДанныеПоУслуге.СпособНачисленияМКД;
	Иначе
		ОсталосьРаспределить 								= НадоРаспределить; 		
		СпособНачисленияОДН 								= Перечисления.энргСпособНачислений.ПоНормативу;
	КонецЕсли;
	
	СписываемИзОтрицательного 	= Мин(Макс(ОсталосьРаспределить,0), ДанныеПоУслуге.ОтрицательныйОбъемРаспределения.ОбъемУслуги);	
	ПроцентОтОбъема 			= ДанныеПоУслуге.ПроцентРаспределенияОтрицательногоОбъема;
	Если СписываемИзОтрицательного > 0 и ПроцентОтОбъема > 0 Тогда 		
		ОбъемПроцентаКРаспределению = Макс(ОсталосьРаспределить,0) * (ПроцентОтОбъема / 100);
		ОсталосьРаспределить		= ?(ОбъемПроцентаКРаспределению > СписываемИзОтрицательного, Макс(ОсталосьРаспределить,0) - СписываемИзОтрицательного, ОбъемПроцентаКРаспределению);
		СписываемИзОтрицательного	= ОсталосьРаспределить;
		
	Иначе 
		ОсталосьРаспределить 		= ОсталосьРаспределить - СписываемИзОтрицательного;
	КонецЕсли;
	
	Если Не ДанныеПоУслуге.РаспределятьПолностью И Не ДанныеПоУслуге.НеРаспределятьСверхнорматив Тогда
		Если ОсталосьРаспределить > ДанныеПоУслуге.ОбъемУслугиНорматив  Тогда
			СверхнормативМКД 								= ОсталосьРаспределить - ДанныеПоУслуге.ОбъемУслугиНорматив;
			СпособНачисленияОДН 							= Перечисления.энргСпособНачислений.ПоНормативу;
			ОсталосьРаспределить 							= ДанныеПоУслуге.ОбъемУслугиНорматив;
			//добавить сверх в регистр
			
			СтрокаНабора  									= НаборЗаписейСверхНорма.Добавить();
			СтрокаНабора.Период 							= ГраницыПериода.ЗавершениеОП-1;
			СтрокаНабора.Район 								= Район;
			СтрокаНабора.Организация						= Организация;
			СтрокаНабора.МКД								= МКД;
			СтрокаНабора.Услуга								= Услуга;
			СтрокаНабора.ОбъемУслуги						= СверхнормативМКД;			
		КонецЕсли;		
	КонецЕсли;	
	
	Если ОсталосьРаспределить < 0 Тогда
		СтрокаНабораОтрицательный  							= НаборОтрицательныйОбъемРаспределения.ДобавитьПриход();
		СтрокаНабораОтрицательный.Период	 				= ГраницыПериода.ЗавершениеОП-1;
		СтрокаНабораОтрицательный.Организация 				= Организация;
		СтрокаНабораОтрицательный.Район 					= Район;
		СтрокаНабораОтрицательный.МКД 						= МКД;
		СтрокаНабораОтрицательный.Услуга 					= Услуга;
		СтрокаНабораОтрицательный.ПериодНачисления			= ПериодНачисления;
		СтрокаНабораОтрицательный.ОбъемУслуги				= -ОсталосьРаспределить;
		СтрокаНабораОтрицательный.ПериодРасчета 			= ПериодНачисления;
	КонецЕсли;	
	
	Если СписываемИзОтрицательного > 0 Тогда
		ОтрицательныйОбъемРасшифровка 						= ДанныеПоУслуге.ОтрицательныйОбъемРаспределения.Расшифровка;
		ИндексРасшифровки 									= 0;
		ОсталосьСписатьИзОтрицательного 					= СписываемИзОтрицательного;
		Пока ОсталосьСписатьИзОтрицательного > 0 и ИндексРасшифровки < ОтрицательныйОбъемРасшифровка.Количество() Цикл
			Снимаем 										= Мин(ОсталосьСписатьИзОтрицательного,ОтрицательныйОбъемРасшифровка[ИндексРасшифровки].ОбъемУслуги);
			СтрокаНабораОтрицательный  						= НаборОтрицательныйОбъемРаспределения.ДобавитьРасход();
			СтрокаНабораОтрицательный.Период	 			= ГраницыПериода.ЗавершениеОП-1;
			СтрокаНабораОтрицательный.Организация 			= Организация;
			СтрокаНабораОтрицательный.Район 				= Район;
			СтрокаНабораОтрицательный.МКД 					= МКД;
			СтрокаНабораОтрицательный.Услуга 				= Услуга;
			СтрокаНабораОтрицательный.ПериодНачисления		= ОтрицательныйОбъемРасшифровка[ИндексРасшифровки].ПериодНачисленияОбъема;
			СтрокаНабораОтрицательный.ОбъемУслуги			= Снимаем;
			СтрокаНабораОтрицательный.ПериодРасчета 		= ПериодНачисления;			
			ИндексРасшифровки 								= ИндексРасшифровки + 1;
			ОсталосьСписатьИзОтрицательного 				= ОсталосьСписатьИзОтрицательного - Снимаем;
		КонецЦикла;		
	КонецЕсли;	
	
	Если ОсталосьРаспределить <= 0 Тогда
		Возврат;
	КонецЕсли;
		
	АбонентыДляРаспределения 								= ДанныеПоУслуге.АбонентыДляРаспределения;
	Распределили 											= 0; 	
	Для Сч = 0 По АбонентыДляРаспределения.ВГраница() Цикл
		ДанныеАбонента 										= АбонентыДляРаспределения[Сч];		
		Если ЗначениеЗаполнено(ДанныеПоУслуге.ЗависитОтУслуги) Тогда
			ОбъемУслуги 									= 0;			
			Если РаспределениеОбъемаПоУслугам[ДанныеПоУслуге.ЗависитОтУслуги] = Неопределено Тогда
				ОбъемУслуги 								= 0; 
			ИначеЕсли РаспределениеОбъемаПоУслугам[ДанныеПоУслуге.ЗависитОтУслуги][ДанныеАбонента.Абонент] = Неопределено Тогда
				ОбъемУслуги 								= 0;
			Иначе
				ОбъемУслуги 								= РаспределениеОбъемаПоУслугам[ДанныеПоУслуге.ЗависитОтУслуги][ДанныеАбонента.Абонент] * ДанныеПоУслуге.ЗначениеНорматива;
			КонецЕсли;
			
			
		ИначеЕсли Сч = АбонентыДляРаспределения.ВГраница() Тогда
			ОбъемУслуги 									= ОсталосьРаспределить - Распределили;
			
		ИначеЕсли ДанныеПоУслуге.ВсегоПлощадьАбонентов = 0 Тогда
			ВызватьИсключение "Для МКД " + СокрЛП(МКД) + " не задана площадь помещений";	
		Иначе			
			кПлощади 										= ДанныеАбонента.ЗначениеПлощади / ДанныеПоУслуге.ВсегоПлощадьАбонентов;
			ОбъемУслуги 									= ОсталосьРаспределить * кПлощади;
			
		КонецЕсли; 				
		
		РаспределениеПоАбонентам.Вставить(ДанныеАбонента.Абонент, ОбъемУслуги);
		
		
		Если ДанныеАбонента.НП Тогда  
			СтрокаНабора  									= НаборЗаписейНП.Добавить();
			СтрокаНабора.Период 							= ГраницыПериода.ЗавершениеОП-1;
			СтрокаНабора.Район 								= Район;
			СтрокаНабора.Распределение 						= Истина;
			СтрокаНабора.Организация						= Организация;
			СтрокаНабора.МКД 								= МКД;
			СтрокаНабора.Договор							= ДанныеАбонента.Договор;
			СтрокаНабора.ОбъектРасчета						= ДанныеАбонента.Абонент;
			СтрокаНабора.Услуга								= Услуга;
			СтрокаНабора.ТочкаУчета							= ПустаяТочкаУчета;
			СтрокаНабора.ВидНачисления 						= ВидНачисления;
			СтрокаНабора.СпособНачисления 					= СпособНачисленияОДН;			
			СтрокаНабора.Поставщик 							= ДанныеАбонента.Поставщик;
			СтрокаНабора.ПериодРасчета						= ПериодНачисления;
			СтрокаНабора.ПериодНачисления					= ПериодНачисления;
			
			Если ДанныеАбонента.РасчетПоФактическомуОбъему Тогда
				СтрокаНабора.ОбъемУслуги					= 0;
				СтрокаНабора.ОбъемУслугиПотребленный		= ОбъемУслуги;
			Иначе
				СтрокаНабора.ОбъемУслуги					= ОбъемУслуги;
				СтрокаНабора.ОбъемУслугиПотребленный		= 0;
			КонецЕсли;
			
			СтрокаНабора.ЗначениеПлощади 					= ДанныеАбонента.ЗначениеПлощади;
			Распределили 									= Распределили + СтрокаНабора.ОбъемУслуги;
			
						
		ИначеЕсли ЗначениеЗаполнено(ДанныеАбонента.Абонент) Тогда			
			ХэшСтрокиТарифа 								= ХэшСтрокиТарифа(ДанныеАбонента.ТарифнаяГруппа,Услуга,ДанныеАбонента.Поставщик,Справочники.энргТарифныеЗоны.БезРазбивки); 
			ОписаниеЗначениеТарифа 							= ?(ЗначенияТарифов[ХэшСтрокиТарифа] = Неопределено, Новый Структура("Значение,ЗначениеТарифаРЭК, ЗначениеСверхНорматива", 0,0,0), ЗначенияТарифов[ХэшСтрокиТарифа]);
			СтрокаНабора  									= НаборЗаписей.Добавить();
			СтрокаНабора.Период 							= ГраницыПериода.ЗавершениеОП-1;
			СтрокаНабора.Район 								= Район;
			СтрокаНабора.Распределение 						= Истина;
			СтрокаНабора.Организация						= Организация;
			СтрокаНабора.ЧастныйСектор 						= Ложь;
			СтрокаНабора.Строение							= МКД;
			СтрокаНабора.Помещение							= ДанныеАбонента.Помещение;
			СтрокаНабора.Абонент							= ДанныеАбонента.Абонент;
			СтрокаНабора.Услуга								= Услуга;
			СтрокаНабора.ТочкаУчета							= ПустаяТочкаУчета;
			СтрокаНабора.ВидНачисления 						= ВидНачисления;
			СтрокаНабора.НаправлениеИспользованияТУ 		= Справочники.энргНаправлениеИспользованияТочекУчета.ОсновноеНаправление;
			СтрокаНабора.Измеритель 						= Справочники.энргНаправлениеИспользованияТочекУчета.ПустаяСсылка();
			СтрокаНабора.СпособНачисления 					= СпособНачисленияОДН;
			СтрокаНабора.Поставщик 							= ДанныеАбонента.Поставщик;
			СтрокаНабора.ПериодРасчета						= ПериодНачисления;
			СтрокаНабора.ПериодНачисления					= ПериодНачисления;
			СтрокаНабора.ЗначениеПлощади 					= ДанныеАбонента.ЗначениеПлощади;
			СтрокаНабора.ТарифнаяГруппа                     = ДанныеАбонента.ТарифнаяГруппа;
			СтрокаНабора.ТарифнаяЗона                     	= ДанныеАбонента.ТарифнаяЗона;
			
			ЗначениеТарифа 									= ?(НЕ ИспользоватьТарифРек, ОписаниеЗначениеТарифа.Значение, ОписаниеЗначениеТарифа.ЗначениеТарифаРЭК);
			ЗначениеТарифаСверхНормы						= ?(НЕ ИспользоватьТарифРек, ОписаниеЗначениеТарифа.ЗначениеСверхНорматива, ОписаниеЗначениеТарифа.ЗначениеТарифаРЭК);
			
			Распределили 									= Распределили + Окр(ОбъемУслуги,ТочностьОбъемаНачислений);
			
			
			ОбъемУслугиСверхНормы 							= 0;
			Если ДанныеПоУслуге.КорректироватьИндивидуальныйОбъемСУчетомОДПУ Тогда
				ЗначениеСоциальнойНормыРаспределение 	= ОбъемУслуги / ДанныеАбонента.ЗначениеПлощади * ДанныеАбонента.СоцПлощадь;
				
				Если ДанныеАбонента.ОбъемУслуги  + ОбъемУслуги > ЗначениеСоциальнойНормыРаспределение И ДанныеАбонента.ЗначениеСоциальнойНормы >= 0 Тогда
					ОстатокСоцНорма 						= ОбъемУслуги - ЗначениеСоциальнойНормыРаспределение;
					ОбъемРаспределяем 						= ОбъемУслуги;
					Если ОстатокСоцНорма > 0 Тогда 
						ОбъемУслугиСверхНормы						= Мин(ОстатокСоцНорма,ОбъемРаспределяем);
					Иначе
						ОбъемУслугиСверхНормы 						= 0;	
					КонецЕсли;
					ОбъемУслуги 					= ОбъемРаспределяем - Макс(ОстатокСоцНорма, 0);
				КонецЕсли; 			
			КонецЕсли;		
			
			Если НЕ ОбъемУслуги = 0 Тогда 				
				СтрокаНабора.ЗначениеТарифа 				= ЗначениеТарифа;			
				СтрокаНабора.ОбъемУслугиПотребленный		= 0;//ОбъемУслуги;
				Если ДанныеПоУслуге.НеНачислятьУслугуАбонентам Тогда
					СтрокаНабора.ОбъемУслуги 				= 0;
				Иначе
					СтрокаНабора.ОбъемУслуги 				= ОбъемУслуги;
				КонецЕсли;
				СтрокаНабора.Сумма							= СтрокаНабора.ОбъемУслуги * СтрокаНабора.ЗначениеТарифа;
			ИначеЕсли ОбъемУслугиСверхНормы > 0 Тогда
				СтрокаНабора.СверхНорматива 				= Истина;
				СтрокаНабора.ЗначениеТарифа 				= ЗначениеТарифаСверхНормы;			
				СтрокаНабора.ОбъемУслуги					= ОбъемУслугиСверхНормы;
				СтрокаНабора.ОбъемУслугиПотребленный		= 0;
				СтрокаНабора.Сумма							= СтрокаНабора.ОбъемУслуги * СтрокаНабора.ЗначениеТарифа;
			КонецЕсли;
			
			Если НЕ ОбъемУслуги = 0 и НЕ ОбъемУслугиСверхНормы = 0 Тогда
				СтрокаСверхНормы 							= НаборЗаписей.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаСверхНормы,СтрокаНабора);
				СтрокаСверхНормы.СверхНорматива 			= Истина;
				СтрокаСверхНормы.ЗначениеТарифа 			= ЗначениеТарифаСверхНормы;			
				СтрокаСверхНормы.ОбъемУслуги				= ОбъемУслугиСверхНормы;
				СтрокаСверхНормы.ОбъемУслугиПотребленный	= 0;
				СтрокаСверхНормы.Сумма						= СтрокаНабора.ОбъемУслуги * СтрокаНабора.ЗначениеТарифа;
			КонецЕсли;			
			
			
			ЗаполнитьЗначенияСвойств(ОбщийОбъемНачислений.Добавить(), СтрокаНабора);			
		Иначе
			СтрокаНабора  									= НаборЗаписейПомещение.Добавить();
			СтрокаНабора.Период 							= ГраницыПериода.ЗавершениеОП-1;
			СтрокаНабора.Район 								= Район;
			СтрокаНабора.Распределение 						= Истина;
			СтрокаНабора.Организация						= Организация;
			СтрокаНабора.ЧастныйСектор 						= Ложь;
			СтрокаНабора.Строение							= МКД;
			СтрокаНабора.Помещение							= ДанныеАбонента.Помещение; // TODO FIX ME
			СтрокаНабора.Услуга								= Услуга;
			СтрокаНабора.ТочкаУчета							= ПустаяТочкаУчета;
			СтрокаНабора.ВидНачисления 						= ВидНачисления;
			СтрокаНабора.Поставщик 							= ДанныеАбонента.Поставщик;
			СтрокаНабора.ПериодРасчета						= ПериодНачисления;
			СтрокаНабора.ПериодНачисления					= ПериодНачисления;
			СтрокаНабора.ОбъемУслуги						= ОбъемУслуги;
			СтрокаНабора.ЗначениеПлощади 					= ДанныеАбонента.ЗначениеПлощади;
			СтрокаНабора.СпособНачисления 					= СпособНачисленияОДН;
			ЗаполнитьЗначенияСвойств(ОбщийОбъемНачисленийПомещений.Добавить(), СтрокаНабора);
			
			Распределили 									= Распределили + СтрокаНабора.ОбъемУслуги;
			
			
			РазделенныеЛицевыеСчета 						= ДанныеПоУслуге.РазделенныеЛицевыеСчета;
			ПомещенияПотомки								= РазделенныеЛицевыеСчета[ДанныеАбонента.Помещение];
			СуммаПлощадейПомещения 							= 0;
			Для Каждого ПомещениеПотомок Из ПомещенияПотомки Цикл
				ДанныеПомещения  							= ПомещениеПотомок.Значение[Услуга];
				СуммаПлощадейПомещения 						= СуммаПлощадейПомещения + ДанныеПомещения.Значениеплощади; 
			КонецЦикла;		
			
			Для Каждого ПомещениеПотомок Из ПомещенияПотомки Цикл
				ДанныеПомещения  							= ПомещениеПотомок.Значение[Услуга];				                 		
				ОбъемУслугиПотомка							= ?(НЕ СуммаПлощадейПомещения = 0, ОбъемУслуги * ДанныеПомещения.ЗначениеПлощади / СуммаПлощадейПомещения, 0);
				ЗначениеСоциальнойНормы 					= -1;
				Если ДанныеПоУслуге.КорректироватьИндивидуальныйОбъемСУчетомОДПУ Тогда
					ЗначениеСоциальнойНормы 				= 0;
					Если ДанныеПомещения.ЗначениеПлощади > (ДанныеПомещения.ЗначениеСоциальнойНормы * ДанныеПомещения.КоличествоЧеловек +  ДанныеПомещения.ДопСоциальнаяНормаПотребления)  Тогда 
						ЗначениеСоциальнойНормы 			= ОбъемУслугиПотомка * (ДанныеПомещения.ЗначениеСоциальнойНормы * ДанныеПомещения.КоличествоЧеловек +  ДанныеПомещения.ДопСоциальнаяНормаПотребления)  / ДанныеПомещения.ЗначениеПлощади;  
					Иначе	
						ЗначениеСоциальнойНормы 			= ОбъемУслугиПотомка;
					КонецЕсли;
				КонецЕсли;
				
				ХэшСтрокиТарифа 							= ХэшСтрокиТарифа(ДанныеПомещения.ТарифнаяГруппа,Услуга,ДанныеПомещения.Поставщик,Справочники.энргТарифныеЗоны.БезРазбивки); 
				ЗначениеТарифа 								= ?(ЗначенияТарифов[ХэшСтрокиТарифа] = Неопределено, Новый Структура("Значение,ЗначениеТарифаРЭК", 0, 0), ЗначенияТарифов[ХэшСтрокиТарифа]);
				СтрокаНабора  								= НаборЗаписей.Добавить();
				СтрокаНабора.Период 						= ГраницыПериода.ЗавершениеОП-1;
				СтрокаНабора.Район 							= Район;
				СтрокаНабора.Распределение 					= Истина;
				СтрокаНабора.Организация					= Организация;
				СтрокаНабора.ЧастныйСектор 					= Ложь;
				СтрокаНабора.Строение						= МКД;
				СтрокаНабора.Помещение						= ПомещениеПотомок.Ключ;
				СтрокаНабора.Абонент						= ДанныеПомещения.Абонент;
				СтрокаНабора.Услуга							= Услуга;
				СтрокаНабора.ТочкаУчета						= ПустаяТочкаУчета;
				СтрокаНабора.ВидНачисления 					= ВидНачисления;
				СтрокаНабора.НаправлениеИспользованияТУ 	= Справочники.энргНаправлениеИспользованияТочекУчета.ОсновноеНаправление;
				СтрокаНабора.СпособНачисления 				= СпособНачисленияОДН;
				СтрокаНабора.ТарифнаяГруппа                 = ДанныеАбонента.ТарифнаяГруппа;
				СтрокаНабора.ТарифнаяЗона                   = ДанныеАбонента.ТарифнаяЗона;
				
				СтрокаНабора.Поставщик 						= ДанныеПомещения.Поставщик;
				СтрокаНабора.ПериодРасчета					= ПериодНачисления;
				СтрокаНабора.ПериодНачисления				= ПериодНачисления;
				СтрокаНабора.ЗначениеПлощади 				= ДанныеПомещения.ЗначениеПлощади;
				
				Если ОбъемУслугиПотомка > ЗначениеСоциальнойНормы Тогда									
					СтрокаНабора.ОбъемУслуги 				= ЗначениеСоциальнойНормы;					
					СтрокаНабора.ЗначениеТарифа 			= ?(НЕ ИспользоватьТарифРек, ЗначениеТарифа.Значение, ЗначениеТарифа.ЗначениеТарифаРЭК);
					
					СтрокаСверхНормы 						= НаборЗаписей.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаСверхНормы, СтрокаНабора);
					СтрокаСверхНормы.ЗначениеТарифа 		= ?(НЕ ИспользоватьТарифРек, ЗначениеТарифа.ЗначениеСверхНорматива, ЗначениеТарифа.ЗначениеТарифаРЭК);
					СтрокаСверхНормы.ОбъемУслуги 			= ОбъемУслугиПотомка - ЗначениеСоциальнойНормы;
					СтрокаСверхНормы.СверхНорматива 		= Истина;
					СтрокаСверхНормы.Сумма					= СтрокаСверхНормы.ОбъемУслуги * СтрокаСверхНормы.ЗначениеТарифа;
				Иначе
					СтрокаНабора.ОбъемУслуги 				= ОбъемУслугиПотомка;
					СтрокаНабора.ЗначениеТарифа 			= ?(НЕ ИспользоватьТарифРек, ЗначениеТарифа.Значение, ЗначениеТарифа.ЗначениеТарифаРЭК);
				КонецЕсли;
				
				СтрокаНабора.Сумма						= СтрокаНабора.ОбъемУслуги * СтрокаНабора.ЗначениеТарифа;  
			КонецЦикла;			
		КонецЕсли;
	КонецЦикла;	  
	
	Если РаспределениеОбъемаПоУслугам[Услуга] = Неопределено Тогда
		РаспределениеОбъемаПоУслугам.Вставить(Услуга, РаспределениеПоАбонентам);
	КонецЕсли;	
	
	ДанныеПоУслуге.ОбщийОбъемНачислений						= ОбщийОбъемНачислений;
	ДанныеПоУслуге.ОбщийОбъемНачисленийПомещений			= ОбщийОбъемНачисленийПомещений;
	
КонецПроцедуры

Процедура РаспределитьОбъемПотребленныйПоУслугеМКД(ПериодНачисления, Организация, Район, МКД, Услуга, ГраницыПериода, ЗначенияТарифов, ДанныеПоУслуге, ДокументОбъект, РаспределениеОбъемаПоУслугам, НаборОтрицательныйОбъемРаспределения, НаборЗаписей, НаборЗаписейПомещение,НаборЗаписейНП, НаборЗаписейСверхНорма, ИспользоватьТарифРек)
	
	// УсловиеОтопления - если есть начисления по прибору
	// и всего абонентов = всего с прибором
	ПустаяТочкаУчета 										= Справочники.энргТочкиУчета.ПустаяСсылка();
	ВидНачисления 											= Перечисления.энргВидыНачислений.Начисление;
	
	РаспределениеПоАбонентам 								= Новый Соответствие;
	
	ТочностьОбъемаНачислений 								= Метаданные.РегистрыНакопления.энргОбъемНачислений.Ресурсы.ОбъемУслуги.Тип.КвалификаторыЧисла.РазрядностьДробнойЧасти;
	ЕстьПотреблениеПоПрибору 								= ДанныеПоУслуге.ПоказанияПредоставленыПотребленный <> 0 ИЛИ НЕ ДанныеПоУслуге.ОбъемПотребленныйПоПрибору = 0;;	
	НазначениеПрибораУчета 									= ДанныеПоУслуге.НазначениеПрибораУчета;
	// TODO
	// FIX ME
	// Добавить распределение в разбивки тарифных зон
	//НадоРаспределитьПоФакту									= ДанныеПоУслуге.ОбъемПотребленныйПоПрибору + ДанныеПоУслуге.ОбъемПотребленныйБезПрибора;
	
	НадоРаспределить										= ДанныеПоУслуге.ОбъемПотребленныйПоПрибору + ДанныеПоУслуге.ОбъемПотребленныйБезПрибора;
	
	ВидНачисления 											= Перечисления.энргВидыНачислений.НачислениеОДН;	
	СпособНачисленияОДН 									= Перечисления.энргСпособНачислений.ПустаяСсылка();
	ОбщийОбъемНачислений 									= ДанныеПоУслуге.ОбщийОбъемНачисленийПотребленный;
	ОбщийОбъемНачисленийПомещений 							= ДанныеПоУслуге.ОбщийОбъемНачисленийПомещенийПотребленный;
	
	Если ДанныеПоУслуге.КорректироватьИндивидуальныйОбъемСУчетомОДПУ и ЕстьПотреблениеПоПрибору И ДанныеПоУслуге.ВсеПоПриборуПотребленный Тогда
		ОсталосьРаспределить 								= НадоРаспределить - ДанныеПоУслуге.ПотреблениеАбонентовПотребленный; 		
		СпособНачисленияОДН 								= Перечисления.энргСпособНачислений.ПоПриборам;
	ИначеЕсли ДанныеПоУслуге.КорректироватьИндивидуальныйОбъемСУчетомОДПУ и НЕ ЕстьПотреблениеПоПрибору Тогда
		// Списываем начисленный индивидуальный объем по прибору учета
		Для Каждого СтрокаНачисленийАбонента ИЗ ДанныеПоУслуге.ОбъемПоПриборуКорректироватьПотребленный Цикл 
			Если ЗначениеЗаполнено(СтрокаНачисленийАбонента.Абонент) Тогда
				яНабор 										= НаборЗаписей;
				яНаборОбщий 								= ОбщийОбъемНачислений;
			Иначе
				яНабор 										= НаборЗаписейПомещение;
				яНаборОбщий 								= ОбщийОбъемНачисленийПомещений;
			КонецЕсли;			
			
			Если СтрокаНачисленийАбонента.СпособНачисления  = Перечисления.энргСпособНачислений.ПоПриборам 
				ИЛИ СтрокаНачисленийАбонента.СпособНачисления  = Перечисления.энргСпособНачислений.НачислениеПоСреднему Тогда
				Если НЕ СтрокаНачисленийАбонента.ОбъемУслугиПотребленный = 0 Тогда
					СтрокаНабора  				= яНабор.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаНабора, СтрокаНачисленийАбонента,,"ОбъемУслуги,Сумма");
					СтрокаНабора.Распределение 				= Истина;
					СтрокаНабора.ОбъемУслугиПотребленный	= -СтрокаНабора.ОбъемУслугиПотребленный;
					СтрокаНабора.Сумма 						= 0;
					СтрокаНабора.Период 					= ГраницыПериода.ЗавершениеОП-1;
					ЗаполнитьЗначенияСвойств(яНаборОбщий.Добавить(),СтрокаНабора,,"ОбъемУслуги,Сумма");
				КонецЕсли;
				
				Если СтрокаНачисленийАбонента.ПомещениеРодитель = СтрокаНачисленийАбонента.Помещение Тогда
					// добавляем новую строку начислений
					СтрокаНабора  							= яНабор.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаНабора, СтрокаНачисленийАбонента,,"ОбъемУслуги,Сумма");
					СтрокаНабора.Распределение 				= Истина;
					СтрокаНабора.СпособНачисления 			= Перечисления.энргСпособНачислений.ПоНормативу;
					ОбъемУслугиПотребленный 				= СтрокаНабора.НормаПотребления * СтрокаНабора.ЗначениеПлощади * ((СтрокаНабора.ПлощадьАбонентов - СтрокаНабора.ПлощадьСобственнаяПоставка) / (СтрокаНабора.ПлощадьАбонентов - СтрокаНабора.ПлощадьСобственнаяПоставка + СтрокаНабора.ПлощадьМОП)) * (СтрокаНабора.КонецПериода - СтрокаНабора.НачалоПериода) / (ГраницыПериода.ДнейВПериоде * 86400);
					СтрокаНабора.ОбъемУслугиПотребленный 	= ОбъемУслугиПотребленный;
					СтрокаНабора.Сумма 						= 0;
					СтрокаНабора.Период 					= ГраницыПериода.ЗавершениеОП-1;
					ЗаполнитьЗначенияСвойств(яНаборОбщий.Добавить(),СтрокаНабора,,"ОбъемУслуги,Сумма");
					РазделенныеЛицевыеСчета 				= ДанныеПоУслуге.РазделенныеЛицевыеСчета;
					
					Если НЕ РазделенныеЛицевыеСчета[СтрокаНачисленийАбонента.Помещение] = Неопределено Тогда
						ОсталосьВнутриПомещения 			= ОбъемУслугиПотребленный;
						ПомещенияПотомки					= РазделенныеЛицевыеСчета[СтрокаНачисленийАбонента.Помещение];
						СуммаПлощадейПомещения 				= 0;
						Для Каждого ПомещениеПотомок Из ПомещенияПотомки Цикл
							ДанныеПомещения  				= ПомещениеПотомок.Значение[Услуга];
							СуммаПлощадейПомещения 			= СуммаПлощадейПомещения + ДанныеПомещения.Значениеплощади; 
						КонецЦикла;		
						
						ПереасчитатьСтроки 					= Новый Массив;
						
						Для Каждого ПомещениеПотомок Из ПомещенияПотомки Цикл
							ДанныеПомещения  				= ПомещениеПотомок.Значение[Услуга];       		
							
							
							СтрокаНабора  					= НаборЗаписей.Добавить();
							ЗаполнитьЗначенияСвойств(СтрокаНабора, СтрокаНачисленийАбонента,,"ОбъемУслуги,Сумма");
							СтрокаНабора.Распределение 		= Истина;
							СтрокаНабора.Период 			= ГраницыПериода.ЗавершениеОП-1;
							СтрокаНабора.Помещение			= ПомещениеПотомок.Ключ;
							СтрокаНабора.Абонент			= ДанныеПомещения.Абонент;						
							
							Если ДанныеПомещения.СпособРаспределенияОбъемаПомещения = Перечисления.энргСпособыРаспределенияОбъема.ФиксированныйОбъем Тогда
								СтрокаНабора.ОбъемУслугиПотребленный 	= ДанныеПомещения.ФиксированныйОбъемПотребления;
								ОсталосьВнутриПомещения 	= ОсталосьВнутриПомещения - СтрокаНабора.ОбъемУслугиПотребленный;
							ИначеЕсли ДанныеПомещения.СпособРаспределенияОбъемаПомещения = Перечисления.энргСпособыРаспределенияОбъема.ДолевоеРаспределение Тогда
								СтрокаНабора.ОбъемУслугиПотребленный = ОбъемУслугиПотребленный * ДанныеПомещения.ДоляПотребленияЧислитель / ДанныеПомещения.ДоляПотребленияЗнаменатель;
								ОсталосьВнутриПомещения 	= ОсталосьВнутриПомещения - СтрокаНабора.ОбъемУслугиПотребленный;
							ИначеЕсли ДанныеПомещения.СпособРаспределенияОбъемаПомещения = Перечисления.энргСпособыРаспределенияОбъема.Остаток Тогда	
								ПереасчитатьСтроки.Добавить(НаборЗаписей.Индекс(СтрокаНабора));
							Иначе
								Если ЗначениеЗаполнено(ДанныеПоУслуге.ВидПлощади) Тогда
									СтрокаНабора.ОбъемУслугиПотребленный = ?(НЕ СуммаПлощадейПомещения = 0, ОбъемУслугиПотребленный * ДанныеПомещения.ЗначениеПлощади / СуммаПлощадейПомещения, 0);
								Иначе
									СтрокаНабора.ОбъемУслугиПотребленный = ?(НЕ СтрокаНачисленийАбонента.КоличествоЖильцов = 0, ОбъемУслугиПотребленный * ДанныеПомещения.КоличествоПроживающих / СтрокаНачисленийАбонента.КоличествоЖильцов, 0);
								КонецЕсли;
								ОсталосьВнутриПомещения 	= ОсталосьВнутриПомещения - СтрокаНабора.ОбъемУслугиПотребленный;
							КонецЕсли;											
							
							СтрокаНабора.Сумма				= 0;				
						КонецЦикла;
						
						Если ПереасчитатьСтроки.Количество() > 0 Тогда
							Для Сч = 0 По ПереасчитатьСтроки.ВГраница() Цикл
								СтрокаНабора 							= НаборЗаписей.Получить(ПереасчитатьСтроки[Сч]);
								СтрокаНабора.ОбъемУслугиПотребленный 	= ОсталосьВнутриПомещения;
								СтрокаНабора.Сумма						= 0;
							КонецЦикла;						
						КонецЕсли;					
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;			
		КонецЦикла;
		
		Для Каждого СтрокаНачисленийНП ИЗ ДанныеПоУслуге.ОбъемПоПриборуНПКорректироватьПотребленный Цикл 
			Если ЗначениеЗаполнено(СтрокаНачисленийНП.ОбъектРасчета) Тогда
				яНабор 										= НаборЗаписейНП;
				яНаборОбщий 								= ОбщийОбъемНачислений;
			Иначе
				яНабор 										= НаборЗаписейПомещение;
				яНаборОбщий 								= ОбщийОбъемНачисленийПомещений;
			КонецЕсли;			
			
			Если СтрокаНачисленийНП.СпособНачисления  = Перечисления.энргСпособНачислений.ПоПриборам 
				ИЛИ СтрокаНачисленийНП.СпособНачисления  = Перечисления.энргСпособНачислений.НачислениеПоСреднему Тогда
				Если НЕ СтрокаНачисленийНП.ОбъемУслугиПотребленный = 0 Тогда
					СтрокаНабора  				= яНабор.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаНабора, СтрокаНачисленийНП,,"ОбъемУслуги");
					СтрокаНабора.Распределение 				= Истина;
					СтрокаНабора.ОбъемУслугиПотребленный 	= -СтрокаНабора.ОбъемУслугиПотребленный;
					СтрокаНабора.Период 					= ГраницыПериода.ЗавершениеОП-1;
					ЗаполнитьЗначенияСвойств(яНаборОбщий.Добавить(),СтрокаНабора,,"ОбъемУслуги");
				КонецЕсли;
				
				
				// добавляем новую строку начислений
				СтрокаНабора  							= яНабор.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаНабора, СтрокаНачисленийНП,,"ОбъемУслуги");
				СтрокаНабора.Распределение 				= Истина;
				СтрокаНабора.СпособНачисления 			= Перечисления.энргСпособНачислений.ПоНормативу;
				ОбъемУслугиПотребленный 				= СтрокаНабора.НормаПотребления * СтрокаНабора.ЗначениеПлощади * ((СтрокаНабора.ПлощадьАбонентов - СтрокаНабора.ПлощадьСобственнаяПоставка) / (СтрокаНабора.ПлощадьАбонентов - СтрокаНабора.ПлощадьСобственнаяПоставка + СтрокаНабора.ПлощадьМОП)) * (СтрокаНабора.КонецПериода - СтрокаНабора.НачалоПериода) / (ГраницыПериода.ДнейВПериоде * 86400);

				СтрокаНабора.ОбъемУслугиПотребленный 	= ОбъемУслугиПотребленный;
				СтрокаНабора.Период 					= ГраницыПериода.ЗавершениеОП-1;
				ЗаполнитьЗначенияСвойств(яНаборОбщий.Добавить(),СтрокаНабора,,"ОбъемУслуги");
				
			КонецЕсли;			
		КонецЦикла;
		
		// просто распределяем объем по нормативу
		ОсталосьРаспределить 								= НадоРаспределить;
		
	ИначеЕсли ДанныеПоУслуге.КорректироватьИндивидуальныйОбъемСУчетомОДПУ и ДанныеПоУслуге.ВсегоПлощадьАбонентовПоПриборуПотребленный > 0 Тогда
		// Высчитываем потребление приборников на 1м2
		ОбъемНаКвМ 											= 0; 		
		СпособНачисленияОДН 								= Перечисления.энргСпособНачислений.ПоПриборам;
		Если  ДанныеПоУслуге.ВсегоПлощадьАбонентовПоПриборуПотребленный <> 0 Тогда
			ОбъемНаКвМ 										= ДанныеПоУслуге.ПотреблениеАбонентовПоПриборуПотребленный / ДанныеПоУслуге.ВсегоПлощадьАбонентовПоПриборуПотребленный;			
		КонецЕсли;
		// Высчитываем "виртуальный" расход абонентов без прибора и корректируем объем потребления абонентов без прибора
		ПотреблениеАбонентов								= ДанныеПоУслуге.ПотреблениеАбонентовПоПриборуПотребленный;
		Для Каждого СтрокаНачисленийАбонента ИЗ ДанныеПоУслуге.НачисленияАбонентовБезПрибораПотребленный Цикл
			// снимаем начисленный ранее объем
			ЗначениеПлощади 								= ДанныеПоУслуге.ПлощадиАбонентов[СтрокаНачисленийАбонента.Помещение];
			ЕстьСуммаНачислений 							= Ложь;
			Если ЗначениеЗаполнено(СтрокаНачисленийАбонента.Абонент) Тогда
				яНабор 										= НаборЗаписей;
				яНаборОбщий 								= ОбщийОбъемНачислений;
				ЕстьСуммаНачислений 						= Истина;
			Иначе
				яНабор 										= НаборЗаписейПомещение;
				яНаборОбщий 								= ОбщийОбъемНачисленийПомещений;
			КонецЕсли;
			
			ИндексАбонента 									= Неопределено;
			
			// ищем строку в массиве
			Для Сч = 0 По ДанныеПоУслуге.АбонентыДляРаспределения.ВГраница() Цикл
				Если ДанныеПоУслуге.АбонентыДляРаспределения[Сч].Абонент = СтрокаНачисленийАбонента.Абонент или (ЗначениеЗаполнено(СтрокаНачисленийАбонента.ПомещениеРодитель) и ДанныеПоУслуге.АбонентыДляРаспределения[Сч].Помещение = СтрокаНачисленийАбонента.ПомещениеРодитель) Тогда
					ИндексАбонента 							= Сч;
					Прервать;
				КонецЕсли;					
			КонецЦикла;
						
			Если НЕ СтрокаНачисленийАбонента.ОбъемУслугиПотребленный = 0 Тогда
				СтрокаНабора  								= яНабор.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаНабора, СтрокаНачисленийАбонента,,"ОбъемУслуги,Сумма");
				СтрокаНабора.Период 						= ГраницыПериода.ЗавершениеОП-1;
				СтрокаНабора.Распределение 					= Истина;
				СтрокаНабора.ОбъемУслуги 					= 0;
				СтрокаНабора.ОбъемУслугиСоцНорма 			= 0;
				СтрокаНабора.ОбъемУслугиПотребленный 		= -СтрокаНабора.ОбъемУслугиПотребленный;	
				
				
				ДанныеАбонента 								= ДанныеПоУслуге.АбонентыДляРаспределения[ИндексАбонента];
				ДанныеАбонента.ОбъемУслугиПотребленный 		= ДанныеАбонента.ОбъемУслугиПотребленный + СтрокаНабора.ОбъемУслугиПотребленный;
				
				ЗаполнитьЗначенияСвойств(яНаборОбщий.Добавить(),СтрокаНабора,,"ОбъемУслуги,Сумма");
			КонецЕсли;
			
			Если СтрокаНачисленийАбонента.СверхНорматива Тогда
				Продолжить;
			КонецЕсли;
			
			Если СтрокаНачисленийАбонента.ПомещениеРодитель = СтрокаНачисленийАбонента.Помещение Тогда

					
					ИндексАбонента 							= Неопределено;
					
					// ищем строку в массиве
					Для Сч = 0 По ДанныеПоУслуге.АбонентыДляРаспределения.ВГраница() Цикл
						Если ДанныеПоУслуге.АбонентыДляРаспределения[Сч].Абонент = СтрокаНачисленийАбонента.Абонент или (ЗначениеЗаполнено(СтрокаНачисленийАбонента.ПомещениеРодитель) и ДанныеПоУслуге.АбонентыДляРаспределения[Сч].Помещение = СтрокаНачисленийАбонента.ПомещениеРодитель) Тогда
							ИндексАбонента 					= Сч;
							Прервать;
						КонецЕсли;					
					КонецЦикла; 					
					
					КоэфДлительностиПериода 				= 1;
					СоцПлощадь								= 0;
					Если НЕ ИндексАбонента = Неопределено Тогда
						ДатаСостоянияЛицевогоСчета 			= ДанныеПоУслуге.АбонентыДляРаспределения[Сч].ДатаСостоянияЛицевогоСчета;
						СоцПлощадь 							= ДанныеПоУслуге.АбонентыДляРаспределения[Сч].СоцПлощадь;
						Если ЗначениеЗаполнено(ДатаСостоянияЛицевогоСчета) и ДатаСостоянияЛицевогоСчета <= ГраницыПериода.НачалоОП Тогда
							КоэфДлительностиПериода 		= 1;
						ИначеЕсли ЗначениеЗаполнено(ДатаСостоянияЛицевогоСчета) Тогда 
							КоэфДлительностиПериода 		= (ГраницыПериода.НачалоОП - ДатаСостоянияЛицевогоСчета) / (ГраницыПериода.ЗавершениеОП - ГраницыПериода.НачалоОП);
						КонецЕсли;						
					КонецЕсли;					
					
					ОбъемУслугиПотребленный 				= Окр(ЗначениеПлощади * ОбъемНаКвМ * КоэфДлительностиПериода,ТочностьОбъемаНачислений);
					ПотреблениеАбонентов 					= ПотреблениеАбонентов + ОбъемУслугиПотребленный;		
					
					СуммаПлощадейПомещения 					= 0;
										
					РазбитьПоСоцНорме(яНабор,яНаборОбщий,НаборЗаписей,СтрокаНачисленийАбонента,ОбъемУслугиПотребленный,СоцПлощадь,СпособНачисленияОДН,ГраницыПериода,ДанныеПоУслуге,ЕстьСуммаНачислений,ЗначенияТарифов,Услуга,ПотреблениеАбонентов,СуммаПлощадейПомещения,Истина);
					
					
				//ЗначениеПлощади 							= ДанныеПоУслуге.ПлощадиАбонентов[СтрокаНачисленийАбонента.Помещение];			
				//СтрокаНабора  								= яНабор.Добавить();
				//ЗаполнитьЗначенияСвойств(СтрокаНабора, СтрокаНачисленийАбонента,,"ОбъемУслуги,Сумма");
				//СтрокаНабора.Распределение 					= Истина;
				//СтрокаНабора.СпособНачисления				= СпособНачисленияОДН;
				//Если СтрокаНабора.СпособНачисления = Перечисления.энргСпособНачислений.ПоПриборам Тогда
				//	 СтрокаНабора.СниматьНачисленныйСредний	= Ложь;
				//КонецЕсли;
				//КоэфДлительностиПериода 					= (СтрокаНачисленийАбонента.КонецПериода - СтрокаНачисленийАбонента.НачалоПериода)/(ГраницыПериода.ЗавершениеОП - ГраницыПериода.НачалоОП);
				//ОбъемУслугиПотребленный 					= ЗначениеПлощади * ОбъемНаКвМ * КоэфДлительностиПериода;
				//
				//СтрокаНабора.ОбъемУслуги 					= 0;
				//СтрокаНабора.ОбъемУслугиПотребленный 		= ОбъемУслугиПотребленный;
				//СтрокаНабора.ОбъемУслугиСоцНорма 			= 0;
				//
				//СтрокаНабора.Период 						= ГраницыПериода.ЗавершениеОП-1;			
				//ПотреблениеАбонентов 						= ПотреблениеАбонентов + СтрокаНабора.ОбъемУслугиПотребленный;			
				//				
				//ЗаполнитьЗначенияСвойств(яНаборОбщий.Добавить(),СтрокаНабора,,"ОбъемУслуги,Сумма");
				//
				//РазделенныеЛицевыеСчета 					= ДанныеПоУслуге.РазделенныеЛицевыеСчета;
				//
				//Если НЕ РазделенныеЛицевыеСчета[СтрокаНачисленийАбонента.Помещение] = Неопределено Тогда
				//	ОсталосьВнутриПомещения 				= ОбъемУслугиПотребленный;
				//	ПомещенияПотомки						= РазделенныеЛицевыеСчета[СтрокаНачисленийАбонента.Помещение];
				//	СуммаПлощадейПомещения 					= 0;
				//	Для Каждого ПомещениеПотомок Из ПомещенияПотомки Цикл
				//		ДанныеПомещения  					= ПомещениеПотомок.Значение[Услуга];
				//		СуммаПлощадейПомещения 				= СуммаПлощадейПомещения + ДанныеПомещения.Значениеплощади; 
				//	КонецЦикла;		
				//	
				//	ПереасчитатьСтроки 						= Новый Массив;
				//	
				//	Для Каждого ПомещениеПотомок Из ПомещенияПотомки Цикл
				//		ДанныеПомещения  					= ПомещениеПотомок.Значение[Услуга];      		
				//		
				//		
				//		СтрокаНабора  						= НаборЗаписей.Добавить();
				//		ЗаполнитьЗначенияСвойств(СтрокаНабора, СтрокаНачисленийАбонента,,"ОбъемУслуги,Сумма");
				//		СтрокаНабора.Распределение 			= Истина;
				//		СтрокаНабора.СпособНачисления		= СпособНачисленияОДН;
				//		СтрокаНабора.Период 				= ГраницыПериода.ЗавершениеОП-1;
				//		СтрокаНабора.Помещение				= ПомещениеПотомок.Ключ;
				//		СтрокаНабора.Абонент				= ДанныеПомещения.Абонент;						
				//		
				//		Если ДанныеПомещения.СпособРаспределенияОбъемаПомещения = Перечисления.энргСпособыРаспределенияОбъема.ФиксированныйОбъем Тогда
				//			СтрокаНабора.ОбъемУслугиПотребленный 	= ДанныеПомещения.ФиксированныйОбъемПотребления;
				//			ОсталосьВнутриПомещения 				= ОсталосьВнутриПомещения - СтрокаНабора.ОбъемУслугиПотребленный;
				//		ИначеЕсли ДанныеПомещения.СпособРаспределенияОбъемаПомещения = Перечисления.энргСпособыРаспределенияОбъема.ДолевоеРаспределение Тогда
				//			СтрокаНабора.ОбъемУслугиПотребленный 	= ОбъемУслугиПотребленный * ДанныеПомещения.ДоляПотребленияЧислитель / ДанныеПомещения.ДоляПотребленияЗнаменатель;
				//			ОсталосьВнутриПомещения 				= ОсталосьВнутриПомещения - СтрокаНабора.ОбъемУслугиПотребленный;
				//		ИначеЕсли ДанныеПомещения.СпособРаспределенияОбъемаПомещения = Перечисления.энргСпособыРаспределенияОбъема.Остаток Тогда	
				//			ПереасчитатьСтроки.Добавить(НаборЗаписей.Индекс(СтрокаНабора));
				//		Иначе
				//			Если ЗначениеЗаполнено(ДанныеПоУслуге.ВидПлощади) Тогда
				//				СтрокаНабора.ОбъемУслугиПотребленный 	= ?(НЕ СуммаПлощадейПомещения = 0, ОбъемУслугиПотребленный * ДанныеПомещения.ЗначениеПлощади / СуммаПлощадейПомещения, 0);
				//			Иначе
				//				СтрокаНабора.ОбъемУслугиПотребленный 	= ?(НЕ СтрокаНачисленийАбонента.КоличествоЖильцов = 0, ОбъемУслугиПотребленный * ДанныеПомещения.КоличествоПроживающих / СтрокаНачисленийАбонента.КоличествоЖильцов, 0);
				//			КонецЕсли;
				//			ОсталосьВнутриПомещения 		= ОсталосьВнутриПомещения - СтрокаНабора.ОбъемУслугиПотребленный;
				//		КонецЕсли;											
				//		
				//		СтрокаНабора.Сумма					= 0;				
				//	КонецЦикла;
				//	
				//	Если ПереасчитатьСтроки.Количество() > 0 Тогда
				//		Для Сч = 0 По ПереасчитатьСтроки.ВГраница() Цикл
				//			СтрокаНабора 							= НаборЗаписей.Получить(ПереасчитатьСтроки[Сч]);
				//			СтрокаНабора.ОбъемУслугиПотребленный 	= ОсталосьВнутриПомещения;
				//			СтрокаНабора.Сумма						= 0;
				//		КонецЦикла;						
				//	КонецЕсли;					
				//КонецЕсли;
			КонецЕсли;			
		КонецЦикла;
		
		//объем потребления НП без прибора
		Для Каждого СтрокаНачисленийНП ИЗ ДанныеПоУслуге.НачисленияНПБезПрибораПотребленный Цикл
			// снимаем начисленный ранее объем
			ЗначениеПлощади 								= ДанныеПоУслуге.ПлощадиАбонентов[СтрокаНачисленийНП.ОбъектРасчета];
			ЕстьСуммаНачислений 							= Ложь;
			Если ЗначениеЗаполнено(СтрокаНачисленийНП.ОбъектРасчета) Тогда
				яНабор 										= НаборЗаписейНП;
				яНаборОбщий 								= ОбщийОбъемНачислений;
				ЕстьСуммаНачислений 						= Истина;
			Иначе
				яНабор 										= НаборЗаписейПомещение;
				яНаборОбщий 								= ОбщийОбъемНачисленийПомещений;
			КонецЕсли;		
			
			Если НЕ СтрокаНачисленийНП.ОбъемУслуги = 0 Тогда
				СтрокаНабора  								= яНабор.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаНабора, СтрокаНачисленийНП,,"ОбъемУслуги");
				СтрокаНабора.Период 						= ГраницыПериода.ЗавершениеОП-1;
				СтрокаНабора.Распределение 					= Истина;
				СтрокаНабора.ОбъемУслугиПотребленный 		= -СтрокаНабора.ОбъемУслугиПотребленный;
				СтрокаНабора.ОбъемУслуги 					= 0;				
				//СтрокаНабора.Сумма 							= 0;				
				
				ЗаполнитьЗначенияСвойств(яНаборОбщий.Добавить(),СтрокаНабора,,"ОбъемУслуги");
			КонецЕсли;
			
			
			СтрокаНабора  								= яНабор.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаНабора, СтрокаНачисленийНП,,"ОбъемУслуги");
			СтрокаНабора.Распределение 					= Истина;
			СтрокаНабора.СпособНачисления				= СпособНачисленияОДН;
			КоэфДлительностиПериода 					= (СтрокаНачисленийНП.КонецПериода - СтрокаНачисленийНП.НачалоПериода)/(ГраницыПериода.ЗавершениеОП - ГраницыПериода.НачалоОП);
			ОбъемУслугиПотребленный 					= ЗначениеПлощади * ОбъемНаКвМ * КоэфДлительностиПериода; 			
			СтрокаНабора.ОбъемУслуги 					= 0;			
			СтрокаНабора.ОбъемУслугиПотребленный 		= ОбъемУслугиПотребленный;			
			СтрокаНабора.Период 						= ГраницыПериода.ЗавершениеОП-1;			
			ПотреблениеАбонентов 						= ПотреблениеАбонентов + СтрокаНабора.ОбъемУслугиПотребленный;
						
			ЗаполнитьЗначенияСвойств(яНаборОбщий.Добавить(),СтрокаНабора,,"ОбъемУслуги");
			
		КонецЦикла;

		
		ОсталосьРаспределить 								= НадоРаспределить - ПотреблениеАбонентов;		
	ИначеЕсли ДанныеПоУслуге.КорректироватьИндивидуальныйОбъемСУчетомОДПУ и ЕстьПотреблениеПоПрибору Тогда
		ОтапливаемаяПлощадь									= ДанныеПоУслуге.ВсегоПлощадьАбонентов - ДанныеПоУслуге.ВсегоПлощадьАбонентовСобственнаяПоставка + ДанныеПоУслуге.ПлощадьМОП;
		ОбъемНаКвМ 											= ?(ОтапливаемаяПлощадь = 0, 0, ДанныеПоУслуге.ОбъемПотребленныйПоПрибору / ОтапливаемаяПлощадь);	
		
		СпособНачисленияОДН 								= Перечисления.энргСпособНачислений.ПоПриборам;
		ПотреблениеАбонентов								= 0; 		
		ПомещенияНачислили 									= Новый Соответствие;
		Для Каждого СтрокаНачисленийАбонента ИЗ ДанныеПоУслуге.НачисленияАбонентовБезПрибораПотребленный Цикл
			
				ЕстьСуммаНачислений 							= Ложь;
				Если ЗначениеЗаполнено(СтрокаНачисленийАбонента.Абонент) Тогда
					яНабор 										= НаборЗаписей;
					яНаборОбщий 								= ОбщийОбъемНачислений;
					ЕстьСуммаНачислений 						= Истина;
				Иначе
					яНабор 										= НаборЗаписейПомещение;
					яНаборОбщий 								= ОбщийОбъемНачисленийПомещений;
				КонецЕсли;
				
				ЗначениеПлощади 								= ДанныеПоУслуге.ПлощадиАбонентов[СтрокаНачисленийАбонента.Помещение];
				
				// снимаем начисленный ранее объем
				
				СтрокаНабора  								= яНабор.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаНабора, СтрокаНачисленийАбонента,,"ОбъемУслуги,Сумма");
				СтрокаНабора.Распределение 					= Истина;
				Если ЗначениеЗаполнено(СтрокаНачисленийАбонента.Абонент) Тогда					
					СтрокаНабора.Сумма		 			= 0;
					СтрокаНабора.ЗначениеТарифа		 	= СтрокаНачисленийАбонента.ЗначениеТарифа;					  
				КонецЕсли;
				СтрокаНабора.ОбъемУслуги 					= 0;
				//Снятие объема потребленного при сторнировании объема услуги
				СтрокаНабора.ОбъемУслугиПотребленный 		= -СтрокаНабора.ОбъемУслугиПотребленный;
				//Снятие объема потребленного при сторнировании объема услуги
				СтрокаНабора.Период 						= ГраницыПериода.ЗавершениеОП-1;
				
				ЗаполнитьЗначенияСвойств(яНаборОбщий.Добавить(),СтрокаНабора,,"ОбъемУслуги,Сумма");
				
				Если СтрокаНачисленийАбонента.СверхНорматива Тогда
					Продолжить;
				КонецЕсли;
							
				Если СтрокаНачисленийАбонента.ПомещениеРодитель = СтрокаНачисленийАбонента.Помещение Тогда
					
					Если НЕ ПомещенияНачислили[СтрокаНачисленийАбонента.Помещение] = Неопределено Тогда
						Продолжить;
					КонецЕсли;
										
					ИндексАбонента 									= Неопределено;
					
					// ищем строку в массиве
					Для Сч = 0 По ДанныеПоУслуге.АбонентыДляРаспределения.ВГраница() Цикл
						Если ДанныеПоУслуге.АбонентыДляРаспределения[Сч].Абонент = СтрокаНачисленийАбонента.Абонент или (ЗначениеЗаполнено(СтрокаНачисленийАбонента.ПомещениеРодитель) и ДанныеПоУслуге.АбонентыДляРаспределения[Сч].Помещение = СтрокаНачисленийАбонента.ПомещениеРодитель) Тогда
							ИндексАбонента 							= Сч;
							Прервать;
						КонецЕсли;					
					КонецЦикла;
					
					КоэфДлительностиПериода 				= 1;
					СоцПлощадь								= 0;
					Если НЕ ИндексАбонента = Неопределено Тогда
						ДатаСостоянияЛицевогоСчета 			= ДанныеПоУслуге.АбонентыДляРаспределения[Сч].ДатаСостоянияЛицевогоСчета;
						СоцПлощадь 							= ДанныеПоУслуге.АбонентыДляРаспределения[Сч].СоцПлощадь;
						Если ЗначениеЗаполнено(ДатаСостоянияЛицевогоСчета) и ДатаСостоянияЛицевогоСчета <= ГраницыПериода.НачалоОП Тогда
							КоэфДлительностиПериода 		= 1;
						ИначеЕсли ЗначениеЗаполнено(ДатаСостоянияЛицевогоСчета) Тогда 
							КоэфДлительностиПериода 		= (ГраницыПериода.НачалоОП - ДатаСостоянияЛицевогоСчета) / (ГраницыПериода.ЗавершениеОП - ГраницыПериода.НачалоОП);
						КонецЕсли;						
					КонецЕсли;					
					
					ОбъемУслугиПотребленный 				= Окр(ЗначениеПлощади * ОбъемНаКвМ * КоэфДлительностиПериода,ТочностьОбъемаНачислений);
					ПотреблениеАбонентов 					= ПотреблениеАбонентов + ОбъемУслугиПотребленный;		
					
					СуммаПлощадейПомещения 					= 0;
					
					РазбитьПоСоцНорме(яНабор,яНаборОбщий,НаборЗаписей,СтрокаНачисленийАбонента,ОбъемУслугиПотребленный,СоцПлощадь,СпособНачисленияОДН,ГраницыПериода,ДанныеПоУслуге,ЕстьСуммаНачислений,ЗначенияТарифов,Услуга,ПотреблениеАбонентов,СуммаПлощадейПомещения,Истина);
					
					ПомещенияНачислили.Вставить(СтрокаНачисленийАбонента.Помещение, Истина);					
				КонецЕсли; 	
				
		КонецЦикла;
		
		Для Каждого СтрокаНачисленийНП ИЗ ДанныеПоУслуге.НачисленияНПБезПрибораПотребленный Цикл
			ЕстьСуммаНачислений 							= Ложь;
					
			Если ЗначениеЗаполнено(СтрокаНачисленийНП.ОбъектРасчета) Тогда
				яНабор 										= НаборЗаписейНП;
				яНаборОбщий 								= ОбщийОбъемНачислений;
				ЕстьСуммаНачислений 						= Истина;
			Иначе
				яНабор 										= НаборЗаписейПомещение;
				яНаборОбщий 								= ОбщийОбъемНачисленийПомещений;
			КонецЕсли;	
			
			ЗначениеПлощади 								= ДанныеПоУслуге.ПлощадиАбонентов[СтрокаНачисленийНП.ОбъектРасчета];
			
			// снимаем начисленный ранее объем
			Если НЕ СтрокаНачисленийНП.ОбъемУслугиПотребленный = 0 Тогда
				СтрокаНабора  								= яНабор.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаНабора, СтрокаНачисленийНП,,"ОбъемУслуги");
				СтрокаНабора.Распределение 					= Истина;
				//СтрокаНабора.Сумма		 				= 0;
				СтрокаНабора.ОбъемУслуги 					= 0;				
				СтрокаНабора.ОбъемУслугиПотребленный 		= -СтрокаНабора.ОбъемУслугиПотребленный;				
				СтрокаНабора.Период 						= ГраницыПериода.ЗавершениеОП-1;
				
				ЗаполнитьЗначенияСвойств(яНаборОбщий.Добавить(),СтрокаНабора,,"ОбъемУслуги");
			КонецЕсли;
			
			СтрокаНабора  								= яНабор.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаНабора, СтрокаНачисленийНП,,"ОбъемУслуги");
			СтрокаНабора.Распределение 					= Истина;
			СтрокаНабора.СпособНачисления				= СпособНачисленияОДН;
			ОбъемУслугиПотребленный 					= ЗначениеПлощади * ОбъемНаКвМ;			
			КоэфДлительностиПериода 					= (СтрокаНачисленийНП.КонецПериода - СтрокаНачисленийНП.НачалоПериода)/(ГраницыПериода.ЗавершениеОП - ГраницыПериода.НачалоОП);
			СтрокаНабора.ОбъемУслуги 					= 0;			
			СтрокаНабора.ОбъемУслугиПотребленный 		= ОбъемУслугиПотребленный * КоэфДлительностиПериода;			
			СтрокаНабора.Период 						= ГраницыПериода.ЗавершениеОП-1;			
			ПотреблениеАбонентов 						= ПотреблениеАбонентов + СтрокаНабора.ОбъемУслугиПотребленный;			
			ЗаполнитьЗначенияСвойств(яНаборОбщий.Добавить(),СтрокаНабора,,"ОбъемУслуги");
			
		КонецЦикла;

		ОсталосьРаспределить 									= НадоРаспределить - ПотреблениеАбонентов;		
		
	ИначеЕсли ЕстьПотреблениеПоПрибору и НазначениеПрибораУчета = Перечисления.энргНазначениеПУ.МОП Тогда
		ОсталосьРаспределить 									= НадоРаспределить;		
		СпособНачисленияОДН 									= ДанныеПоУслуге.СпособНачисленияМКД;
	ИначеЕсли ЕстьПотреблениеПоПрибору Тогда
		ОсталосьРаспределить 									= НадоРаспределить - ДанныеПоУслуге.ПотреблениеАбонентовПотребленный;		
		СпособНачисленияОДН 									= ДанныеПоУслуге.СпособНачисленияМКД;	
	Иначе
		ОсталосьРаспределить 									= НадоРаспределить; 		
		СпособНачисленияОДН 									= Перечисления.энргСпособНачислений.ПоНормативу;
	КонецЕсли;
		
	СписываемИзОтрицательного 	= Мин(Макс(ОсталосьРаспределить,0), ДанныеПоУслуге.ОтрицательныйОбъемРаспределения.ОбъемУслугиПотребленный);
	ПроцентОтОбъема 			= ДанныеПоУслуге.ПроцентРаспределенияОтрицательногоОбъема;
	Если СписываемИзОтрицательного > 0 и ПроцентОтОбъема > 0 Тогда 		
		ОбъемПроцентаКРаспределению = Макс(ОсталосьРаспределить,0) * (ПроцентОтОбъема / 100);
		ОсталосьРаспределить		= ?(ОбъемПроцентаКРаспределению > СписываемИзОтрицательного, Макс(ОсталосьРаспределить,0) - СписываемИзОтрицательного, ОбъемПроцентаКРаспределению);
		СписываемИзОтрицательного	= ОсталосьРаспределить;		
	Иначе 
		ОсталосьРаспределить 		= ОсталосьРаспределить - СписываемИзОтрицательного;
	КонецЕсли;	
	
	Если Не ДанныеПоУслуге.РаспределятьПолностью И Не ДанныеПоУслуге.НеРаспределятьСверхнорматив Тогда
		Если ОсталосьРаспределить > ДанныеПоУслуге.ОбъемУслугиНорматив  Тогда
			СверхнормативМКД 									= ОсталосьРаспределить - ДанныеПоУслуге.ОбъемУслугиНорматив;
			СпособНачисленияОДН 								= Перечисления.энргСпособНачислений.ПоНормативу;
			ОсталосьРаспределить 								= ДанныеПоУслуге.ОбъемУслугиНорматив;
			//добавить сверх в регистр
			
			СтрокаНабора  										= НаборЗаписейСверхНорма.Добавить();
			СтрокаНабора.Период 								= ГраницыПериода.ЗавершениеОП-1;
			СтрокаНабора.Район 									= Район;
			СтрокаНабора.Организация							= Организация;
			СтрокаНабора.МКД									= МКД;
			СтрокаНабора.Услуга									= Услуга;
			СтрокаНабора.ОбъемУслугиПотребленный				= СверхнормативМКД;			
		КонецЕсли;		
	КонецЕсли;	
	
	Если ОсталосьРаспределить < 0 Тогда
		СтрокаНабораОтрицательный  								= НаборОтрицательныйОбъемРаспределения.ДобавитьПриход();
		СтрокаНабораОтрицательный.Период	 					= ГраницыПериода.ЗавершениеОП-1;
		СтрокаНабораОтрицательный.Организация 					= Организация;
		СтрокаНабораОтрицательный.Район 						= Район;
		СтрокаНабораОтрицательный.МКД 							= МКД;
		СтрокаНабораОтрицательный.Услуга 						= Услуга;
		СтрокаНабораОтрицательный.ПериодНачисления				= ПериодНачисления;
		СтрокаНабораОтрицательный.ОбъемУслугиПотребленный		= -ОсталосьРаспределить;
		СтрокаНабораОтрицательный.ПериодРасчета 				= ПериодНачисления;
	КонецЕсли;	
	
	Если СписываемИзОтрицательного > 0 Тогда
		ОтрицательныйОбъемРасшифровка 							= ДанныеПоУслуге.ОтрицательныйОбъемРаспределения.Расшифровка;
		ИндексРасшифровки 										= 0;
		ОсталосьСписатьИзОтрицательного 						= СписываемИзОтрицательного;
		Пока ОсталосьСписатьИзОтрицательного > 0 и ИндексРасшифровки < ОтрицательныйОбъемРасшифровка.Количество() Цикл
			Снимаем 											= Мин(ОсталосьСписатьИзОтрицательного,ОтрицательныйОбъемРасшифровка[ИндексРасшифровки].ОбъемУслугиПотребленный);
			СтрокаНабораОтрицательный  							= НаборОтрицательныйОбъемРаспределения.ДобавитьРасход();
			СтрокаНабораОтрицательный.Период	 				= ГраницыПериода.ЗавершениеОП-1;
			СтрокаНабораОтрицательный.Организация 				= Организация;
			СтрокаНабораОтрицательный.Район 					= Район;
			СтрокаНабораОтрицательный.МКД 						= МКД;
			СтрокаНабораОтрицательный.Услуга 					= Услуга;
			СтрокаНабораОтрицательный.ПериодНачисления			= ОтрицательныйОбъемРасшифровка[ИндексРасшифровки].ПериодНачисленияОбъема;
			СтрокаНабораОтрицательный.ОбъемУслугиПотребленный	= Снимаем;
			СтрокаНабораОтрицательный.ПериодРасчета 			= ПериодНачисления;			
			ИндексРасшифровки 									= ИндексРасшифровки + 1;
			ОсталосьСписатьИзОтрицательного 					= ОсталосьСписатьИзОтрицательного - Снимаем;
		КонецЦикла;		
	КонецЕсли;	
	
	Если ОсталосьРаспределить <= 0 Тогда
		Возврат;
	КонецЕсли;	
			
	АбонентыДляРаспределения 									= ДанныеПоУслуге.АбонентыДляРаспределения;
	Распределили 												= 0; 	
	Для Сч = 0 По АбонентыДляРаспределения.ВГраница() Цикл
		ДанныеАбонента 											= АбонентыДляРаспределения[Сч];		
			
		Если ЗначениеЗаполнено(ДанныеПоУслуге.ЗависитОтУслуги) Тогда
			ОбъемУслугиПотребленный 							= 0;			
			Если РаспределениеОбъемаПоУслугам[ДанныеПоУслуге.ЗависитОтУслуги] = Неопределено Тогда
				ОбъемУслугиПотребленный 						= 0; 
			ИначеЕсли РаспределениеОбъемаПоУслугам[ДанныеПоУслуге.ЗависитОтУслуги][ДанныеАбонента.Абонент] = Неопределено Тогда
				ОбъемУслугиПотребленный 						= 0;
			Иначе
				ОбъемУслугиПотребленный 						= РаспределениеОбъемаПоУслугам[ДанныеПоУслуге.ЗависитОтУслуги][ДанныеАбонента.Абонент] * ДанныеПоУслуге.ЗначениеНорматива;
			КонецЕсли;
			
			
		ИначеЕсли Сч = АбонентыДляРаспределения.ВГраница() Тогда
			ОбъемУслугиПотребленный 							= ОсталосьРаспределить - Распределили;
			
		ИначеЕсли ДанныеПоУслуге.ВсегоПлощадьАбонентов = 0 Тогда
			ВызватьИсключение "Для МКД " + СокрЛП(МКД) + " не задана площадь помещений";	
		Иначе			
			кПлощади 										= ДанныеАбонента.ЗначениеПлощади / ДанныеПоУслуге.ВсегоПлощадьАбонентов;
			ОбъемУслугиПотребленный 						= ОсталосьРаспределить * кПлощади;
			
		КонецЕсли; 				
		
		РаспределениеПоАбонентам.Вставить(ДанныеАбонента.Абонент, ОбъемУслугиПотребленный);
		
		
		Если ДанныеАбонента.НП Тогда
			
			СтрокаНабора  									= НаборЗаписейНП.Добавить();
			СтрокаНабора.Период 							= ГраницыПериода.ЗавершениеОП-1;
			СтрокаНабора.Район 								= Район;
			СтрокаНабора.Распределение 						= Истина;
			СтрокаНабора.Организация						= Организация;
			СтрокаНабора.МКД 								= МКД;
			СтрокаНабора.Договор							= ДанныеАбонента.Договор;
			СтрокаНабора.ОбъектРасчета						= ДанныеАбонента.Абонент;
			СтрокаНабора.Услуга								= Услуга;
			СтрокаНабора.ТочкаУчета							= ПустаяТочкаУчета;
			СтрокаНабора.ВидНачисления 						= ВидНачисления;
			СтрокаНабора.СпособНачисления 					= СпособНачисленияОДН;			
			СтрокаНабора.Поставщик 							= ДанныеАбонента.Поставщик;
			СтрокаНабора.ПериодРасчета						= ПериодНачисления;
			СтрокаНабора.ПериодНачисления					= ПериодНачисления;
			
			Если ДанныеАбонента.РасчетПоФактическомуОбъему Тогда
				СтрокаНабора.ОбъемУслуги					= ОбъемУслугиПотребленный;
				СтрокаНабора.ОбъемУслугиПотребленный		= 0;				
			Иначе
				СтрокаНабора.ОбъемУслуги					= 0;
				СтрокаНабора.ОбъемУслугиПотребленный		= ОбъемУслугиПотребленный;
			КонецЕсли;
						
			СтрокаНабора.ЗначениеПлощади 					= ДанныеАбонента.ЗначениеПлощади;
			Распределили 									= Распределили + СтрокаНабора.ОбъемУслугиПотребленный;
			
						
		ИначеЕсли ЗначениеЗаполнено(ДанныеАбонента.Абонент) Тогда
			ХэшСтрокиТарифа 								= ХэшСтрокиТарифа(ДанныеАбонента.ТарифнаяГруппа,Услуга,ДанныеАбонента.Поставщик,Справочники.энргТарифныеЗоны.БезРазбивки); 
			ОписаниеЗначениеТарифа 							= ?(ЗначенияТарифов[ХэшСтрокиТарифа] = Неопределено, Новый Структура("Значение,ЗначениеТарифаРЭК, ЗначениеСверхНорматива", 0,0,0), ЗначенияТарифов[ХэшСтрокиТарифа]);
			
			СтрокаНабора  									= НаборЗаписей.Добавить();
			СтрокаНабора.Период 							= ГраницыПериода.ЗавершениеОП-1;
			СтрокаНабора.Район 								= Район;
			СтрокаНабора.Распределение 						= Истина;
			СтрокаНабора.Организация						= Организация;
			СтрокаНабора.ЧастныйСектор 						= Ложь;
			СтрокаНабора.Строение							= МКД;
			СтрокаНабора.Помещение							= ДанныеАбонента.Помещение;
			СтрокаНабора.Абонент							= ДанныеАбонента.Абонент;
			СтрокаНабора.Услуга								= Услуга;
			СтрокаНабора.ТочкаУчета							= ПустаяТочкаУчета;
			СтрокаНабора.ВидНачисления 						= ВидНачисления;
			СтрокаНабора.НаправлениеИспользованияТУ 		= Справочники.энргНаправлениеИспользованияТочекУчета.ОсновноеНаправление;
			СтрокаНабора.Измеритель 						= Справочники.энргНаправлениеИспользованияТочекУчета.ПустаяСсылка();
			СтрокаНабора.СпособНачисления 					= СпособНачисленияОДН;
			СтрокаНабора.Поставщик 							= ДанныеАбонента.Поставщик;
			СтрокаНабора.ПериодРасчета						= ПериодНачисления;
			СтрокаНабора.ПериодНачисления					= ПериодНачисления;
			СтрокаНабора.ЗначениеПлощади 					= ДанныеАбонента.ЗначениеПлощади;
			СтрокаНабора.ОбъемУслуги						= 0;
			СтрокаНабора.ОбъемУслугиПотребленный			= ОбъемУслугиПотребленный;
			СтрокаНабора.ТарифнаяГруппа                     = ДанныеАбонента.ТарифнаяГруппа;
			СтрокаНабора.ТарифнаяЗона                     	= ДанныеАбонента.ТарифнаяЗона;
		
			Распределили 									= Распределили + СтрокаНабора.ОбъемУслугиПотребленный;
			ЗначениеТарифаСверхНормы						= ?(НЕ ИспользоватьТарифРек, ОписаниеЗначениеТарифа.ЗначениеСверхНорматива, ОписаниеЗначениеТарифа.ЗначениеТарифаРЭК);
			ЗначениеТарифа 									= ?(НЕ ИспользоватьТарифРек, ОписаниеЗначениеТарифа.Значение, ОписаниеЗначениеТарифа.ЗначениеТарифаРЭК);
			СтрокаНабора.ЗначениеТарифа						= ЗначениеТарифа;
			
			ОбъемУслугиСверхНормы 							= 0;
			Если ДанныеПоУслуге.КорректироватьИндивидуальныйОбъемСУчетомОДПУ Тогда
				ЗначениеСоциальнойНормыРаспределение 	= ОбъемУслугиПотребленный / ДанныеАбонента.ЗначениеПлощади * ДанныеАбонента.СоцПлощадь;
				
				Если ДанныеАбонента.ОбъемУслугиПотребленный  + ОбъемУслугиПотребленный > ЗначениеСоциальнойНормыРаспределение И ДанныеАбонента.ЗначениеСоциальнойНормы >= 0 Тогда
					ОстатокСоцНорма 						= ОбъемУслугиПотребленный - ЗначениеСоциальнойНормыРаспределение;
					ОбъемРаспределяем 						= ОбъемУслугиПотребленный;
					Если ОстатокСоцНорма > 0 Тогда 
						ОбъемУслугиСверхНормы						= Мин(ОстатокСоцНорма,ОбъемРаспределяем);
					Иначе
						ОбъемУслугиСверхНормы 						= 0;	
					КонецЕсли;
					ОбъемУслугиПотребленный 					= ОбъемРаспределяем - Макс(ОстатокСоцНорма, 0);
				КонецЕсли; 			
			КонецЕсли;		
			
			Если НЕ ОбъемУслугиПотребленный = 0 Тогда 						
				СтрокаНабора.ОбъемУслуги		= 0;
				Если ДанныеПоУслуге.НеНачислятьУслугуАбонентам Тогда
					СтрокаНабора.ОбъемУслугиПотребленный 				= 0;
				Иначе
					СтрокаНабора.ОбъемУслугиПотребленный 				= ОбъемУслугиПотребленный;
				КонецЕсли;
			ИначеЕсли ОбъемУслугиСверхНормы > 0 Тогда
				СтрокаНабора.СверхНорматива 				= Истина;
				СтрокаНабора.ЗначениеТарифа 				= ЗначениеТарифаСверхНормы;			
				СтрокаНабора.ОбъемУслуги					= 0;
				СтрокаНабора.ОбъемУслугиПотребленный		= ОбъемУслугиСверхНормы;
				СтрокаНабора.Сумма							= 0;
			КонецЕсли;
			
			Если НЕ ОбъемУслугиПотребленный = 0 и НЕ ОбъемУслугиСверхНормы = 0 Тогда
				СтрокаСверхНормы 							= НаборЗаписей.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаСверхНормы,СтрокаНабора);
				СтрокаСверхНормы.СверхНорматива 			= Истина;
				СтрокаСверхНормы.ЗначениеТарифа 			= ЗначениеТарифаСверхНормы;			
				СтрокаСверхНормы.ОбъемУслуги				= 0;
				СтрокаСверхНормы.ОбъемУслугиПотребленный	= ОбъемУслугиСверхНормы;
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ОбщийОбъемНачислений.Добавить(), СтрокаНабора);			
		Иначе
			
			//ХэшСтрокиТарифа 								= ХэшСтрокиТарифа(ДанныеАбонента.ТарифнаяГруппа,Услуга,ДанныеАбонента.Поставщик,Справочники.энргТарифныеЗоны.БезРазбивки); 
			//ОписаниеЗначениеТарифа 							= ?(ЗначенияТарифов[ХэшСтрокиТарифа] = Неопределено, Новый Структура("Значение,ЗначениеТарифаРЭК, ЗначениеСверхНорматива", 0,0,0), ЗначенияТарифов[ХэшСтрокиТарифа]); 			
			
			СтрокаНабора  									= НаборЗаписейПомещение.Добавить();
			СтрокаНабора.Период 							= ГраницыПериода.ЗавершениеОП-1;
			СтрокаНабора.Район 								= Район;
			СтрокаНабора.Распределение 						= Истина;
			СтрокаНабора.Организация						= Организация;
			СтрокаНабора.ЧастныйСектор 						= Ложь;
			СтрокаНабора.Строение							= МКД;
			СтрокаНабора.Помещение							= ДанныеАбонента.Помещение; // TODO FIX ME
			СтрокаНабора.Услуга								= Услуга;
			СтрокаНабора.ТочкаУчета							= ПустаяТочкаУчета;
			СтрокаНабора.ВидНачисления 						= ВидНачисления;
			СтрокаНабора.Поставщик 							= ДанныеАбонента.Поставщик;
			СтрокаНабора.ПериодРасчета						= ПериодНачисления;
			СтрокаНабора.ПериодНачисления					= ПериодНачисления;
			СтрокаНабора.ОбъемУслуги						= 0;
			СтрокаНабора.ОбъемУслугиПотребленный			= ОбъемУслугиПотребленный;
			СтрокаНабора.ЗначениеПлощади 					= ДанныеАбонента.ЗначениеПлощади;
			СтрокаНабора.СпособНачисления 					= СпособНачисленияОДН;
			//СтрокаНабора.ЗначениеТарифа 					= ?(НЕ ИспользоватьТарифРек, ОписаниеЗначениеТарифа.Значение, ОписаниеЗначениеТарифа.ЗначениеТарифаРЭК);
			
			ЗаполнитьЗначенияСвойств(ОбщийОбъемНачисленийПомещений.Добавить(), СтрокаНабора);
			
			Распределили 									= Распределили + СтрокаНабора.ОбъемУслугиПотребленный;
			
			
			РазделенныеЛицевыеСчета 						= ДанныеПоУслуге.РазделенныеЛицевыеСчета;
			ПомещенияПотомки								= РазделенныеЛицевыеСчета[ДанныеАбонента.Помещение];
			СуммаПлощадейПомещения 							= 0;
			Для Каждого ПомещениеПотомок Из ПомещенияПотомки Цикл
				ДанныеПомещения  							= ПомещениеПотомок.Значение[Услуга];
				СуммаПлощадейПомещения 						= СуммаПлощадейПомещения + ДанныеПомещения.Значениеплощади; 
			КонецЦикла;		
			
			Для Каждого ПомещениеПотомок Из ПомещенияПотомки Цикл
				ДанныеПомещения  							= ПомещениеПотомок.Значение[Услуга];
				ОбъемУслугиПотомка							= ?(НЕ СуммаПлощадейПомещения = 0, ОбъемУслугиПотребленный * ДанныеПомещения.ЗначениеПлощади / СуммаПлощадейПомещения, 0);;
				ЗначениеСоциальнойНормы 					= -1;
				Если ДанныеПоУслуге.КорректироватьИндивидуальныйОбъемСУчетомОДПУ Тогда
					ЗначениеСоциальнойНормы 				= ОбъемУслугиПотомка * (ДанныеПомещения.ЗначениеСоциальнойНормы * ДанныеПомещения.КоличествоЧеловек)  / ДанныеПомещения.ЗначениеПлощади 
				КонецЕсли;
				ХэшСтрокиТарифа 							= ХэшСтрокиТарифа(ДанныеПомещения.ТарифнаяГруппа,Услуга,ДанныеПомещения.Поставщик,Справочники.энргТарифныеЗоны.БезРазбивки); 
				ЗначениеТарифа 								= ?(ЗначенияТарифов[ХэшСтрокиТарифа] = Неопределено, Новый Структура("Значение,ЗначениеТарифаРЭК", 0, 0), ЗначенияТарифов[ХэшСтрокиТарифа]);
								
				ХэшСтрокиТарифа 							= ХэшСтрокиТарифа(ДанныеПомещения.ТарифнаяГруппа,Услуга,ДанныеПомещения.Поставщик,Справочники.энргТарифныеЗоны.БезРазбивки); 
				ЗначениеТарифа 								= ?(ЗначенияТарифов[ХэшСтрокиТарифа] = Неопределено, Новый Структура("Значение,ЗначениеТарифаРЭК", 0, 0), ЗначенияТарифов[ХэшСтрокиТарифа]);
				СтрокаНабора  								= НаборЗаписей.Добавить();
				СтрокаНабора.Период 						= ГраницыПериода.ЗавершениеОП-1;
				СтрокаНабора.Район 							= Район;
				СтрокаНабора.Распределение 					= Истина;
				СтрокаНабора.Организация					= Организация;
				СтрокаНабора.ЧастныйСектор 					= Ложь;
				СтрокаНабора.Строение						= МКД;
				СтрокаНабора.Помещение						= ПомещениеПотомок.Ключ;
				СтрокаНабора.Абонент						= ДанныеПомещения.Абонент;
				СтрокаНабора.Услуга							= Услуга;
				СтрокаНабора.ТочкаУчета						= ПустаяТочкаУчета;
				СтрокаНабора.ВидНачисления 					= ВидНачисления;
				СтрокаНабора.НаправлениеИспользованияТУ 	= Справочники.энргНаправлениеИспользованияТочекУчета.ОсновноеНаправление;
				СтрокаНабора.СпособНачисления 				= СпособНачисленияОДН;
				СтрокаНабора.ЗначениеТарифа 				= ?(НЕ ИспользоватьТарифРек, ЗначениеТарифа.Значение, ЗначениеТарифа.ЗначениеТарифаРЭК);
				СтрокаНабора.Поставщик 						= ДанныеПомещения.Поставщик;
				СтрокаНабора.ПериодРасчета					= ПериодНачисления;
				СтрокаНабора.ПериодНачисления				= ПериодНачисления;
				СтрокаНабора.ЗначениеПлощади 				= ДанныеПомещения.ЗначениеПлощади;
				СтрокаНабора.ТарифнаяЗона                   = ДанныеАбонента.ТарифнаяЗона;
				СтрокаНабора.ТарифнаяГруппа                 = ДанныеАбонента.ТарифнаяГруппа;
				СтрокаНабора.ОбъемУслуги					= 0;				 									
				СтрокаНабора.Сумма							= 0;
				
				Если ОбъемУслугиПотомка > ЗначениеСоциальнойНормы Тогда									
					СтрокаНабора.ОбъемУслугиПотребленный 				= ЗначениеСоциальнойНормы;					
					СтрокаНабора.ЗначениеТарифа 			= ?(НЕ ИспользоватьТарифРек, ЗначениеТарифа.Значение, ЗначениеТарифа.ЗначениеТарифаРЭК);
					
					СтрокаСверхНормы 						= НаборЗаписей.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаСверхНормы, СтрокаНабора);
					СтрокаСверхНормы.ЗначениеТарифа 		= ?(НЕ ИспользоватьТарифРек, ЗначениеТарифа.ЗначениеСверхНорматива, ЗначениеТарифа.ЗначениеТарифаРЭК);
					СтрокаСверхНормы.ОбъемУслугиПотребленный= ОбъемУслугиПотомка - ЗначениеСоциальнойНормы;
					СтрокаСверхНормы.СверхНорматива 		= Истина;
					СтрокаСверхНормы.Сумма					= 0;
				Иначе
					СтрокаНабора.ОбъемУслугиПотребленный 	= ОбъемУслугиПотомка;
					СтрокаНабора.ЗначениеТарифа 			= ?(НЕ ИспользоватьТарифРек, ЗначениеТарифа.Значение, ЗначениеТарифа.ЗначениеТарифаРЭК);
				КонецЕсли;								
			КонецЦикла;			
		КонецЕсли;
	КонецЦикла;	  
	
	Если РаспределениеОбъемаПоУслугам[Услуга] = Неопределено Тогда
		РаспределениеОбъемаПоУслугам.Вставить(Услуга, РаспределениеПоАбонентам);
	КонецЕсли;	
	
	ДанныеПоУслуге.ОбщийОбъемНачисленийПотребленный						= ОбщийОбъемНачислений;
	ДанныеПоУслуге.ОбщийОбъемНачисленийПомещенийПотребленный			= ОбщийОбъемНачисленийПомещений;
	
КонецПроцедуры

Процедура ПрочитатьВспомогательныеДанныеРаспределениеМКД(МВТ, Организация, ПериодНачисления, Район, Строение, ГраницыПериода)	
	Запрос  						= Новый Запрос;
	Запрос.МенеджерВременныхТаблиц 	= МВТ;
	Запрос.УстановитьПараметр("Организация",		Организация);
	Запрос.УстановитьПараметр("ПериодНачисления",	ПериодНачисления);
	Запрос.УстановитьПараметр("Район",				Район);
	Запрос.УстановитьПараметр("Строение",			Строение);
	Запрос.УстановитьПараметр("Поставщик",			Константы.энргПоставщикПоУмолчанию.Получить());
	Запрос.УстановитьПараметр("Период",				ГраницыПериода.КонецПериодаРасчета - 1); 
	Запрос.Текст 					= ТекстЗапросаВспомогательныеДанныеРаспределениеМКД(Строение);
	Запрос.Выполнить();
КонецПроцедуры

Процедура ЗаполнитьРазделенныеЛицевыеСчета(КлючРазделенныеЛицевыеСчета, РазделенныеЛицевыеСчета, ВыборкаРазделенныеЛицевыеСчета, ВыборкаОбъемМКД, тзЗначенияСоциальныхНормативов)
	КлючПоискаСоциальногоНорматива 			= "КлючСоцНорматива,НаправлениеИспользованияТУ,Услуга";
	Пока ВыборкаРазделенныеЛицевыеСчета.Строение  = ВыборкаОбъемМКД.Строение Цикл
		
		Если ВыборкаРазделенныеЛицевыеСчета.ПомещениеРодитель = null Тогда
			Если НЕ ВыборкаРазделенныеЛицевыеСчета.Следующий() Тогда
				Прервать;
			КонецЕсли;
			Продолжить;
		КонецЕсли;
		
		Если РазделенныеЛицевыеСчета[ВыборкаРазделенныеЛицевыеСчета.ПомещениеРодитель] = Неопределено Тогда													
			ЗначениеСоотвествия 						= Новый Структура(КлючРазделенныеЛицевыеСчета);
			ЗаполнитьЗначенияСвойств(ЗначениеСоотвествия,ВыборкаРазделенныеЛицевыеСчета);
			ЗначениеСоотвествия.КоличествоЧеловек 		= энргРаботаСПараметрамиРасчетаАбонентаСервер.КоличествоЧеловек(ЗначениеСоотвествия);
			СтруктураПоиска 							= Новый Структура(КлючПоискаСоциальногоНорматива);
			ЗаполнитьЗначенияСвойств(СтруктураПоиска,ВыборкаРазделенныеЛицевыеСчета);  			
			СтрокиСоциальнойНормы 						= тзЗначенияСоциальныхНормативов.НайтиСтроки(СтруктураПоиска);
			ЗначениеСоциальнойНормы 					= 0;
			Если СтрокиСоциальнойНормы.Количество() > 0 Тогда
				ЗначениеСоциальнойНормы 				= СтрокиСоциальнойНормы[0].ЗначениеНорматива;
			КонецЕсли;
			ЗначениеСоотвествия.ЗначениеСоциальнойНормы = ЗначениеСоциальнойНормы;
			СоотвествиеУслуга  							= Новый Соответствие;
			СоотвествиеУслуга.Вставить(ВыборкаРазделенныеЛицевыеСчета.Услуга,ЗначениеСоотвествия);
			СоотвествиеПомещение 						= Новый Соответствие;
			СоотвествиеПомещение.Вставить(ВыборкаРазделенныеЛицевыеСчета.Помещение,СоотвествиеУслуга);
			РазделенныеЛицевыеСчета.Вставить(ВыборкаРазделенныеЛицевыеСчета.ПомещениеРодитель, СоотвествиеПомещение); 			  
		ИначеЕсли РазделенныеЛицевыеСчета[ВыборкаРазделенныеЛицевыеСчета.ПомещениеРодитель][ВыборкаРазделенныеЛицевыеСчета.Помещение] = Неопределено Тогда
			ЗначениеСоотвествия 						= Новый Структура(КлючРазделенныеЛицевыеСчета);
			ЗаполнитьЗначенияСвойств(ЗначениеСоотвествия,ВыборкаРазделенныеЛицевыеСчета);
			ЗначениеСоотвествия.КоличествоЧеловек 		= энргРаботаСПараметрамиРасчетаАбонентаСервер.КоличествоЧеловек(ЗначениеСоотвествия);
			СтруктураПоиска 							= Новый Структура(КлючПоискаСоциальногоНорматива);
			ЗаполнитьЗначенияСвойств(СтруктураПоиска,ВыборкаРазделенныеЛицевыеСчета);  			
			СтрокиСоциальнойНормы 						= тзЗначенияСоциальныхНормативов.НайтиСтроки(СтруктураПоиска);
			ЗначениеСоциальнойНормы 					= 0;
			Если СтрокиСоциальнойНормы.Количество() > 0 Тогда
				ЗначениеСоциальнойНормы 				= СтрокиСоциальнойНормы[0].ЗначениеНорматива;
			КонецЕсли;
			ЗначениеСоотвествия.ЗначениеСоциальнойНормы = ЗначениеСоциальнойНормы;
			СоотвествиеУслуга  							= Новый Соответствие;
			СоотвествиеУслуга.Вставить(ВыборкаРазделенныеЛицевыеСчета.Услуга,ЗначениеСоотвествия);
			РазделенныеЛицевыеСчета[ВыборкаРазделенныеЛицевыеСчета.ПомещениеРодитель].Вставить(ВыборкаРазделенныеЛицевыеСчета.Помещение,СоотвествиеУслуга);
		Иначе 	
			ЗначениеСоотвествия 						= Новый Структура(КлючРазделенныеЛицевыеСчета);
			ЗаполнитьЗначенияСвойств(ЗначениеСоотвествия,ВыборкаРазделенныеЛицевыеСчета);
			ЗначениеСоотвествия.КоличествоЧеловек 		= энргРаботаСПараметрамиРасчетаАбонентаСервер.КоличествоЧеловек(ЗначениеСоотвествия);
			СтруктураПоиска 							= Новый Структура(КлючПоискаСоциальногоНорматива);
			ЗаполнитьЗначенияСвойств(СтруктураПоиска,ВыборкаРазделенныеЛицевыеСчета);  			
			СтрокиСоциальнойНормы 						= тзЗначенияСоциальныхНормативов.НайтиСтроки(СтруктураПоиска);
			ЗначениеСоциальнойНормы 					= 0;
			Если СтрокиСоциальнойНормы.Количество() > 0 Тогда
				ЗначениеСоциальнойНормы 				= СтрокиСоциальнойНормы[0].ЗначениеНорматива;
			КонецЕсли;
			ЗначениеСоотвествия.ЗначениеСоциальнойНормы = ЗначениеСоциальнойНормы;
			РазделенныеЛицевыеСчета[ВыборкаРазделенныеЛицевыеСчета.ПомещениеРодитель][ВыборкаРазделенныеЛицевыеСчета.Помещение].Вставить(ВыборкаРазделенныеЛицевыеСчета.Услуга, ЗначениеСоотвествия);
		КонецЕсли;					
		
		Если НЕ ВыборкаРазделенныеЛицевыеСчета.Следующий() Тогда
			Прервать;
		КонецЕсли;						
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаписатьНаборыЗаписейПриРаспределении(Отказ, ДокументОбъект, ТекстИсключения, НаборВыполненные, НаборОтрицательныйОбъемРаспределения,НаборЗаписей, НаборЗаписейНП, НаборЗаписейПомещений, НаборЗаписейСверхНорма)
	
	Если Отказ Тогда
		ОтменитьТранзакцию();
		Возврат
	КонецЕсли;
	
	Если (Не НаборЗаписей = Неопределено и НаборЗаписей.Количество() > 0)  
		ИЛИ (Не НаборЗаписейНП = Неопределено и НаборЗаписейНП.Количество() > 0)   
		ИЛИ (НЕ НаборЗаписейПомещений = Неопределено И НаборЗаписейПомещений.Количество() > 0)
		ИЛИ (НЕ НаборЗаписейСверхНорма = Неопределено И НаборЗаписейСверхНорма.Количество() > 0)
		ИЛИ (НЕ НаборОтрицательныйОбъемРаспределения = Неопределено И НаборОтрицательныйОбъемРаспределения.Количество() > 0) Тогда
		
		НаборОтложенныхДвижений	= РегистрыСведений.энргОтложенныеДвиженияДокументов.СоздатьНаборЗаписей();
		НаборОтложенныхДвижений.Отбор.Организация.Установить(НаборЗаписей.ДополнительныеСвойства.Организация);
		НаборОтложенныхДвижений.Отбор.ПериодНачисления.Установить(НаборЗаписей.ДополнительныеСвойства.ПериодНачисления);
		НаборОтложенныхДвижений.Отбор.Район.Установить(НаборЗаписей.ДополнительныеСвойства.Район);
		НаборОтложенныхДвижений.Отбор.РазделЗаписи.Установить(Перечисления.энргРазделыЗаписи.РаспределениеМКД);
		НаборОтложенныхДвижений.Отбор.ЧастныйСектор.Установить(Ложь);
		НаборОтложенныхДвижений.Отбор.Строение.Установить(НаборЗаписей.ДополнительныеСвойства.Строение);
		НаборОтложенныхДвижений.Записать();					
		
		Попытка 					
			Если Не ДокументОбъект = Неопределено Тогда
				ДокументОбъект.ДополнительныеСвойства.Вставить("ПроведениеРазрешено",Истина);
				ДокументОбъект.записать(РежимЗаписиДокумента.Запись);
			КонецЕсли;  			
			НаборОтрицательныйОбъемРаспределения.Записать();
			НаборЗаписей.Записать(); 			
			НаборЗаписейПомещений.Записать();		
			НаборЗаписейНП.Записать(); 			
			НаборЗаписейСверхНорма.Записать();			
			
			Если НЕ НаборВыполненные = Неопределено Тогда
				НаборВыполненные.Записать(НаборВыполненные.ДополнительныеСвойства.Замещать);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
		Исключение
			Отказ 									= Истина;
			ИнформацияОбОшибке 						= ИнформацияОбОшибке();
			ТекстИсключения 						= ТекстИсключения + ?(ПустаяСтрока(ТекстИсключения),"",Символы.ПС) + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке);
			ОтменитьТранзакцию();
		КонецПопытки;
	Иначе
		Попытка
			НаборОтложенныхДвижений					= РегистрыСведений.энргОтложенныеДвиженияДокументов.СоздатьНаборЗаписей();
			НаборОтложенныхДвижений.Отбор.Организация.Установить(НаборЗаписей.ДополнительныеСвойства.Организация);
			НаборОтложенныхДвижений.Отбор.ПериодНачисления.Установить(НаборЗаписей.ДополнительныеСвойства.ПериодНачисления);
			НаборОтложенныхДвижений.Отбор.Район.Установить(НаборЗаписей.ДополнительныеСвойства.Район);
			НаборОтложенныхДвижений.Отбор.РазделЗаписи.Установить(Перечисления.энргРазделыЗаписи.РаспределениеМКД);
			НаборОтложенныхДвижений.Отбор.ЧастныйСектор.Установить(Ложь);
			НаборОтложенныхДвижений.Отбор.Строение.Установить(НаборЗаписей.ДополнительныеСвойства.Строение);
			НаборОтложенныхДвижений.Записать();
			ЗафиксироватьТранзакцию();			
		Исключение
			ОтменитьТранзакцию();
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДанныеАбонентовДляРаспределения(ДанныеПоУслуге, ВыборкаАбоненты, ВыборкаОбъемМКД, ВыборкаОтрицательныйОбъемРаспределения, ВыборкаОбъемПоПриборуКорректировать, ВыборкаОбъемПоПриборуНПКорректировать)
	перем ТекПомещение,ДанныеАбонента;
	
	мАбонентыДляРаспределения 								= ДанныеПоУслуге.АбонентыДляРаспределения;
	ПотреблениеАбонентов 									= ДанныеПоУслуге.ПотреблениеАбонентов;
	ПотреблениеАбонентовПоПрибору 							= ДанныеПоУслуге.ПотреблениеАбонентовПоПрибору;
	ПотреблениеАбонентовПоФакту 							= ДанныеПоУслуге.ПотреблениеАбонентовПотребленный;
	ПотреблениеАбонентовПоПриборуПоФакту 					= ДанныеПоУслуге.ПотреблениеАбонентовПоПриборуПотребленный;
	ВсегоПлощадьАбонентовПоПрибору 							= ДанныеПоУслуге.ВсегоПлощадьАбонентовПоПрибору;
	
	ДанныеПоУслуге.ПоказанияПредоставлены 					= ВыборкаОбъемМКД.ПоказанияПредоставлены;
	ДанныеПоУслуге.СпособНачисленияМКД 						= ВыборкаОбъемМКД.СпособНачисления;
	ДанныеПоУслуге.НазначениеПрибораУчета 					= ВыборкаОбъемМКД.НазначениеПрибораУчета;
	
	// Двигаем выборку абонентов
	Пока НЕ ВыборкаАбоненты.Строение = ВыборкаОбъемМКД.Строение ИЛИ НЕ ВыборкаАбоненты.Услуга = ВыборкаОбъемМКД.Услуга Цикл
		Если НЕ ВыборкаАбоненты.Следующий() Тогда
			Прервать;
			ВыборкаАбоненты.сбросить();
		КонецЕсли;				
	КонецЦикла;
	
	ОбщийОбъемНачислений 									= ДанныеПоУслуге.ОбщийОбъемНачислений;
	ОбщийОбъемНачисленийПомещений							= ДанныеПоУслуге.ОбщийОбъемНачисленийПомещений;
	ОбщийОбъемНачисленийПотребленный 						= ДанныеПоУслуге.ОбщийОбъемНачисленийПотребленный;
	ОбщийОбъемНачисленийПомещенийПотребленный				= ДанныеПоУслуге.ОбщийОбъемНачисленийПомещенийПотребленный;
	ВсеПоПрибору 											= ДанныеПоУслуге.УВсехАбонентовПоПрибору;
	ВсеПоПриборуПотребленный 								= ДанныеПоУслуге.УВсехАбонентовПоПриборуПотребленный;
	ВсегоПлощадьАбонентовПоПрибору 							= ДанныеПоУслуге.ВсегоПлощадьАбонентовПоПрибору;
	ВсегоПлощадьАбонентовПоПриборуПотребленный 				= ДанныеПоУслуге.ВсегоПлощадьАбонентовПоПриборуПотребленный;
	ЕстьРасходПоПрибору 									= Ложь;
	ЕстьРасходПоПриборуПотребленный 						= Ложь;
	
	Пока ВыборкаАбоненты.Строение = ВыборкаОбъемМКД.Строение и ВыборкаАбоненты.Услуга = ВыборкаОбъемМКД.Услуга Цикл
		Если ЗначениеЗаполнено(ВыборкаАбоненты.Абонент) Тогда
			Если ВыборкаАбоненты.ОбъемУслуги <> 0 Тогда
				ЗаполнитьЗначенияСвойств(ОбщийОбъемНачислений.Добавить(), ВыборкаАбоненты,,"ОбъемУслугиПотребленный");
			КонецЕсли;
			Если ВыборкаАбоненты.ОбъемУслугиПотребленный <> 0 Тогда
				ЗаполнитьЗначенияСвойств(ОбщийОбъемНачисленийПотребленный.Добавить(), ВыборкаАбоненты,,"ОбъемУслуги");
			КонецЕсли;
		Иначе
			Если ВыборкаАбоненты.ОбъемУслуги <> 0 Тогда
				ЗаполнитьЗначенияСвойств(ОбщийОбъемНачисленийПомещений.Добавить(), ВыборкаАбоненты,,"ОбъемУслугиПотребленный");
			КонецЕсли;
			Если ВыборкаАбоненты.ОбъемУслугиПотребленный <> 0 Тогда
				ЗаполнитьЗначенияСвойств(ОбщийОбъемНачисленийПомещенийПотребленный.Добавить(), ВыборкаАбоненты,,"ОбъемУслуги");
			КонецЕсли;			
		КонецЕсли;
		
		Если НЕ ТекПомещение = ВыборкаАбоненты.Помещение Тогда
			Если Не ТекПомещение = Неопределено Тогда
				Если НЕ ДанныеАбонента.ПомещениеСРазделенными Тогда
					мАбонентыДляРаспределения.Добавить(ДанныеАбонента);
					ДанныеПоУслуге.ПлощадиАбонентов.Вставить(ТекПомещение,ДанныеАбонента.ЗначениеПлощади); 					
					
					Если ЕстьРасходПоПрибору Тогда
						ВсегоПлощадьАбонентовПоПрибору 		= ВсегоПлощадьАбонентовПоПрибору + ДанныеАбонента.ЗначениеПлощади; 
					КонецЕсли;
					
					Если ЕстьРасходПоПриборуПотребленный Тогда
						ВсегоПлощадьАбонентовПоПриборуПотребленный 		= ВсегоПлощадьАбонентовПоПриборуПотребленный + ДанныеАбонента.ЗначениеПлощади; 
					КонецЕсли;
					
				КонецЕсли;
			КонецЕсли;
			
			КолвоЧеловек 									= 0;
			
			Если ВыборкаАбоненты.Абонент = Справочники.энргАбоненты.ПустаяСсылка() Тогда
				КолвоЧеловек = ВыборкаАбоненты.КоличествоЖильцов;
			ИначеЕсли НЕ ВыборкаАбоненты.КоличествоПроживающих = 0 Тогда 
				КолвоЧеловек = ВыборкаАбоненты.КоличествоПроживающих;
			ИначеЕсли НЕ ВыборкаАбоненты.КоличествоПрописанных = 0 Тогда 
				КолвоЧеловек = ВыборкаАбоненты.КоличествоПрописанных;
			Иначе 
				КолвоЧеловек = ВыборкаАбоненты.КоличествоСобственников;
			КонецЕсли;
			
			ДанныеАбонента 									= Новый Структура("
			|Договор, Абонент, Помещение,ЗначениеПлощади,ДатаСостоянияЛицевогоСчета,
			|ТарифнаяГруппа, Поставщик, ОбъемУслуги, ОбъемУслугиСоцНорма, 
			|ЗначениеСоциальнойНормы, КоличествоЖильцов, НП, ПомещениеСРазделенными, ОбъемУслугиПотребленный, СоцПлощадь,ТарифнаяЗона, РасчетПоФактическомуОбъему",
			ВыборкаАбоненты.Договор, ВыборкаАбоненты.Абонент, ВыборкаАбоненты.Помещение,ВыборкаАбоненты.ЗначениеПлощадиДляРаспределения,ВыборкаАбоненты.ДатаСостоянияЛицевогоСчета,
			ВыборкаАбоненты.ТарифнаяГруппаДляРаспределения,	ВыборкаАбоненты.ПоставщикДляРаспределения, 0, ВыборкаАбоненты.ОбъемУслугиСоцНорма, 
			ВыборкаАбоненты.ЗначениеСоциальнойНормы,ВыборкаАбоненты.КоличествоЖильцов, ВыборкаАбоненты.НП, ВыборкаАбоненты.ПомещениеСРазделенными,0, КолвоЧеловек * ВыборкаАбоненты.СоциальнаяНормаПотребления + ВыборкаАбоненты.ДопСоциальнаяНормаПотребления,ВыборкаАбоненты.ТарифнаяЗона, ВыборкаАбоненты.РасчетПоФактическомуОбъему);
			
			ЕстьРасходПоПрибору 							= Ложь;					
			ЕстьРасходПоПриборуПотребленный					= Ложь;					
		КонецЕсли;				
		
		Если ВыборкаАбоненты.ЕстьИндивидуальныеНачисления Тогда 
			Если ВыборкаАбоненты.НП Тогда
				Если ВыборкаАбоненты.Договор.Контрагент <> ВыборкаАбоненты.Поставщик Тогда
					Если ВыборкаАбоненты.ОбъемУслуги <> 0 Тогда 
						СтрокаСписатьИндивидуальные  				= ДанныеПоУслуге.ДанныеНачисленийДоговоров.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаСписатьИндивидуальные, ВыборкаАбоненты,,"ОбъемУслугиПотребленный");						
						СтрокаСписатьИндивидуальные.ОбъектРасчета	= ВыборкаАбоненты.Абонент;
					КонецЕсли;
					
					Если ВыборкаАбоненты.ОбъемУслугиПотребленный <> 0 Тогда 
						СтрокаСписатьИндивидуальные  				= ДанныеПоУслуге.ДанныеНачисленийДоговоровПотребленный.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаСписатьИндивидуальные, ВыборкаАбоненты,,"ОбъемУслуги");						
						СтрокаСписатьИндивидуальные.ОбъектРасчета	= ВыборкаАбоненты.Абонент;
					КонецЕсли;
					
					
					Если НЕ ВыборкаАбоненты.СпособНачисления = Перечисления.энргСпособНачислений.ПоПриборам
						И НЕ ВыборкаАбоненты.СпособНачисления = Перечисления.энргСпособНачислений.НачислениеПоСреднему Тогда							
						
						СтрокаНачисленияБезПрибора 				= ДанныеПоУслуге.НачисленияНПБезПрибора.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаНачисленияБезПрибора,ВыборкаАбоненты);	
						СтрокаНачисленияБезПрибора.ОбъектРасчета 	= ВыборкаАбоненты.Абонент;
						СтрокаНачисленияБезПрибора.МКД 				= ВыборкаАбоненты.Строение;
						
					КонецЕсли;
					
					Если НЕ ВыборкаАбоненты.СпособНачисления = Перечисления.энргСпособНачислений.ПоПриборам
						И НЕ ВыборкаАбоненты.СпособНачисления = Перечисления.энргСпособНачислений.НачислениеПоСреднему и ВыборкаАбоненты.ОбъемУслугиПотребленный <> 0 Тогда							
						
						СтрокаНачисленияБезПрибора 					= ДанныеПоУслуге.НачисленияНПБезПрибораПотребленный.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаНачисленияБезПрибора,ВыборкаАбоненты);	
						СтрокаНачисленияБезПрибора.ОбъектРасчета 	= ВыборкаАбоненты.Абонент;
						СтрокаНачисленияБезПрибора.МКД 				= ВыборкаАбоненты.Строение;
						
					КонецЕсли;
				КонецЕсли;
			Иначе
				Если ВыборкаАбоненты.ОбъемУслуги <> 0 Тогда
					СтрокаСписатьИндивидуальные  				= ДанныеПоУслуге.ДанныеНачисленийАбонентов.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаСписатьИндивидуальные, ВыборкаАбоненты,,"ОбъемУслугиПотребленный");
					СтрокаСписатьИндивидуальные.ОбъемУслуги		= ВыборкаАбоненты.ОбъемУслуги;
					СтрокаСписатьИндивидуальные.Сумма			= ВыборкаАбоненты.Сумма; 					
				КонецЕсли;
				
				Если ВыборкаАбоненты.ОбъемУслугиПотребленный <> 0 Тогда
					СтрокаСписатьИндивидуальные  				= ДанныеПоУслуге.ДанныеНачисленийАбонентовПотребленный.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаСписатьИндивидуальные, ВыборкаАбоненты,,"ОбъемУслуги");
					СтрокаСписатьИндивидуальные.ОбъемУслугиПотребленный		= ВыборкаАбоненты.ОбъемУслугиПотребленный;
					СтрокаСписатьИндивидуальные.Сумма						= 0; 					
				КонецЕсли;
				
				Если НЕ ВыборкаАбоненты.СпособНачисления = Перечисления.энргСпособНачислений.ПоПриборам
					И НЕ ВыборкаАбоненты.СпособНачисления = Перечисления.энргСпособНачислений.НачислениеПоСреднему и ВыборкаАбоненты.ОбъемУслуги <> 0 Тогда							
					СтрокаНачисленияБезПрибора 				= ДанныеПоУслуге.НачисленияАбонентовБезПрибора.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаНачисленияБезПрибора,ВыборкаАбоненты);							
				КонецЕсли;
				
				
				Если НЕ ВыборкаАбоненты.СпособНачисления = Перечисления.энргСпособНачислений.ПоПриборам
					И НЕ ВыборкаАбоненты.СпособНачисления = Перечисления.энргСпособНачислений.НачислениеПоСреднему и ВыборкаАбоненты.ОбъемУслугиПотребленный <> 0 Тогда							
					СтрокаНачисленияБезПрибора 				= ДанныеПоУслуге.НачисленияАбонентовБезПрибораПотребленный.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаНачисленияБезПрибора,ВыборкаАбоненты);							
				КонецЕсли;
				
			КонецЕсли;
		Иначе
			
			Если ВыборкаАбоненты.ОбъемУслуги <> 0 Тогда
				СтрокаНачисленияБезПрибора 						= ДанныеПоУслуге.НачисленияАбонентовБезПрибора.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаНачисленияБезПрибора,ВыборкаАбоненты,,"ОбъемУслугиПотребленный");
			КонецЕсли;
			
			Если ВыборкаАбоненты.ОбъемУслугиПотребленный <> 0 Тогда
				СтрокаНачисленияБезПрибора 						= ДанныеПоУслуге.НачисленияАбонентовБезПрибораПотребленный.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаНачисленияБезПрибора,ВыборкаАбоненты,,"ОбъемУслуги");
			КонецЕсли;
			
		КонецЕсли;
		ДанныеАбонента.ОбъемУслуги 							= ДанныеАбонента.ОбъемУслуги + ВыборкаАбоненты.ОбъемУслуги; 
		ДанныеАбонента.ОбъемУслугиПотребленный 				= ДанныеАбонента.ОбъемУслугиПотребленный + ВыборкаАбоненты.ОбъемУслугиПотребленный; 
		
		Если НЕ ВыборкаАбоненты.ПомещениеСРазделенными Тогда 
			ПотреблениеАбонентов 							= ПотреблениеАбонентов + ВыборкаАбоненты.ОбъемУслуги;
			ПотреблениеАбонентовПоФакту						= ПотреблениеАбонентовПоФакту + ВыборкаАбоненты.ОбъемУслугиПотребленный;
		КонецЕсли;
		
		Если НЕ ВыборкаАбоненты.СпособНачисления = Перечисления.энргСпособНачислений.ПоПриборам
			И НЕ ВыборкаАбоненты.СпособНачисления = Перечисления.энргСпособНачислений.НачислениеПоСреднему
			И НЕ ВыборкаАбоненты.ПомещениеСРазделенными Тогда
			
			Если НЕ ВыборкаАбоненты.ОбъемУслуги = 0 Тогда
				ВсеПоПрибору 									= Ложь;
			КонецЕсли;
			
			Если НЕ ВыборкаАбоненты.ОбъемУслугиПотребленный = 0 Тогда
				ВсеПоПриборуПотребленный						= Ложь;
			КонецЕсли;
			
		ИначеЕсли НЕ ВыборкаАбоненты.ПомещениеСРазделенными Тогда
			ПотреблениеАбонентовПоПрибору 					= ПотреблениеАбонентовПоПрибору + ВыборкаАбоненты.ОбъемУслуги;
			ПотреблениеАбонентовПоПриборуПоФакту			= ПотреблениеАбонентовПоПриборуПоФакту + ВыборкаАбоненты.ОбъемУслугиПотребленный;
			Если НЕ ВыборкаАбоненты.ОбъемУслуги = 0 Тогда
				ЕстьРасходПоПрибору 						= Истина;
			КонецЕсли;
			Если НЕ ВыборкаАбоненты.ОбъемУслугиПотребленный = 0 Тогда
				ЕстьРасходПоПриборуПотребленный				= Истина;
			КонецЕсли;
		КонецЕсли;
		
		ТекПомещение 										= ВыборкаАбоненты.Помещение;
		
		Если НЕ ВыборкаАбоненты.Следующий() Тогда
			Прервать;
			ВыборкаАбоненты.сбросить();
		КонецЕсли; 				
	КонецЦикла; 			
	
	Если Не ТекПомещение = Неопределено Тогда
		Если НЕ ДанныеАбонента.ПомещениеСРазделенными Тогда
			мАбонентыДляРаспределения.Добавить(ДанныеАбонента);
			ДанныеПоУслуге.ПлощадиАбонентов.Вставить(ТекПомещение,ДанныеАбонента.ЗначениеПлощади);
			
			Если ЕстьРасходПоПрибору Тогда
				ВсегоПлощадьАбонентовПоПрибору 				= ВсегоПлощадьАбонентовПоПрибору + ДанныеАбонента.ЗначениеПлощади; 
			КонецЕсли;
			
			Если ЕстьРасходПоПриборуПотребленный Тогда
				ВсегоПлощадьАбонентовПоПриборуПотребленный	= ВсегоПлощадьАбонентовПоПриборуПотребленный + ДанныеАбонента.ЗначениеПлощади; 
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	Пока ВыборкаОбъемПоПриборуКорректировать.Строение = ВыборкаОбъемМКД.Строение и ВыборкаОбъемПоПриборуКорректировать.Услуга = ВыборкаОбъемМКД.Услуга Цикл
		Если НЕ ВыборкаОбъемПоПриборуКорректировать.Помещение = null Тогда		
			
			Если ВыборкаОбъемПоПриборуКорректировать.ОбъемУслуги <> 0 Тогда
				ЗаполнитьЗначенияСвойств(ДанныеПоУслуге.ОбъемПоПриборуКорректировать.Добавить(), ВыборкаОбъемПоПриборуКорректировать);
			КонецЕсли;
			
			Если ВыборкаОбъемПоПриборуКорректировать.ОбъемУслугиПотребленный <> 0 Тогда
				ЗаполнитьЗначенияСвойств(ДанныеПоУслуге.ОбъемПоПриборуКорректироватьПотребленный.Добавить(), ВыборкаОбъемПоПриборуКорректировать);
			КонецЕсли;
			
		КонецЕсли; 				
		Если НЕ ВыборкаОбъемПоПриборуКорректировать.Следующий() Тогда
			Прервать;
			ВыборкаОбъемПоПриборуКорректировать.сбросить();
		КонецЕсли; 				
	КонецЦикла;
	
	Пока ВыборкаОбъемПоПриборуНПКорректировать.Строение = ВыборкаОбъемМКД.Строение и ВыборкаОбъемПоПриборуНПКорректировать.Услуга = ВыборкаОбъемМКД.Услуга Цикл
		Если НЕ ВыборкаОбъемПоПриборуНПКорректировать.ОбъектРасчета = null Тогда		
			
			Если ВыборкаОбъемПоПриборуКорректировать.ОбъемУслуги <> 0 Тогда
				ЗаполнитьЗначенияСвойств(ДанныеПоУслуге.ОбъемПоПриборуНПКорректировать.Добавить(), ВыборкаОбъемПоПриборуНПКорректировать);				
			КонецЕсли;
			
			Если ВыборкаОбъемПоПриборуКорректировать.ОбъемУслугиПотребленный <> 0 Тогда
				ЗаполнитьЗначенияСвойств(ДанныеПоУслуге.ОбъемПоПриборуНПКорректироватьПотребленный.Добавить(), ВыборкаОбъемПоПриборуНПКорректировать);				
			КонецЕсли; 		
			
		КонецЕсли; 				
		Если НЕ ВыборкаОбъемПоПриборуНПКорректировать.Следующий() Тогда
			Прервать;
			ВыборкаОбъемПоПриборуНПКорректировать.сбросить();
		КонецЕсли; 				
	КонецЦикла;
	
	ОтрицательноеРаспределениеОбъем 							= 0;
	ОтрицательноеРаспределениеОбъемПотребленный 				= 0;
	
	ОписаниеСтрокиОтрицальногоОбъема 							= "ПериодНачисленияОбъема,ОбъемУслуги,ОбъемУслугиПотребленный";
	Пока ВыборкаОтрицательныйОбъемРаспределения.Строение = ВыборкаОбъемМКД.Строение и ВыборкаОтрицательныйОбъемРаспределения.Услуга = ВыборкаОбъемМКД.Услуга Цикл
		
		ОтрицательноеРаспределениеОбъем 						= ОтрицательноеРаспределениеОбъем + ВыборкаОтрицательныйОбъемРаспределения.ОбъемУслуги;
		ОтрицательноеРаспределениеОбъемПотребленный 			= ОтрицательноеРаспределениеОбъемПотребленный + ВыборкаОтрицательныйОбъемРаспределения.ОбъемУслугиПотребленный;
		
		яДанныеСтрокиОтрицательныйОбъем 						= Новый Структура(ОписаниеСтрокиОтрицальногоОбъема);
		ЗаполнитьЗначенияСвойств(яДанныеСтрокиОтрицательныйОбъем,ВыборкаОтрицательныйОбъемРаспределения);
		ДанныеПоУслуге.ОтрицательныйОбъемРаспределения.Расшифровка.Добавить(яДанныеСтрокиОтрицательныйОбъем);
		
		Если НЕ ВыборкаОтрицательныйОбъемРаспределения.Следующий() Тогда
			Прервать;
			ВыборкаОтрицательныйОбъемРаспределения.сбросить();
		КонецЕсли; 				
	КонецЦикла;  
	
	ДанныеПоУслуге.Вставить("ВсеПоПрибору", 				ВсеПоПрибору);
	ДанныеПоУслуге.Вставить("ВсеПоПриборуПотребленный", 	ВсеПоПриборуПотребленный);
	
	
	ОтрицательныйОбъемРаспределения 							= ДанныеПоУслуге.ОтрицательныйОбъемРаспределения;
	ОтрицательныйОбъемРаспределения.ОбъемУслуги 				= ОтрицательноеРаспределениеОбъем;
	ОтрицательныйОбъемРаспределения.ОбъемУслугиПотребленный 	= ОтрицательноеРаспределениеОбъемПотребленный;
	ДанныеПоУслуге.ПотреблениеАбонентов 						= ПотреблениеАбонентов;
	ДанныеПоУслуге.ПотреблениеАбонентовПотребленный				= ПотреблениеАбонентовПоФакту;
	ДанныеПоУслуге.ВсегоПлощадьАбонентовПоПрибору 				= ВсегоПлощадьАбонентовПоПрибору;
	ДанныеПоУслуге.ВсегоПлощадьАбонентовПоПриборуПотребленный 	= ВсегоПлощадьАбонентовПоПриборуПотребленный;
	ДанныеПоУслуге.ПотреблениеАбонентовПоПрибору 				= ПотреблениеАбонентовПоПрибору;
	ДанныеПоУслуге.ПотреблениеАбонентовПоПриборуПотребленный	= ПотреблениеАбонентовПоПриборуПоФакту;
	ДанныеПоУслуге.ОбщийОбъемНачислений							= ОбщийОбъемНачислений;
	ДанныеПоУслуге.ОбщийОбъемНачисленийПомещений				= ОбщийОбъемНачисленийПомещений;
	
	ДанныеПоУслуге.ОбщийОбъемНачисленийПотребленный				= ОбщийОбъемНачисленийПотребленный;
	ДанныеПоУслуге.ОбщийОбъемНачисленийПомещенийПотребленный	= ОбщийОбъемНачисленийПомещенийПотребленный;
КонецПроцедуры

Процедура ПрочитатьНаборыДляЗаписиПриРаспределении(ВыборкаОбъемМКД, ДокументОбъект, НаборВыполненные, НаборЗаписей, НаборОтрицательныйОбъемРаспределения, НаборЗаписейПомещений, НаборЗаписейНП, НаборЗаписейСверхНорма, ГраницыПериода)
	
	ДокументСсылка 								= ВыборкаОбъемМКД.ДокументРаспределения;
	ДокументОбъект 								= Неопределено;
	НаборВыполненные 							= Неопределено;
	НаборЗаписей 								= Неопределено;
	НаборЗаписейПомещений 						= Неопределено;
	НаборЗаписейНП 								= Неопределено;
	НаборЗаписейСверхНорма 						= Неопределено;
	
	Если НЕ ЗначениеЗаполнено(ДокументСсылка) Тогда			
		ДокументСсылка 							= Документы.энргРаспределениеМКД.ПолучитьСсылку(Новый УникальныйИдентификатор());
		ДокументОбъект 							= Документы.энргРаспределениеМКД.СоздатьДокумент();
		ДокументОбъект.Организация				= ВыборкаОбъемМКД.Организация;
		ДокументОбъект.Район 					= ВыборкаОбъемМКД.Район;
		ДокументОбъект.МКД 						= ВыборкаОбъемМКД.Строение;
		ДокументОбъект.Дата 					= ГраницыПериода.ЗавершениеОП - 1;		
																				  
		ДокументОбъект.УстановитьСсылкуНового(ДокументСсылка);
		
		НаборВыполненные 						= РегистрыСведений.энргДокументыНачислений.СоздатьНаборЗаписей();
		НаборВыполненныеДопСвойства 			= НаборВыполненные.ДополнительныеСвойства;
		НаборВыполненныеДопСвойства.Вставить("Замещать", Ложь);
			
		ЗаписьВыполненные						= НаборВыполненные.Добавить();
		ЗаписьВыполненные.Организация 			= ВыборкаОбъемМКД.Организация;
		ЗаписьВыполненные.Район		 			= ВыборкаОбъемМКД.Район;
		ЗаписьВыполненные.ПериодНачисления 		= ВыборкаОбъемМКД.ПериодНачисления;
		ЗаписьВыполненные.ВидОперацийНачисления	= Перечисления.энргВидыОперацийНачисления.РаспределениеМКД;
		ЗаписьВыполненные.МКД 					= ВыборкаОбъемМКД.Строение;
		ЗаписьВыполненные.ДокументНачисления 	= ДокументСсылка;
							
	Иначе
		ДокументОбъект 							= ДокументСсылка.ПолучитьОбъект();
		ДокументОбъект.ПометкаУдаления 			= Ложь;
		
		НаборВыполненные 						= РегистрыСведений.энргДокументыНачислений.СоздатьНаборЗаписей();
		НаборВыполненныеДопСвойства 			= НаборВыполненные.ДополнительныеСвойства;
		НаборВыполненныеДопСвойства.Вставить("Замещать", Истина);
		
		НаборВыполненные.Отбор.Организация.Установить(ВыборкаОбъемМКД.Организация);
		НаборВыполненные.Отбор.ПериодНачисления.Установить(ВыборкаОбъемМКД.ПериодНачисления);
		НаборВыполненные.Отбор.Район.Установить(ВыборкаОбъемМКД.Район);					
		НаборВыполненные.Отбор.ВидОперацийНачисления.Установить(Перечисления.энргВидыОперацийНачисления.РаспределениеМКД);
		НаборВыполненные.Отбор.МКД.Установить(ВыборкаОбъемМКД.Строение);
				
  
		ЗаписьВыполненные						= НаборВыполненные.Добавить();
		ЗаписьВыполненные.Организация 			= ВыборкаОбъемМКД.Организация;
		ЗаписьВыполненные.Район		 			= ВыборкаОбъемМКД.Район;
		ЗаписьВыполненные.ПериодНачисления 		= ВыборкаОбъемМКД.ПериодНачисления;
		ЗаписьВыполненные.ВидОперацийНачисления = Перечисления.энргВидыОперацийНачисления.РаспределениеМКД;
		ЗаписьВыполненные.МКД 					= ВыборкаОбъемМКД.Строение;
		ЗаписьВыполненные.ДокументНачисления 	= ДокументСсылка;
		ЗаписьВыполненные.ПометкаУдаления	 	= Ложь;
		
		НаборОтрицательныйОбъем					= РегистрыНакопления.энргОтрицательныйОбъемРаспределенияМКД.СоздатьНаборЗаписей();
		НаборОтрицательныйОбъем.Отбор.Регистратор.Установить(ДокументСсылка);
		НаборОтрицательныйОбъем.Записать(); // очищаем набор записей
		
		НаборЗаписей 							= РегистрыНакопления.энргОбъемНачислений.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ДокументСсылка);
		НаборЗаписей.Записать(); // очищаем набор записей
		
		НаборЗаписейПомещений					= РегистрыНакопления.энргОбъемНачисленийПомещенийСРазделеннымиЛС.СоздатьНаборЗаписей();
		НаборЗаписейПомещений.Отбор.Регистратор.Установить(ДокументСсылка);
		НаборЗаписейПомещений.Записать(); // очищаем набор записей
		
		НаборЗаписейНП 							= РегистрыНакопления.бестОбъемНачисленийНП.СоздатьНаборЗаписей();
		НаборЗаписейНП.Отбор.Регистратор.Установить(ДокументСсылка);
		НаборЗаписейНП.Записать(); // очищаем набор записей
		
		НаборЗаписейСверхНорма 					= РегистрыНакопления.энргОбъемНачисленийСверхнормативаМКД.СоздатьНаборЗаписей();
		НаборЗаписейСверхНорма.Отбор.Регистратор.Установить(ДокументСсылка);
		НаборЗаписейСверхНорма.Записать(); // очищаем набор записей
	КонецЕсли;
	
	НаборЗаписей 								= РегистрыНакопления.энргОбъемНачислений.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(ДокументСсылка);
	НаборЗаписей.ДополнительныеСвойства.Вставить("ПериодНачисления",	ВыборкаОбъемМКД.ПериодНачисления);
	НаборЗаписей.ДополнительныеСвойства.Вставить("Организация", 		ВыборкаОбъемМКД.Организация);
	НаборЗаписей.ДополнительныеСвойства.Вставить("Район",  				ВыборкаОбъемМКД.Район);
	НаборЗаписей.ДополнительныеСвойства.Вставить("Строение",    		ВыборкаОбъемМКД.Строение);
	НаборЗаписей.ДополнительныеСвойства.Вставить("ЧастныйСектор",  		Ложь);
	НаборЗаписей.ДополнительныеСвойства.Вставить("ДатаРегистратора",	ГраницыПериода.ЗавершениеОП-1);
	
	НаборЗаписейПомещений						= РегистрыНакопления.энргОбъемНачисленийПомещенийСРазделеннымиЛС.СоздатьНаборЗаписей();
	НаборЗаписейПомещений.Отбор.Регистратор.Установить(ДокументСсылка);
	НаборЗаписейПомещений.ДополнительныеСвойства.Вставить("ПериодНачисления",	ВыборкаОбъемМКД.ПериодНачисления);
	НаборЗаписейПомещений.ДополнительныеСвойства.Вставить("Организация", 		ВыборкаОбъемМКД.Организация);
	НаборЗаписейПомещений.ДополнительныеСвойства.Вставить("Район",  			ВыборкаОбъемМКД.Район);
	НаборЗаписейПомещений.ДополнительныеСвойства.Вставить("Строение",    		ВыборкаОбъемМКД.Строение);
	НаборЗаписейПомещений.ДополнительныеСвойства.Вставить("ЧастныйСектор",  	Ложь);
	НаборЗаписейПомещений.ДополнительныеСвойства.Вставить("ДатаРегистратора",	ГраницыПериода.ЗавершениеОП-1);
			
	НаборЗаписейНП 								= РегистрыНакопления.бестОбъемНачисленийНП.СоздатьНаборЗаписей();	
	НаборЗаписейНП.Отбор.Регистратор.Установить(ДокументСсылка);
	НаборЗаписейНП.ДополнительныеСвойства.Вставить("ПериодНачисления",	ВыборкаОбъемМКД.ПериодНачисления);
	НаборЗаписейНП.ДополнительныеСвойства.Вставить("Организация", 		ВыборкаОбъемМКД.Организация);
	НаборЗаписейНП.ДополнительныеСвойства.Вставить("Район",  			ВыборкаОбъемМКД.Район);
	НаборЗаписейНП.ДополнительныеСвойства.Вставить("Строение",    		ВыборкаОбъемМКД.Строение);
	НаборЗаписейНП.ДополнительныеСвойства.Вставить("ДатаРегистратора",	ГраницыПериода.ЗавершениеОП-1);
			
	НаборЗаписейСверхНорма 						= РегистрыНакопления.энргОбъемНачисленийСверхнормативаМКД.СоздатьНаборЗаписей();
	НаборЗаписейСверхНорма.Отбор.Регистратор.Установить(ДокументСсылка);
	НаборЗаписейСверхНорма.ДополнительныеСвойства.Вставить("ПериодНачисления",	ВыборкаОбъемМКД.ПериодНачисления);
	НаборЗаписейСверхНорма.ДополнительныеСвойства.Вставить("Организация", 		ВыборкаОбъемМКД.Организация);
	НаборЗаписейСверхНорма.ДополнительныеСвойства.Вставить("Район",  			ВыборкаОбъемМКД.Район);
	НаборЗаписейСверхНорма.ДополнительныеСвойства.Вставить("Строение",    		ВыборкаОбъемМКД.Строение);
	НаборЗаписейСверхНорма.ДополнительныеСвойства.Вставить("ДатаРегистратора",	ГраницыПериода.ЗавершениеОП-1);
	
	НаборОтрицательныйОбъемРаспределения 		= РегистрыНакопления.энргОтрицательныйОбъемРаспределенияМКД.СоздатьНаборЗаписей();
	НаборОтрицательныйОбъемРаспределения.Отбор.Регистратор.Установить(ДокументСсылка);
	НаборОтрицательныйОбъемРаспределения.ДополнительныеСвойства.Вставить("ПериодНачисления",	ВыборкаОбъемМКД.ПериодНачисления);
	НаборОтрицательныйОбъемРаспределения.ДополнительныеСвойства.Вставить("Организация", 		ВыборкаОбъемМКД.Организация);
	НаборОтрицательныйОбъемРаспределения.ДополнительныеСвойства.Вставить("Район",  				ВыборкаОбъемМКД.Район);
	НаборОтрицательныйОбъемРаспределения.ДополнительныеСвойства.Вставить("Строение",    		ВыборкаОбъемМКД.Строение);
	НаборОтрицательныйОбъемРаспределения.ДополнительныеСвойства.Вставить("ДатаРегистратора",	ГраницыПериода.ЗавершениеОП-1);
	
КонецПроцедуры

Процедура ЗаполнитьОбъемыМКДПриРаспределении(ВыборкаОбъемМКД, ДанныеПоУслуге)
	Если НЕ ВыборкаОбъемМКД.СпособНачисления = Перечисления.энргСпособНачислений.ПоПриборам 
		И НЕ ВыборкаОбъемМКД.СпособНачисления = Перечисления.энргСпособНачислений.НачислениеПоСреднему Тогда
		
		Если ДанныеПоУслуге.ОбъемБезПрибораТарифныЗоны[ВыборкаОбъемМКД.ТарифнаяЗона] = Неопределено Тогда
			ДанныеПоУслуге.ОбъемБезПрибораТарифныЗоны.Вставить(ВыборкаОбъемМКД.ТарифнаяЗона, ВыборкаОбъемМКД.ОбъемУслуги * ?(ВыборкаОбъемМКД.ПлощадьМОПУказана , 1 , ВыборкаОбъемМКД.ВсегоПлощадьАбонентов));
		Иначе
			ДанныеПоУслуге.ОбъемБезПрибораТарифныЗоны[ВыборкаОбъемМКД.ТарифнаяЗона] = ДанныеПоУслуге.ОбъемБезПрибораТарифныЗоны[ВыборкаОбъемМКД.ТарифнаяЗона] +  ВыборкаОбъемМКД.ОбъемУслуги * ?(ВыборкаОбъемМКД.ПлощадьМОПУказана , 1 , ВыборкаОбъемМКД.ВсегоПлощадьАбонентов);
		КонецЕсли;
		
		ДанныеПоУслуге.ОбъемБезПрибора				= ДанныеПоУслуге.ОбъемБезПрибора + ВыборкаОбъемМКД.ОбъемУслуги * ?(ВыборкаОбъемМКД.ПлощадьМОПУказана , 1 , ВыборкаОбъемМКД.ВсегоПлощадьАбонентов) ;
		ДанныеПоУслуге.ОбъемПотребленныйБезПрибора 	= ДанныеПоУслуге.ОбъемПотребленныйБезПрибора + ВыборкаОбъемМКД.ОбъемУслугиПотребленный * ?(ВыборкаОбъемМКД.ПлощадьМОПУказана , 1 , ВыборкаОбъемМКД.ВсегоПлощадьАбонентов);
	Иначе
		
		Если ДанныеПоУслуге.ОбъемПоПриборуТарифныЗоны[ВыборкаОбъемМКД.ТарифнаяЗона] = Неопределено Тогда
			ДанныеПоУслуге.ОбъемПоПриборуТарифныЗоны.Вставить(ВыборкаОбъемМКД.ТарифнаяЗона, ВыборкаОбъемМКД.ОбъемУслуги);
		Иначе
			ДанныеПоУслуге.ОбъемПоПриборуТарифныЗоны[ВыборкаОбъемМКД.ТарифнаяЗона] = ДанныеПоУслуге.ОбъемПоПриборуТарифныЗоны[ВыборкаОбъемМКД.ТарифнаяЗона] +  ВыборкаОбъемМКД.ОбъемУслуги;
		КонецЕсли;
		
		ДанныеПоУслуге.ОбъемПоПрибору 				= ДанныеПоУслуге.ОбъемПоПрибору + ВыборкаОбъемМКД.ОбъемУслуги;
		ДанныеПоУслуге.ОбъемПотребленныйПоПрибору 	= ДанныеПоУслуге.ОбъемПотребленныйПоПрибору + ВыборкаОбъемМКД.ОбъемУслугиПотребленный;
	КонецЕсли;	
	
	ДанныеПоУслуге.ОбъемУслугиНорматив 					= ДанныеПоУслуге.ОбъемУслугиНорматив + ВыборкаОбъемМКД.ОбъемУслугиНорматив;	
	ДанныеПоУслуге.ПоказанияПредоставлены 				= ВыборкаОбъемМКД.ПоказанияПредоставлены;
	ДанныеПоУслуге.ПоказанияПредоставленыПотребленный 	= ВыборкаОбъемМКД.ПоказанияПредоставленыПотребленный;
КонецПроцедуры

Процедура ЗаполнитьПараметрыРасчетаНорматива(ДанныеПоУслуге, ПараметрыРасчетаНорматива, РассчитыватьНорматив, ТипыНачислений, Услуга, НачисленияПоУслугам) 
	СуммаРасходовПоУслуге  	= 0;
	
	Для Каждого СтрокаОбъема ИЗ ДанныеПоУслуге.ОбщийОбъемНачислений Цикл
		Если ДанныеПоУслуге.НеНачислятьУслугуАбонентам Тогда
			СуммаРасходовПоУслуге = СтрокаОбъема.ОбъемУслугиПотребленный + СуммаРасходовПоУслуге
		Иначе
			СуммаРасходовПоУслуге = СтрокаОбъема.ОбъемУслуги + СуммаРасходовПоУслуге
		КонецЕсли;;
	КонецЦикла;
	Для Каждого СтрокаОбъема ИЗ ДанныеПоУслуге.ОбщийОбъемНачисленийПомещений Цикл
		Если ДанныеПоУслуге.НеНачислятьУслугуАбонентам Тогда
			СуммаРасходовПоУслуге = СтрокаОбъема.ОбъемУслугиПотребленный + СуммаРасходовПоУслуге;
		Иначе
			СуммаРасходовПоУслуге = СтрокаОбъема.ОбъемУслуги + СуммаРасходовПоУслуге;
		КонецЕсли;
	КонецЦикла;
		
	ДанныеНачисленийПоУслуге 	= Новый Структура("НеНачислятьУслугуАбонентам, ПотреблениеАбонентов,ПотреблениеПомещений",ДанныеПоУслуге.НеНачислятьУслугуАбонентам, ДанныеПоУслуге.ОбщийОбъемНачислений,ДанныеПоУслуге.ОбщийОбъемНачисленийПомещений);
	НачисленияПоУслугам.Вставить(Услуга, ДанныеНачисленийПоУслуге);
	
	Если ПараметрыРасчетаНорматива[Услуга] = Неопределено Тогда
		ОписаниеРасхода			= Новый Соответствие;
		ОписаниеРасхода.Вставить(ТипыНачислений["СуммаРасходовВсехПомещенийПоУслуге"], СуммаРасходовПоУслуге);
		ПараметрыРасчетаНорматива.Вставить(Услуга,ОписаниеРасхода);
	Иначе
		ПараметрыРасчетаНорматива[Услуга].Вставить(ТипыНачислений["СуммаРасходовВсехПомещенийПоУслуге"], СуммаРасходовПоУслуге);
	КонецЕсли;
	
	Если ПараметрыРасчетаНорматива[Услуга] = Неопределено Тогда
		ОписаниеРасхода			= Новый Соответствие;
		ОписаниеРасхода.Вставить(ТипыНачислений["РасходМКДПоУслуге"], ДанныеПоУслуге.ОбъемПоПрибору + ДанныеПоУслуге.ОбъемБезПрибора);
		ПараметрыРасчетаНорматива.Вставить(Услуга,ОписаниеРасхода);
	Иначе
		ПараметрыРасчетаНорматива[Услуга].Вставить(ТипыНачислений["РасходМКДПоУслуге"], ДанныеПоУслуге.ОбъемПоПрибору + ДанныеПоУслуге.ОбъемБезПрибора);
	КонецЕсли;
	
	Если ПараметрыРасчетаНорматива[Услуга] = Неопределено Тогда
		ОписаниеРасхода			= Новый Соответствие;
		ОписаниеРасхода.Вставить(ТипыНачислений["ЗначениеНормативаПоУслуге"], ДанныеПоУслуге.ЗначениеНорматива);
		ПараметрыРасчетаНорматива.Вставить(Услуга,ОписаниеРасхода);
	Иначе
		ПараметрыРасчетаНорматива[Услуга].Вставить(ТипыНачислений["ЗначениеНормативаПоУслуге"], ДанныеПоУслуге.ЗначениеНорматива);
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(ДанныеПоУслуге.ФормулаРасчетаНорматива) Тогда
		ФормулаРасчета 			= Новый Структура("Услуга, ФормулаРасчета, ЗависитОтУслуги", Услуга, ДанныеПоУслуге.ФормулаРасчетаНорматива, ДанныеПоУслуге.ЗависитОтУслуги);
		РассчитыватьНорматив.Добавить(ФормулаРасчета);
	КонецЕсли;
				
КонецПроцедуры

Процедура РассчитатьНормативПоФормуле(ПараметрыРасчетаНорматива, РассчитыватьНорматив, НачисленияПоУслугам, ЗначенияТарифов, ГраницыПериода,Отказ, НаборЗаписей, НаборЗаписейНП, НаборЗаписейПомещений)
	
	ВидНачисленияОДН 										= Перечисления.энргВидыНачислений.НачислениеОДН;
	
	Для Сч = 0 По РассчитыватьНорматив.ВГраница() Цикл
		ЗначениеНорматива  									= Неопределено;
		ФормулаРасчета  									= РассчитыватьНорматив[Сч].ФормулаРасчета;
		Услуга 												= РассчитыватьНорматив[Сч].Услуга;
		ЗависитОтУслуги 									= РассчитыватьНорматив[Сч].ЗависитОтУслуги;
		Для Каждого КлючЗначение ИЗ ПараметрыРасчетаНорматива Цикл
			УслугаВФормуле									= КлючЗначение.Ключ;
			КлючУслуги 										= XMLСтрока(УслугаВФормуле);
			Для Каждого ТипыНачислений Из КлючЗначение.Значение Цикл
				ДанныеРасхода 								= "[" + ЗначениеВСтрокуВнутр(Новый Структура("ТипРасхода, Услуга", ТипыНачислений.Ключ, КлючУслуги)) + "]";
				ФормулаРасчета 								= СтрЗаменить(ФормулаРасчета,ДанныеРасхода,XMLСтрока(ТипыНачислений.Значение));
			КонецЦикла;			
		КонецЦикла;
		ФормулаРасчета 										= СтрЗаменить(ФормулаРасчета,"[Результат]","ЗначениеНорматива");
		Попытка
			Выполнить ФормулаРасчета;
		Исключение
			Отказ 											= Истина;			   
		КонецПопытки;
		
		Если Отказ Тогда
			Возврат;
		КонецЕсли;		
		// Снимаем начисленные объемы потребления по услуге
		НачисленияПоУслуге	 								= НачисленияПоУслугам[Услуга].ПотреблениеАбонентов;
		Для Каждого СтрокаНачислений ИЗ НачисленияПоУслуге Цикл
			СтрокаСнимаем 									= НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаСнимаем, СтрокаНачислений);
			СтрокаСнимаем.Период 							= ГраницыПериода.ЗавершениеОП-1;
			СтрокаСнимаем.Распределение 					= Истина;
			СтрокаСнимаем.Сумма 							= -СтрокаСнимаем.Сумма;
			СтрокаСнимаем.ОбъемУслуги 						= -СтрокаСнимаем.ОбъемУслуги;
			СтрокаСнимаем.ОбъемУслугиПотребленный 			= -СтрокаСнимаем.ОбъемУслугиПотребленный;
			СтрокаСнимаем.СуммаПоПовышенномуКоэффициенту 	= -СтрокаСнимаем.СуммаПоПовышенномуКоэффициенту;
		КонецЦикла;
		
		НеНачислятьУслугуАбонентам 							= НачисленияПоУслугам[ЗависитОтУслуги].НеНачислятьУслугуАбонентам;
		НачисленияПоУслуге	 								= НачисленияПоУслугам[ЗависитОтУслуги].ПотреблениеАбонентов;
		Для Каждого СтрокаНачислений ИЗ НачисленияПоУслуге Цикл
			Если СтрокаНачислений.ВидНачисления  = ВидНачисленияОДН Тогда
				Продолжить;
			КонецЕсли;
			
			ХэшСтрокиТарифа 								= ХэшСтрокиТарифа(СтрокаНачислений.ТарифнаяГруппа,ЗависитОтУслуги,СтрокаНачислений.Поставщик,Справочники.энргТарифныеЗоны.БезРазбивки);
			ЗначениеТарифа 									= ?(ЗначенияТарифов[ХэшСтрокиТарифа] = Неопределено, Новый Структура("Значение", 0), ЗначенияТарифов[ХэшСтрокиТарифа]);
			
			СтрокаНачисляем									= НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаНачисляем, СтрокаНачислений);
			СтрокаНачисляем.Период 							= ГраницыПериода.ЗавершениеОП-1;
			СтрокаНачисляем.Распределение 					= Истина;
			СтрокаНачисляем.Услуга 							= Услуга;
			СтрокаНачисляем.НормаПотребления 				= ЗначениеНорматива;
			СтрокаНачисляем.ЗначениеТарифа 					= ?(ЗначениеТарифа.Значение = 0, СтрокаНачислений.ЗначениеТарифа, ЗначениеТарифа.Значение);
			Если НеНачислятьУслугуАбонентам Тогда
				СтрокаНачисляем.ОбъемУслуги 				= СтрокаНачислений.ОбъемУслугиПотребленный * СтрокаНачисляем.НормаПотребления;
			Иначе
				СтрокаНачисляем.ОбъемУслуги 				= СтрокаНачислений.ОбъемУслуги * СтрокаНачисляем.НормаПотребления;
			КонецЕсли;
			СтрокаНачисляем.ОбъемУслугиПотребленный 		= СтрокаНачислений.ОбъемУслугиПотребленный* СтрокаНачисляем.НормаПотребления;
			СтрокаНачисляем.СуммаПоПовышенномуКоэффициенту 	= 0;
			СтрокаНачисляем.Сумма 							= СтрокаНачисляем.ЗначениеТарифа * СтрокаНачисляем.ОбъемУслуги;			
		КонецЦикла;		
	КонецЦикла;
		
КонецПроцедуры

Функция ХэшСтрокиТарифа(ТарифнаяГруппа,Услуга,Поставщик,ТарифнаяЗона)
	
	СтрокаХэш 				= "";
	СтрокаХэш 				= СтрокаХэш + ТарифнаяГруппа.УникальныйИдентификатор();
	СтрокаХэш 				= СтрокаХэш + Услуга.УникальныйИдентификатор();
	СтрокаХэш 				= СтрокаХэш + Поставщик.УникальныйИдентификатор();
	СтрокаХэш 				= СтрокаХэш + ТарифнаяЗона.УникальныйИдентификатор();
	
	Хэш 					= Новый ХешированиеДанных(ХешФункция.CRC32);
	Хэш.Добавить(СтрокаХэш);
	
	Возврат Хэш.ХешСумма;	
	
КонецФункции

Функция ДанныеПоУслугиДляРаспределения(ВыборкаОбъемМКД, РазделенныеЛицевыеСчета)
	ДанныеПоУслуге  									= Новый Структура;
	ДанныеПоУслуге.Вставить("СпособНачисленияМКД",							Неопределено);
	ДанныеПоУслуге.Вставить("ОбъемПоПрибору",								0);
	ДанныеПоУслуге.Вставить("ОбъемБезПрибора", 								0);
	ДанныеПоУслуге.Вставить("ОбъемПотребленныйПоПрибору", 					0);
	ДанныеПоУслуге.Вставить("ОбъемПотребленныйБезПрибора", 					0);
	ДанныеПоУслуге.Вставить("ОбъемУслугиНорматив", 							0);	
	ДанныеПоУслуге.Вставить("ОбъемУслугиНормативПотребленный", 				0);	
	ДанныеПоУслуге.Вставить("РаспределятьПолностью", 						ВыборкаОбъемМКД.РаспределятьПолностью);
	ДанныеПоУслуге.Вставить("ЗначениеНорматива", 							ВыборкаОбъемМКД.ЗначениеНорматива);
	ДанныеПоУслуге.Вставить("ОбъемБезПрибораТарифныЗоны",					Новый Соответствие);
	ДанныеПоУслуге.Вставить("ОбъемПоПриборуТарифныЗоны",					Новый Соответствие);	
	ДанныеПоУслуге.Вставить("ОбъемБезПрибораТарифныЗоныПотребленный",		Новый Соответствие);
	ДанныеПоУслуге.Вставить("ОбъемПоПриборуТарифныЗоныПотребленный",		Новый Соответствие);	
	ДанныеПоУслуге.Вставить("РаспределениеПоУслугам",						Новый Соответствие);
	ДанныеПоУслуге.Вставить("РаспределениеПоУслугамПотребленный",			Новый Соответствие);
	ДанныеПоУслуге.Вставить("ПлощадиАбонентов",								Новый Соответствие);
	ДанныеПоУслуге.Вставить("ЗависитОтУслуги",								ВыборкаОбъемМКД.ЗависитОтУслуги);
	ДанныеПоУслуге.Вставить("ВидПлощади",									ВыборкаОбъемМКД.ВидПлощади);
	ДанныеПоУслуге.Вставить("РазделенныеЛицевыеСчета",						РазделенныеЛицевыеСчета);
	ДанныеПоУслуге.Вставить("АбонентыДляРаспределения", 					Новый Массив);
	ДанныеПоУслуге.Вставить("КорректироватьИндивидуальныйОбъемСУчетомОДПУ",	ВыборкаОбъемМКД.КорректироватьИндивидуальныйОбъемСУчетомОДПУ); 
	ДанныеПоУслуге.Вставить("ВсегоАбонентов", 								ВыборкаОбъемМКД.ВсегоАбонентов);
	ДанныеПоУслуге.Вставить("ВсегоСУстановелннымПриборомУчета", 			ВыборкаОбъемМКД.ВсегоСУстановелннымПриборомУчета);
	ДанныеПоУслуге.Вставить("ВсегоПлощадьАбонентов", 						ВыборкаОбъемМКД.ВсегоПлощадьАбонентов);
	ДанныеПоУслуге.Вставить("ВсегоПлощадьАбонентовПоПрибору", 				0);			
	ДанныеПоУслуге.Вставить("ВсегоПлощадьАбонентовПоПриборуПотребленный", 	0);			
	ДанныеПоУслуге.Вставить("ПлощадьМОП", 									ВыборкаОбъемМКД.ПлощадьМОП);
	ДанныеПоУслуге.Вставить("ВсегоПлощадьАбонентовСобственнаяПоставка", 	ВыборкаОбъемМКД.ВсегоПлощадьАбонентовСобственнаяПоставка);
	ДанныеПоУслуге.Вставить("ДанныеНачисленийАбонентов", 					энргНачисления.ОписаниеТаблицыОбъемов());
	ДанныеПоУслуге.Вставить("ДанныеНачисленийАбонентовПотребленный", 		энргНачисления.ОписаниеТаблицыОбъемов()); 	
	ДанныеПоУслуге.Вставить("ОбщийОбъемНачислений", 						энргНачисления.ОписаниеТаблицыОбъемов());
	ДанныеПоУслуге.Вставить("ОбщийОбъемНачисленийПотребленный", 			энргНачисления.ОписаниеТаблицыОбъемов());
	ДанныеПоУслуге.Вставить("ОбщийОбъемНачисленийПомещений", 				энргНачисления.ОписаниеТаблицыОбъемов());
	ДанныеПоУслуге.Вставить("ОбщийОбъемНачисленийПомещенийПотребленный", 	энргНачисления.ОписаниеТаблицыОбъемов());
	ДанныеПоУслуге.Вставить("НачисленияАбонентовБезПрибора", 				энргНачисления.ОписаниеТаблицыОбъемов());
	ДанныеПоУслуге.Вставить("НачисленияАбонентовБезПрибораПотребленный", 	энргНачисления.ОписаниеТаблицыОбъемов());
	ДанныеПоУслуге.Вставить("ОбъемПоПриборуКорректировать", 				энргНачисления.ОписаниеТаблицыОбъемов());
	ДанныеПоУслуге.Вставить("ОбъемПоПриборуКорректироватьПотребленный", 	энргНачисления.ОписаниеТаблицыОбъемов());
	ДанныеПоУслуге.Вставить("ДанныеНачисленийДоговоров", 					энргНачисления.ОписаниеТаблицыОбъемов("бестОбъемНачисленийНП"));
	ДанныеПоУслуге.Вставить("ДанныеНачисленийДоговоровПотребленный", 		энргНачисления.ОписаниеТаблицыОбъемов("бестОбъемНачисленийНП"));
	ДанныеПоУслуге.Вставить("НачисленияНПБезПрибора", 						энргНачисления.ОписаниеТаблицыОбъемов("бестОбъемНачисленийНП"));
	ДанныеПоУслуге.Вставить("НачисленияНПБезПрибораПотребленный", 			энргНачисления.ОписаниеТаблицыОбъемов("бестОбъемНачисленийНП"));
	ДанныеПоУслуге.Вставить("УВсехАбонентовПоПрибору", 						Истина);
	ДанныеПоУслуге.Вставить("УВсехАбонентовПоПриборуПотребленный", 			Истина);
	ДанныеПоУслуге.Вставить("ПотреблениеАбонентов", 						0);
	ДанныеПоУслуге.Вставить("ПотреблениеАбонентовПоПрибору", 				0);
	ДанныеПоУслуге.Вставить("ПотреблениеАбонентовПотребленный", 			0);
	ДанныеПоУслуге.Вставить("ПотреблениеАбонентовПоПриборуПотребленный", 	0);
	ДанныеПоУслуге.Вставить("НеРаспределятьСверхнорматив", 					ВыборкаОбъемМКД.НеРаспределятьСверхнорматив);
	ДанныеПоУслуге.Вставить("ФормулаРасчетаНорматива",	 					ВыборкаОбъемМКД.ФормулаРасчетаНорматива);
	ДанныеПоУслуге.Вставить("НеНачислятьУслугуАбонентам",	 				ВыборкаОбъемМКД.НеНачислятьУслугуАбонентам);
	ДанныеПоУслуге.Вставить("ОбъемПоПриборуНПКорректировать", 				энргНачисления.ОписаниеТаблицыОбъемов("бестОбъемНачисленийНП"));	
	ДанныеПоУслуге.Вставить("ОбъемПоПриборуНПКорректироватьПотребленный", 	энргНачисления.ОписаниеТаблицыОбъемов("бестОбъемНачисленийНП"));
	ДанныеПоУслуге.Вставить("ПоказанияПредоставлены", 						0);	
	ДанныеПоУслуге.Вставить("ПоказанияПредоставленыПотребленный", 			0);
	ДанныеПоУслуге.Вставить("НазначениеПрибораУчета", 						Неопределено);
	ДанныеПоУслуге.Вставить("ОтрицательныйОбъемРаспределения", 				Новый Структура("ОбъемУслуги,ОбъемУслугиПотребленный,Расшифровка",0,0,Новый Массив));
	ДанныеПоУслуге.Вставить("ПроцентРаспределенияОтрицательногоОбъема", 	ВыборкаОбъемМКД.ПроцентРаспределенияОтрицательногоОбъема);	
	Возврат ДанныеПоУслуге;
КонецФункции

Процедура РазбитьПоСоцНорме(яНабор,яНаборОбщий,НаборЗаписей,СтрокаНачисленийАбонента,ОбъемУслуги,СоцПлощадь,СпособНачисленияОДН,ГраницыПериода,ДанныеПоУслуге,ЕстьСуммаНачислений,ЗначенияТарифов,Услуга,ПотреблениеАбонентов,СуммаПлощадейПомещения,ЭтоОбъемПотребленный)
	Если ЭтоОбъемПотребленный Тогда
		НеЗаполняем = "ОбъемУслуги";
		Заполняем 	= "ОбъемУслугиПотребленный";		
	Иначе
		НеЗаполняем = "ОбъемУслугиПотребленный";
		Заполняем 	= "ОбъемУслуги";		
	КонецЕсли;
	Объем 										= ОбъемУслуги;
	ОбъемСоцНорма 								= 0;
	Если СоцПлощадь < СтрокаНачисленийАбонента.ЗначениеПлощади Тогда 
		ОбъемСоцНорма 							= Объем * СоцПлощадь / СтрокаНачисленийАбонента.ЗначениеПлощади;
	Иначе
		ОбъемСоцНорма 							= Объем;
	КонецЕсли;
	СтрокаНабора  								= яНабор.Добавить();
	ЗаполнитьЗначенияСвойств(СтрокаНабора, СтрокаНачисленийАбонента,,НеЗаполняем);
	СтрокаНабора.Распределение 					= Истина;
	СтрокаНабора.СпособНачисления				= СпособНачисленияОДН;
	СтрокаНабора.Период 						= ГраницыПериода.ЗавершениеОП-1;
	
	Если СпособНачисленияОДН = Перечисления.энргСпособНачислений.ПоПриборам Тогда
		СтрокаНабора.СниматьНачисленныйСредний = Ложь;		
	КонецЕсли;
	
	Если Объем > ОбъемСоцНорма Тогда
		СтрокаНабора.СверхНорматива				= Ложь;
		СтрокаНабора[Заполняем] 				= ОбъемСоцНорма;
		Если ЕстьСуммаНачислений Тогда
			СтрокаНабора.Сумма 					= СтрокаНабора.ОбъемУслуги * СтрокаНабора.ЗначениеТарифа;
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(яНаборОбщий.Добавить(),СтрокаНабора,,НеЗаполняем);

		СтрокаСверхНорматива 					= яНабор.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСверхНорматива,СтрокаНабора);
		СтрокаСверхНорматива.СверхНорматива 	= Истина;
		СтрокаСверхНорматива[Заполняем] 		= Объем - ОбъемСоцНорма;
		СтрокаСверхНорматива.ЗначениеТарифа 	= СтрокаНачисленийАбонента.ЗначениеТарифаСверхНорматива;
		Если ЕстьСуммаНачислений Тогда
			СтрокаНабора.Сумма 					= СтрокаНабора.ОбъемУслуги * СтрокаНабора.ЗначениеТарифа;
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(яНаборОбщий.Добавить(),СтрокаСверхНорматива,,НеЗаполняем);
	Иначе
		СтрокаНабора.СверхНорматива				= Ложь;
		СтрокаНабора[Заполняем] 				= Объем;
		Если ЕстьСуммаНачислений Тогда
			СтрокаНабора.Сумма 					= СтрокаНабора.ОбъемУслуги * СтрокаНабора.ЗначениеТарифа;
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(яНаборОбщий.Добавить(),СтрокаНабора,,НеЗаполняем);
	КонецЕсли; 		
		
	РазделенныеЛицевыеСчета 					= ДанныеПоУслуге.РазделенныеЛицевыеСчета;
	
	Если НЕ РазделенныеЛицевыеСчета[СтрокаНачисленийАбонента.Помещение] = Неопределено Тогда
		ОсталосьВнутриПомещения 				= Объем;
		ПомещенияПотомки						= РазделенныеЛицевыеСчета[СтрокаНачисленийАбонента.Помещение];
		
		Для Каждого ПомещениеПотомок Из ПомещенияПотомки Цикл
			ДанныеПомещения  					= ПомещениеПотомок.Значение[Услуга];
			СуммаПлощадейПомещения 				= СуммаПлощадейПомещения + ДанныеПомещения.Значениеплощади; 
		КонецЦикла;		
		
		ПереасчитатьСтроки 						= Новый Массив;
		
		Для Каждого ПомещениеПотомок Из ПомещенияПотомки Цикл
			ДанныеПомещения  					= ПомещениеПотомок.Значение[Услуга];				                 		
			
			ХэшСтрокиТарифа 					= ХэшСтрокиТарифа(ДанныеПомещения.ТарифнаяГруппа,Услуга,ДанныеПомещения.Поставщик,Справочники.энргТарифныеЗоны.БезРазбивки); 
			ЗначениеТарифа 						= ?(ЗначенияТарифов[ХэшСтрокиТарифа] = Неопределено, Новый Структура("Значение", 0), ЗначенияТарифов[ХэшСтрокиТарифа]);
			СтрокаНабора  						= НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаНабора, СтрокаНачисленийАбонента,,НеЗаполняем);
			СтрокаНабора.Распределение 			= Истина;
			СтрокаНабора.СпособНачисления		= СпособНачисленияОДН;
			СтрокаНабора.Период 				= ГраницыПериода.ЗавершениеОП-1;
			СтрокаНабора.Помещение				= ПомещениеПотомок.Ключ;
			СтрокаНабора.ТарифнаяГруппа			= ДанныеПомещения.ТарифнаяГруппа;
			СтрокаНабора.ЗначениеТарифа			= ЗначениеТарифа.Значение;
			СтрокаНабора.Абонент				= ДанныеПомещения.Абонент;						
			ОбъемПотомка 						= 0;
			Если ДанныеПомещения.СпособРаспределенияОбъемаПомещения = Перечисления.энргСпособыРаспределенияОбъема.ФиксированныйОбъем Тогда
				ОбъемПотомка 					= ДанныеПомещения.ФиксированныйОбъемПотребления;;
				ОсталосьВнутриПомещения 		= ОсталосьВнутриПомещения - ОбъемПотомка;
			ИначеЕсли ДанныеПомещения.СпособРаспределенияОбъемаПомещения = Перечисления.энргСпособыРаспределенияОбъема.ДолевоеРаспределение Тогда
				ОбъемПотомка 					= Объем * ДанныеПомещения.ДоляПотребленияЧислитель / ДанныеПомещения.ДоляПотребленияЗнаменатель; 
				ОсталосьВнутриПомещения 		= ОсталосьВнутриПомещения - ОбъемПотомка;
			ИначеЕсли ДанныеПомещения.СпособРаспределенияОбъемаПомещения = Перечисления.энргСпособыРаспределенияОбъема.Остаток Тогда	
				ПереасчитатьСтроки.Добавить(НаборЗаписей.Индекс(СтрокаНабора));
			Иначе
				Если ЗначениеЗаполнено(ДанныеПоУслуге.ВидПлощади) Тогда
					ОбъемПотомка 				= ?(НЕ СуммаПлощадейПомещения = 0, Объем * ДанныеПомещения.ЗначениеПлощади / СуммаПлощадейПомещения, 0);					 
				Иначе
					ОбъемПотомка 				= ?(НЕ СтрокаНачисленийАбонента.КоличествоЖильцов = 0, Объем * ДанныеПомещения.КоличествоПроживающих / СтрокаНачисленийАбонента.КоличествоЖильцов, 0); 
				КонецЕсли;
				ОсталосьВнутриПомещения 		= ОсталосьВнутриПомещения - ОбъемПотомка;
			КонецЕсли;											
			
			ОбъемСоциальнойНормы 				= 0;
			Если (ДанныеПомещения.ЗначениеСоциальнойНормы * ДанныеПомещения.КоличествоЧеловек + ДанныеПомещения.ДопСоциальнаяНормаПотребления) < ДанныеПомещения.ЗначениеПлощади Тогда 
				ОбъемСоциальнойНормы 			= ОбъемПотомка * (ДанныеПомещения.ЗначениеСоциальнойНормы * ДанныеПомещения.КоличествоЧеловек + ДанныеПомещения.ДопСоциальнаяНормаПотребления) / ДанныеПомещения.ЗначениеПлощади;
			Иначе
				ОбъемСоциальнойНормы 			= ОбъемПотомка;
			КонецЕсли;			
			
			Если ОбъемПотомка > ОбъемСоциальнойНормы Тогда
				СтрокаНабора[Заполняем] 		= ОбъемСоциальнойНормы;
				СтрокаНабора.Сумма				= СтрокаНабора[Заполняем] * ЗначениеТарифа.Значение;
				
				НоваяСтрока 					= НаборЗаписей.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаНабора);
				НоваяСтрока[Заполняем] 			= ОбъемПотомка - СтрокаНабора[Заполняем];
				НоваяСтрока.СверхНорматива 		= Истина;
				НоваяСтрока.ЗначениеТарифа 		= ЗначениеТарифа.ЗначениеСверхНорматива;
			Иначе
				СтрокаНабора[Заполняем] 		= ОбъемПотомка;
				СтрокаНабора.Сумма				= СтрокаНабора[Заполняем] * ЗначениеТарифа.Значение;
			КонецЕсли;							
		КонецЦикла;
		
		Если ПереасчитатьСтроки.Количество() > 0 Тогда
			Для Сч = 0 По ПереасчитатьСтроки.ВГраница() Цикл
				СтрокаНабора 					= НаборЗаписей.Получить(ПереасчитатьСтроки[Сч]);
				СтрокаНабора[Заполняем] 		= ОсталосьВнутриПомещения;
				СтрокаНабора.Сумма				= СтрокаНабора[Заполняем] * ЗначениеТарифа.Значение;
			КонецЦикла;						
		КонецЕсли;					
	КонецЕсли;
КонецПроцедуры

Процедура ПрочитатьДокументыДляРаспределения(МВТ,Организация, ПериодНачисления, Район, МКД, ГраницаПериода)
	
	Запрос  						= Новый Запрос(ТекстЗапросаДокументыДляРаспределенияМКД());
	Запрос.УстановитьПараметр("ПериодНачисления", 	ПериодНачисления);
	Запрос.УстановитьПараметр("Организация", 		Организация);
	Запрос.УстановитьПараметр("Район", 				Район);
	Запрос.УстановитьПараметр("Строение", 			МКД); 	
	Запрос.УстановитьПараметр("ЗавершениеОП",		ГраницаПериода.ЗавершениеОП); 	
	Запрос.УстановитьПараметр("Период",				ГраницаПериода.ЗавершениеОП-1); 	
	Запрос.МенеджерВременныхТаблиц 	= МВТ;
	
	Если МКД = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И энргОтложенныеДвиженияДокументов.Строение = &Строение","");	
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И МКД = &Строение","");	
	КонецЕсли;
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПрочитатьСозданныеДокументыИндивидуальныхНачислений(МВТ,Организация, ПериодНачисления, Район, МКД)

	Запрос  						= Новый Запрос(ТекстЗапросаСозданныеДокументыРаспределения());
	Запрос.УстановитьПараметр("ПериодНачисления", 	ПериодНачисления);
	Запрос.УстановитьПараметр("Организация", 		Организация);
	Запрос.УстановитьПараметр("Район", 				Район);
	Запрос.УстановитьПараметр("Строение", 			МКД);	
	Запрос.МенеджерВременныхТаблиц 	= МВТ;
	
	Если МКД = Неопределено Тогда
		Запрос.Текст 				= СтрЗаменить(Запрос.Текст,"И энргДокументыНачислений.МКД = &Строение","");
		Запрос.Текст 				= СтрЗаменить(Запрос.Текст,"И (энргДокументыНачислений.МКД = &Строение)","");
		Запрос.Текст 				= СтрЗаменить(Запрос.Текст,"И МКД = &Строение","");
	КонецЕсли;
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПрочитатьОбъемыНачисленийМКДДляРаспределения(МВТ, Организация,ПериодНачисления,Район, МКД, ГраницыПериода)
	
	Запрос  						= Новый Запрос(ТекстЗапросаОбъемыНачисленийМКДДляРаспределения());
	Запрос.УстановитьПараметр("ПериодНачисления", 	ПериодНачисления);
	Запрос.УстановитьПараметр("Организация", 		Организация);
	Запрос.УстановитьПараметр("Район", 				Район);
	Запрос.УстановитьПараметр("Строение", 			МКД);
	Запрос.УстановитьПараметр("НачалоПериода",		ГраницыПериода.НачалоОП);
	Запрос.УстановитьПараметр("КонецПериода",		ГраницыПериода.ЗавершениеОП);
	Запрос.УстановитьПараметр("Период",				ГраницыПериода.ЗавершениеОП-1);
	Запрос.МенеджерВременныхТаблиц 	= МВТ;
	
	Если МКД = Неопределено Тогда
		Запрос.Текст 				= СтрЗаменить(Запрос.Текст,"И МКД = &Строение","");
		Запрос.Текст 				= СтрЗаменить(Запрос.Текст,"И (бестОбъектыРасчета.МКД = &Строение)","");
		Запрос.Текст 				= СтрЗаменить(Запрос.Текст,"И Строение = &Строение","");		
	КонецЕсли;
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПрочитатьНормативныеДанныеРаспределения(МВТ,Организация, ПериодНачисления, Район, ГраницыПериода)
	
	Запрос  						= Новый Запрос(ТекстЗапросаНормативныеДанныеРаспределения());
	Запрос.МенеджерВременныхТаблиц 	= МВТ;
	Запрос.УстановитьПараметр("ПериодНачисления", 	ПериодНачисления);
	Запрос.УстановитьПараметр("Организация", 		Организация);
	Запрос.УстановитьПараметр("Район", 				Район);
	Запрос.УстановитьПараметр("Период",				ГраницыПериода.ЗавершениеОП-1);
	Запрос.Выполнить();
	
КонецПроцедуры

#КонецОбласти


#Область РаспределениеМКД_Перерасчет

Функция ТекстЗапросаНормативныеДанныеРаспределения_Перерасчет()
	
	Текст  = 
	"ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	ВложенныйЗапрос.ПериодНачисления КАК ПериодНачисления,
	|	&Район КАК Район,
	|	энргЗначенияНормативовПотребления.КлючНорматива КАК КлючНорматива,
	|	энргЗначенияНормативовПотребления.Услуга КАК Услуга,
	|	энргЗначенияНормативовПотребления.ЗначениеНорматива КАК ЗначениеНорматива
	|ПОМЕСТИТЬ ЗначенияТекущихНормПотребления
	|ИЗ
	|	(ВЫБРАТЬ
	|		ГраницыОтчетногоПериода.ПериодНачисления КАК ПериодНачисления,
	|		энргЗначенияНормативовПотребления.КлючНорматива КАК КлючНорматива,
	|		энргЗначенияНормативовПотребления.Услуга КАК Услуга,
	|		МАКСИМУМ(энргЗначенияНормативовПотребления.Период) КАК Период
	|	ИЗ
	|		ГраницыОтчетногоПериода КАК ГраницыОтчетногоПериода
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.энргЗначенияНормативовПотребления КАК энргЗначенияНормативовПотребления
	|			ПО ГраницыОтчетногоПериода.Организация = энргЗначенияНормативовПотребления.Организация
	|				И ГраницыОтчетногоПериода.ЗавершениеОП > энргЗначенияНормативовПотребления.Период
	|				И (энргЗначенияНормативовПотребления.Организация = &Организация)
	|				И (энргЗначенияНормативовПотребления.Район = &Район)
	|				И (энргЗначенияНормативовПотребления.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.энргТипыНачислений.ОбщедомовыеНачисления))
	|				И (энргЗначенияНормативовПотребления.НаправлениеИспользованияТУ = ЗНАЧЕНИЕ(Справочник.энргНаправлениеИспользованияТочекУчета.ОсновноеНаправление))
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ГраницыОтчетногоПериода.ПериодНачисления,
	|		энргЗначенияНормативовПотребления.КлючНорматива,
	|		энргЗначенияНормативовПотребления.Услуга) КАК ВложенныйЗапрос
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.энргЗначенияНормативовПотребления КАК энргЗначенияНормативовПотребления
	|		ПО ВложенныйЗапрос.КлючНорматива = энргЗначенияНормативовПотребления.КлючНорматива
	|			И ВложенныйЗапрос.Услуга = энргЗначенияНормативовПотребления.Услуга
	|			И ВложенныйЗапрос.Период = энргЗначенияНормативовПотребления.Период
	|			И (энргЗначенияНормативовПотребления.Организация = &Организация)
	|			И (энргЗначенияНормативовПотребления.Район = &Район)
	|			И (энргЗначенияНормативовПотребления.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.энргТипыНачислений.ОбщедомовыеНачисления))
	|			И (энргЗначенияНормативовПотребления.НаправлениеИспользованияТУ = ЗНАЧЕНИЕ(Справочник.энргНаправлениеИспользованияТочекУчета.ОсновноеНаправление))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Организация,
	|	ВложенныйЗапрос.ПериодНачисления,
	|	&Район,
	|	энргЗначенияНормативовПотребления.КлючНорматива,
	|	энргЗначенияНормативовПотребления.Услуга,
	|	энргЗначенияНормативовПотребления.ЗначениеНорматива
	|ИЗ
	|	(ВЫБРАТЬ
	|		ГраницыОтчетногоПериода.ПериодНачисления КАК ПериодНачисления,
	|		энргЗначенияНормативовПотребления.КлючНорматива КАК КлючНорматива,
	|		энргЗначенияНормативовПотребления.Услуга КАК Услуга,
	|		МАКСИМУМ(энргЗначенияНормативовПотребления.Период) КАК Период
	|	ИЗ
	|		ГраницыОтчетногоПериода КАК ГраницыОтчетногоПериода
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.энргЗначенияНормативовПотребления КАК энргЗначенияНормативовПотребления
	|			ПО ГраницыОтчетногоПериода.Организация = энргЗначенияНормативовПотребления.Организация
	|				И ГраницыОтчетногоПериода.ЗавершениеОП > энргЗначенияНормативовПотребления.Период
	|				И (энргЗначенияНормативовПотребления.Организация = &Организация)
	|				И (энргЗначенияНормативовПотребления.Район = &Район)
	|				И (энргЗначенияНормативовПотребления.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.энргТипыНачислений.ИндивидуальныеНачисления))
	|				И (энргЗначенияНормативовПотребления.НаправлениеИспользованияТУ = ЗНАЧЕНИЕ(Справочник.энргНаправлениеИспользованияТочекУчета.ОсновноеНаправление))
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг КАК энргВидыУслуг
	|			ПО (энргЗначенияНормативовПотребления.Услуга = энргВидыУслуг.Ссылка)
	|				И (энргВидыУслуг.НормативДляИндивидуальных)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ГраницыОтчетногоПериода.ПериодНачисления,
	|		энргЗначенияНормативовПотребления.КлючНорматива,
	|		энргЗначенияНормативовПотребления.Услуга) КАК ВложенныйЗапрос
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.энргЗначенияНормативовПотребления КАК энргЗначенияНормативовПотребления
	|		ПО ВложенныйЗапрос.КлючНорматива = энргЗначенияНормативовПотребления.КлючНорматива
	|			И ВложенныйЗапрос.Услуга = энргЗначенияНормативовПотребления.Услуга
	|			И ВложенныйЗапрос.Период = энргЗначенияНормативовПотребления.Период
	|			И (энргЗначенияНормативовПотребления.Организация = &Организация)
	|			И (энргЗначенияНормативовПотребления.Район = &Район)
	|			И (энргЗначенияНормативовПотребления.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.энргТипыНачислений.ИндивидуальныеНачисления))
	|			И (энргЗначенияНормативовПотребления.НаправлениеИспользованияТУ = ЗНАЧЕНИЕ(Справочник.энргНаправлениеИспользованияТочекУчета.ОсновноеНаправление))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	ВложенныйЗапрос.ПериодНачисления КАК ПериодНачисления,
	|	&РАйон КАК Район,
	|	энргЗначенияТарифов.ГруппаПотребителей КАК ГруппаПотребителей,
	|	энргЗначенияТарифов.Услуга КАК Услуга,
	|	энргЗначенияТарифов.Поставщик КАК Поставщик,
	|	энргЗначенияТарифов.ТарифнаяЗона КАК ТарифнаяЗона,
	|	энргЗначенияТарифов.Значение КАК Значение,
	|	энргЗначенияТарифов.ЗначениеСверхНорматива КАК ЗначениеСверхНорматива,
	|	энргЗначенияТарифов.ЗначениеРЭК КАК ЗначениеТарифаРЭК,
	|	энргЗначенияТарифов.СтавкаНДС КАК СтавкаНДС,
	|	энргЗначенияТарифов.НДСВнутри КАК НДСВнутри
	|ПОМЕСТИТЬ ЗначенияТекущихТарифов
	|ИЗ
	|	(ВЫБРАТЬ
	|		ГраницыОтчетногоПериода.ПериодНачисления КАК ПериодНачисления,
	|		энргЗначенияТарифов.ГруппаПотребителей КАК ГруппаПотребителей,
	|		энргЗначенияТарифов.Услуга КАК Услуга,
	|		энргЗначенияТарифов.Поставщик КАК Поставщик,
	|		энргЗначенияТарифов.ТарифнаяЗона КАК ТарифнаяЗона,
	|		МАКСИМУМ(энргЗначенияТарифов.Период) КАК Период
	|	ИЗ
	|		ГраницыОтчетногоПериода КАК ГраницыОтчетногоПериода
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.энргЗначенияТарифов КАК энргЗначенияТарифов
	|			ПО ГраницыОтчетногоПериода.Организация = энргЗначенияТарифов.Организация
	|				И ГраницыОтчетногоПериода.ЗавершениеОП > энргЗначенияТарифов.Период
	|				И (энргЗначенияТарифов.Организация = &Организация)
	|				И (энргЗначенияТарифов.Район = &Район)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ГраницыОтчетногоПериода.ПериодНачисления,
	|		энргЗначенияТарифов.ГруппаПотребителей,
	|		энргЗначенияТарифов.Услуга,
	|		энргЗначенияТарифов.Поставщик,
	|		энргЗначенияТарифов.ТарифнаяЗона) КАК ВложенныйЗапрос
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.энргЗначенияТарифов КАК энргЗначенияТарифов
	|		ПО ВложенныйЗапрос.ГруппаПотребителей = энргЗначенияТарифов.ГруппаПотребителей
	|			И ВложенныйЗапрос.Услуга = энргЗначенияТарифов.Услуга
	|			И ВложенныйЗапрос.Поставщик = энргЗначенияТарифов.Поставщик
	|			И ВложенныйЗапрос.ТарифнаяЗона = энргЗначенияТарифов.ТарифнаяЗона
	|			И ВложенныйЗапрос.Период = энргЗначенияТарифов.Период
	|			И (энргЗначенияТарифов.Организация = &Организация)
	|			И (энргЗначенияТарифов.Район = &Район)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	ВложенныйЗапрос.ПериодНачисления КАК ПериодНачисления,
	|	&Район КАК Район,
	|	&Строение КАК МКД,
	|	энргНастройкаНачисленияГВСМКД.Услуга КАК Услуга,
	|	энргНастройкаНачисленияГВСМКД.ТипСхемы КАК ТипСхемы,
	|	энргНастройкаНачисленияГВСМКД.ПринадлежностьКТепловомуПункту КАК ПринадлежностьКТепловомуПункту,
	|	энргНастройкаНачисленияГВСМКД.НеНачислять КАК НеНачислять
	|ПОМЕСТИТЬ МКДНеНачислятьТЭ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ГраницыОтчетногоПериода.ПериодНачисления КАК ПериодНачисления,
	|		энргНастройкаНачисленияГВСМКД.Услуга КАК Услуга,
	|		энргНастройкаНачисленияГВСМКД.ТипСхемы КАК ТипСхемы,
	|		энргНастройкаНачисленияГВСМКД.ПринадлежностьКТепловомуПункту КАК ПринадлежностьКТепловомуПункту,
	|		МАКСИМУМ(энргНастройкаНачисленияГВСМКД.Период) КАК Период
	|	ИЗ
	|		ГраницыОтчетногоПериода КАК ГраницыОтчетногоПериода
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.энргНастройкаНачисленияГВСМКД КАК энргНастройкаНачисленияГВСМКД
	|			ПО ГраницыОтчетногоПериода.Организация = энргНастройкаНачисленияГВСМКД.Организация
	|				И ГраницыОтчетногоПериода.ЗавершениеОП > энргНастройкаНачисленияГВСМКД.Период
	|				И (энргНастройкаНачисленияГВСМКД.Организация = &Организация)
	|				И (энргНастройкаНачисленияГВСМКД.Район = &Район)
	|				И (энргНастройкаНачисленияГВСМКД.МКД = &Строение)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ГраницыОтчетногоПериода.ПериодНачисления,
	|		энргНастройкаНачисленияГВСМКД.Услуга,
	|		энргНастройкаНачисленияГВСМКД.ТипСхемы,
	|		энргНастройкаНачисленияГВСМКД.ПринадлежностьКТепловомуПункту) КАК ВложенныйЗапрос
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.энргНастройкаНачисленияГВСМКД КАК энргНастройкаНачисленияГВСМКД
	|		ПО ВложенныйЗапрос.Услуга = энргНастройкаНачисленияГВСМКД.Услуга
	|			И ВложенныйЗапрос.ТипСхемы = энргНастройкаНачисленияГВСМКД.ТипСхемы
	|			И ВложенныйЗапрос.ПринадлежностьКТепловомуПункту = энргНастройкаНачисленияГВСМКД.ПринадлежностьКТепловомуПункту
	|			И ВложенныйЗапрос.Период = энргНастройкаНачисленияГВСМКД.Период
	|			И (энргНастройкаНачисленияГВСМКД.Организация = &Организация)
	|			И (энргНастройкаНачисленияГВСМКД.Район = &Район)
	|			И (энргНастройкаНачисленияГВСМКД.МКД = &Строение)";
	
	Возврат Текст;

КонецФункции

Функция ТекстЗапросаДокументыДляРаспределенияМКД_Перерасчет() 
	
	Текст  = 
	"ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	ГраницыОтчетногоПериода.ПериодНачисления КАК ПериодНачисления,
	|	&Район КАК Район,
	|	&Строение КАК Строение,
	|	ГраницыОтчетногоПериода.ЗавершениеОП
	|ПОМЕСТИТЬ ДокументыДляРаспределения
	|ИЗ
	|	ГраницыОтчетногоПериода КАК ГраницыОтчетногоПериода";
	
	Возврат Текст
	
КонецФункции

Функция ТекстЗапросаСозданныеДокументыРаспределения_Перерасчет()
	
	Текст = 
	"ВЫБРАТЬ
	|	энргДокументыНачислений.ПериодНачисления КАК ПериодНачисления,
	|	энргДокументыНачислений.ДокументНачисления КАК ДокументНачисления
	|ПОМЕСТИТЬ ДокументыНачислений
	|ИЗ
	|	РегистрСведений.энргДокументыНачислений КАК энргДокументыНачислений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыДляРаспределения КАК ДокументыДляРаспределения
	|		ПО энргДокументыНачислений.Организация = ДокументыДляРаспределения.Организация
	|			И энргДокументыНачислений.ПериодНачисления = ДокументыДляРаспределения.ПериодНачисления
	|			И энргДокументыНачислений.Район = ДокументыДляРаспределения.Район
	|			И (энргДокументыНачислений.ВидОперацийНачисления = ЗНАЧЕНИЕ(Перечисление.энргВидыОперацийНачисления.Индивидуальные))
	|			И энргДокументыНачислений.МКД = ДокументыДляРаспределения.Строение
	|			И (энргДокументыНачислений.Организация = &Организация)
	|			И (энргДокументыНачислений.МКД = &Строение)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	ГраницыОтчетногоПериода.ПериодНачисления КАК ПериодНачисления,
	|	&Район КАК Район,
	|	&Строение КАК МКД,
	|	ЗНАЧЕНИЕ(Документ.энргРаспределениеМКД.ПустаяСсылка) КАК ДокументНачисления
	|ПОМЕСТИТЬ ДокументыРаспределенияМКД
	|ИЗ
	|	ГраницыОтчетногоПериода КАК ГраницыОтчетногоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	ВложенныйЗапрос.ПериодНачисления КАК ПериодНачисления,
	|	&Район КАК Район,
	|	&Строение КАК МКД,
	|	энргИсторияСоглашенийОРаспределенииСверхнормативногоОДН.Услуга КАК Услуга,
	|	энргИсторияСоглашенийОРаспределенииСверхнормативногоОДН.РаспределятьПолностью КАК РаспределятьПолностью
	|ПОМЕСТИТЬ ИсторияСоглашенийОРаспределенииСверхнормативногоОДН
	|ИЗ
	|	(ВЫБРАТЬ
	|		ГраницыОтчетногоПериода.ПериодНачисления КАК ПериодНачисления,
	|		энргИсторияСоглашенийОРаспределенииСверхнормативногоОДН.Услуга КАК Услуга,
	|		МАКСИМУМ(энргИсторияСоглашенийОРаспределенииСверхнормативногоОДН.Период) КАК Период
	|	ИЗ
	|		ГраницыОтчетногоПериода КАК ГраницыОтчетногоПериода
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.энргИсторияСоглашенийОРаспределенииСверхнормативногоОДН КАК энргИсторияСоглашенийОРаспределенииСверхнормативногоОДН
	|			ПО ГраницыОтчетногоПериода.Организация = энргИсторияСоглашенийОРаспределенииСверхнормативногоОДН.Организация
	|				И ГраницыОтчетногоПериода.ЗАвершениеОП > энргИсторияСоглашенийОРаспределенииСверхнормативногоОДН.Период
	|				И (энргИсторияСоглашенийОРаспределенииСверхнормативногоОДН.Организация = &Организация)
	|				И (энргИсторияСоглашенийОРаспределенииСверхнормативногоОДН.Район = &Район)
	|				И (энргИсторияСоглашенийОРаспределенииСверхнормативногоОДН.МКД = &Строение)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ГраницыОтчетногоПериода.ПериодНачисления,
	|		энргИсторияСоглашенийОРаспределенииСверхнормативногоОДН.Услуга) КАК ВложенныйЗапрос
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.энргИсторияСоглашенийОРаспределенииСверхнормативногоОДН КАК энргИсторияСоглашенийОРаспределенииСверхнормативногоОДН
	|		ПО ВложенныйЗапрос.Услуга = энргИсторияСоглашенийОРаспределенииСверхнормативногоОДН.Услуга
	|			И ВложенныйЗапрос.Период = энргИсторияСоглашенийОРаспределенииСверхнормативногоОДН.Период
	|			И (энргИсторияСоглашенийОРаспределенииСверхнормативногоОДН.Организация = &Организация)
	|			И (энргИсторияСоглашенийОРаспределенииСверхнормативногоОДН.Район = &Район)
	|			И (энргИсторияСоглашенийОРаспределенииСверхнормативногоОДН.МКД = &Строение)";
	
	Возврат Текст;
	
КонецФункции

Функция ТекстЗапросаОбъемыНачисленийМКДДляРаспределения_Перерасчет()
	Текст  = 
	"ВЫБРАТЬ
	|	энргОбъемНачисленийМКДОбороты.ПериодНачисления КАК ПериодНачисления,
	|	энргОбъемНачисленийМКДОбороты.Организация КАК Организация,
	|	энргОбъемНачисленийМКДОбороты.Район КАК Район,
	|	энргОбъемНачисленийМКДОбороты.МКД КАК МКД,
	|	энргОбъемНачисленийМКДОбороты.Услуга КАК Услуга,
	|	энргОбъемНачисленийМКДОбороты.ОбъемУслугиНорматив КАК ОбъемУслугиНормативОборот,
	|	энргОбъемНачисленийМКДОбороты.ТарифнаяЗона КАК ТарифнаяЗона,
	|	энргОбъемНачисленийМКДОбороты.СпособНачисления КАК СпособНачисления,
	|	энргОбъемНачисленийМКДОбороты.ОбъемУслуги КАК ОбъемУслугиОборот,
	|	энргОбъемНачисленийМКДОбороты.ОбъемУслугиПотребленный КАК ОбъемУслугиПотребленныйОборот,
	|	энргОбъемНачисленийМКДОбороты.ПоказанияПредоставлены КАК ПоказанияПредоставленыОборот,
	|	ВЫБОР
	|		КОГДА энргОбъемНачисленийМКДОбороты.СпособНачисления = ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.ПоПриборам)
	|			ТОГДА 1
	|		КОГДА энргОбъемНачисленийМКДОбороты.СпособНачисления = ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.НачислениеПоСреднему)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПоказанияПредоставленыПотребленныйОборот
	|ПОМЕСТИТЬ НачисленныйОбъемМКД
	|ИЗ
	|	&энргОбъемНачисленийМКД КАК энргОбъемНачисленийМКДОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(энргОбъемНачислений.Период, МЕСЯЦ) КАК ПериодНачисления,
	|	энргОбъемНачислений.Период КАК Период,
	|	энргОбъемНачислений.Регистратор КАК Регистратор,
	|	энргОбъемНачислений.НомерСтроки КАК НомерСтроки,
	|	энргОбъемНачислений.Активность КАК Активность,
	|	энргОбъемНачислений.Организация КАК Организация,
	|	энргОбъемНачислений.Район КАК Район,
	|	энргОбъемНачислений.Распределение КАК Распределение,
	|	энргОбъемНачислений.Строение КАК Строение,
	|	энргОбъемНачислений.Помещение КАК Помещение,
	|	энргОбъемНачислений.Абонент КАК Абонент,
	|	энргОбъемНачислений.Услуга КАК Услуга,
	|	энргОбъемНачислений.ТочкаУчета КАК ТочкаУчета,
	|	энргОбъемНачислений.ВидНачисления КАК ВидНачисления,
	|	энргОбъемНачислений.СпособНачисления КАК СпособНачисления,
	|	энргОбъемНачислений.НаправлениеИспользованияТУ КАК НаправлениеИспользованияТУ,
	|	энргОбъемНачислений.Измеритель КАК Измеритель,
	|	энргОбъемНачислений.ПриборУчета КАК ПриборУчета,
	|	энргОбъемНачислений.Шкала КАК Шкала,
	|	энргОбъемНачислений.ТарифнаяЗона КАК ТарифнаяЗона,
	|	энргОбъемНачислений.ЗначениеТарифа КАК ЗначениеТарифа,
	|	энргОбъемНачислений.Поставщик КАК Поставщик,
	|	энргОбъемНачислений.ПериодРасчета КАК ПериодРасчета,
	|	энргОбъемНачислений.ЧастныйСектор КАК ЧастныйСектор,
	|	энргОбъемНачислений.СверхНорматива КАК СверхНорматива,
	|	энргОбъемНачислений.Сумма КАК Сумма,
	|	энргОбъемНачислений.ОбъемУслуги КАК ОбъемУслуги,
	|	энргОбъемНачислений.ОбъемУслугиПотребленный КАК ОбъемУслугиПотребленный,
	|	энргОбъемНачислений.ОбъемУслугиСоцНорма КАК ОбъемУслугиСоцНорма,
	|	энргОбъемНачислений.НачалоПериода КАК НачалоПериода,
	|	энргОбъемНачислений.КонецПериода КАК КонецПериода,
	|	энргОбъемНачислений.НачальныеПоказания КАК НачальныеПоказания,
	|	энргОбъемНачислений.КонечныеПоказания КАК КонечныеПоказания,
	|	энргОбъемНачислений.КоличествоКомнат КАК КоличествоКомнат,
	|	энргОбъемНачислений.КоличествоПрописанных КАК КоличествоПрописанных,
	|	энргОбъемНачислений.ЗначениеПлощади КАК ЗначениеПлощади,
	|	энргОбъемНачислений.НормаПотребления КАК НормаПотребления,
	|	энргОбъемНачислений.КоэффициентПУ КАК КоэффициентПУ,
	|	энргОбъемНачислений.РасчетПоФормуле КАК РасчетПоФормуле,
	|	энргОбъемНачислений.ВидБлагоустройства КАК ВидБлагоустройства,
	|	энргОбъемНачислений.ТарифнаяГруппа КАК ТарифнаяГруппа,
	|	энргОбъемНачислений.ДатаПоверки КАК ДатаПоверки,
	|	энргОбъемНачислений.ОтключатьВНеполивнойСезон КАК ОтключатьВНеполивнойСезон,
	|	энргОбъемНачислений.ЗависимаяТочкаУчета КАК ЗависимаяТочкаУчета,
	|	энргОбъемНачислений.КоэффициентФормула КАК КоэффициентФормула,
	|	энргОбъемНачислений.ВидДифференцированности КАК ВидДифференцированности,
	|	энргОбъемНачислений.ОснованиеПерерасчета КАК ОснованиеПерерасчета,
	|	энргОбъемНачислений.ОснованиеПерерасчетаДата КАК ОснованиеПерерасчетаДата,
	|	энргОбъемНачислений.ПриборЗависимой КАК ПриборЗависимой,
	|	энргОбъемНачислений.СписатьИзНормы КАК СписатьИзНормы,
	|	энргОбъемНачислений.ПовыщающийКоэффициент КАК ПовыщающийКоэффициент,
	|	энргОбъемНачислений.КоличествоСобственников КАК КоличествоСобственников,
	|	энргОбъемНачислений.КоличествоПроживающих КАК КоличествоПроживающих,
	|	энргОбъемНачислений.СниматьНачисленныйСредний КАК СниматьНачисленныйСредний,
	|	энргОбъемНачислений.ПлощадьМОП КАК ПлощадьМОП,
	|	энргОбъемНачислений.ПлощадьАбонентов КАК ПлощадьАбонентов,
	|	энргОбъемНачислений.ПлощадьСобственнаяПоставка КАК ПлощадьСобственнаяПоставка,
	|	энргОбъемНачислений.КоэффициентРаспределенияОстатка КАК КоэффициентРаспределенияОстатка,
	|	энргОбъемНачислений.ЗначениеСоциальнойНормы КАК ЗначениеСоциальнойНормы,
	|	энргОбъемНачислений.СоставнаяУслуга КАК СоставнаяУслуга,
	|	энргОбъемНачислений.НеПрименятьСезонность КАК НеПрименятьСезонность,
	|	энргОбъемНачислений.ПомещениеРодитель КАК ПомещениеРодитель,
	|	энргОбъемНачислений.ДопСоциальнаяНормаПотребления КАК ДопСоциальнаяНормаПотребления
	|ПОМЕСТИТЬ ОбъемНачисленийПоПриборуУчетаКорректироватьИндивидуальныйОбъем
	|ИЗ
	|	РегистрНакопления.энргОбъемНачислений.Обороты(
	|			&НачалоПериодаПерерасчета,
	|			&КонецПериодаПерерасчета,
	|			Запись,
	|			Организация = &Организация
	|				И Район = &Район
	|				И НЕ Распределение
	|				И НЕ ЧастныйСектор
	|				И Строение = &Строение
	|				И ВидНачисления = ЗНАЧЕНИЕ(Перечисление.энргВидыНачислений.Начисление)
	|				И СпособНачисления В (ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.ПоПриборам), ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.НачислениеПоСреднему))
	|				И Услуга В
	|					(ВЫБРАТЬ
	|						энргВидыУслуг.Ссылка КАК Ссылка
	|					ИЗ
	|						Справочник.энргВидыУслуг КАК энргВидыУслуг
	|					ГДЕ
	|						энргВидыУслуг.КорректироватьИндивидуальныйОбъемСУчетомОДПУ)) КАК энргОбъемНачисленийОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.энргОбъемНачислений КАК энргОбъемНачислений
	|		ПО энргОбъемНачисленийОбороты.Период = энргОбъемНачислений.Период
	|			И энргОбъемНачисленийОбороты.Регистратор = энргОбъемНачислений.Регистратор
	|			И энргОбъемНачисленийОбороты.НомерСтроки = энргОбъемНачислений.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(бестОбъемНачисленийНП.Период, МЕСЯЦ) КАК ПериодНачисления,
	|	бестОбъемНачисленийНП.Период КАК Период,
	|	бестОбъемНачисленийНП.Регистратор КАК Регистратор,
	|	бестОбъемНачисленийНП.НомерСтроки КАК НомерСтроки,
	|	бестОбъемНачисленийНП.Активность КАК Активность,
	|	бестОбъемНачисленийНП.Организация КАК Организация,
	|	бестОбъемНачисленийНП.Район КАК Район,
	|	бестОбъемНачисленийНП.Распределение КАК Распределение,
	|	бестОбъемНачисленийНП.Договор КАК Договор,
	|	бестОбъемНачисленийНП.МКД КАК МКД,
	|	бестОбъемНачисленийНП.ОбъектРасчета КАК ОбъектРасчета,
	|	бестОбъемНачисленийНП.Услуга КАК Услуга,
	|	бестОбъемНачисленийНП.ТочкаУчета КАК ТочкаУчета,
	|	бестОбъемНачисленийНП.ВидНачисления КАК ВидНачисления,
	|	бестОбъемНачисленийНП.СпособНачисления КАК СпособНачисления,
	|	бестОбъемНачисленийНП.ПриборУчета КАК ПриборУчета,
	|	бестОбъемНачисленийНП.Шкала КАК Шкала,
	|	бестОбъемНачисленийНП.ТарифнаяЗона КАК ТарифнаяЗона,
	|	бестОбъемНачисленийНП.Поставщик КАК Поставщик,
	|	бестОбъемНачисленийНП.ПериодРасчета КАК ПериодРасчета,
	|	бестОбъемНачисленийНП.ДолевоеРаспределение КАК ДолевоеРаспределение,
	|	бестОбъемНачисленийНП.ОбъемПоПрибору КАК ОбъемПоПрибору,
	|	бестОбъемНачисленийНП.ОбъемУслуги КАК ОбъемУслуги,
	|	бестОбъемНачисленийНП.ОбъемУслугиПотребленный КАК ОбъемУслугиПотребленный,
	|	бестОбъемНачисленийНП.КоличествоЧасовШтатнойРаботыПУ КАК КоличествоЧасовШтатнойРаботыПУ,
	|	бестОбъемНачисленийНП.ОбъемДосчитанный КАК ОбъемДосчитанный,
	|	бестОбъемНачисленийНП.НачалоПериода КАК НачалоПериода,
	|	бестОбъемНачисленийНП.КонецПериода КАК КонецПериода,
	|	бестОбъемНачисленийНП.НачальныеПоказания КАК НачальныеПоказания,
	|	бестОбъемНачисленийНП.КонечныеПоказания КАК КонечныеПоказания,
	|	бестОбъемНачисленийНП.ЗначениеПлощади КАК ЗначениеПлощади,
	|	бестОбъемНачисленийНП.НормаПотребления КАК НормаПотребления,
	|	бестОбъемНачисленийНП.РасчетПоФормуле КАК РасчетПоФормуле,
	|	бестОбъемНачисленийНП.ДатаПоверки КАК ДатаПоверки,
	|	бестОбъемНачисленийНП.ЗависимаяТочкаУчета КАК ЗависимаяТочкаУчета,
	|	бестОбъемНачисленийНП.КоэффициентРасчета КАК КоэффициентФормула,
	|	бестОбъемНачисленийНП.ВидДифференцированности КАК ВидДифференцированности,
	|	бестОбъемНачисленийНП.СписатьИзНормы КАК СписатьИзНормы,
	|	бестОбъемНачисленийНП.ПовыщающийКоэффициент КАК ПовыщающийКоэффициент,
	|	бестОбъемНачисленийНП.СоставнаяУслуга КАК СоставнаяУслуга,
	|	бестОбъемНачисленийНП.НеПрименятьСезонность КАК НеПрименятьСезонность,
	|	бестОбъемНачисленийНП.ЗначениеНагрузки КАК ЗначениеНагрузки,
	|	бестОбъемНачисленийНП.ЗначениеНормативаЗаДень КАК ЗначениеНормативаЗаДень,
	|	бестОбъемНачисленийНП.ОбъектУчаствуетВРаспределенииМКД КАК ОбъектУчаствуетВРаспределенииМКД,
	|	бестОбъемНачисленийНП.СпособРасчетаНорматива КАК СпособРасчетаНорматива,
	|	бестОбъемНачисленийНП.ТемператураВнутриПомещения КАК ТемператураВнутриПомещения,
	|	бестОбъемНачисленийНП.ПлощадьМОП КАК ПлощадьМОП,
	|	бестОбъемНачисленийНП.ПлощадьАбонентов КАК ПлощадьАбонентов,
	|	бестОбъемНачисленийНП.ПлощадьСобственнаяПоставка КАК ПлощадьСобственнаяПоставка
	|ПОМЕСТИТЬ ОбъемНачисленийНППоПриборуУчетаКорректироватьИндивидуальныйОбъем
	|ИЗ
	|	РегистрНакопления.бестОбъемНачисленийНП.Обороты(
	|			&НачалоПериодаПерерасчета,
	|			&КонецПериодаПерерасчета,
	|			Запись,
	|			Организация = &Организация
	|				И Район = &Район
	|				И НЕ Распределение
	|				И МКД = &Строение
	|				И ВидНачисления = ЗНАЧЕНИЕ(Перечисление.энргВидыНачислений.Начисление)
	|				И СпособНачисления В (ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.ПоПриборам), ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.НачислениеПоСреднему))
	|				И Услуга В
	|					(ВЫБРАТЬ
	|						энргВидыУслуг.Ссылка КАК Ссылка
	|					ИЗ
	|						Справочник.энргВидыУслуг КАК энргВидыУслуг
	|					ГДЕ
	|						энргВидыУслуг.КорректироватьИндивидуальныйОбъемСУчетомОДПУ)) КАК бестОбъемНачисленийНПОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.бестОбъемНачисленийНП КАК бестОбъемНачисленийНП
	|		ПО бестОбъемНачисленийНПОбороты.Период = бестОбъемНачисленийНП.Период
	|			И бестОбъемНачисленийНПОбороты.Регистратор = бестОбъемНачисленийНП.Регистратор
	|			И бестОбъемНачисленийНПОбороты.НомерСтроки = бестОбъемНачисленийНП.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	энргОбъемНачисленийОбороты.Район КАК Район,
	|	энргОбъемНачисленийОбороты.Организация КАК Организация,
	|	энргОбъемНачисленийОбороты.Распределение КАК Распределение,
	|	бестОбъектыРасчета.МКД КАК Строение,
	|	энргОбъемНачисленийОбороты.ОбъектРасчета КАК Абонент,
	|	энргОбъемНачисленийОбороты.ОбъектРасчета КАК Помещение,
	|	энргОбъемНачисленийОбороты.Услуга КАК Услуга,
	|	энргОбъемНачисленийОбороты.ТочкаУчета КАК ТочкаУчета,
	|	энргОбъемНачисленийОбороты.ВидНачисления КАК ВидНачисления,
	|	энргОбъемНачисленийОбороты.СпособНачисления КАК СпособНачисления,
	|	ЗНАЧЕНИЕ(Справочник.энргНаправлениеИспользованияТочекУчета.ОсновноеНаправление) КАК НаправлениеИспользованияТУ,
	|	ЗНАЧЕНИЕ(Справочник.энргНаправлениеИспользованияТочекУчета.Пустаяссылка) КАК Измеритель,
	|	энргОбъемНачисленийОбороты.ПриборУчета КАК ПриборУчета,
	|	энргОбъемНачисленийОбороты.Шкала КАК Шкала,
	|	энргОбъемНачисленийОбороты.ТарифнаяЗона КАК ТарифнаяЗона,
	|	1 КАК ЗначениеТарифа,
	|	энргОбъемНачисленийОбороты.Поставщик КАК Поставщик,
	|	энргОбъемНачисленийОбороты.ПериодРасчета КАК ПериодРасчета,
	|	энргОбъемНачисленийОбороты.ПериодНачисления КАК ПериодНачисления,
	|	ЛОЖЬ КАК ЧастныйСектор,
	|	ЛОЖЬ КАК СверхНорматива,
	|	0 КАК Сумма,
	|	энргОбъемНачисленийОбороты.ОбъемУслуги КАК ОбъемУслуги,
	|	энргОбъемНачисленийОбороты.ОбъемУслугиПотребленный КАК ОбъемУслугиПотребленный,
	|	0 КАК СуммаПоПовышенномуКоэффициенту,
	|	энргОбъемНачисленийОбороты.НачалоПериода КАК НачалоПериода,
	|	энргОбъемНачисленийОбороты.КонецПериода КАК КонецПериода,
	|	энргОбъемНачисленийОбороты.НачальныеПоказания КАК НачальныеПоказания,
	|	энргОбъемНачисленийОбороты.КонечныеПоказания КАК КонечныеПоказания,
	|	0 КАК КоличествоКомнат,
	|	0 КАК КоличествоПрописанных,
	|	0 КАК КоличествоЖильцов,
	|	энргОбъемНачисленийОбороты.ЗначениеПлощади КАК ЗначениеПлощади,
	|	энргОбъемНачисленийОбороты.НормаПотребления КАК НормаПотребления,
	|	0 КАК КоэффициентПУ,
	|	энргОбъемНачисленийОбороты.РасчетПоФормуле КАК РасчетПоФормуле,
	|	ЗНАЧЕНИЕ(Справочник.энргВидыБлагоустройств.ПустаяСсылка) КАК ВидБлагоустройства,
	|	ЗНАЧЕНИЕ(Справочник.энргГруппыПотребителей.ПустаяСсылка) КАК ТарифнаяГруппа,
	|	энргОбъемНачисленийОбороты.ДатаПоверки КАК ДатаПоверки,
	|	ЛОЖЬ КАК ОтключатьВНеполивнойСезон,
	|	энргОбъемНачисленийОбороты.ЗависимаяТочкаУчета КАК ЗависимаяТочкаУчета,
	|	энргОбъемНачисленийОбороты.КоэффициентРасчета КАК КоэффициентФормула,
	|	энргОбъемНачисленийОбороты.ВидДифференцированности КАК ВидДифференцированности,
	|	"""" КАК ОснованиеПерерасчета,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ОснованиеПерерасчетаДата,
	|	ЗНАЧЕНИЕ(Справочник.энргПриборыУчетаАбонента.ПустаяСсылка) КАК ПриборЗависимой,
	|	ЛОЖЬ КАК СписатьИзНормы,
	|	энргОбъемНачисленийОбороты.ПовыщающийКоэффициент КАК ПовыщающийКоэффициент,
	|	0 КАК КоличествоСобственников,
	|	0 КАК КоличествоПроживающих,
	|	ЛОЖЬ КАК СниматьНачисленныйСредний,
	|	энргОбъемНачисленийОбороты.ПлощадьМОП КАК ПлощадьМОП,
	|	энргОбъемНачисленийОбороты.ПлощадьАбонентов КАК ПлощадьАбонентов,
	|	энргОбъемНачисленийОбороты.ПлощадьСобственнаяПоставка КАК ПлощадьСобственнаяПоставка,
	|	0 КАК КоэффициентРаспределенияОстатка,
	|	0 КАК ОбъемУслугиСоцНорма,
	|	энргОбъемНачисленийОбороты.СоставнаяУслуга КАК СоставнаяУслуга,
	|	энргОбъемНачисленийОбороты.НеПрименятьСезонность КАК НеПрименятьСезонность,
	|	ЗНАЧЕНИЕ(Справочник.энргПомещения.ПустаяСсылка) КАК ПомещениеРодитель,
	|	энргОбъемНачисленийОбороты.Договор КАК Договор,
	|	ВЫБОР
	|		КОГДА энргОбъемНачисленийОбороты.РасчетПоФактическомуПотреблению
	|			ТОГДА НЕ энргОбъемНачисленийОбороты.НеПрименятьСезонность
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РасчетПоФактическомуОбъему
	|ПОМЕСТИТЬ ОбъемНачисленийНП
	|ИЗ
	|	РегистрНакопления.бестОбъемНачисленийНП КАК энргОбъемНачисленийОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.бестОбъектыРасчета КАК бестОбъектыРасчета
	|		ПО энргОбъемНачисленийОбороты.ОбъектРасчета = бестОбъектыРасчета.Ссылка
	|			И (бестОбъектыРасчета.МКД = &Строение)
	|			И (энргОбъемНачисленийОбороты.Период МЕЖДУ &НачалоПериодаПерерасчета И &КонецПериодаПерерасчета)
	|			И (энргОбъемНачисленийОбороты.Организация = &Организация)
	|			И (энргОбъемНачисленийОбороты.Район = &Район)
	|			И (НЕ энргОбъемНачисленийОбороты.Распределение)";
	
	Возврат Текст;
	
КонецФункции

#КонецОбласти

#Область ПересчитатьРаспредениеОбъемаПотребленногоМКД
	
Процедура ПрочитатьНормативныеДанныеРаспределения_Перерасчет(МВТ,Организация,ПериодНачисления,Район,Строение)
	
	Запрос  						= Новый Запрос(ТекстЗапросаНормативныеДанныеРаспределения_Перерасчет());
	Запрос.МенеджерВременныхТаблиц 	= МВТ;
	Запрос.УстановитьПараметр("ПериодНачисления", 	ПериодНачисления);
	Запрос.УстановитьПараметр("Организация", 		Организация);
	Запрос.УстановитьПараметр("Район", 				Район);
	Запрос.УстановитьПараметр("Строение", 			Строение);
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПрочитатьДокументыДляРаспределения_Перерасчет(МВТ,Организация,ПериодНачисления,Район,Строение)
	
	Запрос  						= Новый Запрос(ТекстЗапросаДокументыДляРаспределенияМКД_Перерасчет());
	Запрос.УстановитьПараметр("ПериодНачисления", 	ПериодНачисления);
	Запрос.УстановитьПараметр("Организация", 		Организация);
	Запрос.УстановитьПараметр("Район", 				Район);
	Запрос.УстановитьПараметр("Строение", 			Строение); 	
	Запрос.МенеджерВременныхТаблиц 	= МВТ;	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПрочитатьСозданныеДокументыИндивидуальныхНачислений_Перерасчет(МВТ,Организация,ПериодНачисления,Район,Строение)
	
	Запрос  						= Новый Запрос(ТекстЗапросаСозданныеДокументыРаспределения_Перерасчет());
	Запрос.УстановитьПараметр("ПериодНачисления", 	ПериодНачисления);
	Запрос.УстановитьПараметр("Организация", 		Организация);
	Запрос.УстановитьПараметр("Район", 				Район);
	Запрос.УстановитьПараметр("Строение", 			Строение);	
	Запрос.МенеджерВременныхТаблиц 	= МВТ;		
	Запрос.Выполнить();

КонецПроцедуры

Процедура ПрочитатьОбъемыНачисленийМКДДляРаспределения_Перерасчет(МВТ,Организация,ПериодНачисления,Район,Строение,ПараметрыПерерасчета)
	
	Запрос  						= Новый Запрос(ТекстЗапросаОбъемыНачисленийМКДДляРаспределения_Перерасчет());
	Запрос.УстановитьПараметр("ПериодНачисления", 				ПериодНачисления);
	Запрос.УстановитьПараметр("Организация", 					Организация);
	Запрос.УстановитьПараметр("Район", 							Район);
	Запрос.УстановитьПараметр("Строение", 						Строение);
	Запрос.УстановитьПараметр("энргОбъемНачисленийМКД", 		ПараметрыПерерасчета.ОбъемНачисленийМКД);
	Запрос.УстановитьПараметр("НачалоПериодаПерерасчета",		ПараметрыПерерасчета.НачалоПериодаРасчета);
	Запрос.УстановитьПараметр("КонецПериодаПерерасчета",		ПараметрыПерерасчета.КонецПериодаРасчета);
	Запрос.МенеджерВременныхТаблиц 	= МВТ;
	Запрос.Выполнить();

КонецПроцедуры

#КонецОбласти
