#Область ЭкспортныеПроцедуры

Функция ГраницыРасчетногоПериода(ПериодНачисления,УчитыватьНачалоВеденияУчета = ложь) Экспорт 
	Текст  			= энргНачисления.ТекстГраницОтчетногоПериода(ПериодНачисления,ПериодНачисления,УчитыватьНачалоВеденияУчета);
	Запрос  		= Новый запрос;
	Запрос.Текст 	= СтрЗаменить(Текст,"ПОМЕСТИТЬ ГраницыОтчетногоПериода","");
	Результат  		= Запрос.Выполнить();
	Выборка  		= Результат.Выбрать();
	Выборка.Следующий();
	Возврат Выборка;	
КонецФункции

Процедура ПровестиПоСтабильнымПериодамНП(ссылка,Параметры) Экспорт 
	
	Если  ТипЗнч(ссылка)  =Тип("ДокументСсылка.бестЗаключениеДоговоровСЮридическимиЛицами") и ссылка.ВидОперации = Перечисления.бестВидыОпераций.ОперацияСДоговором_ОткрытиеДоговора тогда
		СтабПериодыНПЗаключениеДоговора(Ссылка,Параметры);
		
	ИначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.бестЗаключениеДоговоровСЮридическимиЛицами") и ссылка.ВидОперации = Перечисления.бестВидыОпераций.ОперацияСДоговором_ЗакрытиеДоговора тогда
		СтабПериодыНПРасторжениеДоговора(Ссылка,Параметры, "Договор");
		
	ИначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.бестЗаключениеДоговоровСЮридическимиЛицами") и (ссылка.ВидОперации = Перечисления.бестВидыОпераций.ОперацияСДоговором_ПерезаключениеДоговора ИЛИ ссылка.ВидОперации = Перечисления.бестВидыОпераций.ОперацияСДоговором_ЗаменаДоговораУОбъекта) тогда
		Параметры.ПараметрыЗапроса.Договор = Ссылка.ТекущийДоговор;
		СтабПериодыНПРасторжениеДоговора(Ссылка,Параметры,"ТекущийДоговор");
		Параметры.ПараметрыЗапроса.Договор = Ссылка.Договор;
		СтабПериодыНПЗаключениеДоговора(Ссылка,Параметры);
	//ИначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.бестОперацияСОбъектамиНП") и ссылка.ВидОперации = Перечисления.бестВидыОпераций.ОперацияСОбъектами_ПодключениеОбъекта тогда
	//	СтабПериодыНППодключениеОбъекта(Ссылка,Параметры);	
		
	ИначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.бестОперацияСОбъектамиНП") и ссылка.ВидОперации = Перечисления.бестВидыОпераций.ОперацияСОбъектами_ОтключениеОбъекта тогда
		СтабПериодыНПОтключениеОбъекта(Ссылка,Параметры);	
		
	ИначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.бестОперацияСУслугамиНП") и ссылка.ВидОперации = Перечисления.бестВидыОпераций.ОперацияСУслугами_ПодключениеУслуги  тогда
		СтабПериодыНППодключениеУслуги(Ссылка,Параметры);
		
	ИначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.бестОперацияСУслугамиНП") и ссылка.ВидОперации = Перечисления.бестВидыОпераций.ОперацияСУслугами_ОтключениеУслуги  тогда	
		СтабПериодыНПОтключениеУслуги(Ссылка,Параметры);
		
	ИначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.бестОперацияСУслугамиНП") и ссылка.ВидОперации = Перечисления.бестВидыОпераций.ОперацияСУслугами_ОграничениеУслуги  тогда	
		СтабПериодыНПОграничениеУслуги(Ссылка,Параметры);
		
	ИначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.бестОперацияСУслугамиНП") и ссылка.ВидОперации = Перечисления.бестВидыОпераций.ОперацияСУслугами_ВозобновлениеУслуги  тогда	
		СтабПериодыНПВозобновлениеУслуги(Ссылка,Параметры);
		
	ИначеЕсли ТипЗнч(ссылка) =Тип("ДокументСсылка.бестОперацияСПриборомУчетаНП") и ссылка.ВидОперации = Перечисления.бестВидыОпераций.ОперацияСПриборомУчета_ВводПУ тогда
		СтабПериодыНПАктВводаПрибораУчета(Ссылка,Параметры);
		
	ИначеЕсли ТипЗнч(ссылка) =Тип("ДокументСсылка.бестОперацияСПриборомУчетаНП") и ссылка.ВидОперации = Перечисления.бестВидыОпераций.ОперацияСПриборомУчета_ВыводПУ тогда
		СтабПериодыНПАктВыводаПрибораУчета(Ссылка,Параметры);
		
	ИначеЕсли ТипЗнч(ссылка) =Тип("ДокументСсылка.бестОперацияСПриборомУчетаНП") и ссылка.ВидОперации = Перечисления.бестВидыОпераций.ОперацияСПриборомУчета_ЗаменаПУ тогда
		//Параметры.РазрешенПустойНабор = истина;
		СтабПериодыНПЗаменаПрибораУчета(Ссылка,Параметры);	
		
	ИначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.бестУстановитьЗначениеПлощадиНП") тогда
		Параметры.РазрешенПустойНабор = истина;
		СтабПериодыНПУстановитьЗначениеПлощади(Ссылка,Параметры); 	
		
	ИначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.бестУстановитьНагрузкуПоУслугам") тогда
		Параметры.РазрешенПустойНабор = истина;
		СтабПериодыНПУстановитьНагрузку(Ссылка,Параметры); 
		
	ИначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.бестУстановитьПотребителейГВС") тогда
		Параметры.РазрешенПустойНабор = истина;
		СтабПериодыНПУстановитьПотребителейГВС(Ссылка,Параметры); 
		
	ИначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.бестУстановитьУчастиеОбъектаВРаспределенииРесурсовВМКД") тогда
		Параметры.РазрешенПустойНабор = истина;
		СтабПериодыНПУчастиеВРаспределенииМКД(Ссылка,Параметры); 
		
	ИначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.бестУстановитьФормулуРасчетаТочекУчетаНП") тогда
		Параметры.РазрешенПустойНабор = истина;
		СтабПериодыНПУстановитьФормулуРасчетаТочекУчета(Ссылка,Параметры); 

	ИначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.бестУстановитьГруппуПотребителейНП") тогда
		Параметры.РазрешенПустойНабор = истина;
		СтабПериодыНПУстановитьГруппуПотребителей(Ссылка,Параметры); 

	ИначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.бестУстановитьСпособНачисленияПоНормативуНП") тогда
		Параметры.РазрешенПустойНабор = истина;
		СтабПериодыНПСпособНачисленияПоНормативу(Ссылка,Параметры); 
		
	ИначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.бестУстановитьПоказателиТемпературыВнутриПомещения") тогда
		Параметры.РазрешенПустойНабор = истина;
		//СтабПериодыНПУстановитьТемпературуВнутриПомещения(Ссылка,Параметры); 
		
	//ИначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.бестУстановитьСреднемесячнуюТемпературу") тогда
	//	Параметры.РазрешенПустойНабор = истина;
	//	СтабПериодыНПУстановитьСреднемесячнуюТемпературу(Ссылка,Параметры); 
	//	
	//ИначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.бестУстановитьТемпературуНаружногоВоздуха") тогда
	//	Параметры.РазрешенПустойНабор = истина;
	//	СтабПериодыНПУстановитьТемпературуНаружногоВоздуха(Ссылка,Параметры); 
	
	ИначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.бестИзменениеИндивидуальныхНастроекСезонности") тогда
		Параметры.РазрешенПустойНабор = истина;
		//СтабПериодыНПИзменениеИндивидуальныхНастроекСезонности(Ссылка,Параметры);
		
	ИначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.бестСменаПоставщикаНП") тогда
		Параметры.РазрешенПустойНабор = истина;
		СтабПериодыСменаПоставщикаНП(Ссылка,Параметры);
		
	ИначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.бестУстановитьДатуПоверкиПУ") тогда

		СтабПериодыУстановитьДатуПоверкиПУ(Ссылка,Параметры);

	иначе

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не определен тип документа в менеджере стабильных периодов!!!");
	КонецЕсли;
	 
	
КонецПроцедуры

Процедура ЗаполнитьДанныеУстановкиФормулы(Объект) Экспорт
	ДанныеДляФормулы 				= Новый Структура;
	ДанныеЗаполнения  				= Новый Структура("Абонент,Район,МКД,ЛицевойСчет,АдресОбъекта,Дата,ДатаФактическогоСобытия");
	энргПользовательскийВводСервер.УстановитьЗависимыеРеквизитыАбонента(Объект.Абонент,ДанныеЗаполнения);
	ДанныеЗаполнения.Абонент 		= Объект.Абонент;
	ДанныеЗаполнения.Дата 			= Объект.Дата + 1;
	ДанныеЗаполнения.ДатаФактическогоСобытия 			= Объект.ДатаФактическогоСобытия;
	ДанныеЗаполнения.Вставить("ДокументОснование",Объект.ссылка);

	ДанныеДляФормулы.Вставить("ДанныеЗаполнения",ДанныеЗаполнения);	
	
	Объект.ДополнительныеСвойства.вставить("ДанныеДляФормулы",ДанныеДляФормулы);	
КонецПроцедуры

Функция ПоследовательностьНарушена(ПериодНачисления,Район) Экспорт  
	Запрос  		= Новый Запрос;
	Запрос.УстановитьПараметр("ПериодНачисления",	ПериодНачисления);
	Запрос.УстановитьПараметр("Район",				Район);
	Запрос.Текст 	="ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаПоследовательности.ПериодНачисления
	|ИЗ
	|	РегистрСведений.энргСтабильныеПериодыПоследовательность КАК ТаблицаПоследовательности
	|ГДЕ
	|	ТаблицаПоследовательности.ПериодНачисления = &ПериодНачисления
	|	И ТаблицаПоследовательности.Район = &Район
	|	И НЕ ТаблицаПоследовательности.СостояниеПроведения = ЗНАЧЕНИЕ(Перечисление.энргСостояниеДокументаВПоследовательности.ПроведенВПоследовательности)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаПоследовательности.ПериодНачисления
	|ИЗ
	|	РегистрСведений.энргПоказанияПУПоследовательность КАК ТаблицаПоследовательности
	|ГДЕ
	|	ТаблицаПоследовательности.ПериодНачисления = &ПериодНачисления
	|	И ТаблицаПоследовательности.Район = &Район
	|	И НЕ ТаблицаПоследовательности.СостояниеПроведения = ЗНАЧЕНИЕ(Перечисление.энргСостояниеДокументаВПоследовательности.ПроведенВПоследовательности)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаПоследовательности.ПериодНачисления
	|ИЗ
	|	РегистрСведений.энргВзаиморасчетыПоследовательность КАК ТаблицаПоследовательности
	|ГДЕ
	|	ТаблицаПоследовательности.ПериодНачисления = &ПериодНачисления
	|	И ТаблицаПоследовательности.Район = &Район
	|	И НЕ ТаблицаПоследовательности.СостояниеПроведения = ЗНАЧЕНИЕ(Перечисление.энргСостояниеДокументаВПоследовательности.ПроведенВПоследовательности)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаПоследовательности.ПериодНачисления
	|ИЗ
	|	РегистрСведений.энргСтабильныеПериодыМКДПоследовательность КАК ТаблицаПоследовательности
	|ГДЕ
	|	ТаблицаПоследовательности.ПериодНачисления = &ПериодНачисления
	|	И ТаблицаПоследовательности.Район = &Район
	|	И НЕ ТаблицаПоследовательности.СостояниеПроведения = ЗНАЧЕНИЕ(Перечисление.энргСостояниеДокументаВПоследовательности.ПроведенВПоследовательности)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаПоследовательности.ПериодНачисления
	|ИЗ
	|	РегистрСведений.энргПоказанияПУПоследовательностьМКД КАК ТаблицаПоследовательности
	|ГДЕ
	|	ТаблицаПоследовательности.ПериодНачисления = &ПериодНачисления
	|	И ТаблицаПоследовательности.Район = &Район
	|	И НЕ ТаблицаПоследовательности.СостояниеПроведения = ЗНАЧЕНИЕ(Перечисление.энргСостояниеДокументаВПоследовательности.ПроведенВПоследовательности)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаПоследовательности.ПериодНачисления
	|ИЗ
	|	РегистрСведений.энргОтложенныеДвиженияДокументов КАК ТаблицаПоследовательности
	|ГДЕ
	|	ТаблицаПоследовательности.ПериодНачисления = &ПериодНачисления
	|	И ТаблицаПоследовательности.Район = &Район";
	Результат  = Запрос.Выполнить();
	Возврат не Результат.Пустой();
КонецФункции 

Функция ВыполненыВсеНачисления(ПериодНачисления,Район) Экспорт
	
	Запрос  		= Новый Запрос;
	Запрос.УстановитьПараметр("ПериодНачисления",	ПериодНачисления);
	Запрос.УстановитьПараметр("Район",				Район);
	Запрос.Текст 	="ВЫБРАТЬ
	|	энргВыполненныеНачисления.ВидОперацииНачисления
	|ПОМЕСТИТЬ НачисленияПериода
	|ИЗ
	|	РегистрСведений.энргВыполненныеНачисления КАК энргВыполненныеНачисления
	|ГДЕ
	|	энргВыполненныеНачисления.ПериодНачисления = &ПериодНачисления
	|	И энргВыполненныеНачисления.Район = &Район
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	НачисленияПериода.ВидОперацииНачисления
	|ИЗ
	|	Перечисление.энргВидыОперацийНачисления КАК энргВидыОперацийНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ НачисленияПериода КАК НачисленияПериода
	|		ПО (НачисленияПериода.ВидОперацииНачисления = энргВидыОперацийНачисления.Ссылка)
	|ГДЕ
	|	НачисленияПериода.ВидОперацииНачисления ЕСТЬ NULL ";
	Результат  = Запрос.Выполнить();
	Возврат Результат.Пустой(); 	
	
КонецФункции

Функция ДанныеПоследовательности(ТипИсточника) Экспорт 
	
	ДанныеПоследовательности 							= Новый Структура("Регистрируется,Взаиморасчеты",Ложь,Ложь);
	 
	ИменаПоследовательностей 							= Новый Массив;

	ИменаПоследовательностей.Добавить("бестСтабильныеПериодыПоследовательностьНП");
	ИменаПоследовательностей.Добавить("бестПоказанияПУНППоследовательность");
	ИменаПоследовательностей.Добавить("бестВзаиморасчетыПоследовательность");

	МетаданныеСобытия  									= Метаданные.ПодпискиНаСобытия; 	
		
	для Каждого ИмяПоследовательности из ИменаПоследовательностей цикл
		Событие 				 						= МетаданныеСобытия[ИмяПоследовательности + "ПриЗаписи"];
		ТипыДокументов  								= Событие.Источник.Типы();
		Если ТипыДокументов.Найти(ТипИсточника) <> Неопределено тогда
			ДанныеПоследовательности.Регистрируется 	= Истина;
			Если ИмяПоследовательности = "бестВзаиморасчетыПоследовательность" тогда
				ДанныеПоследовательности.Взаиморасчеты 	= Истина
			КонецЕсли;
		КонецЕсли;		
	КонецЦикла; 	
	Возврат ДанныеПоследовательности; 	
КонецФункции

#КонецОбласти


#Область НачисленияНП 

Процедура СтабПериодыНПЗаключениеДоговора(ссылка,Параметры)
	
	МВТ  														= Новый МенеджерВременныхТаблиц;
	ПараметрыЗапроса 											= Параметры.ПараметрыЗапроса;
	Запрос  													= Новый Запрос;
	Запрос.УстановитьПараметр("ссылка",			ссылка);
	Запрос.УстановитьПараметр("МоментВремени",	Параметры.МоментВремени);
	Запрос.УстановитьПараметр("Организация",	ПараметрыЗапроса.Организация);
	Запрос.УстановитьПараметр("ТипНачисления",	Перечисления.энргТипыНачислений.НежилыеПомещения);
	Запрос.УстановитьПараметр("Поставщик",				Константы.энргПоставщикПоУмолчанию.Получить());
	Запрос.МенеджерВременныхТаблиц = МВТ;
		
	для Каждого стр из ПараметрыЗапроса цикл
		Запрос.УстановитьПараметр(стр.ключ,стр.значение); 
	КонецЦикла;

	Запрос.Текст 		= ТекстЗапросаЗаключениеДоговора(); 	
	Результат 			= Запрос.Выполнить();
	Выборка				= Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаСтабПериоды										= Параметры.НаборСтабильныеПериоды.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСтабПериоды,Выборка);
		СтрокаПоследнихНомеров  								= Параметры.НаборПоследнихНомеров.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаПоследнихНомеров,Выборка);
		СтрокаПоследнихНомеров.период 							= параметры.ПараметрыЗапроса.ПериодРегистрации;		
	КонецЦикла;	
	
	Запрос.Текст 												= ТекстЗапросаШкалыПриборовУчета();
	Запрос.УстановитьПараметр("ПериодНачисления", Параметры.ПериодНачисления);
	Результат 													= Запрос.Выполнить();
	Выборка														= Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаСтабПериоды										= Параметры.НаборСтабильныеПериодыШкалы.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСтабПериоды,Выборка);		
	КонецЦикла;	
	
	Запрос.Текст 												= ТекстЗапросаПриборыУзловУчета();
	Результат 													= Запрос.Выполнить();
	Выборка														= Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаСтабПериоды										= Параметры.НаборСтабильныеПериодыПриборыУзловУчета.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСтабПериоды,Выборка);		
	КонецЦикла;	
	
КонецПроцедуры

Процедура СтабПериодыНПРасторжениеДоговора(ссылка,Параметры, РекДоговор)
	ПарметрыЗапроса  	= Параметры.ПараметрыЗапроса;		
	МВТ 				= Новый МенеджерВременныхТаблиц;
	Запрос  			= Новый Запрос;
	Запрос.УстановитьПараметр("ссылка",			ссылка);
	Запрос.МенеджерВременныхТаблиц = МВТ;	
	Запрос.Текст 	=
	"ВЫБРАТЬ
	|	бестЗаключениеДоговоровСЮридическимиЛицами.Ссылка КАК Ссылка,
	|	бестЗаключениеДоговоровСЮридическимиЛицами.Дата КАК Дата,
	|	бестЗаключениеДоговоровСЮридическимиЛицами.ПериодНачисления КАК ПериодНачисления,
	|	бестЗаключениеДоговоровСЮридическимиЛицами.Район КАК Район,
	|	ЛОЖЬ КАК ДоговорЗаключен,
	|	ИСТИНА КАК МенялосьСостояниеПУ,
	|	ИСТИНА КАК МенялосьСостояниеФормулы,
	|	бестЗаключениеДоговоровСЮридическимиЛицами.Организация КАК Организация,
	|	бестЗаключениеДоговоровСЮридическимиЛицами." + РекДоговор + " КАК Договор
	|ПОМЕСТИТЬ РасторжениеДоговора
	|ИЗ
	|	Документ.бестЗаключениеДоговоровСЮридическимиЛицами КАК бестЗаключениеДоговоровСЮридическимиЛицами
	|ГДЕ
	|	бестЗаключениеДоговоровСЮридическимиЛицами.Ссылка = &Ссылка";
	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Организация");
	Измерения.Добавить("Район");
	Измерения.Добавить("Договор");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("ДоговорЗаключен");
	Ресурсы.Добавить("МенялосьСостояниеПУ");
	Ресурсы.Добавить("МенялосьСостояниеФормулы");
	
	Параметры.вставить("Измерения",				Измерения);
	Параметры.вставить("Ресурсы",				Ресурсы);
	Параметры.вставить("ИзменяетСостояниеПУ",	Истина);
	
	ЗаполнитьНомераПозицийНП(МВТ,Параметры,"РасторжениеДоговора");
	
КонецПроцедуры

Процедура СтабПериодыНППодключениеОбъекта(ссылка,параметры)
	
КонецПроцедуры

Процедура СтабПериодыНПОтключениеОбъекта(ссылка,параметры)
	
	ПараметрыЗапроса= Параметры.ПараметрыЗапроса;
	МВТ 			= Новый МенеджерВременныхТаблиц;
	Запрос  		= Новый Запрос;
	Запрос.УстановитьПараметр("ссылка",				ссылка);
	Запрос.УстановитьПараметр("ПериодНачисления",	Параметры.ПериодНачисления);
	Запрос.УстановитьПараметр("МоментВремени",		Параметры.МоментВремени);
	Запрос.УстановитьПараметр("ГраницаИсключая",	Новый Граница(Параметры.МоментВремени,ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("ПериодРегистрации",	Параметры.ПараметрыЗапроса.ПериодРегистрации);
	Запрос.УстановитьПараметр("Период",				Параметры.ДатаДок);
	для Каждого стр из ПараметрыЗапроса цикл
		Запрос.УстановитьПараметр(стр.ключ,стр.значение); 
	КонецЦикла;	   	
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.Текст 	="ВЫБРАТЬ
	             	 |	бестОперацияСОбъектамиНП.Ссылка КАК Ссылка,
	             	 |	бестОперацияСОбъектамиНП.Дата КАК Дата,
	             	 |	бестОперацияСОбъектамиНП.ПериодНачисления КАК ПериодНачисления,
	             	 |	бестОперацияСОбъектамиНП.Район КАК Район,
	             	 |	бестОперацияСОбъектамиНП.Договор КАК Договор,
	             	 |	бестОперацияСОбъектамиНП.Организация КАК Организация
	             	 |ПОМЕСТИТЬ Шапка
	             	 |ИЗ
	             	 |	Документ.бестОперацияСОбъектамиНП КАК бестОперацияСОбъектамиНП
	             	 |ГДЕ
	             	 |	бестОперацияСОбъектамиНП.Ссылка = &Ссылка
	             	 |;
	             	 |
	             	 |////////////////////////////////////////////////////////////////////////////////
	             	 |ВЫБРАТЬ
	             	 |	Шапка.ПериодНачисления КАК ПериодНачисления,
	             	 |	Шапка.Район КАК Район,
	             	 |	ЛОЖЬ КАК УслугаПодключена,
	             	 |	ЛОЖЬ КАК ПриборВведен,
	             	 |	Шапка.Договор КАК Договор,
	             	 |	Шапка.Организация КАК Организация,
	             	 |	ЛОЖЬ КАК РасчетПоФормуле,
	             	 |	ЗНАЧЕНИЕ(Справочник.энргТочкиУчета.ПустаяСсылка) КАК ЗависимаяТочкаУчета,
	             	 |	0 КАК КоэффициентРасчета,
	             	 |	ИСТИНА КАК МенялосьСостояниеПУ,
	             	 |	ИСТИНА КАК МенялосьСостояниеФормулы,
	             	 |	бестОперацияСОбъектамиНПОбъектыРасчета.ОбъектРасчета КАК ОбъектРасчета,
	             	 |	ЛОЖЬ КАК ОбъектРасчетаПодключен,
	             	 |	бестОперацияСОбъектамиНПОбъектыРасчета.ОбъектРасчета.МКД КАК ОбъектРасчетаМКД
	             	 |ПОМЕСТИТЬ ДанныеТЧ
	             	 |ИЗ
	             	 |	Шапка КАК Шапка
	             	 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бестОперацияСОбъектамиНП.ОбъектыРасчета КАК бестОперацияСОбъектамиНПОбъектыРасчета
	             	 |		ПО Шапка.Ссылка = бестОперацияСОбъектамиНПОбъектыРасчета.Ссылка
	             	 |;
	             	 |
	             	 |////////////////////////////////////////////////////////////////////////////////
	             	 |ВЫБРАТЬ
	             	 |	ДанныеТЧ.ПериодНачисления КАК ПериодНачисления,
	             	 |	ДанныеТЧ.Район КАК Район,
	             	 |	ДанныеТЧ.УслугаПодключена КАК УслугаПодключена,
	             	 |	ДанныеТЧ.ПриборВведен КАК ПриборВведен,
	             	 |	ДанныеТЧ.Договор КАК Договор,
	             	 |	ДанныеТЧ.Организация КАК Организация,
	             	 |	ДанныеТЧ.РасчетПоФормуле КАК РасчетПоФормуле,
	             	 |	ДанныеТЧ.ЗависимаяТочкаУчета КАК ЗависимаяТочкаУчета,
	             	 |	ДанныеТЧ.КоэффициентРасчета КАК КоэффициентРасчета,
	             	 |	ДанныеТЧ.МенялосьСостояниеПУ КАК МенялосьСостояниеПУ,
	             	 |	ДанныеТЧ.МенялосьСостояниеФормулы КАК МенялосьСостояниеФормулы,
	             	 |	ДанныеТЧ.ОбъектРасчета КАК ОбъектРасчета,
	             	 |	ДанныеТЧ.ОбъектРасчетаПодключен КАК ОбъектРасчетаПодключен,
	             	 |	бестАктивностьТочекУчетаНПСрезПоследних.ТочкаУчета КАК ТочкаУчета,
	             	 |	ДанныеТЧ.ОбъектРасчетаМКД КАК ОбъектРасчетаМКД
	             	 |ПОМЕСТИТЬ ДанныеТочкиУчета
	             	 |ИЗ
	             	 |	ДанныеТЧ КАК ДанныеТЧ
	             	 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бестАктивностьТочекУчетаНП.СрезПоследних(
	             	 |				&МоментВремени,
	             	 |				ОбъектРасчета В
	             	 |					(ВЫБРАТЬ
	             	 |						ДанныеТЧ.ОбъектРасчета
	             	 |					ИЗ
	             	 |						ДанныеТЧ)) КАК бестАктивностьТочекУчетаНПСрезПоследних
	             	 |		ПО ДанныеТЧ.ОбъектРасчета = бестАктивностьТочекУчетаНПСрезПоследних.ОбъектРасчета
	             	 |;
	             	 |
	             	 |////////////////////////////////////////////////////////////////////////////////
	             	 |ВЫБРАТЬ
	             	 |	ДанныеТочкиУчета.ПериодНачисления КАК ПериодНачисления,
	             	 |	ДанныеТочкиУчета.Район КАК Район,
	             	 |	ДанныеТочкиУчета.Договор КАК Договор,
	             	 |	ДанныеТочкиУчета.Организация КАК Организация,
	             	 |	ДанныеТочкиУчета.ОбъектРасчета КАК ОбъектРасчета,
	             	 |	ДанныеТочкиУчета.УслугаПодключена КАК УслугаПодключена,
	             	 |	ДанныеТочкиУчета.ПриборВведен КАК ПриборВведен,
	             	 |	ДанныеТочкиУчета.РасчетПоФормуле КАК РасчетПоФормуле,
	             	 |	ДанныеТочкиУчета.ЗависимаяТочкаУчета КАК ЗависимаяТочкаУчета,
	             	 |	ДанныеТочкиУчета.КоэффициентРасчета КАК КоэффициентРасчета,
	             	 |	ДанныеТочкиУчета.МенялосьСостояниеПУ КАК МенялосьСостояниеПУ,
	             	 |	ДанныеТочкиУчета.МенялосьСостояниеФормулы КАК МенялосьСостояниеФормулы,
	             	 |	ДанныеТочкиУчета.ОбъектРасчетаПодключен КАК ОбъектРасчетаПодключен,
	             	 |	ДанныеТочкиУчета.ТочкаУчета КАК ТочкаУчета,
	             	 |	ДанныеТочкиУчета.ОбъектРасчетаМКД КАК МКД
	             	 |ПОМЕСТИТЬ ОтключениеУслуги
	             	 |ИЗ
	             	 |	ДанныеТочкиУчета КАК ДанныеТочкиУчета";
	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Организация");
	Измерения.Добавить("Район");
	Измерения.Добавить("Договор");
	Измерения.Добавить("ОбъектРасчета");
	Измерения.Добавить("МКД");
	//Измерения.Добавить("Услуга");
	//Измерения.Добавить("ТочкаУчета");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("УслугаПодключена");
	Ресурсы.Добавить("ПриборВведен");
	//Ресурсы.Добавить("ЗначениеНормативаЗаДень");
	Ресурсы.Добавить("РасчетПоФормуле");
	Ресурсы.Добавить("ЗависимаяТочкаУчета");
	Ресурсы.Добавить("КоэффициентРасчета");
	Ресурсы.Добавить("МенялосьСостояниеПУ");
	Ресурсы.Добавить("МенялосьСостояниеФормулы");
//	Ресурсы.Добавить("ВидДифференцированности");
	Ресурсы.Добавить("ОбъектРасчетаПодключен");


	
	Параметры.вставить("Измерения",				Измерения);
	Параметры.вставить("Ресурсы",				Ресурсы);
	Параметры.вставить("ИзменяетСостояниеПУ",	Истина);
	
	ЗаполнитьНомераПозицийНП(МВТ,Параметры,"ОтключениеУслуги"); 	
	 	
	Запрос.Текст ="ВЫБРАТЬ
	              |	бестРасчетныеСпособыТочекУчетаНП.Период КАК Период,
	              |	бестРасчетныеСпособыТочекУчетаНП.Регистратор КАК Регистратор,
	              |	бестРасчетныеСпособыТочекУчетаНП.Район КАК Район,
	              |	бестРасчетныеСпособыТочекУчетаНП.ТочкаУчета КАК ТочкаУчета,
	              |	бестРасчетныеСпособыТочекУчетаНП.РасчетныйСпособ КАК РасчетныйСпособ,
	              |	бестРасчетныеСпособыТочекУчетаНП.ПериодНачисления КАК ПериодНачисления,
	              |	бестРасчетныеСпособыТочекУчетаНП.ПериодРегистрации КАК ПериодРегистрации,
	              |	бестРасчетныеСпособыТочекУчетаНП.ОбъектРасчета КАК ОбъектРасчета,
	              |	бестРасчетныеСпособыТочекУчетаНП.Организация КАК Организация,
	              |	бестРасчетныеСпособыТочекУчетаНП.Договор КАК Договор
	              |ПОМЕСТИТЬ НаборДанных
	              |ИЗ
	              |	РегистрСведений.бестРасчетныеСпособыТочекУчетаНП КАК бестРасчетныеСпособыТочекУчетаНП
	              |ГДЕ
	              |	бестРасчетныеСпособыТочекУчетаНП.Район = &Район
	              |	И бестРасчетныеСпособыТочекУчетаНП.ПериодНачисления <= &ПериодНачисления
	              |	И ВЫБОР
	              |			КОГДА бестРасчетныеСпособыТочекУчетаНП.ПериодНачисления < &ПериодНачисления
	              |				ТОГДА ИСТИНА
	              |			КОГДА бестРасчетныеСпособыТочекУчетаНП.ПериодНачисления = &ПериодНачисления
	              |					И бестРасчетныеСпособыТочекУчетаНП.ПериодРегистрации < &ПериодРегистрации
	              |				ТОГДА ИСТИНА
	              |			КОГДА бестРасчетныеСпособыТочекУчетаНП.ПериодНачисления = &ПериодНачисления
	              |					И бестРасчетныеСпособыТочекУчетаНП.ПериодРегистрации = &ПериодРегистрации
	              |					И бестРасчетныеСпособыТочекУчетаНП.Период < &Период
	              |				ТОГДА ИСТИНА
	              |			КОГДА бестРасчетныеСпособыТочекУчетаНП.ПериодНачисления = &ПериодНачисления
	              |					И бестРасчетныеСпособыТочекУчетаНП.ПериодРегистрации = &ПериодРегистрации
	              |					И бестРасчетныеСпособыТочекУчетаНП.Период = &Период
	              |					И бестРасчетныеСпособыТочекУчетаНП.Регистратор < &ссылка
	              |				ТОГДА ИСТИНА
	              |			ИНАЧЕ ЛОЖЬ
	              |		КОНЕЦ
	              |	И бестРасчетныеСпособыТочекУчетаНП.Организация = &Организация
	              |	И бестРасчетныеСпособыТочекУчетаНП.Договор = &Договор
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	НаборДанных.Район КАК Район,
	              |	НаборДанных.ТочкаУчета КАК ТочкаУчета,
	              |	МАКСИМУМ(НаборДанных.ПериодНачисления) КАК ПериодНачисления,
	              |	НаборДанных.Организация КАК Организация,
	              |	НаборДанных.ОбъектРасчета КАК ОбъектРасчета,
	              |	НаборДанных.Договор КАК Договор
	              |ПОМЕСТИТЬ МаксПериодНачисления
	              |ИЗ
	              |	НаборДанных КАК НаборДанных
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	НаборДанных.Район,
	              |	НаборДанных.ТочкаУчета,
	              |	НаборДанных.Организация,
	              |	НаборДанных.ОбъектРасчета,
	              |	НаборДанных.Договор
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	НаборДанных.Район КАК Район,
	              |	НаборДанных.ТочкаУчета КАК ТочкаУчета,
	              |	МаксПериодНачисления.ПериодНачисления КАК ПериодНачисления,
	              |	МАКСИМУМ(НаборДанных.ПериодРегистрации) КАК ПериодРегистрации,
	              |	НаборДанных.ОбъектРасчета КАК ОбъектРасчета,
	              |	НаборДанных.Организация КАК Организация,
	              |	НаборДанных.Договор КАК Договор
	              |ПОМЕСТИТЬ МаксимальныйПериодРегистрации
	              |ИЗ
	              |	НаборДанных КАК НаборДанных
	              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаксПериодНачисления КАК МаксПериодНачисления
	              |		ПО НаборДанных.Организация = МаксПериодНачисления.Организация
	              |			И НаборДанных.Район = МаксПериодНачисления.Район
	              |			И НаборДанных.Договор = МаксПериодНачисления.Договор
	              |			И НаборДанных.ОбъектРасчета = МаксПериодНачисления.ОбъектРасчета
	              |			И НаборДанных.ПериодНачисления = МаксПериодНачисления.ПериодНачисления
	              |			И НаборДанных.ТочкаУчета = МаксПериодНачисления.ТочкаУчета
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	НаборДанных.Район,
	              |	НаборДанных.ТочкаУчета,
	              |	МаксПериодНачисления.ПериодНачисления,
	              |	НаборДанных.ОбъектРасчета,
	              |	НаборДанных.Организация,
	              |	НаборДанных.Договор
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	МаксимальныйПериодРегистрации.Район КАК Район,
	              |	МаксимальныйПериодРегистрации.ТочкаУчета КАК ТочкаУчета,
	              |	МаксимальныйПериодРегистрации.ПериодНачисления КАК ПериодНачисления,
	              |	МаксимальныйПериодРегистрации.ПериодРегистрации КАК ПериодРегистрации,
	              |	МАКСИМУМ(НаборДанных.Период) КАК Период,
	              |	МаксимальныйПериодРегистрации.ОбъектРасчета КАК ОбъектРасчета,
	              |	МаксимальныйПериодРегистрации.Организация КАК Организация,
	              |	МаксимальныйПериодРегистрации.Договор КАК Договор
	              |ПОМЕСТИТЬ МаксимальныйПериод
	              |ИЗ
	              |	МаксимальныйПериодРегистрации КАК МаксимальныйПериодРегистрации
	              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НаборДанных КАК НаборДанных
	              |		ПО МаксимальныйПериодРегистрации.Организация = НаборДанных.Организация
	              |			И МаксимальныйПериодРегистрации.Район = НаборДанных.Район
	              |			И МаксимальныйПериодРегистрации.Договор = НаборДанных.Договор
	              |			И МаксимальныйПериодРегистрации.ОбъектРасчета = НаборДанных.ОбъектРасчета
	              |			И МаксимальныйПериодРегистрации.ПериодРегистрации = НаборДанных.ПериодРегистрации
	              |			И МаксимальныйПериодРегистрации.ПериодНачисления = НаборДанных.ПериодНачисления
	              |			И МаксимальныйПериодРегистрации.ТочкаУчета = НаборДанных.ТочкаУчета
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	МаксимальныйПериодРегистрации.Район,
	              |	МаксимальныйПериодРегистрации.ТочкаУчета,
	              |	МаксимальныйПериодРегистрации.ПериодНачисления,
	              |	МаксимальныйПериодРегистрации.ПериодРегистрации,
	              |	МаксимальныйПериодРегистрации.ОбъектРасчета,
	              |	МаксимальныйПериодРегистрации.Организация,
	              |	МаксимальныйПериодРегистрации.Договор
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	МаксимальныйПериод.Район КАК Район,
	              |	МаксимальныйПериод.ТочкаУчета КАК ТочкаУчета,
	              |	МаксимальныйПериод.ПериодНачисления КАК ПериодНачисления,
	              |	МаксимальныйПериод.ПериодРегистрации КАК ПериодРегистрации,
	              |	МаксимальныйПериод.Период КАК Период,
	              |	МАКСИМУМ(НаборДанных.Регистратор) КАК Регистратор,
	              |	МаксимальныйПериод.ОбъектРасчета КАК ОбъектРасчета,
	              |	МаксимальныйПериод.Организация КАК Организация,
	              |	МаксимальныйПериод.Договор КАК Договор
	              |ПОМЕСТИТЬ МаксимальныйРегистратор
	              |ИЗ
	              |	МаксимальныйПериод КАК МаксимальныйПериод
	              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НаборДанных КАК НаборДанных
	              |		ПО МаксимальныйПериод.Организация = НаборДанных.Организация
	              |			И МаксимальныйПериод.Район = НаборДанных.Район
	              |			И МаксимальныйПериод.Договор = НаборДанных.Договор
	              |			И МаксимальныйПериод.ОбъектРасчета = НаборДанных.ОбъектРасчета
	              |			И МаксимальныйПериод.ПериодНачисления = НаборДанных.ПериодНачисления
	              |			И МаксимальныйПериод.ПериодРегистрации = НаборДанных.ПериодРегистрации
	              |			И МаксимальныйПериод.Период = НаборДанных.Период
	              |			И МаксимальныйПериод.ТочкаУчета = НаборДанных.ТочкаУчета
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	МаксимальныйПериод.Район,
	              |	МаксимальныйПериод.ТочкаУчета,
	              |	МаксимальныйПериод.ПериодНачисления,
	              |	МаксимальныйПериод.ПериодРегистрации,
	              |	МаксимальныйПериод.Период,
	              |	МаксимальныйПериод.ОбъектРасчета,
	              |	МаксимальныйПериод.Организация,
	              |	МаксимальныйПериод.Договор
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	МаксимальныйРегистратор.Период КАК Период,
	              |	МаксимальныйРегистратор.Регистратор КАК Регистратор,
	              |	МаксимальныйРегистратор.Район КАК Район,
	              |	МаксимальныйРегистратор.ТочкаУчета КАК ТочкаУчета,
	              |	МаксимальныйРегистратор.ОбъектРасчета КАК ОбъектРасчета,
	              |	МаксимальныйРегистратор.Организация КАК Организация,
	              |	МаксимальныйРегистратор.Договор КАК Договор
	              |ПОМЕСТИТЬ ТочкиПоФормуле
	              |ИЗ
	              |	МаксимальныйРегистратор КАК МаксимальныйРегистратор
	              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НаборДанных КАК НаборДанных
	              |		ПО МаксимальныйРегистратор.Организация = НаборДанных.Организация
	              |			И МаксимальныйРегистратор.Район = НаборДанных.Район
	              |			И МаксимальныйРегистратор.Договор = НаборДанных.Договор
	              |			И МаксимальныйРегистратор.ОбъектРасчета = НаборДанных.ОбъектРасчета
	              |			И МаксимальныйРегистратор.ТочкаУчета = НаборДанных.ТочкаУчета
	              |			И МаксимальныйРегистратор.ПериодНачисления = НаборДанных.ПериодНачисления
	              |			И МаксимальныйРегистратор.ПериодРегистрации = НаборДанных.ПериодРегистрации
	              |			И (НаборДанных.РасчетныйСпособ)
	              |			И МаксимальныйРегистратор.Период = НаборДанных.Период
	              |			И МаксимальныйРегистратор.Регистратор = НаборДанных.Регистратор
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ТочкиПоФормуле.Период КАК Период,
	              |	ТочкиПоФормуле.Регистратор КАК Регистратор,
	              |	ТочкиПоФормуле.Район КАК Район,
	              |	ТочкиПоФормуле.ТочкаУчета КАК ТочкаУчета,
	              |	бестФормулыРасчетаТочекУчетаНП.ТочкаИсточник КАК ТочкаИсточник,
	              |	бестФормулыРасчетаТочекУчетаНП.Организация КАК Организация,
	              |	бестФормулыРасчетаТочекУчетаНП.Договор КАК Договор,
	              |	бестФормулыРасчетаТочекУчетаНП.ОбъектРасчета КАК ОбъектРасчета
	              |ПОМЕСТИТЬ ФормулыРасчетаТочек
	              |ИЗ
	              |	ТочкиПоФормуле КАК ТочкиПоФормуле
	              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бестФормулыРасчетаТочекУчетаНП КАК бестФормулыРасчетаТочекУчетаНП
	              |		ПО ТочкиПоФормуле.Период = бестФормулыРасчетаТочекУчетаНП.Период
	              |			И ТочкиПоФормуле.Регистратор = бестФормулыРасчетаТочекУчетаНП.Регистратор
	              |			И ТочкиПоФормуле.Организация = бестФормулыРасчетаТочекУчетаНП.Организация
	              |			И ТочкиПоФормуле.Район = бестФормулыРасчетаТочекУчетаНП.Район
	              |			И ТочкиПоФормуле.Договор = бестФормулыРасчетаТочекУчетаНП.Договор
	              |			И ТочкиПоФормуле.ОбъектРасчета = бестФормулыРасчетаТочекУчетаНП.ОбъектРасчета
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ РАЗЛИЧНЫЕ
	              |	ВложенныйЗапрос.Период КАК Период,
	              |	ВложенныйЗапрос.Регистратор КАК Регистратор,
	              |	ВложенныйЗапрос.Район КАК Район,
	              |	ВложенныйЗапрос.ТочкаУчета КАК ТочкаУчета,
	              |	ВложенныйЗапрос.Организация КАК Организация,
	              |	ВложенныйЗапрос.Договор КАК Договор,
	              |	ВложенныйЗапрос.ОбъектРасчета КАК ОбъектРасчета
	              |ПОМЕСТИТЬ ОтменаФормулы
	              |ИЗ
	              |	(ВЫБРАТЬ
	              |		ФормулыРасчетаТочек.Период КАК Период,
	              |		ФормулыРасчетаТочек.Регистратор КАК Регистратор,
	              |		ФормулыРасчетаТочек.Район КАК Район,
	              |		ФормулыРасчетаТочек.ТочкаУчета КАК ТочкаУчета,
	              |		ФормулыРасчетаТочек.Организация КАК Организация,
	              |		ФормулыРасчетаТочек.Договор КАК Договор,
	              |		ФормулыРасчетаТочек.ОбъектРасчета КАК ОбъектРасчета
	              |	ИЗ
	              |		ДанныеТочкиУчета КАК ДанныеТочкиУчета
	              |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ФормулыРасчетаТочек КАК ФормулыРасчетаТочек
	              |			ПО ДанныеТочкиУчета.ТочкаУчета = ФормулыРасчетаТочек.ТочкаУчета
	              |	
	              |	ОБЪЕДИНИТЬ ВСЕ
	              |	
	              |	ВЫБРАТЬ
	              |		ФормулыРасчетаТочек.Период,
	              |		ФормулыРасчетаТочек.Регистратор,
	              |		ФормулыРасчетаТочек.Район,
	              |		ФормулыРасчетаТочек.ТочкаУчета,
	              |		ФормулыРасчетаТочек.Организация,
	              |		ФормулыРасчетаТочек.Договор,
	              |		ФормулыРасчетаТочек.ОбъектРасчета
	              |	ИЗ
	              |		ДанныеТочкиУчета КАК ДанныеТочкиУчета
	              |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ФормулыРасчетаТочек КАК ФормулыРасчетаТочек
	              |			ПО ДанныеТочкиУчета.ТочкаУчета = ФормулыРасчетаТочек.ТочкаИсточник) КАК ВложенныйЗапрос
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ РАЗЛИЧНЫЕ
	              |	ВложенныйЗапрос.ТочкаУчета КАК ТочкаУчета
	              |ПОМЕСТИТЬ ТочкиОтменыФормулы
	              |ИЗ
	              |	(ВЫБРАТЬ
	              |		ФормулыРасчетаТочек.ТочкаУчета КАК ТочкаУчета
	              |	ИЗ
	              |		ОтменаФормулы КАК ОтменаФормулы
	              |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ФормулыРасчетаТочек КАК ФормулыРасчетаТочек
	              |			ПО (ОтменаФормулы.Период = ОтменаФормулы.Период)
	              |				И (ОтменаФормулы.Регистратор = ОтменаФормулы.Регистратор)
	              |				И (ОтменаФормулы.Район = ОтменаФормулы.Район)
	              |				И (ОтменаФормулы.Организация = ОтменаФормулы.Организация)
	              |				И (ОтменаФормулы.ТочкаУчета = ОтменаФормулы.ТочкаУчета)
	              |				И (ОтменаФормулы.Договор = ОтменаФормулы.Договор)
	              |				И (ОтменаФормулы.ОбъектРасчета = ОтменаФормулы.ОбъектРасчета)
	              |	
	              |	ОБЪЕДИНИТЬ ВСЕ
	              |	
	              |	ВЫБРАТЬ
	              |		ФормулыРасчетаТочек.ТочкаИсточник
	              |	ИЗ
	              |		ОтменаФормулы КАК ОтменаФормулы
	              |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ФормулыРасчетаТочек КАК ФормулыРасчетаТочек
	              |			ПО (ОтменаФормулы.Период = ОтменаФормулы.Период)
	              |				И (ОтменаФормулы.Регистратор = ОтменаФормулы.Регистратор)
	              |				И (ОтменаФормулы.Район = ОтменаФормулы.Район)
	              |				И (ОтменаФормулы.ТочкаУчета = ОтменаФормулы.ТочкаУчета)
	              |				И (ОтменаФормулы.ОбъектРасчета = ОтменаФормулы.ОбъектРасчета)
	              |				И (ОтменаФормулы.Договор = ОтменаФормулы.Договор)
	              |				И (ОтменаФормулы.Организация = ОтменаФормулы.Организация)) КАК ВложенныйЗапрос
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ТочкиОтменыФормулы.ТочкаУчета КАК ТочкаУчета
	              |ПОМЕСТИТЬ ТочкиУчетаДляОтмены
	              |ИЗ
	              |	ТочкиОтменыФормулы КАК ТочкиОтменыФормулы
	              |		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеТочкиУчета КАК ДанныеТочкиУчета
	              |		ПО ТочкиОтменыФормулы.ТочкаУчета = ДанныеТочкиУчета.ОбъектРасчета
	              |ГДЕ
	              |	ДанныеТочкиУчета.ПериодНачисления ЕСТЬ NULL
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	бестУслугиТочекУчетаНПСрезПоследних.ТочкаУчета КАК ТочкаУчета,
	              |	бестУслугиТочекУчетаНПСрезПоследних.Услуга КАК Услуга,
	              |	бестУслугиТочекУчетаНПСрезПоследних.ОбъектРасчета КАК ОбъектРасчета
	              |ПОМЕСТИТЬ УслугиТочекУчета
	              |ИЗ
	              |	РегистрСведений.бестУслугиТочекУчетаНП.СрезПоследних(
	              |			&МоментВремени,
	              |			Организация = &Организация
	              |				И Район = &Район
	              |				И Договор = &Договор) КАК бестУслугиТочекУчетаНПСрезПоследних
	              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеТочкиУчета КАК ДанныеТочкиУчета
	              |		ПО бестУслугиТочекУчетаНПСрезПоследних.ОбъектРасчета = ДанныеТочкиУчета.ОбъектРасчета
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ТочкиУчетаДляОтмены.ТочкаУчета КАК ТочкаУчета,
	              |	УслугиТочекУчета.Услуга КАК Услуга,
	              |	УслугиТочекУчета.ОбъектРасчета КАК ОбъектРасчета
	              |ПОМЕСТИТЬ ВозможноСоставныеУслуги
	              |ИЗ
	              |	УслугиТочекУчета КАК УслугиТочекУчета
	              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТочкиУчетаДляОтмены КАК ТочкиУчетаДляОтмены
	              |		ПО УслугиТочекУчета.ТочкаУчета = ТочкиУчетаДляОтмены.ТочкаУчета
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	&ПериодНачисления КАК ПериодНачисления,
	              |	&Район КАК Район,
	              |	ВозможноСоставныеУслуги.Услуга КАК Услуга,
	              |	ВозможноСоставныеУслуги.ТочкаУчета КАК ТочкаУчета,
	              |	ЛОЖЬ КАК РасчетПоФормуле,
	              |	ЗНАЧЕНИЕ(Справочник.энргТочкиУчета.ПустаяСсылка) КАК ЗависимаяТочкаУчета,
	              |	0 КАК КоэффициентРасчета,
	              |	ИСТИНА КАК МенялосьСостояниеПУ,
	              |	ИСТИНА КАК МенялосьСостояниеФормулы,
	              |	&Организация КАК Организация,
	              |	&Договор КАК Договор,
	              |	ВозможноСоставныеУслуги.ОбъектРасчета КАК ОбъектРасчета,
	              |	ВозможноСоставныеУслуги.ОбъектРасчета.МКД КАК МКД
	              |ПОМЕСТИТЬ УслугиТочекОтменыФормулы
	              |ИЗ
	              |	ВозможноСоставныеУслуги КАК ВозможноСоставныеУслуги";
	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Организация");
	Измерения.Добавить("Район");
	Измерения.Добавить("Договор");
	Измерения.Добавить("ОбъектРасчета");
	Измерения.Добавить("МКД");
	Измерения.Добавить("Услуга");
	Измерения.Добавить("ТочкаУчета");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("РасчетПоФормуле");
	Ресурсы.Добавить("ЗависимаяТочкаУчета");
	Ресурсы.Добавить("КоэффициентРасчета");
	Ресурсы.Добавить("МенялосьСостояниеПУ");
	Ресурсы.Добавить("МенялосьСостояниеФормулы");
	
	Параметры.вставить("Измерения",Измерения);
	Параметры.вставить("Ресурсы",Ресурсы);
	
	ЗаполнитьНомераПозицийНП(МВТ,Параметры,"УслугиТочекОтменыФормулы");
	
КонецПроцедуры

Процедура СтабПериодыНППодключениеУслуги(ссылка,параметры)
	
	ПараметрыЗапроса  	= Параметры.ПараметрыЗапроса;		
	
	Запрос  			= Новый Запрос;
	Запрос.УстановитьПараметр("ссылка",				ссылка);
	Запрос.УстановитьПараметр("Договор",			ПараметрыЗапроса.Договор);
	Запрос.УстановитьПараметр("Организация",		ПараметрыЗапроса.Организация);
	Запрос.УстановитьПараметр("Район",				ПараметрыЗапроса.Район);
	Запрос.УстановитьПараметр("МоментВремени",		Параметры.МоментВремени);
	Запрос.УстановитьПараметр("ПериодРегистрации",	Параметры.ПараметрыЗапроса.ПериодРегистрации);	
	Запрос.УстановитьПараметр("Поставщик",			Константы.энргПоставщикПоУмолчанию.Получить());
	Запрос.УстановитьПараметр("ТипНачисления",		Перечисления.энргТипыНачислений.НежилыеПомещения);

	
	Запрос.Текст 						= ТекстЗапросаПодключениеУслуги();
	
	Результат = Запрос.Выполнить();
	Выборка	= Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаСтабПериоды										= Параметры.НаборСтабильныеПериоды.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСтабПериоды,Выборка);
		СтрокаПоследнихНомеров  								= Параметры.НаборПоследнихНомеров.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаПоследнихНомеров,Выборка);
		СтрокаПоследнихНомеров.период 							= параметры.ПараметрыЗапроса.ПериодРегистрации;		
	КонецЦикла;
	
	Запрос.Текст 						= ТекстЗапросаШкалыПриборовУчета();
	Запрос.УстановитьПараметр("ПериодНачисления", Параметры.ПериодНачисления);
	Результат 							= Запрос.Выполнить();
	Выборка								= Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаСтабПериоды				= Параметры.НаборСтабильныеПериодыШкалы.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСтабПериоды,Выборка);		
	КонецЦикла;
	
	Запрос.Текст 												= ТекстЗапросаПриборыУзловУчета();
	Результат 													= Запрос.Выполнить();
	Выборка														= Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаСтабПериоды										= Параметры.НаборСтабильныеПериодыПриборыУзловУчета.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСтабПериоды,Выборка);		
	КонецЦикла;	

КонецПроцедуры

Процедура СтабПериодыНПОтключениеУслуги(ссылка,параметры)
	
	ПараметрыЗапроса= Параметры.ПараметрыЗапроса;
	МВТ 			= Новый МенеджерВременныхТаблиц;
	Запрос  		= Новый Запрос;
	Запрос.УстановитьПараметр("ссылка",				ссылка);
	Запрос.УстановитьПараметр("ПериодНачисления",	Параметры.ПериодНачисления);
	Запрос.УстановитьПараметр("МоментВремени",		Параметры.МоментВремени);
	Запрос.УстановитьПараметр("ГраницаИсключая",	Новый Граница(Параметры.МоментВремени,ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("ПериодРегистрации",	Параметры.ПараметрыЗапроса.ПериодРегистрации);
	Запрос.УстановитьПараметр("Период",				Параметры.ДатаДок);
	для Каждого стр из ПараметрыЗапроса цикл
		Запрос.УстановитьПараметр(стр.ключ,стр.значение); 
	КонецЦикла;	   	
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.Текст 	="ВЫБРАТЬ
	             	 |	бестОперацияСУслугамиНП.Ссылка КАК Ссылка,
	             	 |	бестОперацияСУслугамиНП.Дата КАК Дата,
	             	 |	бестОперацияСУслугамиНП.ПериодНачисления КАК ПериодНачисления,
	             	 |	бестОперацияСУслугамиНП.Район КАК Район,
	             	 |	бестОперацияСУслугамиНП.Договор КАК Договор,
	             	 |	бестОперацияСУслугамиНП.Организация КАК Организация
	             	 |ПОМЕСТИТЬ Шапка
	             	 |ИЗ
	             	 |	Документ.бестОперацияСУслугамиНП КАК бестОперацияСУслугамиНП
	             	 |ГДЕ
	             	 |	бестОперацияСУслугамиНП.Ссылка = &Ссылка
	             	 |;
	             	 |
	             	 |////////////////////////////////////////////////////////////////////////////////
	             	 |ВЫБРАТЬ
	             	 |	Шапка.ПериодНачисления КАК ПериодНачисления,
	             	 |	Шапка.Район КАК Район,
	             	 |	бестОперацияСУслугамиНПТочкиУчета.Услуга КАК Услуга,
	             	 |	бестОперацияСУслугамиНПТочкиУчета.ТочкаУчета КАК ТочкаУчета,
	             	 |	ЛОЖЬ КАК УслугаПодключена,
	             	 |	ЛОЖЬ КАК ПриборВведен,
	             	 |	Шапка.Договор КАК Договор,
	             	 |	Шапка.Организация КАК Организация,
	             	 |	ЛОЖЬ КАК РасчетПоФормуле,
	             	 |	ЗНАЧЕНИЕ(Справочник.энргТочкиУчета.ПустаяСсылка) КАК ЗависимаяТочкаУчета,
	             	 |	0 КАК КоэффициентРасчета,
	             	 |	ИСТИНА КАК МенялосьСостояниеПУ,
	             	 |	ИСТИНА КАК МенялосьСостояниеФормулы,
	             	 |	бестОперацияСУслугамиНПТочкиУчета.ОбъектРасчета КАК ОбъектРасчета,
	             	 |	бестОперацияСУслугамиНПТочкиУчета.Головная КАК Головная,
	             	 |	бестОперацияСУслугамиНПТочкиУчета.ВидДифференцированности КАК ВидДифференцированности,
	             	 |	ИСТИНА КАК ОбъектРасчетаПодключен,
	             	 |	бестОперацияСУслугамиНПТочкиУчета.ОбъектРасчета.МКД КАК ОбъектРасчетаМКД
	             	 |ПОМЕСТИТЬ ДанныеУслуг
	             	 |ИЗ
	             	 |	Шапка КАК Шапка
	             	 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бестОперацияСУслугамиНП.ТочкиУчета КАК бестОперацияСУслугамиНПТочкиУчета
	             	 |		ПО Шапка.Ссылка = бестОперацияСУслугамиНПТочкиУчета.Ссылка
	             	 |;
	             	 |
	             	 |////////////////////////////////////////////////////////////////////////////////
	             	 |ВЫБРАТЬ
	             	 |	бестУчастиеОбъектовВРаспределенииРесурсовВМКДСрезПоследних.ОбъектРасчета КАК ОбъектРасчета
	             	 |ПОМЕСТИТЬ МКД
	             	 |ИЗ
	             	 |	РегистрСведений.бестУчастиеОбъектовВРаспределенииРесурсовВМКД.СрезПоследних(
	             	 |			&МоментВремени,
	             	 |			ОбъектРасчета В
	             	 |				(ВЫБРАТЬ
	             	 |					ДанныеУслуг.ОбъектРасчета
	             	 |				ИЗ
	             	 |					ДанныеУслуг)) КАК бестУчастиеОбъектовВРаспределенииРесурсовВМКДСрезПоследних
	             	 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеУслуг КАК ДанныеУслуг
	             	 |		ПО бестУчастиеОбъектовВРаспределенииРесурсовВМКДСрезПоследних.ОбъектРасчета = ДанныеУслуг.ОбъектРасчета
	             	 |ГДЕ
	             	 |	бестУчастиеОбъектовВРаспределенииРесурсовВМКДСрезПоследних.Участвует
	             	 |;
	             	 |
	             	 |////////////////////////////////////////////////////////////////////////////////
	             	 |ВЫБРАТЬ
	             	 |	ДанныеУслуг.ПериодНачисления КАК ПериодНачисления,
	             	 |	ДанныеУслуг.Район КАК Район,
	             	 |	ВЫБОР
	             	 |		КОГДА энргВидыУслугСоставляющиеУслуг.Ссылка ЕСТЬ NULL
	             	 |			ТОГДА ДанныеУслуг.Услуга
	             	 |		ИНАЧЕ энргВидыУслугСоставляющиеУслуг.Услуга
	             	 |	КОНЕЦ КАК Услуга,
	             	 |	ДанныеУслуг.ТочкаУчета КАК ТочкаУчета,
	             	 |	ДанныеУслуг.Договор КАК Договор,
	             	 |	ДанныеУслуг.Организация КАК Организация,
	             	 |	ДанныеУслуг.ОбъектРасчета КАК ОбъектРасчета,
	             	 |	ДанныеУслуг.УслугаПодключена КАК УслугаПодключена,
	             	 |	ДанныеУслуг.ПриборВведен КАК ПриборВведен,
	             	 |	ДанныеУслуг.РасчетПоФормуле КАК РасчетПоФормуле,
	             	 |	ДанныеУслуг.ЗависимаяТочкаУчета КАК ЗависимаяТочкаУчета,
	             	 |	ДанныеУслуг.КоэффициентРасчета КАК КоэффициентРасчета,
	             	 |	ДанныеУслуг.МенялосьСостояниеПУ КАК МенялосьСостояниеПУ,
	             	 |	ДанныеУслуг.МенялосьСостояниеФормулы КАК МенялосьСостояниеФормулы,
	             	 |	ДанныеУслуг.ВидДифференцированности КАК ВидДифференцированности,
	             	 |	ДанныеУслуг.ОбъектРасчетаПодключен КАК ОбъектРасчетаПодключен,
	             	 |	ДанныеУслуг.ОбъектРасчетаМКД КАК МКД
	             	 |ПОМЕСТИТЬ ОтключениеУслуги
	             	 |ИЗ
	             	 |	ДанныеУслуг КАК ДанныеУслуг
	             	 |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг.СоставляющиеУслуг КАК энргВидыУслугСоставляющиеУслуг
	             	 |		ПО ДанныеУслуг.Услуга = энргВидыУслугСоставляющиеУслуг.Ссылка";
	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Организация");
	Измерения.Добавить("Район");
	Измерения.Добавить("Договор");
	Измерения.Добавить("ОбъектРасчета");
	Измерения.Добавить("МКД");
	Измерения.Добавить("Услуга");
	Измерения.Добавить("ТочкаУчета");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("УслугаПодключена");
	Ресурсы.Добавить("ПриборВведен");
	//Ресурсы.Добавить("ЗначениеНормативаЗаДень");
	Ресурсы.Добавить("РасчетПоФормуле");
	Ресурсы.Добавить("ЗависимаяТочкаУчета");
	Ресурсы.Добавить("КоэффициентРасчета");
	Ресурсы.Добавить("МенялосьСостояниеПУ");
	Ресурсы.Добавить("МенялосьСостояниеФормулы");
	Ресурсы.Добавить("ВидДифференцированности");
	Ресурсы.Добавить("ОбъектРасчетаПодключен");

	
	Параметры.вставить("Измерения",				Измерения);
	Параметры.вставить("Ресурсы",				Ресурсы);
	Параметры.вставить("ИзменяетСостояниеПУ",	Истина);
	
	ЗаполнитьНомераПозицийНП(МВТ,Параметры,"ОтключениеУслуги"); 	
	 	
	Запрос.Текст ="ВЫБРАТЬ
	              |	бестРасчетныеСпособыТочекУчетаНП.Период КАК Период,
	              |	бестРасчетныеСпособыТочекУчетаНП.Регистратор КАК Регистратор,
	              |	бестРасчетныеСпособыТочекУчетаНП.Район КАК Район,
	              |	бестРасчетныеСпособыТочекУчетаНП.ТочкаУчета КАК ТочкаУчета,
	              |	бестРасчетныеСпособыТочекУчетаНП.РасчетныйСпособ КАК РасчетныйСпособ,
	              |	бестРасчетныеСпособыТочекУчетаНП.ПериодНачисления КАК ПериодНачисления,
	              |	бестРасчетныеСпособыТочекУчетаНП.ПериодРегистрации КАК ПериодРегистрации,
	              |	бестРасчетныеСпособыТочекУчетаНП.ОбъектРасчета КАК ОбъектРасчета,
	              |	бестРасчетныеСпособыТочекУчетаНП.Организация КАК Организация,
	              |	бестРасчетныеСпособыТочекУчетаНП.Договор КАК Договор
	              |ПОМЕСТИТЬ НаборДанных
	              |ИЗ
	              |	РегистрСведений.бестРасчетныеСпособыТочекУчетаНП КАК бестРасчетныеСпособыТочекУчетаНП
	              |ГДЕ
	              |	бестРасчетныеСпособыТочекУчетаНП.Район = &Район
	              |	И бестРасчетныеСпособыТочекУчетаНП.ПериодНачисления <= &ПериодНачисления
	              |	И ВЫБОР
	              |			КОГДА бестРасчетныеСпособыТочекУчетаНП.ПериодНачисления < &ПериодНачисления
	              |				ТОГДА ИСТИНА
	              |			КОГДА бестРасчетныеСпособыТочекУчетаНП.ПериодНачисления = &ПериодНачисления
	              |					И бестРасчетныеСпособыТочекУчетаНП.ПериодРегистрации < &ПериодРегистрации
	              |				ТОГДА ИСТИНА
	              |			КОГДА бестРасчетныеСпособыТочекУчетаНП.ПериодНачисления = &ПериодНачисления
	              |					И бестРасчетныеСпособыТочекУчетаНП.ПериодРегистрации = &ПериодРегистрации
	              |					И бестРасчетныеСпособыТочекУчетаНП.Период < &Период
	              |				ТОГДА ИСТИНА
	              |			КОГДА бестРасчетныеСпособыТочекУчетаНП.ПериодНачисления = &ПериодНачисления
	              |					И бестРасчетныеСпособыТочекУчетаНП.ПериодРегистрации = &ПериодРегистрации
	              |					И бестРасчетныеСпособыТочекУчетаНП.Период = &Период
	              |					И бестРасчетныеСпособыТочекУчетаНП.Регистратор < &ссылка
	              |				ТОГДА ИСТИНА
	              |			ИНАЧЕ ЛОЖЬ
	              |		КОНЕЦ
	              |	И бестРасчетныеСпособыТочекУчетаНП.Организация = &Организация
	              |	И бестРасчетныеСпособыТочекУчетаНП.Договор = &Договор
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	НаборДанных.Район КАК Район,
	              |	НаборДанных.ТочкаУчета КАК ТочкаУчета,
	              |	МАКСИМУМ(НаборДанных.ПериодНачисления) КАК ПериодНачисления,
	              |	НаборДанных.Организация КАК Организация,
	              |	НаборДанных.ОбъектРасчета КАК ОбъектРасчета,
	              |	НаборДанных.Договор КАК Договор
	              |ПОМЕСТИТЬ МаксПериодНачисления
	              |ИЗ
	              |	НаборДанных КАК НаборДанных
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	НаборДанных.Район,
	              |	НаборДанных.ТочкаУчета,
	              |	НаборДанных.Организация,
	              |	НаборДанных.ОбъектРасчета,
	              |	НаборДанных.Договор
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	НаборДанных.Район КАК Район,
	              |	НаборДанных.ТочкаУчета КАК ТочкаУчета,
	              |	МаксПериодНачисления.ПериодНачисления КАК ПериодНачисления,
	              |	МАКСИМУМ(НаборДанных.ПериодРегистрации) КАК ПериодРегистрации,
	              |	НаборДанных.ОбъектРасчета КАК ОбъектРасчета,
	              |	НаборДанных.Организация КАК Организация,
	              |	НаборДанных.Договор КАК Договор
	              |ПОМЕСТИТЬ МаксимальныйПериодРегистрации
	              |ИЗ
	              |	НаборДанных КАК НаборДанных
	              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаксПериодНачисления КАК МаксПериодНачисления
	              |		ПО НаборДанных.Организация = МаксПериодНачисления.Организация
	              |			И НаборДанных.Район = МаксПериодНачисления.Район
	              |			И НаборДанных.Договор = МаксПериодНачисления.Договор
	              |			И НаборДанных.ОбъектРасчета = МаксПериодНачисления.ОбъектРасчета
	              |			И НаборДанных.ПериодНачисления = МаксПериодНачисления.ПериодНачисления
	              |			И НаборДанных.ТочкаУчета = МаксПериодНачисления.ТочкаУчета
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	НаборДанных.Район,
	              |	НаборДанных.ТочкаУчета,
	              |	МаксПериодНачисления.ПериодНачисления,
	              |	НаборДанных.ОбъектРасчета,
	              |	НаборДанных.Организация,
	              |	НаборДанных.Договор
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	МаксимальныйПериодРегистрации.Район КАК Район,
	              |	МаксимальныйПериодРегистрации.ТочкаУчета КАК ТочкаУчета,
	              |	МаксимальныйПериодРегистрации.ПериодНачисления КАК ПериодНачисления,
	              |	МаксимальныйПериодРегистрации.ПериодРегистрации КАК ПериодРегистрации,
	              |	МАКСИМУМ(НаборДанных.Период) КАК Период,
	              |	МаксимальныйПериодРегистрации.ОбъектРасчета КАК ОбъектРасчета,
	              |	МаксимальныйПериодРегистрации.Организация КАК Организация,
	              |	МаксимальныйПериодРегистрации.Договор КАК Договор
	              |ПОМЕСТИТЬ МаксимальныйПериод
	              |ИЗ
	              |	МаксимальныйПериодРегистрации КАК МаксимальныйПериодРегистрации
	              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НаборДанных КАК НаборДанных
	              |		ПО МаксимальныйПериодРегистрации.Организация = НаборДанных.Организация
	              |			И МаксимальныйПериодРегистрации.Район = НаборДанных.Район
	              |			И МаксимальныйПериодРегистрации.Договор = НаборДанных.Договор
	              |			И МаксимальныйПериодРегистрации.ОбъектРасчета = НаборДанных.ОбъектРасчета
	              |			И МаксимальныйПериодРегистрации.ПериодРегистрации = НаборДанных.ПериодРегистрации
	              |			И МаксимальныйПериодРегистрации.ПериодНачисления = НаборДанных.ПериодНачисления
	              |			И МаксимальныйПериодРегистрации.ТочкаУчета = НаборДанных.ТочкаУчета
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	МаксимальныйПериодРегистрации.Район,
	              |	МаксимальныйПериодРегистрации.ТочкаУчета,
	              |	МаксимальныйПериодРегистрации.ПериодНачисления,
	              |	МаксимальныйПериодРегистрации.ПериодРегистрации,
	              |	МаксимальныйПериодРегистрации.ОбъектРасчета,
	              |	МаксимальныйПериодРегистрации.Организация,
	              |	МаксимальныйПериодРегистрации.Договор
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	МаксимальныйПериод.Район КАК Район,
	              |	МаксимальныйПериод.ТочкаУчета КАК ТочкаУчета,
	              |	МаксимальныйПериод.ПериодНачисления КАК ПериодНачисления,
	              |	МаксимальныйПериод.ПериодРегистрации КАК ПериодРегистрации,
	              |	МаксимальныйПериод.Период КАК Период,
	              |	МАКСИМУМ(НаборДанных.Регистратор) КАК Регистратор,
	              |	МаксимальныйПериод.ОбъектРасчета КАК ОбъектРасчета,
	              |	МаксимальныйПериод.Организация КАК Организация,
	              |	МаксимальныйПериод.Договор КАК Договор
	              |ПОМЕСТИТЬ МаксимальныйРегистратор
	              |ИЗ
	              |	МаксимальныйПериод КАК МаксимальныйПериод
	              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НаборДанных КАК НаборДанных
	              |		ПО МаксимальныйПериод.Организация = НаборДанных.Организация
	              |			И МаксимальныйПериод.Район = НаборДанных.Район
	              |			И МаксимальныйПериод.Договор = НаборДанных.Договор
	              |			И МаксимальныйПериод.ОбъектРасчета = НаборДанных.ОбъектРасчета
	              |			И МаксимальныйПериод.ПериодНачисления = НаборДанных.ПериодНачисления
	              |			И МаксимальныйПериод.ПериодРегистрации = НаборДанных.ПериодРегистрации
	              |			И МаксимальныйПериод.Период = НаборДанных.Период
	              |			И МаксимальныйПериод.ТочкаУчета = НаборДанных.ТочкаУчета
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	МаксимальныйПериод.Район,
	              |	МаксимальныйПериод.ТочкаУчета,
	              |	МаксимальныйПериод.ПериодНачисления,
	              |	МаксимальныйПериод.ПериодРегистрации,
	              |	МаксимальныйПериод.Период,
	              |	МаксимальныйПериод.ОбъектРасчета,
	              |	МаксимальныйПериод.Организация,
	              |	МаксимальныйПериод.Договор
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	МаксимальныйРегистратор.Период КАК Период,
	              |	МаксимальныйРегистратор.Регистратор КАК Регистратор,
	              |	МаксимальныйРегистратор.Район КАК Район,
	              |	МаксимальныйРегистратор.ТочкаУчета КАК ТочкаУчета,
	              |	МаксимальныйРегистратор.ОбъектРасчета КАК ОбъектРасчета,
	              |	МаксимальныйРегистратор.Организация КАК Организация,
	              |	МаксимальныйРегистратор.Договор КАК Договор
	              |ПОМЕСТИТЬ ТочкиПоФормуле
	              |ИЗ
	              |	МаксимальныйРегистратор КАК МаксимальныйРегистратор
	              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НаборДанных КАК НаборДанных
	              |		ПО МаксимальныйРегистратор.Организация = НаборДанных.Организация
	              |			И МаксимальныйРегистратор.Район = НаборДанных.Район
	              |			И МаксимальныйРегистратор.Договор = НаборДанных.Договор
	              |			И МаксимальныйРегистратор.ОбъектРасчета = НаборДанных.ОбъектРасчета
	              |			И МаксимальныйРегистратор.ТочкаУчета = НаборДанных.ТочкаУчета
	              |			И МаксимальныйРегистратор.ПериодНачисления = НаборДанных.ПериодНачисления
	              |			И МаксимальныйРегистратор.ПериодРегистрации = НаборДанных.ПериодРегистрации
	              |			И (НаборДанных.РасчетныйСпособ)
	              |			И МаксимальныйРегистратор.Период = НаборДанных.Период
	              |			И МаксимальныйРегистратор.Регистратор = НаборДанных.Регистратор
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ТочкиПоФормуле.Период КАК Период,
	              |	ТочкиПоФормуле.Регистратор КАК Регистратор,
	              |	ТочкиПоФормуле.Район КАК Район,
	              |	ТочкиПоФормуле.ТочкаУчета КАК ТочкаУчета,
	              |	бестФормулыРасчетаТочекУчетаНП.ТочкаИсточник КАК ТочкаИсточник,
	              |	бестФормулыРасчетаТочекУчетаНП.Организация КАК Организация,
	              |	бестФормулыРасчетаТочекУчетаНП.Договор КАК Договор,
	              |	бестФормулыРасчетаТочекУчетаНП.ОбъектРасчета КАК ОбъектРасчета
	              |ПОМЕСТИТЬ ФормулыРасчетаТочек
	              |ИЗ
	              |	ТочкиПоФормуле КАК ТочкиПоФормуле
	              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бестФормулыРасчетаТочекУчетаНП КАК бестФормулыРасчетаТочекУчетаНП
	              |		ПО ТочкиПоФормуле.Период = бестФормулыРасчетаТочекУчетаНП.Период
	              |			И ТочкиПоФормуле.Регистратор = бестФормулыРасчетаТочекУчетаНП.Регистратор
	              |			И ТочкиПоФормуле.Организация = бестФормулыРасчетаТочекУчетаНП.Организация
	              |			И ТочкиПоФормуле.Район = бестФормулыРасчетаТочекУчетаНП.Район
	              |			И ТочкиПоФормуле.Договор = бестФормулыРасчетаТочекУчетаНП.Договор
	              |			И ТочкиПоФормуле.ОбъектРасчета = бестФормулыРасчетаТочекУчетаНП.ОбъектРасчета
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ РАЗЛИЧНЫЕ
	              |	ВложенныйЗапрос.Период КАК Период,
	              |	ВложенныйЗапрос.Регистратор КАК Регистратор,
	              |	ВложенныйЗапрос.Район КАК Район,
	              |	ВложенныйЗапрос.ТочкаУчета КАК ТочкаУчета,
	              |	ВложенныйЗапрос.Организация КАК Организация,
	              |	ВложенныйЗапрос.Договор КАК Договор,
	              |	ВложенныйЗапрос.ОбъектРасчета КАК ОбъектРасчета
	              |ПОМЕСТИТЬ ОтменаФормулы
	              |ИЗ
	              |	(ВЫБРАТЬ
	              |		ФормулыРасчетаТочек.Период КАК Период,
	              |		ФормулыРасчетаТочек.Регистратор КАК Регистратор,
	              |		ФормулыРасчетаТочек.Район КАК Район,
	              |		ФормулыРасчетаТочек.ТочкаУчета КАК ТочкаУчета,
	              |		ФормулыРасчетаТочек.Организация КАК Организация,
	              |		ФормулыРасчетаТочек.Договор КАК Договор,
	              |		ФормулыРасчетаТочек.ОбъектРасчета КАК ОбъектРасчета
	              |	ИЗ
	              |		ДанныеУслуг КАК ДанныеУслуг
	              |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ФормулыРасчетаТочек КАК ФормулыРасчетаТочек
	              |			ПО ДанныеУслуг.ТочкаУчета = ФормулыРасчетаТочек.ТочкаУчета
	              |	
	              |	ОБЪЕДИНИТЬ ВСЕ
	              |	
	              |	ВЫБРАТЬ
	              |		ФормулыРасчетаТочек.Период,
	              |		ФормулыРасчетаТочек.Регистратор,
	              |		ФормулыРасчетаТочек.Район,
	              |		ФормулыРасчетаТочек.ТочкаУчета,
	              |		ФормулыРасчетаТочек.Организация,
	              |		ФормулыРасчетаТочек.Договор,
	              |		ФормулыРасчетаТочек.ОбъектРасчета
	              |	ИЗ
	              |		ДанныеУслуг КАК ДанныеУслуг
	              |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ФормулыРасчетаТочек КАК ФормулыРасчетаТочек
	              |			ПО ДанныеУслуг.ТочкаУчета = ФормулыРасчетаТочек.ТочкаИсточник) КАК ВложенныйЗапрос
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ РАЗЛИЧНЫЕ
	              |	ВложенныйЗапрос.ТочкаУчета КАК ТочкаУчета
	              |ПОМЕСТИТЬ ТочкиОтменыФормулы
	              |ИЗ
	              |	(ВЫБРАТЬ
	              |		ФормулыРасчетаТочек.ТочкаУчета КАК ТочкаУчета
	              |	ИЗ
	              |		ОтменаФормулы КАК ОтменаФормулы
	              |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ФормулыРасчетаТочек КАК ФормулыРасчетаТочек
	              |			ПО (ОтменаФормулы.Период = ОтменаФормулы.Период)
	              |				И (ОтменаФормулы.Регистратор = ОтменаФормулы.Регистратор)
	              |				И (ОтменаФормулы.Район = ОтменаФормулы.Район)
	              |				И (ОтменаФормулы.Организация = ОтменаФормулы.Организация)
	              |				И (ОтменаФормулы.ТочкаУчета = ОтменаФормулы.ТочкаУчета)
	              |				И (ОтменаФормулы.Договор = ОтменаФормулы.Договор)
	              |				И (ОтменаФормулы.ОбъектРасчета = ОтменаФормулы.ОбъектРасчета)
	              |	
	              |	ОБЪЕДИНИТЬ ВСЕ
	              |	
	              |	ВЫБРАТЬ
	              |		ФормулыРасчетаТочек.ТочкаИсточник
	              |	ИЗ
	              |		ОтменаФормулы КАК ОтменаФормулы
	              |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ФормулыРасчетаТочек КАК ФормулыРасчетаТочек
	              |			ПО (ОтменаФормулы.Период = ОтменаФормулы.Период)
	              |				И (ОтменаФормулы.Регистратор = ОтменаФормулы.Регистратор)
	              |				И (ОтменаФормулы.Район = ОтменаФормулы.Район)
	              |				И (ОтменаФормулы.ТочкаУчета = ОтменаФормулы.ТочкаУчета)
	              |				И (ОтменаФормулы.ОбъектРасчета = ОтменаФормулы.ОбъектРасчета)
	              |				И (ОтменаФормулы.Договор = ОтменаФормулы.Договор)
	              |				И (ОтменаФормулы.Организация = ОтменаФормулы.Организация)) КАК ВложенныйЗапрос
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ТочкиОтменыФормулы.ТочкаУчета КАК ТочкаУчета
	              |ПОМЕСТИТЬ ТочкиУчетаДляОтмены
	              |ИЗ
	              |	ТочкиОтменыФормулы КАК ТочкиОтменыФормулы
	              |		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеУслуг КАК ДанныеУслуг
	              |		ПО ТочкиОтменыФормулы.ТочкаУчета = ДанныеУслуг.ТочкаУчета
	              |ГДЕ
	              |	ДанныеУслуг.ПериодНачисления ЕСТЬ NULL
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	бестУслугиТочекУчетаНПСрезПоследних.ТочкаУчета КАК ТочкаУчета,
	              |	бестУслугиТочекУчетаНПСрезПоследних.Услуга КАК Услуга,
	              |	бестУслугиТочекУчетаНПСрезПоследних.ОбъектРасчета КАК ОбъектРасчета
	              |ПОМЕСТИТЬ УслугиТочекУчета
	              |ИЗ
	              |	РегистрСведений.бестУслугиТочекУчетаНП.СрезПоследних(
	              |			&МоментВремени,
	              |			Организация = &Организация
	              |				И Район = &Район
	              |				И Договор = &Договор) КАК бестУслугиТочекУчетаНПСрезПоследних
	              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеУслуг КАК ДанныеУслуг
	              |		ПО бестУслугиТочекУчетаНПСрезПоследних.ТочкаУчета = ДанныеУслуг.ТочкаУчета
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ТочкиУчетаДляОтмены.ТочкаУчета КАК ТочкаУчета,
	              |	УслугиТочекУчета.Услуга КАК Услуга,
	              |	УслугиТочекУчета.ОбъектРасчета КАК ОбъектРасчета
	              |ПОМЕСТИТЬ ВозможноСоставныеУслуги
	              |ИЗ
	              |	УслугиТочекУчета КАК УслугиТочекУчета
	              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТочкиУчетаДляОтмены КАК ТочкиУчетаДляОтмены
	              |		ПО УслугиТочекУчета.ТочкаУчета = ТочкиУчетаДляОтмены.ТочкаУчета
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	&ПериодНачисления КАК ПериодНачисления,
	              |	&Район КАК Район,
	              |	ВозможноСоставныеУслуги.Услуга КАК Услуга,
	              |	ВозможноСоставныеУслуги.ТочкаУчета КАК ТочкаУчета,
	              |	ЛОЖЬ КАК РасчетПоФормуле,
	              |	ЗНАЧЕНИЕ(Справочник.энргТочкиУчета.ПустаяСсылка) КАК ЗависимаяТочкаУчета,
	              |	0 КАК КоэффициентРасчета,
	              |	ИСТИНА КАК МенялосьСостояниеПУ,
	              |	ИСТИНА КАК МенялосьСостояниеФормулы,
	              |	&Организация КАК Организация,
	              |	&Договор КАК Договор,
	              |	ВозможноСоставныеУслуги.ОбъектРасчета КАК ОбъектРасчета,
	              |	ВозможноСоставныеУслуги.ОбъектРасчета.МКД КАК МКД
	              |ПОМЕСТИТЬ УслугиТочекОтменыФормулы
	              |ИЗ
	              |	ВозможноСоставныеУслуги КАК ВозможноСоставныеУслуги";
	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Организация");
	Измерения.Добавить("Район");
	Измерения.Добавить("Договор");
	Измерения.Добавить("ОбъектРасчета");
	Измерения.Добавить("МКД");
	Измерения.Добавить("Услуга");
	Измерения.Добавить("ТочкаУчета");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("РасчетПоФормуле");
	Ресурсы.Добавить("ЗависимаяТочкаУчета");
	Ресурсы.Добавить("КоэффициентРасчета");
	Ресурсы.Добавить("МенялосьСостояниеПУ");
	Ресурсы.Добавить("МенялосьСостояниеФормулы");
	
	Параметры.вставить("Измерения",Измерения);
	Параметры.вставить("Ресурсы",Ресурсы);
	
	ЗаполнитьНомераПозицийНП(МВТ,Параметры,"УслугиТочекОтменыФормулы");
	
КонецПроцедуры

Процедура СтабПериодыНПОграничениеУслуги(ссылка,параметры)
	
	ПараметрыЗапроса= Параметры.ПараметрыЗапроса;
	МВТ 			= Новый МенеджерВременныхТаблиц;
	Запрос  		= Новый Запрос;
	Запрос.УстановитьПараметр("ссылка",				ссылка);
	Запрос.УстановитьПараметр("ПериодНачисления",	Параметры.ПериодНачисления);
	Запрос.УстановитьПараметр("МоментВремени",		Параметры.МоментВремени);
	Запрос.УстановитьПараметр("ГраницаИсключая",	Новый Граница(Параметры.МоментВремени,ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("ПериодРегистрации",	Параметры.ПараметрыЗапроса.ПериодРегистрации);
	Запрос.УстановитьПараметр("Период",				Параметры.ДатаДок);
	для Каждого стр из ПараметрыЗапроса цикл
		Запрос.УстановитьПараметр(стр.ключ,стр.значение); 
	КонецЦикла;	   	
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.Текст 	="ВЫБРАТЬ
	             	 |	бестОперацияСУслугамиНП.Ссылка КАК Ссылка,
	             	 |	бестОперацияСУслугамиНП.Дата КАК Дата,
	             	 |	бестОперацияСУслугамиНП.ПериодНачисления КАК ПериодНачисления,
	             	 |	бестОперацияСУслугамиНП.Район КАК Район,
	             	 |	бестОперацияСУслугамиНП.Договор КАК Договор,
	             	 |	бестОперацияСУслугамиНП.Организация КАК Организация
	             	 |ПОМЕСТИТЬ Шапка
	             	 |ИЗ
	             	 |	Документ.бестОперацияСУслугамиНП КАК бестОперацияСУслугамиНП
	             	 |ГДЕ
	             	 |	бестОперацияСУслугамиНП.Ссылка = &Ссылка
	             	 |;
	             	 |
	             	 |////////////////////////////////////////////////////////////////////////////////
	             	 |ВЫБРАТЬ
	             	 |	Шапка.ПериодНачисления КАК ПериодНачисления,
	             	 |	Шапка.Район КАК Район,
	             	 |	бестОперацияСУслугамиНПТочкиУчета.Услуга КАК Услуга,
	             	 |	бестОперацияСУслугамиНПТочкиУчета.ТочкаУчета КАК ТочкаУчета,
	             	 |	ЛОЖЬ КАК УслугаПодключена,
	             	 |	ЛОЖЬ КАК ПриборВведен,
	             	 |	Шапка.Договор КАК Договор,
	             	 |	Шапка.Организация КАК Организация,
	             	 |	ЛОЖЬ КАК РасчетПоФормуле,
	             	 |	ЗНАЧЕНИЕ(Справочник.энргТочкиУчета.ПустаяСсылка) КАК ЗависимаяТочкаУчета,
	             	 |	0 КАК КоэффициентРасчета,
	             	 |	ИСТИНА КАК МенялосьСостояниеПУ,
	             	 |	ИСТИНА КАК МенялосьСостояниеФормулы,
	             	 |	бестОперацияСУслугамиНПТочкиУчета.ОбъектРасчета КАК ОбъектРасчета,
	             	 |	ИСТИНА КАК ОбъектРасчетаПодключен,
	             	 |	бестОперацияСУслугамиНПТочкиУчета.ОбъектРасчета.МКД КАК ОбъектРасчетаМКД
	             	 |ПОМЕСТИТЬ ДанныеУслуг
	             	 |ИЗ
	             	 |	Шапка КАК Шапка
	             	 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бестОперацияСУслугамиНП.ТочкиУчета КАК бестОперацияСУслугамиНПТочкиУчета
	             	 |		ПО Шапка.Ссылка = бестОперацияСУслугамиНПТочкиУчета.Ссылка
	             	 |;
	             	 |
	             	 |////////////////////////////////////////////////////////////////////////////////
	             	 |ВЫБРАТЬ
	             	 |	бестУчастиеОбъектовВРаспределенииРесурсовВМКДСрезПоследних.ОбъектРасчета КАК ОбъектРасчета
	             	 |ПОМЕСТИТЬ МКД
	             	 |ИЗ
	             	 |	РегистрСведений.бестУчастиеОбъектовВРаспределенииРесурсовВМКД.СрезПоследних(
	             	 |			&МоментВремени,
	             	 |			ОбъектРасчета В
	             	 |				(ВЫБРАТЬ
	             	 |					ДанныеУслуг.ОбъектРасчета
	             	 |				ИЗ
	             	 |					ДанныеУслуг)) КАК бестУчастиеОбъектовВРаспределенииРесурсовВМКДСрезПоследних
	             	 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеУслуг КАК ДанныеУслуг
	             	 |		ПО бестУчастиеОбъектовВРаспределенииРесурсовВМКДСрезПоследних.ОбъектРасчета = ДанныеУслуг.ОбъектРасчета
	             	 |ГДЕ
	             	 |	бестУчастиеОбъектовВРаспределенииРесурсовВМКДСрезПоследних.Участвует
	             	 |;
	             	 |
	             	 |////////////////////////////////////////////////////////////////////////////////
	             	 |ВЫБРАТЬ
	             	 |	ДанныеУслуг.ПериодНачисления КАК ПериодНачисления,
	             	 |	ДанныеУслуг.Район КАК Район,
	             	 |	ВЫБОР
	             	 |		КОГДА энргВидыУслугСоставляющиеУслуг.Ссылка ЕСТЬ NULL
	             	 |			ТОГДА ДанныеУслуг.Услуга
	             	 |		ИНАЧЕ энргВидыУслугСоставляющиеУслуг.Услуга
	             	 |	КОНЕЦ КАК Услуга,
	             	 |	ДанныеУслуг.ТочкаУчета КАК ТочкаУчета,
	             	 |	ДанныеУслуг.Договор КАК Договор,
	             	 |	ДанныеУслуг.Организация КАК Организация,
	             	 |	ДанныеУслуг.ОбъектРасчета КАК ОбъектРасчета,
	             	 |	ДанныеУслуг.УслугаПодключена КАК УслугаПодключена,
	             	 |	ДанныеУслуг.ПриборВведен КАК ПриборВведен,
	             	 |	ДанныеУслуг.РасчетПоФормуле КАК РасчетПоФормуле,
	             	 |	ДанныеУслуг.ЗависимаяТочкаУчета КАК ЗависимаяТочкаУчета,
	             	 |	ДанныеУслуг.КоэффициентРасчета КАК КоэффициентРасчета,
	             	 |	ДанныеУслуг.МенялосьСостояниеПУ КАК МенялосьСостояниеПУ,
	             	 |	ДанныеУслуг.МенялосьСостояниеФормулы КАК МенялосьСостояниеФормулы,
	             	 |	ДанныеУслуг.ОбъектРасчетаПодключен КАК ОбъектРасчетаПодключен,
	             	 |	ДанныеУслуг.ОбъектРасчетаМКД КАК МКД
	             	 |ПОМЕСТИТЬ ОтключениеУслуги
	             	 |ИЗ
	             	 |	ДанныеУслуг КАК ДанныеУслуг
	             	 |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг.СоставляющиеУслуг КАК энргВидыУслугСоставляющиеУслуг
	             	 |		ПО ДанныеУслуг.Услуга = энргВидыУслугСоставляющиеУслуг.Ссылка";
	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Организация");
	Измерения.Добавить("Район");
	Измерения.Добавить("Договор");
	Измерения.Добавить("ОбъектРасчета");
	Измерения.Добавить("МКД");
	Измерения.Добавить("Услуга");
	Измерения.Добавить("ТочкаУчета");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("УслугаПодключена");
	//Ресурсы.Добавить("ПриборВведен");
	//Ресурсы.Добавить("ЗначениеНормативаЗаДень");
	//Ресурсы.Добавить("РасчетПоФормуле");
	//Ресурсы.Добавить("ЗависимаяТочкаУчета");
	//Ресурсы.Добавить("КоэффициентРасчета");
	//Ресурсы.Добавить("МенялосьСостояниеПУ");
	//Ресурсы.Добавить("МенялосьСостояниеФормулы");
	//Ресурсы.Добавить("ВидДифференцированности");
	//Ресурсы.Добавить("ОбъектРасчетаПодключен");

	
	Параметры.вставить("Измерения",				Измерения);
	Параметры.вставить("Ресурсы",				Ресурсы);
	Параметры.вставить("ИзменяетСостояниеПУ",	Истина);
	
	ЗаполнитьНомераПозицийНП(МВТ,Параметры,"ОтключениеУслуги"); 	
	// 	
	//Запрос.Текст ="ВЫБРАТЬ
	//              |	бестРасчетныеСпособыТочекУчетаНП.Период КАК Период,
	//              |	бестРасчетныеСпособыТочекУчетаНП.Регистратор КАК Регистратор,
	//              |	бестРасчетныеСпособыТочекУчетаНП.Район КАК Район,
	//              |	бестРасчетныеСпособыТочекУчетаНП.ТочкаУчета КАК ТочкаУчета,
	//              |	бестРасчетныеСпособыТочекУчетаНП.РасчетныйСпособ КАК РасчетныйСпособ,
	//              |	бестРасчетныеСпособыТочекУчетаНП.ПериодНачисления КАК ПериодНачисления,
	//              |	бестРасчетныеСпособыТочекУчетаНП.ПериодРегистрации КАК ПериодРегистрации,
	//              |	бестРасчетныеСпособыТочекУчетаНП.ОбъектРасчета КАК ОбъектРасчета,
	//              |	бестРасчетныеСпособыТочекУчетаНП.Организация КАК Организация,
	//              |	бестРасчетныеСпособыТочекУчетаНП.Договор КАК Договор
	//              |ПОМЕСТИТЬ НаборДанных
	//              |ИЗ
	//              |	РегистрСведений.бестРасчетныеСпособыТочекУчетаНП КАК бестРасчетныеСпособыТочекУчетаНП
	//              |ГДЕ
	//              |	бестРасчетныеСпособыТочекУчетаНП.Район = &Район
	//              |	И бестРасчетныеСпособыТочекУчетаНП.ПериодНачисления <= &ПериодНачисления
	//              |	И ВЫБОР
	//              |			КОГДА бестРасчетныеСпособыТочекУчетаНП.ПериодНачисления < &ПериодНачисления
	//              |				ТОГДА ИСТИНА
	//              |			КОГДА бестРасчетныеСпособыТочекУчетаНП.ПериодНачисления = &ПериодНачисления
	//              |					И бестРасчетныеСпособыТочекУчетаНП.ПериодРегистрации < &ПериодРегистрации
	//              |				ТОГДА ИСТИНА
	//              |			КОГДА бестРасчетныеСпособыТочекУчетаНП.ПериодНачисления = &ПериодНачисления
	//              |					И бестРасчетныеСпособыТочекУчетаНП.ПериодРегистрации = &ПериодРегистрации
	//              |					И бестРасчетныеСпособыТочекУчетаНП.Период < &Период
	//              |				ТОГДА ИСТИНА
	//              |			КОГДА бестРасчетныеСпособыТочекУчетаНП.ПериодНачисления = &ПериодНачисления
	//              |					И бестРасчетныеСпособыТочекУчетаНП.ПериодРегистрации = &ПериодРегистрации
	//              |					И бестРасчетныеСпособыТочекУчетаНП.Период = &Период
	//              |					И бестРасчетныеСпособыТочекУчетаНП.Регистратор < &ссылка
	//              |				ТОГДА ИСТИНА
	//              |			ИНАЧЕ ЛОЖЬ
	//              |		КОНЕЦ
	//              |	И бестРасчетныеСпособыТочекУчетаНП.Организация = &Организация
	//              |	И бестРасчетныеСпособыТочекУчетаНП.Договор = &Договор
	//              |;
	//              |
	//              |////////////////////////////////////////////////////////////////////////////////
	//              |ВЫБРАТЬ
	//              |	НаборДанных.Район КАК Район,
	//              |	НаборДанных.ТочкаУчета КАК ТочкаУчета,
	//              |	МАКСИМУМ(НаборДанных.ПериодНачисления) КАК ПериодНачисления,
	//              |	НаборДанных.Организация КАК Организация,
	//              |	НаборДанных.ОбъектРасчета КАК ОбъектРасчета,
	//              |	НаборДанных.Договор КАК Договор
	//              |ПОМЕСТИТЬ МаксПериодНачисления
	//              |ИЗ
	//              |	НаборДанных КАК НаборДанных
	//              |
	//              |СГРУППИРОВАТЬ ПО
	//              |	НаборДанных.Район,
	//              |	НаборДанных.ТочкаУчета,
	//              |	НаборДанных.Организация,
	//              |	НаборДанных.ОбъектРасчета,
	//              |	НаборДанных.Договор
	//              |;
	//              |
	//              |////////////////////////////////////////////////////////////////////////////////
	//              |ВЫБРАТЬ
	//              |	НаборДанных.Район КАК Район,
	//              |	НаборДанных.ТочкаУчета КАК ТочкаУчета,
	//              |	МаксПериодНачисления.ПериодНачисления КАК ПериодНачисления,
	//              |	МАКСИМУМ(НаборДанных.ПериодРегистрации) КАК ПериодРегистрации,
	//              |	НаборДанных.ОбъектРасчета КАК ОбъектРасчета,
	//              |	НаборДанных.Организация КАК Организация,
	//              |	НаборДанных.Договор КАК Договор
	//              |ПОМЕСТИТЬ МаксимальныйПериодРегистрации
	//              |ИЗ
	//              |	НаборДанных КАК НаборДанных
	//              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаксПериодНачисления КАК МаксПериодНачисления
	//              |		ПО НаборДанных.Организация = МаксПериодНачисления.Организация
	//              |			И НаборДанных.Район = МаксПериодНачисления.Район
	//              |			И НаборДанных.Договор = МаксПериодНачисления.Договор
	//              |			И НаборДанных.ОбъектРасчета = МаксПериодНачисления.ОбъектРасчета
	//              |			И НаборДанных.ПериодНачисления = МаксПериодНачисления.ПериодНачисления
	//              |			И НаборДанных.ТочкаУчета = МаксПериодНачисления.ТочкаУчета
	//              |
	//              |СГРУППИРОВАТЬ ПО
	//              |	НаборДанных.Район,
	//              |	НаборДанных.ТочкаУчета,
	//              |	МаксПериодНачисления.ПериодНачисления,
	//              |	НаборДанных.ОбъектРасчета,
	//              |	НаборДанных.Организация,
	//              |	НаборДанных.Договор
	//              |;
	//              |
	//              |////////////////////////////////////////////////////////////////////////////////
	//              |ВЫБРАТЬ
	//              |	МаксимальныйПериодРегистрации.Район КАК Район,
	//              |	МаксимальныйПериодРегистрации.ТочкаУчета КАК ТочкаУчета,
	//              |	МаксимальныйПериодРегистрации.ПериодНачисления КАК ПериодНачисления,
	//              |	МаксимальныйПериодРегистрации.ПериодРегистрации КАК ПериодРегистрации,
	//              |	МАКСИМУМ(НаборДанных.Период) КАК Период,
	//              |	МаксимальныйПериодРегистрации.ОбъектРасчета КАК ОбъектРасчета,
	//              |	МаксимальныйПериодРегистрации.Организация КАК Организация,
	//              |	МаксимальныйПериодРегистрации.Договор КАК Договор
	//              |ПОМЕСТИТЬ МаксимальныйПериод
	//              |ИЗ
	//              |	МаксимальныйПериодРегистрации КАК МаксимальныйПериодРегистрации
	//              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НаборДанных КАК НаборДанных
	//              |		ПО МаксимальныйПериодРегистрации.Организация = НаборДанных.Организация
	//              |			И МаксимальныйПериодРегистрации.Район = НаборДанных.Район
	//              |			И МаксимальныйПериодРегистрации.Договор = НаборДанных.Договор
	//              |			И МаксимальныйПериодРегистрации.ОбъектРасчета = НаборДанных.ОбъектРасчета
	//              |			И МаксимальныйПериодРегистрации.ПериодРегистрации = НаборДанных.ПериодРегистрации
	//              |			И МаксимальныйПериодРегистрации.ПериодНачисления = НаборДанных.ПериодНачисления
	//              |			И МаксимальныйПериодРегистрации.ТочкаУчета = НаборДанных.ТочкаУчета
	//              |
	//              |СГРУППИРОВАТЬ ПО
	//              |	МаксимальныйПериодРегистрации.Район,
	//              |	МаксимальныйПериодРегистрации.ТочкаУчета,
	//              |	МаксимальныйПериодРегистрации.ПериодНачисления,
	//              |	МаксимальныйПериодРегистрации.ПериодРегистрации,
	//              |	МаксимальныйПериодРегистрации.ОбъектРасчета,
	//              |	МаксимальныйПериодРегистрации.Организация,
	//              |	МаксимальныйПериодРегистрации.Договор
	//              |;
	//              |
	//              |////////////////////////////////////////////////////////////////////////////////
	//              |ВЫБРАТЬ
	//              |	МаксимальныйПериод.Район КАК Район,
	//              |	МаксимальныйПериод.ТочкаУчета КАК ТочкаУчета,
	//              |	МаксимальныйПериод.ПериодНачисления КАК ПериодНачисления,
	//              |	МаксимальныйПериод.ПериодРегистрации КАК ПериодРегистрации,
	//              |	МаксимальныйПериод.Период КАК Период,
	//              |	МАКСИМУМ(НаборДанных.Регистратор) КАК Регистратор,
	//              |	МаксимальныйПериод.ОбъектРасчета КАК ОбъектРасчета,
	//              |	МаксимальныйПериод.Организация КАК Организация,
	//              |	МаксимальныйПериод.Договор КАК Договор
	//              |ПОМЕСТИТЬ МаксимальныйРегистратор
	//              |ИЗ
	//              |	МаксимальныйПериод КАК МаксимальныйПериод
	//              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НаборДанных КАК НаборДанных
	//              |		ПО МаксимальныйПериод.Организация = НаборДанных.Организация
	//              |			И МаксимальныйПериод.Район = НаборДанных.Район
	//              |			И МаксимальныйПериод.Договор = НаборДанных.Договор
	//              |			И МаксимальныйПериод.ОбъектРасчета = НаборДанных.ОбъектРасчета
	//              |			И МаксимальныйПериод.ПериодНачисления = НаборДанных.ПериодНачисления
	//              |			И МаксимальныйПериод.ПериодРегистрации = НаборДанных.ПериодРегистрации
	//              |			И МаксимальныйПериод.Период = НаборДанных.Период
	//              |			И МаксимальныйПериод.ТочкаУчета = НаборДанных.ТочкаУчета
	//              |
	//              |СГРУППИРОВАТЬ ПО
	//              |	МаксимальныйПериод.Район,
	//              |	МаксимальныйПериод.ТочкаУчета,
	//              |	МаксимальныйПериод.ПериодНачисления,
	//              |	МаксимальныйПериод.ПериодРегистрации,
	//              |	МаксимальныйПериод.Период,
	//              |	МаксимальныйПериод.ОбъектРасчета,
	//              |	МаксимальныйПериод.Организация,
	//              |	МаксимальныйПериод.Договор
	//              |;
	//              |
	//              |////////////////////////////////////////////////////////////////////////////////
	//              |ВЫБРАТЬ
	//              |	МаксимальныйРегистратор.Период КАК Период,
	//              |	МаксимальныйРегистратор.Регистратор КАК Регистратор,
	//              |	МаксимальныйРегистратор.Район КАК Район,
	//              |	МаксимальныйРегистратор.ТочкаУчета КАК ТочкаУчета,
	//              |	МаксимальныйРегистратор.ОбъектРасчета КАК ОбъектРасчета,
	//              |	МаксимальныйРегистратор.Организация КАК Организация,
	//              |	МаксимальныйРегистратор.Договор КАК Договор
	//              |ПОМЕСТИТЬ ТочкиПоФормуле
	//              |ИЗ
	//              |	МаксимальныйРегистратор КАК МаксимальныйРегистратор
	//              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НаборДанных КАК НаборДанных
	//              |		ПО МаксимальныйРегистратор.Организация = НаборДанных.Организация
	//              |			И МаксимальныйРегистратор.Район = НаборДанных.Район
	//              |			И МаксимальныйРегистратор.Договор = НаборДанных.Договор
	//              |			И МаксимальныйРегистратор.ОбъектРасчета = НаборДанных.ОбъектРасчета
	//              |			И МаксимальныйРегистратор.ТочкаУчета = НаборДанных.ТочкаУчета
	//              |			И МаксимальныйРегистратор.ПериодНачисления = НаборДанных.ПериодНачисления
	//              |			И МаксимальныйРегистратор.ПериодРегистрации = НаборДанных.ПериодРегистрации
	//              |			И (НаборДанных.РасчетныйСпособ)
	//              |			И МаксимальныйРегистратор.Период = НаборДанных.Период
	//              |			И МаксимальныйРегистратор.Регистратор = НаборДанных.Регистратор
	//              |;
	//              |
	//              |////////////////////////////////////////////////////////////////////////////////
	//              |ВЫБРАТЬ
	//              |	ТочкиПоФормуле.Период КАК Период,
	//              |	ТочкиПоФормуле.Регистратор КАК Регистратор,
	//              |	ТочкиПоФормуле.Район КАК Район,
	//              |	ТочкиПоФормуле.ТочкаУчета КАК ТочкаУчета,
	//              |	бестФормулыРасчетаТочекУчетаНП.ТочкаИсточник КАК ТочкаИсточник,
	//              |	бестФормулыРасчетаТочекУчетаНП.Организация КАК Организация,
	//              |	бестФормулыРасчетаТочекУчетаНП.Договор КАК Договор,
	//              |	бестФормулыРасчетаТочекУчетаНП.ОбъектРасчета КАК ОбъектРасчета
	//              |ПОМЕСТИТЬ ФормулыРасчетаТочек
	//              |ИЗ
	//              |	ТочкиПоФормуле КАК ТочкиПоФормуле
	//              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бестФормулыРасчетаТочекУчетаНП КАК бестФормулыРасчетаТочекУчетаНП
	//              |		ПО ТочкиПоФормуле.Период = бестФормулыРасчетаТочекУчетаНП.Период
	//              |			И ТочкиПоФормуле.Регистратор = бестФормулыРасчетаТочекУчетаНП.Регистратор
	//              |			И ТочкиПоФормуле.Организация = бестФормулыРасчетаТочекУчетаНП.Организация
	//              |			И ТочкиПоФормуле.Район = бестФормулыРасчетаТочекУчетаНП.Район
	//              |			И ТочкиПоФормуле.Договор = бестФормулыРасчетаТочекУчетаНП.Договор
	//              |			И ТочкиПоФормуле.ОбъектРасчета = бестФормулыРасчетаТочекУчетаНП.ОбъектРасчета
	//              |;
	//              |
	//              |////////////////////////////////////////////////////////////////////////////////
	//              |ВЫБРАТЬ РАЗЛИЧНЫЕ
	//              |	ВложенныйЗапрос.Период КАК Период,
	//              |	ВложенныйЗапрос.Регистратор КАК Регистратор,
	//              |	ВложенныйЗапрос.Район КАК Район,
	//              |	ВложенныйЗапрос.ТочкаУчета КАК ТочкаУчета,
	//              |	ВложенныйЗапрос.Организация КАК Организация,
	//              |	ВложенныйЗапрос.Договор КАК Договор,
	//              |	ВложенныйЗапрос.ОбъектРасчета КАК ОбъектРасчета
	//              |ПОМЕСТИТЬ ОтменаФормулы
	//              |ИЗ
	//              |	(ВЫБРАТЬ
	//              |		ФормулыРасчетаТочек.Период КАК Период,
	//              |		ФормулыРасчетаТочек.Регистратор КАК Регистратор,
	//              |		ФормулыРасчетаТочек.Район КАК Район,
	//              |		ФормулыРасчетаТочек.ТочкаУчета КАК ТочкаУчета,
	//              |		ФормулыРасчетаТочек.Организация КАК Организация,
	//              |		ФормулыРасчетаТочек.Договор КАК Договор,
	//              |		ФормулыРасчетаТочек.ОбъектРасчета КАК ОбъектРасчета
	//              |	ИЗ
	//              |		ДанныеУслуг КАК ДанныеУслуг
	//              |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ФормулыРасчетаТочек КАК ФормулыРасчетаТочек
	//              |			ПО ДанныеУслуг.ТочкаУчета = ФормулыРасчетаТочек.ТочкаУчета
	//              |	
	//              |	ОБЪЕДИНИТЬ ВСЕ
	//              |	
	//              |	ВЫБРАТЬ
	//              |		ФормулыРасчетаТочек.Период,
	//              |		ФормулыРасчетаТочек.Регистратор,
	//              |		ФормулыРасчетаТочек.Район,
	//              |		ФормулыРасчетаТочек.ТочкаУчета,
	//              |		ФормулыРасчетаТочек.Организация,
	//              |		ФормулыРасчетаТочек.Договор,
	//              |		ФормулыРасчетаТочек.ОбъектРасчета
	//              |	ИЗ
	//              |		ДанныеУслуг КАК ДанныеУслуг
	//              |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ФормулыРасчетаТочек КАК ФормулыРасчетаТочек
	//              |			ПО ДанныеУслуг.ТочкаУчета = ФормулыРасчетаТочек.ТочкаИсточник) КАК ВложенныйЗапрос
	//              |;
	//              |
	//              |////////////////////////////////////////////////////////////////////////////////
	//              |ВЫБРАТЬ РАЗЛИЧНЫЕ
	//              |	ВложенныйЗапрос.ТочкаУчета КАК ТочкаУчета
	//              |ПОМЕСТИТЬ ТочкиОтменыФормулы
	//              |ИЗ
	//              |	(ВЫБРАТЬ
	//              |		ФормулыРасчетаТочек.ТочкаУчета КАК ТочкаУчета
	//              |	ИЗ
	//              |		ОтменаФормулы КАК ОтменаФормулы
	//              |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ФормулыРасчетаТочек КАК ФормулыРасчетаТочек
	//              |			ПО (ОтменаФормулы.Период = ОтменаФормулы.Период)
	//              |				И (ОтменаФормулы.Регистратор = ОтменаФормулы.Регистратор)
	//              |				И (ОтменаФормулы.Район = ОтменаФормулы.Район)
	//              |				И (ОтменаФормулы.Организация = ОтменаФормулы.Организация)
	//              |				И (ОтменаФормулы.ТочкаУчета = ОтменаФормулы.ТочкаУчета)
	//              |				И (ОтменаФормулы.Договор = ОтменаФормулы.Договор)
	//              |				И (ОтменаФормулы.ОбъектРасчета = ОтменаФормулы.ОбъектРасчета)
	//              |	
	//              |	ОБЪЕДИНИТЬ ВСЕ
	//              |	
	//              |	ВЫБРАТЬ
	//              |		ФормулыРасчетаТочек.ТочкаИсточник
	//              |	ИЗ
	//              |		ОтменаФормулы КАК ОтменаФормулы
	//              |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ФормулыРасчетаТочек КАК ФормулыРасчетаТочек
	//              |			ПО (ОтменаФормулы.Период = ОтменаФормулы.Период)
	//              |				И (ОтменаФормулы.Регистратор = ОтменаФормулы.Регистратор)
	//              |				И (ОтменаФормулы.Район = ОтменаФормулы.Район)
	//              |				И (ОтменаФормулы.ТочкаУчета = ОтменаФормулы.ТочкаУчета)
	//              |				И (ОтменаФормулы.ОбъектРасчета = ОтменаФормулы.ОбъектРасчета)
	//              |				И (ОтменаФормулы.Договор = ОтменаФормулы.Договор)
	//              |				И (ОтменаФормулы.Организация = ОтменаФормулы.Организация)) КАК ВложенныйЗапрос
	//              |;
	//              |
	//              |////////////////////////////////////////////////////////////////////////////////
	//              |ВЫБРАТЬ
	//              |	ТочкиОтменыФормулы.ТочкаУчета КАК ТочкаУчета
	//              |ПОМЕСТИТЬ ТочкиУчетаДляОтмены
	//              |ИЗ
	//              |	ТочкиОтменыФормулы КАК ТочкиОтменыФормулы
	//              |		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеУслуг КАК ДанныеУслуг
	//              |		ПО ТочкиОтменыФормулы.ТочкаУчета = ДанныеУслуг.ТочкаУчета
	//              |ГДЕ
	//              |	ДанныеУслуг.ПериодНачисления ЕСТЬ NULL
	//              |;
	//              |
	//              |////////////////////////////////////////////////////////////////////////////////
	//              |ВЫБРАТЬ
	//              |	бестУслугиТочекУчетаНПСрезПоследних.ТочкаУчета КАК ТочкаУчета,
	//              |	бестУслугиТочекУчетаНПСрезПоследних.Услуга КАК Услуга,
	//              |	бестУслугиТочекУчетаНПСрезПоследних.ОбъектРасчета КАК ОбъектРасчета
	//              |ПОМЕСТИТЬ УслугиТочекУчета
	//              |ИЗ
	//              |	РегистрСведений.бестУслугиТочекУчетаНП.СрезПоследних(
	//              |			&МоментВремени,
	//              |			Организация = &Организация
	//              |				И Район = &Район
	//              |				И Договор = &Договор) КАК бестУслугиТочекУчетаНПСрезПоследних
	//              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеУслуг КАК ДанныеУслуг
	//              |		ПО бестУслугиТочекУчетаНПСрезПоследних.ТочкаУчета = ДанныеУслуг.ТочкаУчета
	//              |;
	//              |
	//              |////////////////////////////////////////////////////////////////////////////////
	//              |ВЫБРАТЬ
	//              |	ТочкиУчетаДляОтмены.ТочкаУчета КАК ТочкаУчета,
	//              |	УслугиТочекУчета.Услуга КАК Услуга,
	//              |	УслугиТочекУчета.ОбъектРасчета КАК ОбъектРасчета
	//              |ПОМЕСТИТЬ ВозможноСоставныеУслуги
	//              |ИЗ
	//              |	УслугиТочекУчета КАК УслугиТочекУчета
	//              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТочкиУчетаДляОтмены КАК ТочкиУчетаДляОтмены
	//              |		ПО УслугиТочекУчета.ТочкаУчета = ТочкиУчетаДляОтмены.ТочкаУчета
	//              |;
	//              |
	//              |////////////////////////////////////////////////////////////////////////////////
	//              |ВЫБРАТЬ
	//              |	&ПериодНачисления КАК ПериодНачисления,
	//              |	&Район КАК Район,
	//              |	ВозможноСоставныеУслуги.Услуга КАК Услуга,
	//              |	ВозможноСоставныеУслуги.ТочкаУчета КАК ТочкаУчета,
	//              |	ЛОЖЬ КАК РасчетПоФормуле,
	//              |	ЗНАЧЕНИЕ(Справочник.энргТочкиУчета.ПустаяСсылка) КАК ЗависимаяТочкаУчета,
	//              |	0 КАК КоэффициентРасчета,
	//              |	ИСТИНА КАК МенялосьСостояниеПУ,
	//              |	ИСТИНА КАК МенялосьСостояниеФормулы,
	//              |	&Организация КАК Организация,
	//              |	&Договор КАК Договор,
	//              |	ВозможноСоставныеУслуги.ОбъектРасчета КАК ОбъектРасчета,
	//              |	ВозможноСоставныеУслуги.ОбъектРасчета.МКД КАК МКД
	//              |ПОМЕСТИТЬ УслугиТочекОтменыФормулы
	//              |ИЗ
	//              |	ВозможноСоставныеУслуги КАК ВозможноСоставныеУслуги";
	//
	//Запрос.Выполнить();
	//
	//Измерения = Новый Массив;
	//Измерения.Добавить("ПериодНачисления");
	//Измерения.Добавить("Организация");
	//Измерения.Добавить("Район");
	//Измерения.Добавить("Договор");
	//Измерения.Добавить("ОбъектРасчета");
	//Измерения.Добавить("МКД");
	//Измерения.Добавить("Услуга");
	//Измерения.Добавить("ТочкаУчета");
	//
	//Ресурсы = Новый Массив;
	//Ресурсы.Добавить("РасчетПоФормуле");
	//Ресурсы.Добавить("ЗависимаяТочкаУчета");
	//Ресурсы.Добавить("КоэффициентРасчета");
	//Ресурсы.Добавить("МенялосьСостояниеПУ");
	//Ресурсы.Добавить("МенялосьСостояниеФормулы");
	//
	//Параметры.вставить("Измерения",Измерения);
	//Параметры.вставить("Ресурсы",Ресурсы);
	//
	//ЗаполнитьНомераПозицийНП(МВТ,Параметры,"УслугиТочекОтменыФормулы");
	
КонецПроцедуры

Процедура СтабПериодыНПВозобновлениеУслуги(ссылка,параметры)
	
	ПараметрыЗапроса= Параметры.ПараметрыЗапроса;
	МВТ 			= Новый МенеджерВременныхТаблиц;
	Запрос  		= Новый Запрос;
	Запрос.УстановитьПараметр("ссылка",				ссылка);
	Запрос.УстановитьПараметр("ПериодНачисления",	Параметры.ПериодНачисления);
	Запрос.УстановитьПараметр("МоментВремени",		Параметры.МоментВремени);
	Запрос.УстановитьПараметр("ГраницаИсключая",	Новый Граница(Параметры.МоментВремени,ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("ПериодРегистрации",	Параметры.ПараметрыЗапроса.ПериодРегистрации);
	Запрос.УстановитьПараметр("Период",				Параметры.ДатаДок);
	для Каждого стр из ПараметрыЗапроса цикл
		Запрос.УстановитьПараметр(стр.ключ,стр.значение); 
	КонецЦикла;	   	
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.Текст 	="ВЫБРАТЬ
	             	 |	бестОперацияСУслугамиНП.Ссылка КАК Ссылка,
	             	 |	бестОперацияСУслугамиНП.Дата КАК Дата,
	             	 |	бестОперацияСУслугамиНП.ПериодНачисления КАК ПериодНачисления,
	             	 |	бестОперацияСУслугамиНП.Район КАК Район,
	             	 |	бестОперацияСУслугамиНП.Договор КАК Договор,
	             	 |	бестОперацияСУслугамиНП.Организация КАК Организация
	             	 |ПОМЕСТИТЬ Шапка
	             	 |ИЗ
	             	 |	Документ.бестОперацияСУслугамиНП КАК бестОперацияСУслугамиНП
	             	 |ГДЕ
	             	 |	бестОперацияСУслугамиНП.Ссылка = &Ссылка
	             	 |;
	             	 |
	             	 |////////////////////////////////////////////////////////////////////////////////
	             	 |ВЫБРАТЬ
	             	 |	Шапка.ПериодНачисления КАК ПериодНачисления,
	             	 |	Шапка.Район КАК Район,
	             	 |	бестОперацияСУслугамиНПТочкиУчета.Услуга КАК Услуга,
	             	 |	бестОперацияСУслугамиНПТочкиУчета.ТочкаУчета КАК ТочкаУчета,
	             	 |	ИСТИНА КАК УслугаПодключена,
	             	 |	Шапка.Договор КАК Договор,
	             	 |	Шапка.Организация КАК Организация,
	             	 |	ЛОЖЬ КАК РасчетПоФормуле,
	             	 |	ЗНАЧЕНИЕ(Справочник.энргТочкиУчета.ПустаяСсылка) КАК ЗависимаяТочкаУчета,
	             	 |	0 КАК КоэффициентРасчета,
	             	 |	ИСТИНА КАК МенялосьСостояниеПУ,
	             	 |	ИСТИНА КАК МенялосьСостояниеФормулы,
	             	 |	бестОперацияСУслугамиНПТочкиУчета.ОбъектРасчета КАК ОбъектРасчета,
	             	 |	ИСТИНА КАК ОбъектРасчетаПодключен,
	             	 |	бестОперацияСУслугамиНПТочкиУчета.ОбъектРасчета.МКД КАК ОбъектРасчетаМКД
	             	 |ПОМЕСТИТЬ ДанныеУслуг
	             	 |ИЗ
	             	 |	Шапка КАК Шапка
	             	 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бестОперацияСУслугамиНП.ТочкиУчета КАК бестОперацияСУслугамиНПТочкиУчета
	             	 |		ПО Шапка.Ссылка = бестОперацияСУслугамиНПТочкиУчета.Ссылка
	             	 |;
	             	 |
	             	 |////////////////////////////////////////////////////////////////////////////////
	             	 |ВЫБРАТЬ
	             	 |	бестУчастиеОбъектовВРаспределенииРесурсовВМКДСрезПоследних.ОбъектРасчета КАК ОбъектРасчета
	             	 |ПОМЕСТИТЬ МКД
	             	 |ИЗ
	             	 |	РегистрСведений.бестУчастиеОбъектовВРаспределенииРесурсовВМКД.СрезПоследних(
	             	 |			&МоментВремени,
	             	 |			ОбъектРасчета В
	             	 |				(ВЫБРАТЬ
	             	 |					ДанныеУслуг.ОбъектРасчета
	             	 |				ИЗ
	             	 |					ДанныеУслуг)) КАК бестУчастиеОбъектовВРаспределенииРесурсовВМКДСрезПоследних
	             	 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеУслуг КАК ДанныеУслуг
	             	 |		ПО бестУчастиеОбъектовВРаспределенииРесурсовВМКДСрезПоследних.ОбъектРасчета = ДанныеУслуг.ОбъектРасчета
	             	 |ГДЕ
	             	 |	бестУчастиеОбъектовВРаспределенииРесурсовВМКДСрезПоследних.Участвует
	             	 |;
	             	 |
	             	 |////////////////////////////////////////////////////////////////////////////////
	             	 |ВЫБРАТЬ
	             	 |	ДанныеУслуг.ПериодНачисления КАК ПериодНачисления,
	             	 |	ДанныеУслуг.Район КАК Район,
	             	 |	ВЫБОР
	             	 |		КОГДА энргВидыУслугСоставляющиеУслуг.Ссылка ЕСТЬ NULL
	             	 |			ТОГДА ДанныеУслуг.Услуга
	             	 |		ИНАЧЕ энргВидыУслугСоставляющиеУслуг.Услуга
	             	 |	КОНЕЦ КАК Услуга,
	             	 |	ДанныеУслуг.ТочкаУчета КАК ТочкаУчета,
	             	 |	ДанныеУслуг.Договор КАК Договор,
	             	 |	ДанныеУслуг.Организация КАК Организация,
	             	 |	ДанныеУслуг.ОбъектРасчета КАК ОбъектРасчета,
	             	 |	ДанныеУслуг.УслугаПодключена КАК УслугаПодключена,
	             	 |	ДанныеУслуг.РасчетПоФормуле КАК РасчетПоФормуле,
	             	 |	ДанныеУслуг.ЗависимаяТочкаУчета КАК ЗависимаяТочкаУчета,
	             	 |	ДанныеУслуг.КоэффициентРасчета КАК КоэффициентРасчета,
	             	 |	ДанныеУслуг.МенялосьСостояниеПУ КАК МенялосьСостояниеПУ,
	             	 |	ДанныеУслуг.МенялосьСостояниеФормулы КАК МенялосьСостояниеФормулы,
	             	 |	ДанныеУслуг.ОбъектРасчетаПодключен КАК ОбъектРасчетаПодключен,
	             	 |	ДанныеУслуг.ОбъектРасчетаМКД КАК МКД
	             	 |ПОМЕСТИТЬ ОтключениеУслуги
	             	 |ИЗ
	             	 |	ДанныеУслуг КАК ДанныеУслуг
	             	 |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг.СоставляющиеУслуг КАК энргВидыУслугСоставляющиеУслуг
	             	 |		ПО ДанныеУслуг.Услуга = энргВидыУслугСоставляющиеУслуг.Ссылка";
	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Организация");
	Измерения.Добавить("Район");
	Измерения.Добавить("Договор");
	Измерения.Добавить("ОбъектРасчета");
	Измерения.Добавить("МКД");
	Измерения.Добавить("Услуга");
	Измерения.Добавить("ТочкаУчета");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("УслугаПодключена");
	//Ресурсы.Добавить("ПриборВведен");
	////Ресурсы.Добавить("ЗначениеНормативаЗаДень");
	//Ресурсы.Добавить("РасчетПоФормуле");
	//Ресурсы.Добавить("ЗависимаяТочкаУчета");
	//Ресурсы.Добавить("КоэффициентРасчета");
	//Ресурсы.Добавить("МенялосьСостояниеПУ");
	//Ресурсы.Добавить("МенялосьСостояниеФормулы");
	//Ресурсы.Добавить("ВидДифференцированности");
	//Ресурсы.Добавить("ОбъектРасчетаПодключен");

	
	Параметры.вставить("Измерения",				Измерения);
	Параметры.вставить("Ресурсы",				Ресурсы);
	Параметры.вставить("ИзменяетСостояниеПУ",	Истина);
	
	ЗаполнитьНомераПозицийНП(МВТ,Параметры,"ОтключениеУслуги"); 	
	
КонецПроцедуры

Процедура СтабПериодыНПАктВводаПрибораУчета(Ссылка,Параметры)  
			
	ПараметрыЗапроса  	= параметры.ПараметрыЗапроса;	
	МВТ 				= Новый МенеджерВременныхТаблиц;
	Запрос  			= Новый Запрос;
	Запрос.УстановитьПараметр("ссылка",				ссылка);
	Запрос.УстановитьПараметр("ПериодНачисления",	Параметры.ПериодНачисления);
	Запрос.УстановитьПараметр("МоментВремени",		Параметры.МоментВремени);
	Запрос.УстановитьПараметр("ГраницаИсключая",	Новый Граница(Параметры.МоментВремени,ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("МассивТочек",		Ссылка["ТочкиУчета"].выгрузитьКолонку("ТочкаУчета"));
	для Каждого стр из ПараметрыЗапроса цикл
		Запрос.УстановитьПараметр(стр.ключ,стр.значение); 
	КонецЦикла;		
	Запрос.МенеджерВременныхТаблиц = МВТ;
	
	Запрос.Текст 	=
	"ВЫБРАТЬ
	|	бестОперацияСПриборомУчетаНП.Организация КАК Организация,
	|	бестОперацияСПриборомУчетаНП.ПериодНачисления КАК ПериодНачисления,
	|	бестОперацияСПриборомУчетаНП.Район КАК Район,
	|	&Договор КАК Договор,
	|	бестОперацияСПриборомУчетаНП.Ссылка КАК ДокРегистратор,
	|	бестОперацияСПриборомУчетаНП.Дата КАК Дата
	|ПОМЕСТИТЬ Шапка
	|ИЗ
	|	Документ.бестОперацияСПриборомУчетаНП КАК бестОперацияСПриборомУчетаНП
	|ГДЕ
	|	бестОперацияСПриборомУчетаНП.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ПериодНачисления КАК ПериодНачисления,
	|	ВложенныйЗапрос.Район КАК Район,
	|	ВложенныйЗапрос.МКД КАК МКД,
	|	ВложенныйЗапрос.Договор КАК Договор,
	|	ВложенныйЗапрос.ОбъектРасчета КАК ОбъектРасчета,
	|	ВложенныйЗапрос.ТочкаУчета КАК ТочкаУчета,
	|	ВложенныйЗапрос.ДатаРегистратора КАК ДатаРегистратора,
	|	ВложенныйЗапрос.ДокРегистратор КАК ДокРегистратор,
	|	ВложенныйЗапрос.IDСтроки КАК IDСтроки,
	|	ВложенныйЗапрос.ПриборВведен КАК ПриборВведен,
	|	ВложенныйЗапрос.ДатаСостоянияПрибора КАК ДатаСостоянияПрибора,
	|	ВложенныйЗапрос.МенялосьСостояниеПУ КАК МенялосьСостояниеПУ,
	|	ВложенныйЗапрос.КоэффициентПУ КАК КоэффициентПУ,
	|	ВЫБОР
	|		КОГДА энргВидыУслугСоставляющиеУслуг.Ссылка ЕСТЬ NULL
	|			ТОГДА ВложенныйЗапрос.Услуга
	|		ИНАЧЕ энргВидыУслугСоставляющиеУслуг.Услуга
	|	КОНЕЦ КАК Услуга,
	|	ВложенныйЗапрос.ПриборУчета КАК ПриборУчета
	|ПОМЕСТИТЬ ТочкиВводаПрибора
	|ИЗ
	|	(ВЫБРАТЬ
	|		Шапка.Организация КАК Организация,
	|		Шапка.ПериодНачисления КАК ПериодНачисления,
	|		Шапка.Район КАК Район,
	|		Шапка.Договор КАК Договор,
	|		ТочкиУчета.ТочкаУчета КАК ТочкаУчета,
	|		ТочкиУчета.Услуга КАК Услуга,
	|		ИСТИНА КАК ПриборВведен,
	|		&ПериодРегистрации КАК ДатаСостоянияПрибора,
	|		ТочкиУчета.КоэффициентПУ КАК КоэффициентПУ,
	|		ИСТИНА КАК МенялосьСостояниеПУ,
	|		ТочкиУчета.IDСтроки КАК IDСтроки,
	|		ТочкиУчета.ОбъектРасчета КАК ОбъектРасчета,
	|		ТочкиУчета.ПриборУчета КАК ПриборУчета,
	|		ТочкиУчета.ОбъектРасчета.МКД КАК МКД,
	|		Шапка.ДокРегистратор КАК ДокРегистратор,
	|		Шапка.Дата КАК ДатаРегистратора
	|	ИЗ
	|		Шапка КАК Шапка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бестОперацияСПриборомУчетаНП.ТочкиУчета КАК ТочкиУчета
	|			ПО Шапка.ДокРегистратор = ТочкиУчета.Ссылка
	|				И (ТочкиУчета.Ссылка = &Ссылка)) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг.СоставляющиеУслуг КАК энргВидыУслугСоставляющиеУслуг
	|		ПО ВложенныйЗапрос.Услуга = энргВидыУслугСоставляющиеУслуг.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТочкиВводаПрибора.Организация КАК Организация,
	|	ТочкиВводаПрибора.ПериодНачисления КАК ПериодНачисления,
	|	ТочкиВводаПрибора.Район КАК Район,
	|	ТочкиВводаПрибора.ТочкаУчета КАК ТочкаУчета,
	|	бестОперацияСПриборомУчетаНППриборыУзловУчета.ПриборУчета КАК ПриборУчета,
	|	ТочкиВводаПрибора.ПриборУчета КАК УзелУчета
	|ПОМЕСТИТЬ ПриборыУзловУчета
	|ИЗ
	|	ТочкиВводаПрибора КАК ТочкиВводаПрибора
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бестОперацияСПриборомУчетаНП.ПриборыУзловУчета КАК бестОперацияСПриборомУчетаНППриборыУзловУчета
	|		ПО (бестОперацияСПриборомУчетаНППриборыУзловУчета.Ссылка = &Ссылка)
	|			И ТочкиВводаПрибора.IDСтроки = бестОперацияСПриборомУчетаНППриборыУзловУчета.IDСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТочкиВводаПрибора.Организация КАК Организация,
	|	ТочкиВводаПрибора.ПериодНачисления КАК ПериодНачисления,
	|	ТочкиВводаПрибора.Район КАК Район,
	|	ТочкиВводаПрибора.ТочкаУчета КАК ТочкаУчета,
	|	бестОперацияСПриборомУчетаНППриборыУзловУчета.ПриборУчета КАК ПриборУчета,
	|	бестОперацияСПриборомУчетаНПШкалыПриборовУчета.Шкала КАК Шкала,
	|	бестОперацияСПриборомУчетаНППриборыУзловУчета.ВидДифференцированности КАК ВидДифференцированности,
	|	ТочкиВводаПрибора.ПриборУчета КАК УзелУчета
	|ПОМЕСТИТЬ ШкалыПриборовУчета
	|ИЗ
	|	ТочкиВводаПрибора КАК ТочкиВводаПрибора
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бестОперацияСПриборомУчетаНП.ПриборыУзловУчета КАК бестОперацияСПриборомУчетаНППриборыУзловУчета
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бестОперацияСПриборомУчетаНП.ШкалыПриборовУчета КАК бестОперацияСПриборомУчетаНПШкалыПриборовУчета
	|			ПО бестОперацияСПриборомУчетаНППриборыУзловУчета.IDСтрокиШкалы = бестОперацияСПриборомУчетаНПШкалыПриборовУчета.IDСтроки
	|				И (бестОперацияСПриборомУчетаНПШкалыПриборовУчета.Ссылка = &Ссылка)
	|		ПО (бестОперацияСПриборомУчетаНППриборыУзловУчета.Ссылка = &Ссылка)
	|			И ТочкиВводаПрибора.IDСтроки = бестОперацияСПриборомУчетаНППриборыУзловУчета.IDСтроки";

	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Организация");
	Измерения.Добавить("Район");
	Измерения.Добавить("Договор");
	Измерения.Добавить("ОбъектРасчета");
	Измерения.Добавить("МКД");
	Измерения.Добавить("Услуга");
	Измерения.Добавить("ТочкаУчета");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("ПриборВведен");
	Ресурсы.Добавить("ПриборУчета");
	Ресурсы.Добавить("КоэффициентПУ");
	Ресурсы.Добавить("ДатаСостоянияПрибора");
	Ресурсы.Добавить("МенялосьСостояниеПУ");
		
	Параметры.вставить("Измерения",Измерения);
	Параметры.вставить("ШкалыОтдельно",		Истина);
	Параметры.вставить("Ресурсы",Ресурсы);
	Параметры.вставить("ИзменяетСостояниеПУ",Истина);
	
	ЗаполнитьНомераПозицийНП(МВТ,Параметры,"ТочкиВводаПрибора"); 
	
	// Добавляем записи по шкалам
	Запрос.УстановитьПараметр("ДатаРегистратора", Параметры.ДатаДок);
	Запрос.Текст 		=
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НомераПозиций.Организация КАК Организация,
	|	НомераПозиций.ПериодНачисления КАК ПериодНачисления,
	|	НомераПозиций.Район КАК Район,
	|	НомераПозиций.Договор КАК Договор,
	|	НомераПозиций.ОбъектРасчета КАК ОбъектРасчета,
	|	НомераПозиций.МКД КАК МКД,
	|	НомераПозиций.ТочкаУчета КАК ТочкаУчета,
	|	ШкалыПриборовУчета.ПриборУчета КАК ПриборУчета,
	|	НомераПозиций.НомерПозиции + 1 КАК НомерПозиции,
	|	ЕСТЬNULL(ШкалыПриборовУчета.Шкала, ЗНАЧЕНИЕ(Справочник.энргШкалыПриборовУчета.ПустаяСсылка)) КАК Шкала,
	|	&ДатаРегистратора КАК ДатаРегистратора,
	|	&Ссылка КАК ДокРегистратор,
	|	ЕСТЬNULL(ШкалыПриборовУчета.ВидДифференцированности, ЗНАЧЕНИЕ(Справочник.энргВидыДифференцированности.ПустаяСсылка)) КАК ВидДифференцированности	
	|ИЗ
	|	НомераПозицийТочкиВводаПрибора КАК НомераПозиций
	|		ЛЕВОЕ СОЕДИНЕНИЕ ШкалыПриборовУчета КАК ШкалыПриборовУчета
	|		ПО НомераПозиций.ТочкаУчета = ШкалыПриборовУчета.ТочкаУчета
	|		И НомераПозиций.ПриборУчета = ШкалыПриборовУчета.УзелУчета";

	
	// Добавляем записи по шкалам
	Результат  						= Запрос.Выполнить();
	ВыборкаШкалы 					= Результат.Выбрать();
	Пока ВыборкаШкалы.Следующий() цикл		
		СтрокаСтабПериодыШкалы		= Параметры.НаборСтабильныеПериодыШкалы.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСтабПериодыШкалы,ВыборкаШкалы);				
	КонецЦикла;
	
	// Добавляем записи по приборам узла учета
	Запрос.УстановитьПараметр("ДатаРегистратора", Параметры.ДатаДок);
	Запрос.Текст 		=
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НомераПозиций.Организация КАК Организация,
	|	НомераПозиций.ПериодНачисления КАК ПериодНачисления,
	|	НомераПозиций.Район КАК Район,
	|	НомераПозиций.Договор КАК Договор,
	|	НомераПозиций.ОбъектРасчета КАК ОбъектРасчета,
	|	НомераПозиций.ТочкаУчета КАК ТочкаУчета,
	|	ПриборыУзловУчета.ПриборУчета КАК ПриборУчета,
	|	НомераПозиций.НомерПозиции + 1 КАК НомерПозиции,
	|	&ДатаРегистратора КАК ДатаРегистратора,
	|	&Ссылка КАК ДокРегистратор,
	|	ИСТИНА КАК ПриборВведен
	|ИЗ
	|	НомераПозицийПриборыУзловУчетаТочкиВводаПрибора КАК НомераПозиций
	|		ЛЕВОЕ СОЕДИНЕНИЕ ШкалыПриборовУчета КАК ПриборыУзловУчета
	|		ПО НомераПозиций.ТочкаУчета = ПриборыУзловУчета.ТочкаУчета
	|			И НомераПозиций.ПриборУчета = ПриборыУзловУчета.УзелУчета";

	
	// Добавляем записи по приборам узла учета
	Результат  						= Запрос.Выполнить();
	ВыборкаПриборы 					= Результат.Выбрать();
	Пока ВыборкаПриборы.Следующий() цикл		
		СтрокаСтабПериодыПриборы	= Параметры.НаборСтабильныеПериодыПриборыУзловУчета.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСтабПериодыПриборы,ВыборкаПриборы);				
	КонецЦикла;

КонецПроцедуры

Процедура СтабПериодыНПАктВыводаПрибораУчета(Ссылка,Параметры)  
	ПарметрыЗапроса  	= параметры.ПараметрыЗапроса;	
	МВТ 			= Новый МенеджерВременныхТаблиц;
	Запрос  		= Новый Запрос;
	Запрос.УстановитьПараметр("ссылка",			ссылка);
	//Запрос.УстановитьПараметр("Абонент",		ПарметрыЗапроса.Абонент);
	Запрос.УстановитьПараметр("Район",			ПарметрыЗапроса.Район);
	Запрос.УстановитьПараметр("МоментВремени",	Параметры.МоментВремени);
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.Текст 	="ВЫБРАТЬ
	             	 |	бестОперацияСПриборомУчетаНП.ПериодНачисления КАК ПериодНачисления,
	             	 |	бестОперацияСПриборомУчетаНП.Район КАК Район,
	             	 |	бестОперацияСПриборомУчетаНП.Ссылка КАК ДокРегистратор,
	             	 |	бестОперацияСПриборомУчетаНП.Дата КАК ДатаРегистратора,
	             	 |	бестОперацияСПриборомУчетаНП.Организация КАК Организация,
	             	 |	бестОперацияСПриборомУчетаНП.Договор КАК Договор
	             	 |ПОМЕСТИТЬ Шапка
	             	 |ИЗ
	             	 |	Документ.бестОперацияСПриборомУчетаНП КАК бестОперацияСПриборомУчетаНП
	             	 |ГДЕ
	             	 |	бестОперацияСПриборомУчетаНП.Ссылка = &Ссылка
	             	 |;
	             	 |
	             	 |////////////////////////////////////////////////////////////////////////////////
	             	 |ВЫБРАТЬ
	             	 |	Шапка.ПериодНачисления КАК ПериодНачисления,
	             	 |	Шапка.Район КАК Район,
	             	 |	бестОперацияСПриборомУчетаНПТочкиУчета.Услуга КАК Услуга,
	             	 |	бестОперацияСПриборомУчетаНПТочкиУчета.ТочкаУчета КАК ТочкаУчета,
	             	 |	Шапка.ДокРегистратор КАК ДокРегистратор,
	             	 |	Шапка.ДатаРегистратора КАК ДатаРегистратора,
	             	 |	ЛОЖЬ КАК ПриборВведен,
	             	 |	Шапка.Организация КАК Организация,
	             	 |	Шапка.Договор КАК Договор,
	             	 |	бестОперацияСПриборомУчетаНПТочкиУчета.ОбъектРасчета КАК ОбъектРасчета,
	             	 |	бестОперацияСПриборомУчетаНПТочкиУчета.ОбъектРасчета.МКД КАК ОбъектРасчетаМКД
	             	 |ПОМЕСТИТЬ УслугиВывода
	             	 |ИЗ
	             	 |	Шапка КАК Шапка
	             	 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бестОперацияСПриборомУчетаНП.ТочкиУчета КАК бестОперацияСПриборомУчетаНПТочкиУчета
	             	 |		ПО Шапка.ДокРегистратор = бестОперацияСПриборомУчетаНПТочкиУчета.Ссылка
	             	 |;
	             	 |
	             	 |////////////////////////////////////////////////////////////////////////////////
	             	 |ВЫБРАТЬ
	             	 |	УслугиВывода.ПериодНачисления КАК ПериодНачисления,
	             	 |	УслугиВывода.Организация КАК Организация,
	             	 |	УслугиВывода.Район КАК Район,
	             	 |	УслугиВывода.Договор КАК Договор,
	             	 |	УслугиВывода.ОбъектРасчета КАК ОбъектРасчета,
	             	 |	ВЫБОР
	             	 |		КОГДА энргВидыУслугСоставляющиеУслуг.Ссылка ЕСТЬ NULL
	             	 |			ТОГДА УслугиВывода.Услуга
	             	 |		ИНАЧЕ энргВидыУслугСоставляющиеУслуг.Услуга
	             	 |	КОНЕЦ КАК Услуга,
	             	 |	УслугиВывода.ТочкаУчета КАК ТочкаУчета,
	             	 |	УслугиВывода.ДокРегистратор КАК ДокРегистратор,
	             	 |	УслугиВывода.ДатаРегистратора КАК ДатаРегистратора,
	             	 |	УслугиВывода.ПриборВведен КАК ПриборВведен,
	             	 |	УслугиВывода.ОбъектРасчетаМКД КАК МКД
	             	 |ПОМЕСТИТЬ ВыводПрибораУчета
	             	 |ИЗ
	             	 |	УслугиВывода КАК УслугиВывода
	             	 |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг.СоставляющиеУслуг КАК энргВидыУслугСоставляющиеУслуг
	             	 |		ПО УслугиВывода.Услуга = энргВидыУслугСоставляющиеУслуг.Ссылка";
	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Организация");
	Измерения.Добавить("Район");
	Измерения.Добавить("Договор");
	Измерения.Добавить("ОбъектРасчета");
	Измерения.Добавить("МКД");
	//Измерения.Добавить("Абонент");
	Измерения.Добавить("Услуга");
	Измерения.Добавить("ТочкаУчета");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("ПриборВведен");
		
	Параметры.вставить("Измерения",				Измерения);
	Параметры.вставить("Ресурсы",				Ресурсы);
	Параметры.вставить("ИзменяетСостояниеПУ",	Истина);

	ЗаполнитьНомераПозицийНП(МВТ,Параметры,"ВыводПрибораУчета"); 
	
КонецПроцедуры

Процедура СтабПериодыНПЗаменаПрибораУчета(Ссылка,Параметры)  
	ПарметрыЗапроса = Параметры.ПараметрыЗапроса;
	МВТ 			= Новый МенеджерВременныхТаблиц;
	Запрос  		= Новый Запрос;
	Запрос.УстановитьПараметр("ссылка",			ссылка);
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.Текст 	="ВЫБРАТЬ
	             	 |	бестОперацияСПриборомУчетаНП.ПериодНачисления КАК ПериодНачисления,
	             	 |	бестОперацияСПриборомУчетаНП.Район КАК Район,
	             	 |	бестОперацияСПриборомУчетаНП.Ссылка КАК ДокРегистратор,
	             	 |	бестОперацияСПриборомУчетаНП.Дата КАК ДатаРегистратора,
	             	 |	бестОперацияСПриборомУчетаНП.Организация КАК Организация,
	             	 |	бестОперацияСПриборомУчетаНП.Договор КАК Договор
	             	 |ПОМЕСТИТЬ Шапка
	             	 |ИЗ
	             	 |	Документ.бестОперацияСПриборомУчетаНП КАК бестОперацияСПриборомУчетаНП
	             	 |ГДЕ
	             	 |	бестОперацияСПриборомУчетаНП.Ссылка = &Ссылка
	             	 |;
	             	 |
	             	 |////////////////////////////////////////////////////////////////////////////////
	             	 |ВЫБРАТЬ
	             	 |	Шапка.ПериодНачисления КАК ПериодНачисления,
	             	 |	ТочкиУчета.Услуга КАК Услуга,
	             	 |	ТочкиУчета.ТочкаУчета КАК ТочкаУчета,
	             	 |	ЛОЖЬ КАК ПриборВведен,
	             	 |	ИСТИНА КАК МенялосьСостояниеПУ,
	             	 |	ИСТИНА КАК МенялосьСостояниеФормулы,
	             	 |	Шапка.Организация КАК Организация,
	             	 |	Шапка.Договор КАК Договор,
	             	 |	ТочкиУчета.ОбъектРасчета КАК ОбъектРасчета,
	             	 |	Шапка.Район КАК Район,
	             	 |	ТочкиУчета.ОбъектРасчета.МКД КАК МКД
	             	 |ПОМЕСТИТЬ УслугиВывода
	             	 |ИЗ
	             	 |	Шапка КАК Шапка
	             	 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бестОперацияСПриборомУчетаНП.ТочкиУчета КАК ТочкиУчета
	             	 |		ПО Шапка.ДокРегистратор = ТочкиУчета.Ссылка
	             	 |;
	             	 |
	             	 |////////////////////////////////////////////////////////////////////////////////
	             	 |ВЫБРАТЬ
	             	 |	Шапка.ПериодНачисления КАК ПериодНачисления,
	             	 |	Шапка.Район КАК Район,
	             	 |	ТочкиУчета.Услуга КАК Услуга,
	             	 |	ТочкиУчета.ТочкаУчета КАК ТочкаУчета,
	             	 |	ТочкиУчета.УзелУчета КАК ПриборУчета,
	             	 |	ТочкиУчета.КоэффициентПУ КАК КоэффициентПУ,
	             	 |	ИСТИНА КАК ПриборВведен,
	             	 |	ИСТИНА КАК МенялосьСостояниеПУ,
	             	 |	ИСТИНА КАК МенялосьСостояниеФормулы,
	             	 |	Шапка.Организация КАК Организация,
	             	 |	Шапка.Договор КАК Договор,
	             	 |	ТочкиУчета.ОбъектРасчета КАК ОбъектРасчета,
	             	 |	ТочкиУчета.ОбъектРасчета.МКД КАК МКД,
	             	 |	ТочкиУчета.IDСтроки КАК IDСтроки,
	             	 |	ТочкиУчета.ПриборУчета КАК ПриборУчетаВвод
	             	 |ПОМЕСТИТЬ УслугиВвода
	             	 |ИЗ
	             	 |	Шапка КАК Шапка
	             	 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бестОперацияСПриборомУчетаНП.ТочкиУчета КАК ТочкиУчета
	             	 |		ПО Шапка.ДокРегистратор = ТочкиУчета.Ссылка
	             	 |;
	             	 |
	             	 |////////////////////////////////////////////////////////////////////////////////
	             	 |ВЫБРАТЬ РАЗЛИЧНЫЕ
	             	 |	УслугиВывода.ПериодНачисления КАК ПериодНачисления,
	             	 |	УслугиВывода.Организация КАК Организация,
	             	 |	УслугиВывода.Договор КАК Договор,
	             	 |	УслугиВывода.ОбъектРасчета КАК ОбъектРасчета,
	             	 |	ВЫБОР
	             	 |		КОГДА энргВидыУслугСоставляющиеУслуг.Ссылка ЕСТЬ NULL
	             	 |			ТОГДА УслугиВывода.Услуга
	             	 |		ИНАЧЕ энргВидыУслугСоставляющиеУслуг.Услуга
	             	 |	КОНЕЦ КАК Услуга,
	             	 |	УслугиВывода.ТочкаУчета КАК ТочкаУчета,
	             	 |	УслугиВывода.ПриборВведен КАК ПриборВведен,
	             	 |	ИСТИНА КАК МенялосьСостояниеПУ,
	             	 |	УслугиВывода.МКД КАК МКД,
	             	 |	УслугиВывода.Район КАК Район
	             	 |ПОМЕСТИТЬ ВыводПрибораУчета
	             	 |ИЗ
	             	 |	УслугиВывода КАК УслугиВывода
	             	 |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг.СоставляющиеУслуг КАК энргВидыУслугСоставляющиеУслуг
	             	 |		ПО УслугиВывода.Услуга = энргВидыУслугСоставляющиеУслуг.Ссылка
	             	 |;
	             	 |
	             	 |////////////////////////////////////////////////////////////////////////////////
	             	 |ВЫБРАТЬ РАЗЛИЧНЫЕ
	             	 |	УслугиВвода.ПериодНачисления КАК ПериодНачисления,
	             	 |	УслугиВвода.Организация КАК Организация,
	             	 |	УслугиВвода.Район КАК Район,
	             	 |	УслугиВвода.Договор КАК Договор,
	             	 |	УслугиВвода.ОбъектРасчета КАК ОбъектРасчета,
	             	 |	ВЫБОР
	             	 |		КОГДА энргВидыУслугСоставляющиеУслуг.Ссылка ЕСТЬ NULL
	             	 |			ТОГДА УслугиВвода.Услуга
	             	 |		ИНАЧЕ энргВидыУслугСоставляющиеУслуг.Услуга
	             	 |	КОНЕЦ КАК Услуга,
	             	 |	УслугиВвода.ТочкаУчета КАК ТочкаУчета,
	             	 |	УслугиВвода.ПриборУчета КАК ПриборУчета,
	             	 |	УслугиВвода.КоэффициентПУ КАК КоэффициентПУ,
	             	 |	УслугиВвода.ПриборВведен КАК ПриборВведен,
	             	 |	ИСТИНА КАК МенялосьСостояниеПУ,
	             	 |	УслугиВвода.МКД КАК МКД,
	             	 |	УслугиВвода.IDСтроки КАК IDСтроки,
	             	 |	УслугиВвода.ПриборУчетаВвод КАК ПриборУчетаВвод
	             	 |ПОМЕСТИТЬ ВводПрибораУчета
	             	 |ИЗ
	             	 |	УслугиВвода КАК УслугиВвода
	             	 |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг.СоставляющиеУслуг КАК энргВидыУслугСоставляющиеУслуг
	             	 |		ПО УслугиВвода.Услуга = энргВидыУслугСоставляющиеУслуг.Ссылка
	             	 |;
	             	 |
	             	 |////////////////////////////////////////////////////////////////////////////////
	             	 |ВЫБРАТЬ
	             	 |	ТочкиВводаПрибора.Организация КАК Организация,
	             	 |	ТочкиВводаПрибора.ПериодНачисления КАК ПериодНачисления,
	             	 |	ТочкиВводаПрибора.Район КАК Район,
	             	 |	ТочкиВводаПрибора.ТочкаУчета КАК ТочкаУчета,
	             	 |	бестОперацияСПриборомУчетаНПШкалыПриборовУчета.Шкала КАК Шкала,
	             	 |	бестОперацияСПриборомУчетаНПШкалыПриборовУчета.ВидДифференцированности КАК ВидДифференцированности,
	             	 |	ТочкиВводаПрибора.ПриборУчета КАК УзелУчета,
	             	 |	ТочкиВводаПрибора.ПриборУчетаВвод КАК ПриборУчета
	             	 |ПОМЕСТИТЬ ШкалыПриборовУчета
	             	 |ИЗ
	             	 |	ВводПрибораУчета КАК ТочкиВводаПрибора
	             	 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бестОперацияСПриборомУчетаНП.ШкалыПриборовУчета КАК бестОперацияСПриборомУчетаНПШкалыПриборовУчета
	             	 |		ПО (бестОперацияСПриборомУчетаНПШкалыПриборовУчета.Ссылка = &Ссылка)
	             	 |			И ТочкиВводаПрибора.IDСтроки = бестОперацияСПриборомУчетаНПШкалыПриборовУчета.IDСтрокиТочкиУчета
	             	 |;
	             	 |
	             	 |////////////////////////////////////////////////////////////////////////////////
	             	 |ВЫБРАТЬ РАЗЛИЧНЫЕ
	             	 |	ВводПрибораУчета.ПериодНачисления КАК ПериодНачисления,
	             	 |	ВводПрибораУчета.Организация КАК Организация,
	             	 |	ВводПрибораУчета.Район КАК Район,
	             	 |	ВводПрибораУчета.Договор КАК Договор,
	             	 |	ВводПрибораУчета.ОбъектРасчета КАК ОбъектРасчета,
	             	 |	ВводПрибораУчета.Услуга КАК Услуга,
	             	 |	ВводПрибораУчета.ТочкаУчета КАК ТочкаУчета,
	             	 |	ВводПрибораУчета.ПриборУчета КАК ПриборУчета,
	             	 |	ВводПрибораУчета.КоэффициентПУ КАК КоэффициентПУ,
	             	 |	ВводПрибораУчета.ПриборВведен КАК ПриборВведен,
	             	 |	ВводПрибораУчета.МенялосьСостояниеПУ КАК МенялосьСостояниеПУ,
	             	 |	ВводПрибораУчета.МКД КАК МКД
	             	 |ПОМЕСТИТЬ ВводПрибораУчетаУзлы
	             	 |ИЗ
	             	 |	ВводПрибораУчета КАК ВводПрибораУчета";
					 
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Организация");
	Измерения.Добавить("Район");
	Измерения.Добавить("МКД");
	//Измерения.Добавить("Абонент");
	Измерения.Добавить("Договор");
	Измерения.Добавить("ОбъектРасчета");
	Измерения.Добавить("Услуга");
	Измерения.Добавить("ТочкаУчета");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("ПриборВведен");
	Ресурсы.Добавить("МенялосьСостояниеПУ");
		
	Параметры.вставить("Измерения",				Измерения);
	Параметры.вставить("Ресурсы",				Ресурсы);
	Параметры.вставить("ИзменяетСостояниеПУ",	Истина);

	ЗаполнитьНомераПозицийНП(МВТ,Параметры,"ВыводПрибораУчета");  	
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("ПриборВведен");
	Ресурсы.Добавить("ПриборУчета");
	Ресурсы.Добавить("КоэффициентПУ");
	Ресурсы.Добавить("МенялосьСостояниеПУ");
	Параметры.вставить("ШкалыОтдельно",			Истина);
	Параметры.вставить("УзлыОтдельно",			Истина);

		
	Параметры.Ресурсы = Ресурсы;
	
	ЗаполнитьНомераПозицийНП(МВТ,Параметры,"ВводПрибораУчетаУзлы",истина); 
	
	
	Запрос.УстановитьПараметр("ДатаРегистратора", Параметры.ДатаДок);
	Запрос.Текст 		=
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НомераПозиций.Организация КАК Организация,
	|	НомераПозиций.ПериодНачисления КАК ПериодНачисления,
	|	НомераПозиций.Район КАК Район,
	|	НомераПозиций.Договор КАК Договор,
	|	НомераПозиций.ОбъектРасчета КАК ОбъектРасчета,
	|	НомераПозиций.МКД КАК МКД,
	|	НомераПозиций.ТочкаУчета КАК ТочкаУчета,
	|	ШкалыПриборовУчета.ПриборУчета КАК ПриборУчета,
	|	НомераПозиций.НомерПозиции + 2 КАК НомерПозиции,
	|	ЕСТЬNULL(ШкалыПриборовУчета.Шкала, ЗНАЧЕНИЕ(Справочник.энргШкалыПриборовУчета.ПустаяСсылка)) КАК Шкала,
	|	&ДатаРегистратора КАК ДатаРегистратора,
	|	&Ссылка КАК ДокРегистратор,
	|	ЕСТЬNULL(ШкалыПриборовУчета.ВидДифференцированности, ЗНАЧЕНИЕ(Справочник.энргВидыДифференцированности.ПустаяСсылка)) КАК ВидДифференцированности	
	|ИЗ
	|	НомераПозицийВводПрибораУчетаУзлы КАК НомераПозиций
	|		ЛЕВОЕ СОЕДИНЕНИЕ ШкалыПриборовУчета КАК ШкалыПриборовУчета
	|		ПО НомераПозиций.ТочкаУчета = ШкалыПриборовУчета.ТочкаУчета
	|		И НомераПозиций.ПриборУчета = ШкалыПриборовУчета.УзелУчета";

	
	// Добавляем записи по шкалам
	Результат  						= Запрос.Выполнить();
	ВыборкаШкалы 					= Результат.Выбрать();
	Пока ВыборкаШкалы.Следующий() цикл		
		СтрокаСтабПериодыШкалы		= Параметры.НаборСтабильныеПериодыШкалы.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСтабПериодыШкалы,ВыборкаШкалы);				
	КонецЦикла;
	
	// Добавляем записи по приборам узла учета
	Запрос.УстановитьПараметр("ДатаРегистратора", Параметры.ДатаДок);
	Запрос.Текст 		=
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НомераПозиций.Организация КАК Организация,
	|	НомераПозиций.ПериодНачисления КАК ПериодНачисления,
	|	НомераПозиций.Район КАК Район,
	|	НомераПозиций.Договор КАК Договор,
	|	НомераПозиций.ОбъектРасчета КАК ОбъектРасчета,
	|	НомераПозиций.ТочкаУчета КАК ТочкаУчета,
	|	ПриборыУзловУчета.ПриборУчета КАК ПриборУчета,
	|	НомераПозиций.НомерПозиции + 2 КАК НомерПозиции,
	|	&ДатаРегистратора КАК ДатаРегистратора,
	|	&Ссылка КАК ДокРегистратор,
	|	ИСТИНА КАК ПриборВведен,
	|	ПриборыУзловУчета.УзелУчета КАК УзелУчета
	|ИЗ
	|	НомераПозицийВводПрибораУчетаУзлы КАК НомераПозиций
	|		ЛЕВОЕ СОЕДИНЕНИЕ ШкалыПриборовУчета КАК ПриборыУзловУчета
	|		ПО НомераПозиций.ТочкаУчета = ПриборыУзловУчета.ТочкаУчета
	|			И НомераПозиций.ПриборУчета = ПриборыУзловУчета.УзелУчета";

	
	// Добавляем записи по приборам узла учета
	Результат  						= Запрос.Выполнить();
	ВыборкаПриборы 					= Результат.Выбрать();
	Пока ВыборкаПриборы.Следующий() цикл		
		СтрокаСтабПериодыПриборы	= Параметры.НаборСтабильныеПериодыПриборыУзловУчета.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСтабПериодыПриборы,ВыборкаПриборы);				
	КонецЦикла;

КонецПроцедуры

Процедура СтабПериодыНПУстановитьЗначениеПлощади(ссылка,Параметры) 
	
	МВТ  		= Новый МенеджерВременныхТаблиц;
	ПараметрыЗапроса 	= Параметры.ПараметрыЗапроса;
	Запрос  	= Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.УстановитьПараметр("ссылка",			ссылка);

	Запрос.Текст ="ВЫБРАТЬ
	              |	бестУстановитьЗначениеПлощадиНП.ПериодНачисления КАК ПериодНачисления,
	              |	бестУстановитьЗначениеПлощадиНП.Район КАК Район,
	              |	бестУстановитьЗначениеПлощадиНП.Ссылка КАК Ссылка,
	              |	бестУстановитьЗначениеПлощадиНП.ОбъектРасчета КАК ОбъектРасчета,
	              |	бестУстановитьЗначениеПлощадиНП.Организация КАК Организация,
	              |	бестУстановитьЗначениеПлощадиНП.Договор КАК Договор,
	              |	бестУстановитьЗначениеПлощадиНП.ОбъектРасчета.МКД КАК ОбъектРасчетаМКД
	              |ПОМЕСТИТЬ Шапка
	              |ИЗ
	              |	Документ.бестУстановитьЗначениеПлощадиНП КАК бестУстановитьЗначениеПлощадиНП
	              |ГДЕ
	              |	бестУстановитьЗначениеПлощадиНП.Ссылка = &Ссылка
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	Шапка.ПериодНачисления КАК ПериодНачисления,
	              |	Шапка.Район КАК Район,
	              |	ЗНАЧЕНИЕ(Перечисление.энргВидыПлощадей.ОбщаяПлощадь) КАК ВидПлощади,
	              |	бестУстановитьЗначениеПлощадиПНПлощади.Площадь КАК Значение,
	              |	Шапка.ОбъектРасчета КАК ОбъектРасчета,
	              |	Шапка.Организация КАК Организация,
	              |	Шапка.Договор КАК Договор,
	              |	Шапка.ОбъектРасчетаМКД КАК ОбъектРасчетаМКД
	              |ПОМЕСТИТЬ ВидыПлощадей
	              |ИЗ
	              |	Шапка КАК Шапка
	              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бестУстановитьЗначениеПлощадиНП.Площади КАК бестУстановитьЗначениеПлощадиПНПлощади
	              |		ПО Шапка.Ссылка = бестУстановитьЗначениеПлощадиПНПлощади.Ссылка
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ВидыПлощадей.ПериодНачисления КАК ПериодНачисления,
	              |	ВидыПлощадей.Район КАК Район,
	              |	энргВидыУслуг.Ссылка КАК Услуга,
	              |	ВидыПлощадей.Значение КАК ЗначениеПлощади,
	              |	ВидыПлощадей.ОбъектРасчета КАК ОбъектРасчета,
	              |	ВидыПлощадей.Организация КАК Организация,
	              |	ВидыПлощадей.Договор КАК Договор,
	              |	ВидыПлощадей.ОбъектРасчетаМКД КАК МКД
	              |ПОМЕСТИТЬ ДанныеПлощадей
	              |ИЗ
	              |	ВидыПлощадей КАК ВидыПлощадей
	              |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг КАК энргВидыУслуг
	              |		ПО (ВидыПлощадей.ВидПлощади = энргВидыУслуг.ВидПлощади)";	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Организация");
	Измерения.Добавить("Район");
	Измерения.Добавить("МКД");
	//Измерения.Добавить("Абонент");
	Измерения.Добавить("Договор");
	Измерения.Добавить("ОбъектРасчета");
	Измерения.Добавить("Услуга");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("ЗначениеПлощади");
	
	Параметры.вставить("Измерения",Измерения);
	Параметры.вставить("Ресурсы",Ресурсы);
	
	ЗаполнитьНомераПозицийНП(МВТ,Параметры,"ДанныеПлощадей");
	
	// изменяем номер позиции для зависимых точек если они есть
	МВТ  		= Новый МенеджерВременныхТаблиц;
	Запрос  	= Новый Запрос;
	
	
	МассивТочек 		= Параметры.НаборПоследнихНомеров.выгрузить().ВыгрузитьКолонку("ТочкаУчета");
	
	ПараметрыЗапроса 	= Параметры.ПараметрыЗапроса;
	для каждого ПараметрЗапроса из ПараметрыЗапроса цикл
		Запрос.УстановитьПараметр(ПараметрЗапроса.ключ,ПараметрЗапроса.Значение);
	КонецЦикла;
	Запрос.УстановитьПараметр("МоментВремени",		Параметры.МоментВремени);
	Запрос.УстановитьПараметр("ПериодНачисления",	Параметры.ПериодНачисления);
	Запрос.УстановитьПараметр("МассивТочек",		МассивТочек);
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Текст ="ВЫБРАТЬ
	       |	бестРасчетныеСпособыТочекУчетаНПСрезПоследних.Период КАК Период,
	       |	бестРасчетныеСпособыТочекУчетаНПСрезПоследних.Регистратор КАК Регистратор,
	       |	бестРасчетныеСпособыТочекУчетаНПСрезПоследних.Район КАК Район,
	       |	бестРасчетныеСпособыТочекУчетаНПСрезПоследних.ТочкаУчета КАК ТочкаУчета,
	       |	бестРасчетныеСпособыТочекУчетаНПСрезПоследних.ОбъектРасчета КАК ОбъектРасчета,
	       |	бестРасчетныеСпособыТочекУчетаНПСрезПоследних.Договор КАК Договор,
	       |	бестРасчетныеСпособыТочекУчетаНПСрезПоследних.Организация КАК Организация,
	       |	бестРасчетныеСпособыТочекУчетаНПСрезПоследних.ОбъектРасчета.МКД КАК МКД
	       |ПОМЕСТИТЬ ТочкиПоФормуле
	       |ИЗ
	       |	РегистрСведений.бестРасчетныеСпособыТочекУчетаНП.СрезПоследних(
	       |			&МоментВремени,
	       |			Организация = &Организация
	       |				И Район = &Район
	       |				И Договор = &Договор) КАК бестРасчетныеСпособыТочекУчетаНПСрезПоследних
	       |ГДЕ
	       |	бестРасчетныеСпособыТочекУчетаНПСрезПоследних.РасчетныйСпособ
	       |;
	       |
	       |////////////////////////////////////////////////////////////////////////////////
	       |ВЫБРАТЬ РАЗЛИЧНЫЕ
	       |	ТочкиПоФормуле.Район КАК Район,
	       |	бестФормулыРасчетаТочекУчетаНП.УслугаСубабонента КАК ТочкаИсточник,
	       |	ТочкиПоФормуле.ОбъектРасчета КАК ОбъектРасчета,
	       |	ТочкиПоФормуле.Договор КАК Договор,
	       |	ТочкиПоФормуле.Организация КАК Организация,
	       |	ТочкиПоФормуле.МКД КАК МКД
	       |ПОМЕСТИТЬ ЗависимыеТочки
	       |ИЗ
	       |	ТочкиПоФормуле КАК ТочкиПоФормуле
	       |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бестФормулыРасчетаТочекУчетаНП КАК бестФормулыРасчетаТочекУчетаНП
	       |		ПО ТочкиПоФормуле.Период = бестФормулыРасчетаТочекУчетаНП.Период
	       |			И ТочкиПоФормуле.Регистратор = бестФормулыРасчетаТочекУчетаНП.Регистратор
	       |			И ТочкиПоФормуле.Район = бестФормулыРасчетаТочекУчетаНП.Район
	       |			И ТочкиПоФормуле.Организация = бестФормулыРасчетаТочекУчетаНП.Организация
	       |			И ТочкиПоФормуле.Договор = бестФормулыРасчетаТочекУчетаНП.Договор
	       |			И ТочкиПоФормуле.ОбъектРасчета = бестФормулыРасчетаТочекУчетаНП.ОбъектРасчета
	       |			И ТочкиПоФормуле.ТочкаУчета = бестФормулыРасчетаТочекУчетаНП.ГоловнаяТочкаУчета
	       |;
	       |
	       |////////////////////////////////////////////////////////////////////////////////
	       |ВЫБРАТЬ
	       |	бестУслугиТочекУчетаНПСрезПоследних.Район КАК Район,
	       |	бестУслугиТочекУчетаНПСрезПоследних.ТочкаУчета КАК ТочкаУчета,
	       |	бестУслугиТочекУчетаНПСрезПоследних.Услуга КАК Услуга,
	       |	бестУслугиТочекУчетаНПСрезПоследних.Договор КАК Договор,
	       |	бестУслугиТочекУчетаНПСрезПоследних.ОбъектРасчета КАК ОбъектРасчета,
	       |	бестУслугиТочекУчетаНПСрезПоследних.Организация КАК Организация
	       |ПОМЕСТИТЬ УслугиТочекАбонента
	       |ИЗ
	       |	РегистрСведений.бестУслугиТочекУчетаНП.СрезПоследних(
	       |			&МоментВремени,
	       |			Организация = &Организация
	       |				И Район = &Район
	       |				И Договор = &Договор) КАК бестУслугиТочекУчетаНПСрезПоследних
	       |;
	       |
	       |////////////////////////////////////////////////////////////////////////////////
	       |ВЫБРАТЬ
	       |	&ПериодНачисления КАК ПериодНачисления,
	       |	ЗависимыеТочки.Район КАК Район,
	       |	УслугиТочекАбонента.Услуга КАК Услуга,
	       |	ЗависимыеТочки.ТочкаИсточник КАК ТочкаИсточник,
	       |	ЗависимыеТочки.ОбъектРасчета КАК ОбъектРасчета,
	       |	ЗависимыеТочки.Договор КАК Договор,
	       |	ЗависимыеТочки.Организация КАК Организация,
	       |	ЗависимыеТочки.МКД КАК МКД
	       |ПОМЕСТИТЬ УслугиЗависимыхТочекВозможноСоставные
	       |ИЗ
	       |	ЗависимыеТочки КАК ЗависимыеТочки
	       |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ УслугиТочекАбонента КАК УслугиТочекАбонента
	       |		ПО ЗависимыеТочки.ТочкаИсточник = УслугиТочекАбонента.ТочкаУчета
	       |			И ЗависимыеТочки.Район = УслугиТочекАбонента.Район
	       |			И ЗависимыеТочки.Организация = УслугиТочекАбонента.Организация
	       |			И ЗависимыеТочки.Договор = УслугиТочекАбонента.ОбъектРасчета
	       |			И ЗависимыеТочки.ОбъектРасчета = УслугиТочекАбонента.ОбъектРасчета
	       |;
	       |
	       |////////////////////////////////////////////////////////////////////////////////
	       |ВЫБРАТЬ
	       |	УслугиЗависимыхТочекВозможноСоставные.ПериодНачисления КАК ПериодНачисления,
	       |	УслугиЗависимыхТочекВозможноСоставные.Район КАК Район,
	       |	ВЫБОР
	       |		КОГДА энргВидыУслугСоставляющиеУслуг.Ссылка ЕСТЬ NULL
	       |			ТОГДА УслугиЗависимыхТочекВозможноСоставные.Услуга
	       |		ИНАЧЕ энргВидыУслугСоставляющиеУслуг.Услуга
	       |	КОНЕЦ КАК Услуга,
	       |	УслугиЗависимыхТочекВозможноСоставные.ТочкаИсточник КАК ТочкаУчета,
	       |	УслугиЗависимыхТочекВозможноСоставные.ОбъектРасчета КАК ОбъектРасчета,
	       |	УслугиЗависимыхТочекВозможноСоставные.Договор КАК Договор,
	       |	УслугиЗависимыхТочекВозможноСоставные.Организация КАК Организация,
	       |	УслугиЗависимыхТочекВозможноСоставные.МКД КАК МКД
	       |ПОМЕСТИТЬ УслугиТочекУчета
	       |ИЗ
	       |	УслугиЗависимыхТочекВозможноСоставные КАК УслугиЗависимыхТочекВозможноСоставные
	       |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг.СоставляющиеУслуг КАК энргВидыУслугСоставляющиеУслуг
	       |		ПО УслугиЗависимыхТочекВозможноСоставные.Услуга = энргВидыУслугСоставляющиеУслуг.Ссылка
	       |ГДЕ
	       |	НЕ УслугиЗависимыхТочекВозможноСоставные.ТочкаИсточник В (&МассивТочек)";
	Запрос.Текст = Текст;
	Запрос.Выполнить();
	Измерения = Новый Массив;
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Организация");
	Измерения.Добавить("Район");
	Измерения.Добавить("МКД");
	//Измерения.Добавить("Абонент");
	Измерения.Добавить("Договор");
	Измерения.Добавить("ОбъектРасчета");
	Измерения.Добавить("Услуга");
	Измерения.Добавить("ТочкаУчета");
	
	Ресурсы = Новый Массив;
		
	Параметры.вставить("Измерения",Измерения);
	Параметры.вставить("Ресурсы",Ресурсы);
	
	ЗаполнитьНомераПозицийНП(МВТ,Параметры,"УслугиТочекУчета"); 
	
КонецПроцедуры

Процедура СтабПериодыНПУстановитьНагрузку(ссылка,Параметры) 
	
	МВТ  		= Новый МенеджерВременныхТаблиц;
	ПараметрыЗапроса 	= Параметры.ПараметрыЗапроса;
	Запрос  	= Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.УстановитьПараметр("ссылка",			ссылка);

	Запрос.Текст ="ВЫБРАТЬ
	              |	бестУстановитьНагрузкуПоУслугам.ПериодНачисления КАК ПериодНачисления,
	              |	бестУстановитьНагрузкуПоУслугам.Район КАК Район,
	              |	бестУстановитьНагрузкуПоУслугам.Ссылка КАК Ссылка,
	              |	бестУстановитьНагрузкуПоУслугам.ОбъектРасчета КАК ОбъектРасчета,
	              |	бестУстановитьНагрузкуПоУслугам.Организация КАК Организация,
	              |	бестУстановитьНагрузкуПоУслугам.Договор КАК Договор
	              |ПОМЕСТИТЬ Шапка
	              |ИЗ
	              |	Документ.бестУстановитьНагрузкуПоУслугам КАК бестУстановитьНагрузкуПоУслугам
	              |ГДЕ
	              |	бестУстановитьНагрузкуПоУслугам.Ссылка = &Ссылка
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	Шапка.ПериодНачисления КАК ПериодНачисления,
	              |	Шапка.Район КАК Район,
	              |	Шапка.ОбъектРасчета КАК ОбъектРасчета,
	              |	Шапка.Организация КАК Организация,
	              |	Шапка.Договор КАК Договор,
	              |	бестУстановитьНагрузкуПоУслугамНагрузки.Услуга КАК Услуга,
	              |	ВЫБОР
	              |		КОГДА бестУстановитьНагрузкуПоУслугамНагрузки.ВидНагрузки = ЗНАЧЕНИЕ(Перечисление.бестВидыПериодов.Часы)
	              |			ТОГДА бестУстановитьНагрузкуПоУслугамНагрузки.Нагрузка
	              |		ИНАЧЕ 0
	              |	КОНЕЦ КАК ЗначениеНагрузки,
	              |	Шапка.ОбъектРасчета.МКД КАК МКД,
	              |	ВЫБОР
	              |		КОГДА бестУстановитьНагрузкуПоУслугамНагрузки.ВидНагрузки = ЗНАЧЕНИЕ(Перечисление.бестВидыПериодов.Месяц)
	              |			ТОГДА бестУстановитьНагрузкуПоУслугамНагрузки.Нагрузка
	              |		ИНАЧЕ 0
	              |	КОНЕЦ КАК ЗначениеМесячнойНагрузки
	              |ПОМЕСТИТЬ ДанныеПоНагрузке
	              |ИЗ
	              |	Шапка КАК Шапка
	              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бестУстановитьНагрузкуПоУслугам.Нагрузки КАК бестУстановитьНагрузкуПоУслугамНагрузки
	              |		ПО Шапка.Ссылка = бестУстановитьНагрузкуПоУслугамНагрузки.Ссылка";	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Организация");
	Измерения.Добавить("Район");
	Измерения.Добавить("Договор");
	Измерения.Добавить("ОбъектРасчета");
	Измерения.Добавить("МКД");
	Измерения.Добавить("Услуга"); 
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("ЗначениеНагрузки");
	Ресурсы.Добавить("ЗначениеМесячнойНагрузки");
	
	Параметры.вставить("Измерения",Измерения);
	Параметры.вставить("Ресурсы",Ресурсы);
	
	ЗаполнитьНомераПозицийНП(МВТ,Параметры,"ДанныеПоНагрузке");
	
КонецПроцедуры

Процедура СтабПериодыНПУстановитьПотребителейГВС(ссылка,Параметры) 
	
	МВТ  		= Новый МенеджерВременныхТаблиц;
	ПараметрыЗапроса 	= Параметры.ПараметрыЗапроса;
	Запрос  	= Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.УстановитьПараметр("ссылка",			ссылка);

	Запрос.Текст ="ВЫБРАТЬ
	              |	бестУстановитьПотребителейГВС.ПериодНачисления КАК ПериодНачисления,
	              |	бестУстановитьПотребителейГВС.Район КАК Район,
	              |	бестУстановитьПотребителейГВС.Ссылка КАК Ссылка,
	              |	бестУстановитьПотребителейГВС.ОбъектРасчета КАК ОбъектРасчета,
	              |	бестУстановитьПотребителейГВС.Организация КАК Организация,
	              |	бестУстановитьПотребителейГВС.Договор КАК Договор
	              |ПОМЕСТИТЬ Шапка
	              |ИЗ
	              |	Документ.бестУстановитьПотребителейГВС КАК бестУстановитьПотребителейГВС
	              |ГДЕ
	              |	бестУстановитьПотребителейГВС.Ссылка = &Ссылка
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	Шапка.ПериодНачисления КАК ПериодНачисления,
	              |	Шапка.Район КАК Район,
	              |	Шапка.ОбъектРасчета КАК ОбъектРасчета,
	              |	Шапка.Организация КАК Организация,
	              |	Шапка.Договор КАК Договор,
	              |	ВЫБОР
	              |		КОГДА бестУстановитьПотребителейГВСПотребителиГВС.ТипНормы = ЗНАЧЕНИЕ(Перечисление.бестВидыПериодов.Часы)
	              |			ТОГДА бестУстановитьПотребителейГВСПотребителиГВС.КоличествоРабочихЧасовВДень * бестТипыПотребителейГВС.НормаВЧас * бестУстановитьПотребителейГВСПотребителиГВС.Количество
	              |		ИНАЧЕ бестТипыПотребителейГВС.НормаВСутки * бестУстановитьПотребителейГВСПотребителиГВС.Количество
	              |	КОНЕЦ КАК ЗначениеНормативаЗаДень,
	              |	Шапка.ОбъектРасчета.МКД КАК МКД
	              |ПОМЕСТИТЬ ДанныеПоГВС
	              |ИЗ
	              |	Шапка КАК Шапка
	              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бестУстановитьПотребителейГВС.ПотребителиГВС КАК бестУстановитьПотребителейГВСПотребителиГВС
	              |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.бестТипыПотребителейГВС КАК бестТипыПотребителейГВС
	              |			ПО бестУстановитьПотребителейГВСПотребителиГВС.Тип = бестТипыПотребителейГВС.Ссылка
	              |		ПО Шапка.Ссылка = бестУстановитьПотребителейГВСПотребителиГВС.Ссылка";	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Организация");
	Измерения.Добавить("Район");
	Измерения.Добавить("Договор");
	Измерения.Добавить("ОбъектРасчета");
	Измерения.Добавить("МКД");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("ЗначениеНормативаЗаДень");
	
	Параметры.вставить("Измерения",Измерения);
	Параметры.вставить("Ресурсы",Ресурсы);
	
	ЗаполнитьНомераПозицийНП(МВТ,Параметры,"ДанныеПоГВС");
	
КонецПроцедуры

Процедура СтабПериодыНПУчастиеВРаспределенииМКД(ссылка,параметры)
	МВТ  		= Новый МенеджерВременныхТаблиц;
	ПараметрыЗапроса 	= Параметры.ПараметрыЗапроса;
	Запрос  	= Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.УстановитьПараметр("ссылка",			ссылка);

	Запрос.Текст ="ВЫБРАТЬ
	              |	бестУстановитьУчастиеОбъектаВРаспределенииРесурсовВМКД.ПериодНачисления КАК ПериодНачисления,
	              |	бестУстановитьУчастиеОбъектаВРаспределенииРесурсовВМКД.Район КАК Район,
	              |	бестУстановитьУчастиеОбъектаВРаспределенииРесурсовВМКД.Ссылка КАК Ссылка,
	              |	бестУстановитьУчастиеОбъектаВРаспределенииРесурсовВМКД.ОбъектРасчета КАК ОбъектРасчета,
	              |	бестУстановитьУчастиеОбъектаВРаспределенииРесурсовВМКД.Организация КАК Организация,
	              |	бестУстановитьУчастиеОбъектаВРаспределенииРесурсовВМКД.Договор КАК Договор,
	              |	бестУстановитьУчастиеОбъектаВРаспределенииРесурсовВМКД.ОбъектРасчета.МКД КАК МКД,
	              |	бестУстановитьУчастиеОбъектаВРаспределенииРесурсовВМКД.Участвует КАК ОбъектУчаствуетВРаспределенииМКД
	              |ПОМЕСТИТЬ ДанныеПоМКДОбъекта
	              |ИЗ
	              |	Документ.бестУстановитьУчастиеОбъектаВРаспределенииРесурсовВМКД КАК бестУстановитьУчастиеОбъектаВРаспределенииРесурсовВМКД
	              |ГДЕ
	              |	бестУстановитьУчастиеОбъектаВРаспределенииРесурсовВМКД.Ссылка = &Ссылка";	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Организация");
	Измерения.Добавить("Район");
	Измерения.Добавить("Договор");
	Измерения.Добавить("ОбъектРасчета");
	Измерения.Добавить("МКД");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("ОбъектУчаствуетВРаспределенииМКД");
	
	Параметры.вставить("Измерения",Измерения);
	Параметры.вставить("Ресурсы",Ресурсы);
	
	ЗаполнитьНомераПозицийНП(МВТ,Параметры,"ДанныеПоМКДОбъекта");

КонецПроцедуры

Процедура СтабПериодыНПУстановитьФормулуРасчетаТочекУчета(ссылка,Параметры) 
	
		ПараметрыЗапроса  							= Параметры.ПараметрыЗапроса;	
	МВТ 										= Новый МенеджерВременныхТаблиц;
	Запрос  									= Новый Запрос;
	Запрос.УстановитьПараметр("ссылка",					ссылка);
	Запрос.МенеджерВременныхТаблиц 	= МВТ;     	
	
	ПараметрыЗапроса 	= Параметры.ПараметрыЗапроса;
	для каждого ПараметрЗапроса из ПараметрыЗапроса цикл
		Запрос.УстановитьПараметр(ПараметрЗапроса.ключ,ПараметрЗапроса.Значение);
	КонецЦикла;
	Запрос.УстановитьПараметр("ПериодНачисления",	Параметры.ПериодНачисления); 	
	Запрос.Текст 					="ВЫБРАТЬ
	             					 |	бестУстановитьФормулуРасчетаТочекУчетаНП.ПериодНачисления КАК ПериодНачисления,
	             					 |	бестУстановитьФормулуРасчетаТочекУчетаНП.Район КАК Район,
	             					 |	бестУстановитьФормулуРасчетаТочекУчетаНП.ОбъектРасчета.МКД КАК МКД,
	             					 |	бестУстановитьФормулуРасчетаТочекУчетаНПТочкиУчета.ТочкаУчета КАК ЗависимаяТочкаУчета,
	             					 |	ИСТИНА КАК УчаствуетВДолевойСхеме,
	             					 |	бестУстановитьФормулуРасчетаТочекУчетаНП.ДолеваяТочкаУчета КАК ДолеваяТочкаУчета,
	             					 |	бестУстановитьФормулуРасчетаТочекУчетаНПТочкиУчета.Коэффициент КАК КоэффициентРасчета,
	             					 |	бестУстановитьФормулуРасчетаТочекУчетаНП.Организация КАК Организация,
	             					 |	бестУстановитьФормулуРасчетаТочекУчетаНП.Договор КАК Договор,
	             					 |	бестУстановитьФормулуРасчетаТочекУчетаНП.ОбъектРасчета КАК ОбъектРасчета,
	             					 |	бестУстановитьФормулуРасчетаТочекУчетаНПТочкиУчета.СпособРаспределения КАК СпособРаспределения,
	             					 |	бестУстановитьФормулуРасчетаТочекУчетаНП.Услуга КАК Услуга,
	             					 |	бестУстановитьФормулуРасчетаТочекУчетаНПТочкиУчета.СпособРаспределенияОстатка КАК СпособРаспределенияОстатка,
	             					 |	бестУстановитьФормулуРасчетаТочекУчетаНПТочкиУчета.ОбъектРасчета КАК ОбъектРасчетаСуб,
	             					 |	бестУстановитьФормулуРасчетаТочекУчетаНПТочкиУчета.Договор КАК ДоговорСуб,
	             					 |	бестУстановитьФормулуРасчетаТочекУчетаНПТочкиУчета.УчитыватьИндивидуальноеПотребление КАК УчитыватьИндивидуальноеПотребление,
	             					 |	бестУстановитьФормулуРасчетаТочекУчетаНПТочкиУчета.КоэффициентДолевогоРаспределения КАК КоэффициентДолевогоРаспределения,
	             					 |	бестУстановитьФормулуРасчетаТочекУчетаНПТочкиУчета.Услуга КАК УслугаСуб,
	             					 |	бестУстановитьФормулуРасчетаТочекУчетаНПТочкиУчета.ФиксированныйОбъем КАК ФиксированныйОбъем
	             					 |ПОМЕСТИТЬ Шапка
	             					 |ИЗ
	             					 |	Документ.бестУстановитьФормулуРасчетаТочекУчетаНП КАК бестУстановитьФормулуРасчетаТочекУчетаНП
	             					 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бестУстановитьФормулуРасчетаТочекУчетаНП.ТочкиУчета КАК бестУстановитьФормулуРасчетаТочекУчетаНПТочкиУчета
	             					 |		ПО бестУстановитьФормулуРасчетаТочекУчетаНП.Ссылка = бестУстановитьФормулуРасчетаТочекУчетаНПТочкиУчета.Ссылка
	             					 |			И (бестУстановитьФормулуРасчетаТочекУчетаНП.Ссылка = &ссылка)
	             					 |			И (бестУстановитьФормулуРасчетаТочекУчетаНПТочкиУчета.Ссылка = &ссылка)
	             					 |;
	             					 |
	             					 |////////////////////////////////////////////////////////////////////////////////
	             					 |ВЫБРАТЬ
	             					 |	Шапка.ПериодНачисления КАК ПериодНачисления,
	             					 |	Шапка.Организация КАК Организация,
	             					 |	Шапка.Район КАК Район,
	             					 |	Шапка.МКД КАК МКД,
	             					 |	Шапка.КоэффициентРасчета КАК КоэффициентРасчета,
	             					 |	Шапка.ДолеваяТочкаУчета КАК ЗависимаяТочкаУчета,
	             					 |	ИСТИНА КАК МенялосьСостояниеФормулы,
	             					 |	Шапка.УчаствуетВДолевойСхеме КАК УчаствуетВДолевойСхеме,
	             					 |	Шапка.СпособРаспределения КАК СпособРаспределенияОбъемаДолевойТУ,
	             					 |	Шапка.ЗависимаяТочкаУчета КАК ТочкаУчета,
	             					 |	Шапка.СпособРаспределенияОстатка КАК СпособРаспределенияОстаткаДолевыеСхемы,
	             					 |	Шапка.ОбъектРасчетаСуб КАК ОбъектРасчета,
	             					 |	Шапка.ДоговорСуб КАК Договор,
	             					 |	Шапка.УчитыватьИндивидуальноеПотребление КАК РасчетИндивидуальногоПотребления,
	             					 |	Шапка.КоэффициентДолевогоРаспределения КАК КоэффициентДолевогоРаспределения,
	             					 |	Шапка.УслугаСуб КАК Услуга,
	             					 |	Шапка.ФиксированныйОбъем КАК ФиксированныйОбъем
	             					 |ПОМЕСТИТЬ ТочкаПоФормуле
	             					 |ИЗ
	             					 |	Шапка КАК Шапка";	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Организация");
	Измерения.Добавить("Район");
	Измерения.Добавить("Договор");
	Измерения.Добавить("ОбъектРасчета");
	Измерения.Добавить("МКД");
	Измерения.Добавить("Услуга");
	Измерения.Добавить("ТочкаУчета");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("УчаствуетВДолевойСхеме");
	Ресурсы.Добавить("ЗависимаяТочкаУчета");
	Ресурсы.Добавить("КоэффициентРасчета");
	Ресурсы.Добавить("МенялосьСостояниеФормулы");
	Ресурсы.Добавить("СпособРаспределенияОбъемаДолевойТУ");
	Ресурсы.Добавить("СпособРаспределенияОстаткаДолевыеСхемы");
	//Ресурсы.Добавить("РасчетИндивидуальногоПотребления");
	//Ресурсы.Добавить("СхемаРасчетаПриВыходеПУ");
	Ресурсы.Добавить("КоэффициентДолевогоРаспределения");
	Ресурсы.Добавить("ФиксированныйОбъем");

	Параметры.вставить("Измерения",Измерения);
	Параметры.вставить("Ресурсы",Ресурсы);
	
	ЗаполнитьНомераПозицийНП(МВТ,Параметры,"ТочкаПоФормуле");
	
КонецПроцедуры

Процедура СтабПериодыНПУстановитьГруппуПотребителей(ссылка,Параметры) 
	
	МВТ  		= Новый МенеджерВременныхТаблиц;
	ПараметрыЗапроса 	= Параметры.ПараметрыЗапроса;
	Запрос  	= Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.УстановитьПараметр("ссылка",ссылка);
	Запрос.УстановитьПараметр("МоментВремени",Новый Граница(Параметры.МоментВремени,ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("ГруппаПотребителей",ссылка.ГруппаПотребителей);
	Запрос.УстановитьПараметр("Организация",ссылка.Организация);

	Запрос.Текст ="ВЫБРАТЬ
	              |	энргЗначенияТарифовСрезПервых.Услуга КАК Услуга,
	              |	энргЗначенияТарифовСрезПервых.Значение КАК Значение,
	              |	энргЗначенияТарифовСрезПервых.ГруппаПотребителей КАК ГруппаПотребителей
	              |ПОМЕСТИТЬ Тарифы
	              |ИЗ
	              |	РегистрСведений.энргЗначенияТарифов.СрезПервых(
	              |			&МоментВремени,
	              |			Организация = &Организация
	              |				И ГруппаПотребителей = &ГруппаПотребителей) КАК энргЗначенияТарифовСрезПервых
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	бестУстановитьГруппуПотребителейНП.Организация КАК Организация,
	              |	бестУстановитьГруппуПотребителейНП.ПериодНачисления КАК ПериодНачисления,
	              |	бестУстановитьГруппуПотребителейНП.Район КАК Район,
	              |	бестУстановитьГруппуПотребителейНП.ОбъектРасчета.МКД КАК МКД,
	              |	бестУстановитьГруппуПотребителейНП.ГруппаПотребителей КАК ГруппаПотребителей,
	              |	бестУстановитьГруппуПотребителейНП.Договор КАК Договор,
	              |	бестУстановитьГруппуПотребителейНП.ОбъектРасчета КАК ОбъектРасчета
	              |ПОМЕСТИТЬ Шапка
	              |ИЗ
	              |	Документ.бестУстановитьГруппуПотребителейНП КАК бестУстановитьГруппуПотребителейНП
	              |ГДЕ
	              |	бестУстановитьГруппуПотребителейНП.Ссылка = &Ссылка
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	Шапка.Организация КАК Организация,
	              |	Шапка.ПериодНачисления КАК ПериодНачисления,
	              |	Шапка.Район КАК Район,
	              |	Шапка.МКД КАК МКД,
	              |	ЕСТЬNULL(Тарифы.Услуга, ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)) КАК Услуга,
	              |	ЕСТЬNULL(Тарифы.Значение, 0) КАК ЗначениеТарифа,
	              |	Шапка.ГруппаПотребителей КАК ТарифнаяГруппа,
	              |	Шапка.Договор КАК Договор,
	              |	Шапка.ОбъектРасчета КАК ОбъектРасчета
	              |ПОМЕСТИТЬ ДанныеТарифа
	              |ИЗ
	              |	Шапка КАК Шапка
	              |		ЛЕВОЕ СОЕДИНЕНИЕ Тарифы КАК Тарифы
	              |		ПО Шапка.ГруппаПотребителей = Тарифы.ГруппаПотребителей";
	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("Организация");
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Район");
	Измерения.Добавить("Договор");
	Измерения.Добавить("ОбъектРасчета");
	Измерения.Добавить("МКД");	
	Измерения.Добавить("Услуга");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("ЗначениеТарифа");
	Ресурсы.Добавить("ТарифнаяГруппа");
	
	Параметры.вставить("Измерения",Измерения);
	Параметры.вставить("Ресурсы",Ресурсы);
	
	ЗаполнитьНомераПозицийНП(МВТ,Параметры,"ДанныеТарифа");
	
КонецПроцедуры

Процедура СтабПериодыНПСпособНачисленияПоНормативу(ссылка,Параметры) 
	
		МВТ  		= Новый МенеджерВременныхТаблиц;
	ПараметрыЗапроса 	= Параметры.ПараметрыЗапроса;
	Запрос  	= Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.УстановитьПараметр("ссылка",			ссылка);

	Запрос.Текст ="ВЫБРАТЬ
	              |	бестУстановитьСпособНачисленияПоНормативуНП.ПериодНачисления КАК ПериодНачисления,
	              |	бестУстановитьСпособНачисленияПоНормативуНП.Район КАК Район,
	              |	бестУстановитьСпособНачисленияПоНормативуНП.Ссылка КАК Ссылка,
	              |	бестУстановитьСпособНачисленияПоНормативуНП.ОбъектРасчета КАК ОбъектРасчета,
	              |	бестУстановитьСпособНачисленияПоНормативуНП.Организация КАК Организация,
	              |	бестУстановитьСпособНачисленияПоНормативуНП.Договор КАК Договор,
	              |	бестУстановитьСпособНачисленияПоНормативуНП.СпособРасчетаНорматива КАК СпособРасчетаНорматива,
	              |	бестУстановитьСпособНачисленияПоНормативуНП.ОбъектРасчета.МКД КАК МКД,
	              |	бестУстановитьСпособНачисленияПоНормативуНП.Услуга КАК Услуга
	              |ПОМЕСТИТЬ ДанныеДокумента
	              |ИЗ
	              |	Документ.бестУстановитьСпособНачисленияПоНормативуНП КАК бестУстановитьСпособНачисленияПоНормативуНП
	              |ГДЕ
	              |	бестУстановитьСпособНачисленияПоНормативуНП.Ссылка = &Ссылка";	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Организация");
	Измерения.Добавить("Район");
	Измерения.Добавить("Договор");
	Измерения.Добавить("ОбъектРасчета");
	Измерения.Добавить("МКД");
	Измерения.Добавить("Услуга"); 
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("СпособРасчетаНорматива");
	
	Параметры.вставить("Измерения",Измерения);
	Параметры.вставить("Ресурсы",Ресурсы);
	
	ЗаполнитьНомераПозицийНП(МВТ,Параметры,"ДанныеДокумента");	
	
КонецПроцедуры

Процедура СтабПериодыНПУстановитьТемпературуВнутриПомещения(ссылка,Параметры) 
	
	МВТ  		= Новый МенеджерВременныхТаблиц;
	ПараметрыЗапроса 	= Параметры.ПараметрыЗапроса;
	Запрос  	= Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.УстановитьПараметр("ссылка",			ссылка);
	Запрос.УстановитьПараметр("МоментВремени",Новый Граница(Параметры.МоментВремени,ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Организация",ссылка.Организация);
	Запрос.УстановитьПараметр("Район",ссылка.Район);

	Запрос.Текст ="ВЫБРАТЬ
	              |	бестУстановитьПоказателиТемпературыВнутриПомещения.ПериодНачисления КАК ПериодНачисления,
	              |	бестУстановитьПоказателиТемпературыВнутриПомещения.Район КАК Район,
	              |	бестУстановитьПоказателиТемпературыВнутриПомещения.Ссылка КАК Ссылка,
	              |	бестУстановитьПоказателиТемпературыВнутриПомещения.ОбъектРасчета КАК ОбъектРасчета,
	              |	бестУстановитьПоказателиТемпературыВнутриПомещения.Организация КАК Организация,
	              |	бестУстановитьПоказателиТемпературыВнутриПомещения.Договор КАК Договор,
	              |	бестУстановитьПоказателиТемпературыВнутриПомещения.ТемператураВнутриПомещения КАК ТемператураВнутриПомещения
	              |ПОМЕСТИТЬ Шапка
	              |ИЗ
	              |	Документ.бестУстановитьПоказателиТемпературыВнутриПомещения КАК бестУстановитьПоказателиТемпературыВнутриПомещения
	              |ГДЕ
	              |	бестУстановитьПоказателиТемпературыВнутриПомещения.Ссылка = &Ссылка
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	Шапка.ПериодНачисления КАК ПериодНачисления,
	              |	Шапка.Район КАК Район,
	              |	Шапка.ОбъектРасчета КАК ОбъектРасчета,
	              |	Шапка.Организация КАК Организация,
	              |	Шапка.Договор КАК Договор,
	              |	Шапка.ОбъектРасчета.МКД КАК МКД,
	              |	Шапка.ТемператураВнутриПомещения КАК ТемператураВнутриПомещения
	              |ПОМЕСТИТЬ ДанныеПоТемпературе
	              |ИЗ
	              |	Шапка КАК Шапка";	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Организация");
	Измерения.Добавить("Район");
	Измерения.Добавить("Договор");
	Измерения.Добавить("ОбъектРасчета");
	Измерения.Добавить("МКД");
	Измерения.Добавить("Услуга"); 
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("ТемператураВнутриПомещения");
	
	Параметры.вставить("Измерения",Измерения);
	Параметры.вставить("Ресурсы",Ресурсы);
	
	ЗаполнитьНомераПозицийНП(МВТ,Параметры,"ДанныеПоТемпературе");	
	
КонецПроцедуры

Процедура СтабПериодыНПУстановитьСреднемесячнуюТемпературу(ссылка,Параметры) 
	
	МВТ  		= Новый МенеджерВременныхТаблиц;
	ПараметрыЗапроса 	= Параметры.ПараметрыЗапроса;
	Запрос  	= Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.УстановитьПараметр("ссылка",			ссылка);
	Запрос.УстановитьПараметр("МоментВремени",Новый Граница(Параметры.МоментВремени,ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Организация",ссылка.Организация);
	Запрос.УстановитьПараметр("Район",ссылка.Район);

	Запрос.Текст ="ВЫБРАТЬ
	              |	бестСостояниеДоговоровСрезПоследних.Организация КАК Организация,
	              |	бестСостояниеДоговоровСрезПоследних.Район КАК Район,
	              |	бестСостояниеДоговоровСрезПоследних.Договор КАК Договор
	              |ПОМЕСТИТЬ ЗаключенныеДоговоры
	              |ИЗ
	              |	РегистрСведений.бестСостояниеДоговоров.СрезПоследних(
	              |			&МоментВремени,
	              |			Организация = &Организация
	              |				И Район = &Район) КАК бестСостояниеДоговоровСрезПоследних
	              |ГДЕ
	              |	бестСостояниеДоговоровСрезПоследних.Состояние
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	бестУстановитьСреднемесячнуюТемпературу.ПериодНачисления КАК ПериодНачисления,
	              |	бестУстановитьСреднемесячнуюТемпературу.Район КАК Район,
	              |	бестУстановитьСреднемесячнуюТемпературу.Ссылка КАК Ссылка,
	              |	бестУстановитьСреднемесячнуюТемпературу.Организация КАК Организация,
	              |	бестУстановитьСреднемесячнуюТемпературу.СреднемесячнаяТемпература КАК СреднемесячнаяТемпература
	              |ПОМЕСТИТЬ ДанныеШапки
	              |ИЗ
	              |	Документ.бестУстановитьСреднемесячнуюТемпературу КАК бестУстановитьСреднемесячнуюТемпературу
	              |ГДЕ
	              |	бестУстановитьСреднемесячнуюТемпературу.Ссылка = &Ссылка
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ДанныеШапки.ПериодНачисления КАК ПериодНачисления,
	              |	ДанныеШапки.Район КАК Район,
	              |	ДанныеШапки.Ссылка КАК Ссылка,
	              |	ДанныеШапки.Организация КАК Организация,
	              |	ДанныеШапки.СреднемесячнаяТемпература КАК СреднемесячнаяТемпература,
	              |	ЗаключенныеДоговоры.Договор КАК Договор
	              |ПОМЕСТИТЬ ДанныеПоТемпературе
	              |ИЗ
	              |	ЗаключенныеДоговоры КАК ЗаключенныеДоговоры
	              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеШапки КАК ДанныеШапки
	              |		ПО ЗаключенныеДоговоры.Организация = ДанныеШапки.Организация
	              |			И ЗаключенныеДоговоры.Район = ДанныеШапки.Район";	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Организация");
	Измерения.Добавить("Район");
	Измерения.Добавить("Договор");
	Измерения.Добавить("ОбъектРасчета");
	Измерения.Добавить("МКД");
	Измерения.Добавить("Услуга"); 
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("СреднемесячнаяТемпература");


	Параметры.вставить("Измерения",Измерения);
	Параметры.вставить("Ресурсы",Ресурсы);
	
	ЗаполнитьНомераПозицийНП(МВТ,Параметры,"ДанныеПоТемпературе");	
	
КонецПроцедуры

Процедура СтабПериодыНПУстановитьТемпературуНаружногоВоздуха(ссылка,Параметры) 
	
	МВТ  		= Новый МенеджерВременныхТаблиц;
	ПараметрыЗапроса 	= Параметры.ПараметрыЗапроса;
	Запрос  	= Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.УстановитьПараметр("ссылка",			ссылка);
	Запрос.УстановитьПараметр("МоментВремени",Новый Граница(Параметры.МоментВремени,ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Организация",ссылка.Организация);
	Запрос.УстановитьПараметр("Район",ссылка.Район);

	Запрос.Текст ="ВЫБРАТЬ
	              |	бестСостояниеДоговоровСрезПоследних.Организация КАК Организация,
	              |	бестСостояниеДоговоровСрезПоследних.Район КАК Район,
	              |	бестСостояниеДоговоровСрезПоследних.Договор КАК Договор
	              |ПОМЕСТИТЬ ЗаключенныеДоговоры
	              |ИЗ
	              |	РегистрСведений.бестСостояниеДоговоров.СрезПоследних(
	              |			&МоментВремени,
	              |			Организация = &Организация
	              |				И Район = &Район) КАК бестСостояниеДоговоровСрезПоследних
	              |ГДЕ
	              |	бестСостояниеДоговоровСрезПоследних.Состояние
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	бестУстановитьТемпературуНаружногоВоздуха.ПериодНачисления КАК ПериодНачисления,
	              |	бестУстановитьТемпературуНаружногоВоздуха.Район КАК Район,
	              |	бестУстановитьТемпературуНаружногоВоздуха.Ссылка КАК Ссылка,
	              |	бестУстановитьТемпературуНаружногоВоздуха.Организация КАК Организация,
	              |	бестУстановитьТемпературуНаружногоВоздуха.ПроектнаяТемпература КАК ПроектнаяТемпература
	              |ПОМЕСТИТЬ ДанныеШапки
	              |ИЗ
	              |	Документ.бестУстановитьТемпературуНаружногоВоздуха КАК бестУстановитьТемпературуНаружногоВоздуха
	              |ГДЕ
	              |	бестУстановитьТемпературуНаружногоВоздуха.Ссылка = &Ссылка
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ДанныеШапки.ПериодНачисления КАК ПериодНачисления,
	              |	ДанныеШапки.Район КАК Район,
	              |	ДанныеШапки.Ссылка КАК Ссылка,
	              |	ДанныеШапки.Организация КАК Организация,
	              |	ЗаключенныеДоговоры.Договор КАК Договор,
	              |	ДанныеШапки.ПроектнаяТемпература КАК ТемператураНаружногоВоздуха
	              |ПОМЕСТИТЬ ДанныеПоТемпературе
	              |ИЗ
	              |	ЗаключенныеДоговоры КАК ЗаключенныеДоговоры
	              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеШапки КАК ДанныеШапки
	              |		ПО ЗаключенныеДоговоры.Организация = ДанныеШапки.Организация
	              |			И ЗаключенныеДоговоры.Район = ДанныеШапки.Район";	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Организация");
	Измерения.Добавить("Район");
	Измерения.Добавить("Договор");
	Измерения.Добавить("ОбъектРасчета");
	Измерения.Добавить("МКД");
	Измерения.Добавить("Услуга"); 
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("ТемператураНаружногоВоздуха");


	Параметры.вставить("Измерения",Измерения);
	Параметры.вставить("Ресурсы",Ресурсы);
	
	ЗаполнитьНомераПозицийНП(МВТ,Параметры,"ДанныеПоТемпературе");	
	
КонецПроцедуры

Процедура СтабПериодыНПИзменениеИндивидуальныхНастроекСезонности(ссылка,параметры)
	
	ПараметрыЗапроса= Параметры.ПараметрыЗапроса;
	МВТ 			= Новый МенеджерВременныхТаблиц;
	
	УслугаПодключена = ссылка.ВидОперации = Перечисления.бестВидыОпераций.ОперацияСУслугами_ВозобновлениеУслуги;
	
	Запрос  		= Новый Запрос;
	Запрос.УстановитьПараметр("ссылка",				ссылка);
	Запрос.УстановитьПараметр("ПериодНачисления",	Параметры.ПериодНачисления);
	Запрос.УстановитьПараметр("МоментВремени",		Параметры.МоментВремени);
	Запрос.УстановитьПараметр("ГраницаИсключая",	Новый Граница(Параметры.МоментВремени,ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("ПериодРегистрации",	Параметры.ПараметрыЗапроса.ПериодРегистрации);
	Запрос.УстановитьПараметр("Период",				Параметры.ДатаДок);
	Запрос.УстановитьПараметр("УслугаПодключена",	УслугаПодключена);
	для Каждого стр из ПараметрыЗапроса цикл
		Запрос.УстановитьПараметр(стр.ключ,стр.значение); 
	КонецЦикла;	   	
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.Текст 	="ВЫБРАТЬ
	             	 |	бестИзменениеИндивидуальныхНастроекСезонности.Ссылка КАК Ссылка,
	             	 |	бестИзменениеИндивидуальныхНастроекСезонности.Дата КАК Дата,
	             	 |	бестИзменениеИндивидуальныхНастроекСезонности.ПериодНачисления КАК ПериодНачисления,
	             	 |	бестИзменениеИндивидуальныхНастроекСезонности.Район КАК Район,
	             	 |	бестИзменениеИндивидуальныхНастроекСезонности.Организация КАК Организация
	             	 |ПОМЕСТИТЬ Шапка
	             	 |ИЗ
	             	 |	Документ.бестИзменениеИндивидуальныхНастроекСезонности КАК бестИзменениеИндивидуальныхНастроекСезонности
	             	 |ГДЕ
	             	 |	бестИзменениеИндивидуальныхНастроекСезонности.Ссылка = &Ссылка
	             	 |;
	             	 |
	             	 |////////////////////////////////////////////////////////////////////////////////
	             	 |ВЫБРАТЬ
	             	 |	Шапка.ПериодНачисления КАК ПериодНачисления,
	             	 |	Шапка.Район КАК Район,
	             	 |	ТочкиУчета.Услуга КАК Услуга,
	             	 |	ТочкиУчета.ТочкаУчета КАК ТочкаУчета,
	             	 |	&УслугаПодключена КАК УслугаПодключена,
	             	 |	ЛОЖЬ КАК ПриборВведен,
	             	 |	ТочкиУчета.Договор КАК Договор,
	             	 |	Шапка.Организация КАК Организация,
	             	 |	ЛОЖЬ КАК РасчетПоФормуле,
	             	 |	ЗНАЧЕНИЕ(Справочник.энргТочкиУчета.ПустаяСсылка) КАК ЗависимаяТочкаУчета,
	             	 |	0 КАК КоэффициентРасчета,
	             	 |	ЛОЖЬ КАК МенялосьСостояниеПУ,
	             	 |	ЛОЖЬ КАК МенялосьСостояниеФормулы,
	             	 |	ТочкиУчета.ОбъектРасчета КАК ОбъектРасчета,
	             	 |	ИСТИНА КАК ОбъектРасчетаПодключен,
	             	 |	ТочкиУчета.ОбъектРасчета.МКД КАК ОбъектРасчетаМКД
	             	 |ПОМЕСТИТЬ ДанныеУслуг
	             	 |ИЗ
	             	 |	Шапка КАК Шапка
	             	 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бестИзменениеИндивидуальныхНастроекСезонности.ТочкиУчета КАК ТочкиУчета
	             	 |		ПО Шапка.Ссылка = ТочкиУчета.Ссылка
	             	 |;
	             	 |
	             	 |////////////////////////////////////////////////////////////////////////////////
	             	 |ВЫБРАТЬ
	             	 |	бестУчастиеОбъектовВРаспределенииРесурсовВМКДСрезПоследних.ОбъектРасчета КАК ОбъектРасчета
	             	 |ПОМЕСТИТЬ МКД
	             	 |ИЗ
	             	 |	РегистрСведений.бестУчастиеОбъектовВРаспределенииРесурсовВМКД.СрезПоследних(
	             	 |			&МоментВремени,
	             	 |			ОбъектРасчета В
	             	 |				(ВЫБРАТЬ
	             	 |					ДанныеУслуг.ОбъектРасчета
	             	 |				ИЗ
	             	 |					ДанныеУслуг)) КАК бестУчастиеОбъектовВРаспределенииРесурсовВМКДСрезПоследних
	             	 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеУслуг КАК ДанныеУслуг
	             	 |		ПО бестУчастиеОбъектовВРаспределенииРесурсовВМКДСрезПоследних.ОбъектРасчета = ДанныеУслуг.ОбъектРасчета
	             	 |ГДЕ
	             	 |	бестУчастиеОбъектовВРаспределенииРесурсовВМКДСрезПоследних.Участвует
	             	 |;
	             	 |
	             	 |////////////////////////////////////////////////////////////////////////////////
	             	 |ВЫБРАТЬ
	             	 |	ДанныеУслуг.ПериодНачисления КАК ПериодНачисления,
	             	 |	ДанныеУслуг.Район КАК Район,
	             	 |	ВЫБОР
	             	 |		КОГДА энргВидыУслугСоставляющиеУслуг.Ссылка ЕСТЬ NULL
	             	 |			ТОГДА ДанныеУслуг.Услуга
	             	 |		ИНАЧЕ энргВидыУслугСоставляющиеУслуг.Услуга
	             	 |	КОНЕЦ КАК Услуга,
	             	 |	ДанныеУслуг.ТочкаУчета КАК ТочкаУчета,
	             	 |	ДанныеУслуг.Договор КАК Договор,
	             	 |	ДанныеУслуг.Организация КАК Организация,
	             	 |	ДанныеУслуг.ОбъектРасчета КАК ОбъектРасчета,
	             	 |	ДанныеУслуг.УслугаПодключена КАК УслугаПодключена,
	             	 |	ДанныеУслуг.ПриборВведен КАК ПриборВведен,
	             	 |	ДанныеУслуг.РасчетПоФормуле КАК РасчетПоФормуле,
	             	 |	ДанныеУслуг.ЗависимаяТочкаУчета КАК ЗависимаяТочкаУчета,
	             	 |	ДанныеУслуг.КоэффициентРасчета КАК КоэффициентРасчета,
	             	 |	ДанныеУслуг.МенялосьСостояниеПУ КАК МенялосьСостояниеПУ,
	             	 |	ДанныеУслуг.МенялосьСостояниеФормулы КАК МенялосьСостояниеФормулы,
	             	 |	ДанныеУслуг.ОбъектРасчетаПодключен КАК ОбъектРасчетаПодключен,
	             	 |	ДанныеУслуг.ОбъектРасчетаМКД КАК МКД
	             	 |ПОМЕСТИТЬ ОтключениеУслуги
	             	 |ИЗ
	             	 |	ДанныеУслуг КАК ДанныеУслуг
	             	 |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг.СоставляющиеУслуг КАК энргВидыУслугСоставляющиеУслуг
	             	 |		ПО ДанныеУслуг.Услуга = энргВидыУслугСоставляющиеУслуг.Ссылка";
	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Организация");
	Измерения.Добавить("Район");
	Измерения.Добавить("Договор");
	Измерения.Добавить("ОбъектРасчета");
	Измерения.Добавить("МКД");
	Измерения.Добавить("Услуга");
	Измерения.Добавить("ТочкаУчета");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("УслугаПодключена");
	//Ресурсы.Добавить("ПриборВведен");
	//Ресурсы.Добавить("ЗначениеНормативаЗаДень");
	//Ресурсы.Добавить("РасчетПоФормуле");
	//Ресурсы.Добавить("ЗависимаяТочкаУчета");
	//Ресурсы.Добавить("КоэффициентРасчета");
	//Ресурсы.Добавить("МенялосьСостояниеПУ");
	//Ресурсы.Добавить("МенялосьСостояниеФормулы");
	//Ресурсы.Добавить("ВидДифференцированности");
	//Ресурсы.Добавить("ОбъектРасчетаПодключен");

	
	Параметры.вставить("Измерения",				Измерения);
	Параметры.вставить("Ресурсы",				Ресурсы);
	Параметры.вставить("ИзменяетСостояниеПУ",	Истина);
	
	ЗаполнитьНомераПозицийНП(МВТ,Параметры,"ОтключениеУслуги"); 	
КонецПроцедуры

Процедура СтабПериодыСменаПоставщикаНП(ссылка,Параметры)
			
	ПарметрыЗапроса  	= параметры.ПараметрыЗапроса;	
	МВТ 			= Новый МенеджерВременныхТаблиц;
	Запрос  		= Новый Запрос;
	Запрос.УстановитьПараметр("ссылка",			ссылка);
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.Текст 	="ВЫБРАТЬ
	             	 |	энргСменаПоставщика.Организация КАК Организация,
	             	 |	энргСменаПоставщика.ПериодНачисления КАК ПериодНачисления,
	             	 |	энргСменаПоставщика.Район КАК Район,
	             	 |	энргСменаПоставщика.Договор КАК Договор,
	             	 |	энргСменаПоставщика.Ссылка КАК Ссылка,
	             	 |	энргСменаПоставщикаТочкиУчета.Услуга КАК Услуга,
	             	 |	энргСменаПоставщикаТочкиУчета.ТочкаУчета КАК ТочкаУчета,
	             	 |	энргСменаПоставщикаТочкиУчета.ПоставщикПосле КАК Поставщик,
	             	 |	энргСменаПоставщикаТочкиУчета.ЭтоСоставнаяУслуга КАК ЭтоСоставнаяУслуга,
	             	 |	энргСменаПоставщикаТочкиУчета.IDСтроки КАК IDСтроки,
	             	 |	энргСменаПоставщикаТочкиУчета.ОбъектРасчета КАК ОбъектРасчета
	             	 |ПОМЕСТИТЬ Шапка
	             	 |ИЗ
	             	 |	Документ.бестСменаПоставщикаНП.ТочкиУчета КАК энргСменаПоставщикаТочкиУчета
	             	 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бестСменаПоставщикаНП КАК энргСменаПоставщика
	             	 |		ПО энргСменаПоставщикаТочкиУчета.Ссылка = энргСменаПоставщика.Ссылка
	             	 |			И (энргСменаПоставщика.Ссылка = &Ссылка)
	             	 |			И (энргСменаПоставщикаТочкиУчета.Ссылка = &Ссылка)
	             	 |;
	             	 |
	             	 |////////////////////////////////////////////////////////////////////////////////
	             	 |ВЫБРАТЬ
	             	 |	Шапка.Организация КАК Организация,
	             	 |	Шапка.ПериодНачисления КАК ПериодНачисления,
	             	 |	Шапка.Район КАК Район,
	             	 |	Шапка.Договор КАК Договор,
	             	 |	ВЫБОР
	             	 |		КОГДА Шапка.ЭтоСоставнаяУслуга
	             	 |			ТОГДА энргСменаПоставщикаПоставщикиСоставныхУслуг.ЧастьСоставнойУслуги
	             	 |		ИНАЧЕ Шапка.Услуга
	             	 |	КОНЕЦ КАК Услуга,
	             	 |	Шапка.ТочкаУчета КАК ТочкаУчета,
	             	 |	ВЫБОР
	             	 |		КОГДА Шапка.ЭтоСоставнаяУслуга
	             	 |			ТОГДА энргСменаПоставщикаПоставщикиСоставныхУслуг.ПоставщикПосле
	             	 |		ИНАЧЕ Шапка.Поставщик
	             	 |	КОНЕЦ КАК Поставщик,
	             	 |	Шапка.ОбъектРасчета КАК ОбъектРасчета
	             	 |ПОМЕСТИТЬ ДанныеПоставщика
	             	 |ИЗ
	             	 |	Шапка КАК Шапка
	             	 |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.бестСменаПоставщикаНП.ПоставщикиСоставныхУслуг КАК энргСменаПоставщикаПоставщикиСоставныхУслуг
	             	 |		ПО Шапка.Ссылка = энргСменаПоставщикаПоставщикиСоставныхУслуг.Ссылка
	             	 |			И (Шапка.ЭтоСоставнаяУслуга)
	             	 |			И Шапка.IDСтроки = энргСменаПоставщикаПоставщикиСоставныхУслуг.IDСтроки";	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("Организация");
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Район");
	Измерения.Добавить("Договор");
	Измерения.Добавить("Услуга");
	Измерения.Добавить("ТочкаУчета");
	Измерения.Добавить("ОбъектРасчета");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("Поставщик");
	
	Параметры.вставить("Измерения",Измерения);
	Параметры.вставить("Ресурсы",Ресурсы);
	
	ЗаполнитьНомераПозицийНП(МВТ,Параметры,"ДанныеПоставщика"); 
	
КонецПроцедуры

Процедура СтабПериодыУстановитьДатуПоверкиПУ(ссылка,Параметры)
	 ПарметрыЗапроса  	= параметры.ПараметрыЗапроса;	
	МВТ 			= Новый МенеджерВременныхТаблиц;
	Запрос  		= Новый Запрос;
	Запрос.УстановитьПараметр("ссылка",			ссылка);
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.Текст 	="ВЫБРАТЬ
	             	 |	бестУстановитьДатуПоверкиПУ.Организация КАК Организация,
	             	 |	бестУстановитьДатуПоверкиПУ.ПериодНачисления КАК ПериодНачисления,
	             	 |	бестУстановитьДатуПоверкиПУ.Район КАК Район,
	             	 |	бестУстановитьДатуПоверкиПУ.Договор КАК Договор,
	             	 |	бестУстановитьДатуПоверкиПУ.Ссылка КАК Ссылка,
	             	 |	бестУстановитьДатуПоверкиПУТочкиУчета.Услуга КАК Услуга,
	             	 |	бестУстановитьДатуПоверкиПУТочкиУчета.ТочкаУчета КАК ТочкаУчета,
	             	 |	бестУстановитьДатуПоверкиПУТочкиУчета.IDСтроки КАК IDСтроки,
	             	 |	бестУстановитьДатуПоверкиПУТочкиУчета.ОбъектРасчета КАК ОбъектРасчета,
	             	 |	бестУстановитьДатуПоверкиПУТочкиУчета.ДатаПоверки КАК ДатаПоверки
	             	 |ПОМЕСТИТЬ Шапка
	             	 |ИЗ
	             	 |	Документ.бестУстановитьДатуПоверкиПУ.ТочкиУчета КАК бестУстановитьДатуПоверкиПУТочкиУчета
	             	 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бестУстановитьДатуПоверкиПУ КАК бестУстановитьДатуПоверкиПУ
	             	 |		ПО бестУстановитьДатуПоверкиПУТочкиУчета.Ссылка = бестУстановитьДатуПоверкиПУ.Ссылка
	             	 |			И (бестУстановитьДатуПоверкиПУ.Ссылка = &Ссылка)
	             	 |			И (бестУстановитьДатуПоверкиПУТочкиУчета.Ссылка = &Ссылка)
	             	 |;
	             	 |
	             	 |////////////////////////////////////////////////////////////////////////////////
	             	 |ВЫБРАТЬ
	             	 |	Шапка.Организация КАК Организация,
	             	 |	Шапка.ПериодНачисления КАК ПериодНачисления,
	             	 |	Шапка.Район КАК Район,
	             	 |	Шапка.Договор КАК Договор,
	             	 |	Шапка.ТочкаУчета КАК ТочкаУчета,
	             	 |	Шапка.ОбъектРасчета КАК ОбъектРасчета,
	             	 |	Шапка.ДатаПоверки КАК ДатаПоверки,
	             	 |	ВЫБОР
	             	 |		КОГДА энргВидыУслугСоставляющиеУслуг.Ссылка ЕСТЬ NULL
	             	 |			ТОГДА Шапка.Услуга
	             	 |		ИНАЧЕ энргВидыУслугСоставляющиеУслуг.Услуга
	             	 |	КОНЕЦ КАК Услуга
	             	 |ПОМЕСТИТЬ ДанныеПоверки
	             	 |ИЗ
	             	 |	Шапка КАК Шапка
	             	 |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг.СоставляющиеУслуг КАК энргВидыУслугСоставляющиеУслуг
	             	 |		ПО Шапка.Услуга = энргВидыУслугСоставляющиеУслуг.Ссылка";	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("Организация");
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Район");
	Измерения.Добавить("Договор");
	Измерения.Добавить("Услуга");
	Измерения.Добавить("ТочкаУчета");
	Измерения.Добавить("ОбъектРасчета");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("ДатаПоверки");
	
	Параметры.вставить("Измерения",Измерения);
	Параметры.вставить("Ресурсы",Ресурсы);
	
	ЗаполнитьНомераПозицийНП(МВТ,Параметры,"ДанныеПоверки");
КонецПроцедуры
#КонецОбласти

#Область ТекстыЗапроса

Функция ТекстЗапросаЗаключениеДоговора() 
	Текст = 
	"ВЫБРАТЬ
	|	бестЗаключениеДоговоровСЮридическимиЛицами.ПериодНачисления КАК ПериодНачисления,
	|	бестЗаключениеДоговоровСЮридическимиЛицами.Район КАК Район,
	|	бестЗаключениеДоговоровСЮридическимиЛицами.Дата КАК ДатаРегистратора,
	|	бестЗаключениеДоговоровСЮридическимиЛицами.Ссылка КАК ДокРегистратор,
	|	бестЗаключениеДоговоровСЮридическимиЛицами.Организация КАК Организация,
	|	ИСТИНА КАК ДоговорЗаключен,
	|	бестЗаключениеДоговоровСЮридическимиЛицами.Договор КАК Договор
	|ПОМЕСТИТЬ Шапка
	|ИЗ
	|	Документ.бестЗаключениеДоговоровСЮридическимиЛицами КАК бестЗаключениеДоговоровСЮридическимиЛицами
	|ГДЕ
	|	бестЗаключениеДоговоровСЮридическимиЛицами.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	бестЗаключениеДоговоровСЮридическимиЛицамиОбъектыРасчета.ОбъектРасчета КАК ОбъектРасчета,
	|	бестЗаключениеДоговоровСЮридическимиЛицамиОбъектыРасчета.Площадь КАК Площадь,
	|	бестЗаключениеДоговоровСЮридическимиЛицамиОбъектыРасчета.Участвует КАК ОбъектУчаствуетВРаспределенииМКД,
	|	бестЗаключениеДоговоровСЮридическимиЛицамиОбъектыРасчета.IDСтроки КАК IDСтроки,
	|	бестЗаключениеДоговоровСЮридическимиЛицамиОбъектыРасчета.МКД КАК МКД,
	|	бестЗаключениеДоговоровСЮридическимиЛицамиОбъектыРасчета.ТемператураВнутриПомещения КАК ТемператураВнутриПомещения,
	|	ЕСТЬNULL(энргТипСхемыГВССрезПоследних.ТипСхемы, ЗНАЧЕНИЕ(Перечисление.энргТипыСхемТеплоснабжения.ПустаяСсылка)) КАК ТипСхемыГВС,
	|	ЕСТЬNULL(энргТипПринадлежностиМКДСрезПоследних.ВидТепловогоПункта, ЗНАЧЕНИЕ(Перечисление.энргВидыТепловыхПунктов.ПустаяСсылка)) КАК ВидТепловогоПункта,
	|	бестЗаключениеДоговоровСЮридическимиЛицамиОбъектыРасчета.Ссылка КАК Ссылка,
	|	бестЗаключениеДоговоровСЮридическимиЛицамиОбъектыРасчета.МКД.ГодПостройки КАК МКДГодПостройки,
	|	бестЗаключениеДоговоровСЮридическимиЛицамиОбъектыРасчета.МКД.КоличествоЭтажей КАК МКДЭтажность,
	|	бестЗаключениеДоговоровСЮридическимиЛицамиОбъектыРасчета.Помещение КАК Помещение
	|ПОМЕСТИТЬ ДанныеОбъектовРасчета
	|ИЗ
	|	Документ.бестЗаключениеДоговоровСЮридическимиЛицами.ОбъектыРасчета КАК бестЗаключениеДоговоровСЮридическимиЛицамиОбъектыРасчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.энргТипСхемыГВС.СрезПоследних(
	|				&ПериодРегистрации,
	|				Организация = &Организация
	|					И Район = &Район) КАК энргТипСхемыГВССрезПоследних
	|		ПО бестЗаключениеДоговоровСЮридическимиЛицамиОбъектыРасчета.МКД = энргТипСхемыГВССрезПоследних.МКД
	|			И бестЗаключениеДоговоровСЮридическимиЛицамиОбъектыРасчета.Ссылка.Организация = энргТипСхемыГВССрезПоследних.Организация
	|			И бестЗаключениеДоговоровСЮридическимиЛицамиОбъектыРасчета.Ссылка.Район = энргТипСхемыГВССрезПоследних.Район
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.энргТипПринадлежностиМКД.СрезПоследних(
	|				&ПериодРегистрации,
	|				Организация = &Организация
	|					И Район = &Район) КАК энргТипПринадлежностиМКДСрезПоследних
	|		ПО бестЗаключениеДоговоровСЮридическимиЛицамиОбъектыРасчета.МКД = энргТипПринадлежностиМКДСрезПоследних.МКД
	|			И бестЗаключениеДоговоровСЮридическимиЛицамиОбъектыРасчета.Ссылка.Организация = энргТипПринадлежностиМКДСрезПоследних.Организация
	|			И бестЗаключениеДоговоровСЮридическимиЛицамиОбъектыРасчета.Ссылка.Район = энргТипПринадлежностиМКДСрезПоследних.Район
	|ГДЕ
	|	бестЗаключениеДоговоровСЮридическимиЛицамиОбъектыРасчета.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеОбъектовРасчета.ОбъектРасчета КАК ОбъектРасчета,
	|	ДанныеОбъектовРасчета.Площадь КАК Площадь,
	|	ДанныеОбъектовРасчета.ОбъектУчаствуетВРаспределенииМКД КАК ОбъектУчаствуетВРаспределенииМКД,
	|	ДанныеОбъектовРасчета.IDСтроки КАК IDСтроки,
	|	ДанныеОбъектовРасчета.МКД КАК МКД,
	|	ДанныеОбъектовРасчета.ТемператураВнутриПомещения КАК ТемператураВнутриПомещения,
	|	ДанныеОбъектовРасчета.Ссылка КАК Ссылка,
	|	ДанныеОбъектовРасчета.МКД.ГодПостройки КАК МКДГодПостройки,
	|	ДанныеОбъектовРасчета.МКД.КоличествоЭтажей КАК МКДЭтажность,
	|	ДанныеОбъектовРасчета.Помещение КАК Помещение
	|ПОМЕСТИТЬ ДанныеОбъектовРасчетаМКД
	|ИЗ
	|	ДанныеОбъектовРасчета КАК ДанныеОбъектовРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.ПериодНачисления КАК ПериодНачисления,
	|	ВложенныйЗапрос.Район КАК Район,
	|	ЕСТЬNULL(ВложенныйЗапрос.Услуга, ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)) КАК Услуга,
	|	ЕСТЬNULL(ВложенныйЗапрос.ТочкаУчета, ЗНАЧЕНИЕ(Справочник.энргТочкиУчета.Пустаяссылка)) КАК ТочкаУчета,
	|	0 КАК НомерПозиции,
	|	ВложенныйЗапрос.ДатаРегистратора КАК ДатаРегистратора,
	|	ВложенныйЗапрос.ДокРегистратор КАК ДокРегистратор,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.Услуга ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК УслугаПодключена,
	|	ЕСТЬNULL(ВложенныйЗапрос.КоэффициентПУ, 0) КАК КоэффициентПУ,
	|	ВложенныйЗапрос.IDСтроки КАК IDСтроки,
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ДоговорЗаключен КАК ДоговорЗаключен,
	|	ДанныеОбъектовРасчета.ОбъектРасчета КАК ОбъектРасчета,
	|	ВложенныйЗапрос.Договор КАК Договор,
	|	ИСТИНА КАК ОбъектРасчетаПодключен,
	|	ВложенныйЗапрос.ЭтоСоставнаяУслуга КАК ЭтоСоставнаяУслуга,
	|	ВложенныйЗапрос.СпособРасчетаНорматива КАК СпособРасчетаНорматива,
	|	ВложенныйЗапрос.IDСтрокиВладельца КАК IDСтрокиВладельца,
	|	ВложенныйЗапрос.Поставщик КАК Поставщик,
	|	ВложенныйЗапрос.ПриборУчета КАК ПриборУчета,
	|	ВложенныйЗапрос.ПриборВведен КАК ПриборВведен,
	|	ВложенныйЗапрос.ДиаметрСечения КАК ДиаметрСечения
	|ПОМЕСТИТЬ ДанныеТочекУчета
	|ИЗ
	|	(ВЫБРАТЬ
	|		Шапка.ДокРегистратор КАК Ссылка,
	|		Шапка.ПериодНачисления КАК ПериодНачисления,
	|		Шапка.Район КАК Район,
	|		ЕСТЬNULL(бестЗаключениеДоговоровСЮридическимиЛицамиТочкиУчета.ТочкаУчета, ЗНАЧЕНИЕ(Справочник.энргТочкиУчета.Пустаяссылка)) КАК ТочкаУчета,
	|		0 КАК НомерПозиции,
	|		Шапка.ДатаРегистратора КАК ДатаРегистратора,
	|		Шапка.ДокРегистратор КАК ДокРегистратор,
	|		ВЫБОР
	|			КОГДА бестЗаключениеДоговоровСЮридическимиЛицамиТочкиУчета.Услуга ЕСТЬ NULL
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ КАК УслугаПодключена,
	|		ВЫБОР
	|			КОГДА бестЗаключениеДоговоровСЮридическимиЛицамиТочкиУчета.ПриборУчета ЕСТЬ NULL
	|				ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|			КОГДА бестЗаключениеДоговоровСЮридическимиЛицамиТочкиУчета.ПриборУчета = ЗНАЧЕНИЕ(Справочник.энргПриборыУчетаАбонента.ПУстаяСсылка)
	|				ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|			ИНАЧЕ &ПериодРегистрации
	|		КОНЕЦ КАК ДатаСостоянияПрибора,
	|		ЕСТЬNULL(бестЗаключениеДоговоровСЮридическимиЛицамиТочкиУчета.КоэффициентПУ, 1) КАК КоэффициентПУ,
	|		бестЗаключениеДоговоровСЮридическимиЛицамиТочкиУчета.IDСтроки КАК IDСтроки,
	|		Шапка.Организация КАК Организация,
	|		Шапка.ДоговорЗаключен КАК ДоговорЗаключен,
	|		Шапка.Договор КАК Договор,
	|		ИСТИНА КАК ОбъектРасчетаПодключен,
	|		бестЗаключениеДоговоровСЮридическимиЛицамиТочкиУчета.ЭтоСоставнаяУслуга КАК ЭтоСоставнаяУслуга,
	|		бестЗаключениеДоговоровСЮридическимиЛицамиТочкиУчета.СпособРасчетаНорматива КАК СпособРасчетаНорматива,
	|		бестЗаключениеДоговоровСЮридическимиЛицамиТочкиУчета.IDСтрокиВладельца КАК IDСтрокиВладельца,
	|		бестЗаключениеДоговоровСЮридическимиЛицамиТочкиУчета.Поставщик КАК Поставщик,
	|		бестЗаключениеДоговоровСЮридическимиЛицамиТочкиУчета.ПриборУчета КАК ПриборУчета,
	|		бестЗаключениеДоговоровСЮридическимиЛицамиТочкиУчета.Услуга КАК Услуга,
	|		ВЫБОР
	|			КОГДА бестЗаключениеДоговоровСЮридическимиЛицамиТочкиУчета.ПриборУчета = ЗНАЧЕНИЕ(Справочник.энргПриборыУчетаАбонента.ПустаяСсылка)
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ КАК ПриборВведен,
	|		бестЗаключениеДоговоровСЮридическимиЛицамиТочкиУчета.ДиаметрСечения КАК ДиаметрСечения
	|	ИЗ
	|		Шапка КАК Шапка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бестЗаключениеДоговоровСЮридическимиЛицами.ТочкиУчета КАК бестЗаключениеДоговоровСЮридическимиЛицамиТочкиУчета
	|			ПО Шапка.ДокРегистратор = бестЗаключениеДоговоровСЮридическимиЛицамиТочкиУчета.Ссылка
	|				И (бестЗаключениеДоговоровСЮридическимиЛицамиТочкиУчета.Ссылка = &Ссылка)) КАК ВложенныйЗапрос
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеОбъектовРасчета КАК ДанныеОбъектовРасчета
	|		ПО ВложенныйЗапрос.IDСтрокиВладельца = ДанныеОбъектовРасчета.IDСтроки
	|			И (НЕ ДанныеОбъектовРасчета.ОбъектРасчета = ЗНАЧЕНИЕ(Справочник.бестОбъектыРасчета.ПустаяСсылка))
	|			И ВложенныйЗапрос.Ссылка = ДанныеОбъектовРасчета.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	бестЗаключениеДоговоровСЮридическимиЛицамиОбъектыРасчета.ОбъектРасчета КАК ОбъектРасчета,
	|	СУММА(ВЫБОР
	|			КОГДА бестЗаключениеДоговоровСЮридическимиЛицамиПотребителиГВС.ТипНормы = ЗНАЧЕНИЕ(Перечисление.бестВидыПериодов.Часы)
	|				ТОГДА бестЗаключениеДоговоровСЮридическимиЛицамиПотребителиГВС.КоличествоРабочихЧасовВДень * бестТипыПотребителейГВС.НормаВЧас * бестЗаключениеДоговоровСЮридическимиЛицамиПотребителиГВС.Количество
	|			ИНАЧЕ бестТипыПотребителейГВС.НормаВСутки * бестЗаключениеДоговоровСЮридическимиЛицамиПотребителиГВС.Количество
	|		КОНЕЦ) КАК ЗначениеНормативаЗаДень
	|ПОМЕСТИТЬ ЗначениеНормативаГВС
	|ИЗ
	|	Документ.бестЗаключениеДоговоровСЮридическимиЛицами.ПотребителиГВС КАК бестЗаключениеДоговоровСЮридическимиЛицамиПотребителиГВС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бестЗаключениеДоговоровСЮридическимиЛицами.ОбъектыРасчета КАК бестЗаключениеДоговоровСЮридическимиЛицамиОбъектыРасчета
	|		ПО бестЗаключениеДоговоровСЮридическимиЛицамиПотребителиГВС.Ссылка = бестЗаключениеДоговоровСЮридическимиЛицамиОбъектыРасчета.Ссылка
	|			И бестЗаключениеДоговоровСЮридическимиЛицамиПотребителиГВС.IDСтроки = бестЗаключениеДоговоровСЮридическимиЛицамиОбъектыРасчета.IDСтроки
	|			И (бестЗаключениеДоговоровСЮридическимиЛицамиОбъектыРасчета.Ссылка = &Ссылка)
	|			И (бестЗаключениеДоговоровСЮридическимиЛицамиОбъектыРасчета.Ссылка = &Ссылка)
	|			И (НЕ бестЗаключениеДоговоровСЮридическимиЛицамиОбъектыРасчета.ОбъектРасчета = ЗНАЧЕНИЕ(Справочник.бестОбъектыРасчета.ПустаяСсылка))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.бестТипыПотребителейГВС КАК бестТипыПотребителейГВС
	|		ПО бестЗаключениеДоговоровСЮридическимиЛицамиПотребителиГВС.Тип = бестТипыПотребителейГВС.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	бестЗаключениеДоговоровСЮридическимиЛицамиОбъектыРасчета.ОбъектРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	бестЗаключениеДоговоровСЮридическимиЛицамиУслугиОбъектов.Услуга КАК Услуга,
	|	бестЗаключениеДоговоровСЮридическимиЛицамиУслугиОбъектов.Нагрузка КАК Нагрузка,
	|	бестЗаключениеДоговоровСЮридическимиЛицамиУслугиОбъектов.IDСтроки КАК IDСтроки,
	|	бестЗаключениеДоговоровСЮридическимиЛицамиУслугиОбъектов.КоличествоЧасовРаботы КАК КоличествоЧасовРаботы
	|ПОМЕСТИТЬ НагрузкаПоУслугам
	|ИЗ
	|	Документ.бестЗаключениеДоговоровСЮридическимиЛицами.УслугиОбъектов КАК бестЗаключениеДоговоровСЮридическимиЛицамиУслугиОбъектов
	|ГДЕ
	|	бестЗаключениеДоговоровСЮридическимиЛицамиУслугиОбъектов.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	бестЗаключениеДоговоровСЮридическимиЛицамиТарифныеКатегорииУслуги.Услуга КАК Услуга,
	|	бестЗаключениеДоговоровСЮридическимиЛицамиТарифныеКатегорииУслуги.IDСтроки КАК IDСтроки,
	|	бестЗаключениеДоговоровСЮридическимиЛицамиТарифныеКатегорииУслуги.ТарифнаяКатегория КАК ТарифнаяКатегория,
	|	бестЗаключениеДоговоровСЮридическимиЛицамиТарифныеКатегорииУслуги.ВидБлагоустройства КАК ВидБлагоустройства
	|ПОМЕСТИТЬ ТарифныеКатегории
	|ИЗ
	|	Документ.бестЗаключениеДоговоровСЮридическимиЛицами.ТарифныеКатегорииУслуги КАК бестЗаключениеДоговоровСЮридическимиЛицамиТарифныеКатегорииУслуги
	|ГДЕ
	|	бестЗаключениеДоговоровСЮридическимиЛицамиТарифныеКатегорииУслуги.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеТочекУчета.ПериодНачисления КАК ПериодНачисления,
	|	ДанныеТочекУчета.Район КАК Район,
	|	ДанныеТочекУчета.ТочкаУчета КАК ТочкаУчета,
	|	ДанныеТочекУчета.НомерПозиции КАК НомерПозиции,
	|	ДанныеТочекУчета.ДатаРегистратора КАК ДатаРегистратора,
	|	ДанныеТочекУчета.ДокРегистратор КАК ДокРегистратор,
	|	ДанныеТочекУчета.УслугаПодключена КАК УслугаПодключена,
	|	ДанныеТочекУчета.КоэффициентПУ КАК КоэффициентПУ,
	|	ДанныеТочекУчета.IDСтроки КАК IDСтроки,
	|	ДанныеТочекУчета.Организация КАК Организация,
	|	ДанныеТочекУчета.ДоговорЗаключен КАК ДоговорЗаключен,
	|	ДанныеТочекУчета.ОбъектРасчета КАК ОбъектРасчета,
	|	ДанныеТочекУчета.Договор КАК Договор,
	|	ДанныеТочекУчета.ОбъектРасчетаПодключен КАК ОбъектРасчетаПодключен,
	|	ДанныеТочекУчета.ЭтоСоставнаяУслуга КАК ЭтоСоставнаяУслуга,
	|	ДанныеТочекУчета.СпособРасчетаНорматива КАК СпособРасчетаНорматива,
	|	ВЫБОР
	|		КОГДА ДанныеТочекУчета.Услуга.СоставнаяУслуга
	|			ТОГДА бестЗаключениеДоговоровСЮридическимиЛицамиПоставщикиСоставныхУслуг.ЧастьСоставнойУслуги
	|		ИНАЧЕ ДанныеТочекУчета.Услуга
	|	КОНЕЦ КАК Услуга,
	|	ВЫБОР
	|		КОГДА бестЗаключениеДоговоровСЮридическимиЛицамиПоставщикиСоставныхУслуг.Ссылка ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|		ИНАЧЕ ДанныеТочекУчета.Услуга
	|	КОНЕЦ КАК СоставнаяУслуга,
	|	ДанныеТочекУчета.IDСтрокиВладельца КАК IDСтрокиВладельца,
	|	ВЫБОР
	|		КОГДА ДанныеТочекУчета.Услуга.СоставнаяУслуга
	|			ТОГДА бестЗаключениеДоговоровСЮридическимиЛицамиПоставщикиСоставныхУслуг.Поставщик
	|		ИНАЧЕ ДанныеТочекУчета.Поставщик
	|	КОНЕЦ КАК Поставщик,
	|	ДанныеТочекУчета.ПриборУчета КАК ПриборУчета,
	|	ДанныеТочекУчета.ПриборВведен КАК ПриборВведен,
	|	ДанныеТочекУчета.ДиаметрСечения КАК ДиаметрСечения
	|ПОМЕСТИТЬ Услуги
	|ИЗ
	|	ДанныеТочекУчета КАК ДанныеТочекУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.бестЗаключениеДоговоровСЮридическимиЛицами.ПоставщикиСоставныхУслуг КАК бестЗаключениеДоговоровСЮридическимиЛицамиПоставщикиСоставныхУслуг
	|		ПО (ДанныеТочекУчета.Услуга.СоставнаяУслуга)
	|			И ДанныеТочекУчета.ДокРегистратор = бестЗаключениеДоговоровСЮридическимиЛицамиПоставщикиСоставныхУслуг.Ссылка
	|			И ДанныеТочекУчета.IDСтроки = бестЗаключениеДоговоровСЮридическимиЛицамиПоставщикиСоставныхУслуг.IDСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Услуги.ПериодНачисления КАК ПериодНачисления,
	|	Услуги.Район КАК Район,
	|	Услуги.ТочкаУчета КАК ТочкаУчета,
	|	Услуги.НомерПозиции КАК НомерПозиции,
	|	Услуги.ДатаРегистратора КАК ДатаРегистратора,
	|	Услуги.ДокРегистратор КАК ДокРегистратор,
	|	Услуги.УслугаПодключена КАК УслугаПодключена,
	|	Услуги.КоэффициентПУ КАК КоэффициентПУ,
	|	Услуги.IDСтроки КАК IDСтроки,
	|	Услуги.Организация КАК Организация,
	|	Услуги.ДоговорЗаключен КАК ДоговорЗаключен,
	|	Услуги.ОбъектРасчета КАК ОбъектРасчета,
	|	Услуги.Договор КАК Договор,
	|	Услуги.ОбъектРасчетаПодключен КАК ОбъектРасчетаПодключен,
	|	Услуги.ЭтоСоставнаяУслуга КАК ЭтоСоставнаяУслуга,
	|	Услуги.Услуга КАК Услуга,
	|	Услуги.СоставнаяУслуга КАК СоставнаяУслуга,
	|	ВЫБОР
	|		КОГДА бестЗаключениеДоговоровСЮридическимиЛицамиСпособыРасчетаНормативаСоставныхУслуг.СпособРасчетаНорматива ЕСТЬ NULL
	|			ТОГДА Услуги.СпособРасчетаНорматива
	|		ИНАЧЕ бестЗаключениеДоговоровСЮридическимиЛицамиСпособыРасчетаНормативаСоставныхУслуг.СпособРасчетаНорматива
	|	КОНЕЦ КАК СпособРасчетаНорматива,
	|	Услуги.IDСтрокиВладельца КАК IDСтрокиВладельца,
	|	Услуги.Поставщик КАК Поставщик,
	|	Услуги.ПриборУчета КАК ПриборУчета,
	|	Услуги.ПриборВведен КАК ПриборВведен,
	|	Услуги.ДиаметрСечения КАК ДиаметрСечения
	|ПОМЕСТИТЬ УслугиСпособРасчетаНорматива
	|ИЗ
	|	Услуги КАК Услуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.бестЗаключениеДоговоровСЮридическимиЛицами.СпособыРасчетаНормативаСоставныхУслуг КАК бестЗаключениеДоговоровСЮридическимиЛицамиСпособыРасчетаНормативаСоставныхУслуг
	|		ПО Услуги.ДокРегистратор = бестЗаключениеДоговоровСЮридическимиЛицамиСпособыРасчетаНормативаСоставныхУслуг.Ссылка
	|			И Услуги.IDСтроки = бестЗаключениеДоговоровСЮридическимиЛицамиСпособыРасчетаНормативаСоставныхУслуг.IDСтроки
	|			И Услуги.Услуга = бестЗаключениеДоговоровСЮридическимиЛицамиСпособыРасчетаНормативаСоставныхУслуг.ЧастьСоставнойУслуги
	|			И (Услуги.ЭтоСоставнаяУслуга)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеОбъектовРасчетаМКД КАК ДанныеОбъектовРасчетаМКД
	|		ПО Услуги.ОбъектРасчета = ДанныеОбъектовРасчетаМКД.ОбъектРасчета
	|			И Услуги.IDСтроки = ДанныеОбъектовРасчетаМКД.IDСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ПериодНачисления КАК ПериодНачисления,
	|	ВложенныйЗапрос.Район КАК Район,
	|	ВложенныйЗапрос.Договор КАК Договор,
	|	ВложенныйЗапрос.ОбъектРасчета КАК ОбъектРасчета,
	|	ВложенныйЗапрос.Услуга КАК Услуга,
	|	ВложенныйЗапрос.ТочкаУчета КАК ТочкаУчета,
	|	ВложенныйЗапрос.НомерПозиции КАК НомерПозиции,
	|	&ПериодРегистрации КАК ПериодРегистрации,
	|	ВложенныйЗапрос.ДатаРегистратора КАК ДатаРегистратора,
	|	ВложенныйЗапрос.ДокРегистратор КАК ДокРегистратор,
	|	ВложенныйЗапрос.ДоговорЗаключен КАК ДоговорЗаключен,
	|	ВложенныйЗапрос.ОбъектРасчетаПодключен КАК ОбъектРасчетаПодключен,
	|	ВложенныйЗапрос.УслугаПодключена КАК УслугаПодключена,
	|	НагрузкаПоУслугам.Нагрузка КАК ЗначениеНагрузки,
	|	ДанныеОбъектовРасчета.Площадь КАК ЗначениеПлощади,
	|	ИСТИНА КАК МенялосьСостояниеПУ,
	|	ИСТИНА КАК МенялосьСостояниеФормулы,
	|	ЗначениеНормативаГВС.ЗначениеНормативаЗаДень КАК ЗначениеНормативаЗаДень,
	|	ДанныеОбъектовРасчета.МКД КАК МКД,
	|	ДанныеОбъектовРасчета.ОбъектУчаствуетВРаспределенииМКД КАК ОбъектУчаствуетВРаспределенииМКД,
	|	ДанныеОбъектовРасчета.ТемператураВнутриПомещения КАК ТемператураВнутриПомещения,
	|	ВложенныйЗапрос.СпособРасчетаНорматива КАК СпособРасчетаНорматива,
	|	ВложенныйЗапрос.Шкала КАК Шкала,
	|	ВложенныйЗапрос.РасчетПоФормуле КАК РасчетПоФормуле,
	|	ВложенныйЗапрос.ФормулаРасчета КАК ФормулаРасчета,
	|	ВложенныйЗапрос.СоставнаяУслуга КАК СоставнаяУслуга,
	|	ДанныеОбъектовРасчета.ТипСхемыГВС КАК ТипСхемыГВС,
	|	ДанныеОбъектовРасчета.ВидТепловогоПункта КАК ВидТепловогоПункта,
	|	ДанныеОбъектовРасчета.МКДГодПостройки КАК ГодПостройки,
	|	ДанныеОбъектовРасчета.МКДЭтажность КАК КоличествоЭтажей,
	|	ТарифныеКатегории.ВидБлагоустройства КАК ВидБлагоустройства,
	|	0 КАК КоличествоКомнат,
	|	0 КАК КоличествоПрописанных,
	|	ЗНАЧЕНИЕ(Перечисление.энргТипыСобственниковЖилья.ЧастнаяСобственность) КАК ВидСобственности,
	|	ВложенныйЗапрос.Поставщик КАК Поставщик,
	|	ЗНАЧЕНИЕ(Справочник.энргНаправлениеИспользованияТочекУчета.ОсновноеНаправление) КАК НаправлениеИспользованияТУ,
	|	НагрузкаПоУслугам.КоличествоЧасовРаботы КАК КоличествоЧасовРаботы,
	|	ТарифныеКатегории.ТарифнаяКатегория КАК ТарифнаяГруппа,
	|	0 КАК КоличествоСобственников,
	|	0 КАК КоличествоПроживающих,
	|	ВложенныйЗапрос.ПриборУчета КАК ПриборУчета,
	|	ВложенныйЗапрос.ПриборВведен КАК ПриборВведен,
	|	ДанныеОбъектовРасчета.МКД КАК Строение,
	|	ДанныеОбъектовРасчета.Помещение КАК Помещение,
	|	ВложенныйЗапрос.РасчетПоФактическомуПотреблению КАК РасчетПоФактическомуПотреблению,
	|	ВложенныйЗапрос.ДиаметрСечения КАК ДиаметрСечения
	|ПОМЕСТИТЬ ВсеПараметрыРасчета
	|ИЗ
	|	(ВЫБРАТЬ
	|		УслугиСпособРасчетаНорматива.ПериодНачисления КАК ПериодНачисления,
	|		УслугиСпособРасчетаНорматива.Район КАК Район,
	|		УслугиСпособРасчетаНорматива.ТочкаУчета КАК ТочкаУчета,
	|		УслугиСпособРасчетаНорматива.НомерПозиции КАК НомерПозиции,
	|		УслугиСпособРасчетаНорматива.ДатаРегистратора КАК ДатаРегистратора,
	|		УслугиСпособРасчетаНорматива.ДокРегистратор КАК ДокРегистратор,
	|		УслугиСпособРасчетаНорматива.УслугаПодключена КАК УслугаПодключена,
	|		УслугиСпособРасчетаНорматива.IDСтроки КАК IDСтроки,
	|		УслугиСпособРасчетаНорматива.Организация КАК Организация,
	|		УслугиСпособРасчетаНорматива.ДоговорЗаключен КАК ДоговорЗаключен,
	|		УслугиСпособРасчетаНорматива.ОбъектРасчета КАК ОбъектРасчета,
	|		УслугиСпособРасчетаНорматива.Договор КАК Договор,
	|		УслугиСпособРасчетаНорматива.ОбъектРасчетаПодключен КАК ОбъектРасчетаПодключен,
	|		УслугиСпособРасчетаНорматива.Услуга КАК Услуга,
	|		УслугиСпособРасчетаНорматива.СпособРасчетаНорматива КАК СпособРасчетаНорматива,
	|		УслугиСпособРасчетаНорматива.IDСтрокиВладельца КАК IDСтрокиВладельца,
	|		ЕСТЬNULL(бестЗаключениеДоговоровСЮридическимиЛицамиШкалыУслуг.Шкала, ЗНАЧЕНИЕ(Справочник.энргШкалыПриборовУчета.ПустаяСсылка)) КАК Шкала,
	|		ВЫБОР
	|			КОГДА бестЗаключениеДоговоровСЮридическимиЛицамиФормулыРасчетаУслуг.Ссылка ЕСТЬ NULL
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ КАК РасчетПоФормуле,
	|		ЕСТЬNULL(бестЗаключениеДоговоровСЮридическимиЛицамиФормулыРасчетаУслуг.ФормулаРасчета, """") КАК ФормулаРасчета,
	|		УслугиСпособРасчетаНорматива.СоставнаяУслуга КАК СоставнаяУслуга,
	|		УслугиСпособРасчетаНорматива.Поставщик КАК Поставщик,
	|		УслугиСпособРасчетаНорматива.ПриборУчета КАК ПриборУчета,
	|		УслугиСпособРасчетаНорматива.ПриборВведен КАК ПриборВведен,
	|		ЕСТЬNULL(бестЗаключениеДоговоровСЮридическимиЛицамиТарифныеКатегорииУслуги.РасчетПоФактическомуПотреблению, ЛОЖЬ) КАК РасчетПоФактическомуПотреблению,
	|		УслугиСпособРасчетаНорматива.ДиаметрСечения КАК ДиаметрСечения
	|	ИЗ
	|		УслугиСпособРасчетаНорматива КАК УслугиСпособРасчетаНорматива
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.бестЗаключениеДоговоровСЮридическимиЛицами.ФормулыРасчетаУслуг КАК бестЗаключениеДоговоровСЮридическимиЛицамиФормулыРасчетаУслуг
	|			ПО УслугиСпособРасчетаНорматива.ДокРегистратор = бестЗаключениеДоговоровСЮридическимиЛицамиФормулыРасчетаУслуг.Ссылка
	|				И УслугиСпособРасчетаНорматива.Услуга = бестЗаключениеДоговоровСЮридическимиЛицамиФормулыРасчетаУслуг.Услуга
	|				И (бестЗаключениеДоговоровСЮридическимиЛицамиФормулыРасчетаУслуг.Ссылка = &Ссылка)
	|				И УслугиСпособРасчетаНорматива.IDСтроки = бестЗаключениеДоговоровСЮридическимиЛицамиФормулыРасчетаУслуг.IDСтроки
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.бестЗаключениеДоговоровСЮридическимиЛицами.ШкалыУслуг КАК бестЗаключениеДоговоровСЮридическимиЛицамиШкалыУслуг
	|			ПО (бестЗаключениеДоговоровСЮридическимиЛицамиШкалыУслуг.Ссылка = &Ссылка)
	|				И УслугиСпособРасчетаНорматива.IDСтроки = бестЗаключениеДоговоровСЮридическимиЛицамиШкалыУслуг.IDСтроки
	|				И УслугиСпособРасчетаНорматива.Услуга = бестЗаключениеДоговоровСЮридическимиЛицамиШкалыУслуг.Услуга
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.бестЗаключениеДоговоровСЮридическимиЛицами.ТарифныеКатегорииУслуги КАК бестЗаключениеДоговоровСЮридическимиЛицамиТарифныеКатегорииУслуги
	|			ПО УслугиСпособРасчетаНорматива.ДокРегистратор = бестЗаключениеДоговоровСЮридическимиЛицамиТарифныеКатегорииУслуги.Ссылка
	|				И УслугиСпособРасчетаНорматива.Услуга = бестЗаключениеДоговоровСЮридическимиЛицамиТарифныеКатегорииУслуги.Услуга
	|				И УслугиСпособРасчетаНорматива.IDСтрокиВладельца = бестЗаключениеДоговоровСЮридическимиЛицамиТарифныеКатегорииУслуги.IDСтроки
	|				И (бестЗаключениеДоговоровСЮридическимиЛицамиТарифныеКатегорииУслуги.Ссылка = &Ссылка)) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗначениеНормативаГВС КАК ЗначениеНормативаГВС
	|		ПО ВложенныйЗапрос.ОбъектРасчета = ЗначениеНормативаГВС.ОбъектРасчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеОбъектовРасчета КАК ДанныеОбъектовРасчета
	|		ПО ВложенныйЗапрос.ОбъектРасчета = ДанныеОбъектовРасчета.ОбъектРасчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ НагрузкаПоУслугам КАК НагрузкаПоУслугам
	|		ПО ВложенныйЗапрос.Услуга = НагрузкаПоУслугам.Услуга
	|			И ВложенныйЗапрос.IDСтрокиВладельца = НагрузкаПоУслугам.IDСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТарифныеКатегории КАК ТарифныеКатегории
	|		ПО ВложенныйЗапрос.Услуга = ТарифныеКатегории.Услуга
	|			И ВложенныйЗапрос.IDСтрокиВладельца = ТарифныеКатегории.IDСтроки";
	
	Текст  = Текст + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Текст = Текст + Справочники.энргКлючиНормативов.ТекстОпределенияКлючейНорматива();
	
	Текст  = Текст + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";

	Текст  = Текст +
	"ВЫБРАТЬ
	|	ВсеПараметрыРасчета.*,
	|	КлючиНорматива.КлючНорматива КАК КлючНорматива
	|ИЗ
	|	ВсеПараметрыРасчета КАК ВсеПараметрыРасчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ КлючиНорматива КАК КлючиНорматива
	|		ПО (ВсеПараметрыРасчета.Услуга = КлючиНорматива.Услуга)
	|		И (ВсеПараметрыРасчета.НаправлениеИспользованияТУ = КлючиНорматива.НаправлениеИспользованияТУ)
	|		И (КлючиНорматива.Измеритель = ЗНАЧЕНИЕ(Справочник.энргНаправлениеИспользованияТочекУчета.ОсновноеНаправление))
	|		И (КлючиНорматива.Помещение = ВсеПараметрыРасчета.Помещение)
	|		И (КлючиНорматива.Строение = ВсеПараметрыРасчета.Строение)";
	
	Возврат Текст;	

КонецФункции

Функция ТекстЗапросаШкалыПриборовУчета() 
	
	Текст = 
	"ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	&Район КАК Район,
	|	&ПериодНачисления КАК ПериодНачисления,
	|	&Договор КАК Договор,
	|	ТаблицаОбъектыРасчета.ОбъектРасчета КАК ОбъектРасчета,
	|	ТаблицаТочкиУчета.ТочкаУчета КАК ТочкаУчета,
	|	ТаблицаПриборыУзловУчета.ПриборУчета КАК ПриборУчета,
	|	0 КАК НомерПозиции,
	|	ТаблицаШкалыПриборовУчета.Шкала КАК Шкала,
	|	бестЗаключениеДоговоровСЮридическимиЛицами.Ссылка КАК ДокРегистратор,
	|	бестЗаключениеДоговоровСЮридическимиЛицами.Дата КАК ДатаРегистратора,
	|	ВЫБОР
	|		КОГДА ТаблицаШкалыПриборовУчета.ВидДифференцированности = ЗНАЧЕНИЕ(Справочник.энргВидыДифференцированности.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.энргВидыДифференцированности.Однотарифный)
	|		ИНАЧЕ ТаблицаШкалыПриборовУчета.ВидДифференцированности
	|	КОНЕЦ КАК ВидДифференцированности,
	|	ТаблицаОбъектыРасчета.МКД КАК МКД
	|ИЗ
	|	Документ.бестЗаключениеДоговоровСЮридическимиЛицами.ОбъектыРасчета КАК ТаблицаОбъектыРасчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бестЗаключениеДоговоровСЮридическимиЛицами КАК бестЗаключениеДоговоровСЮридическимиЛицами
	|		ПО ТаблицаОбъектыРасчета.Ссылка = бестЗаключениеДоговоровСЮридическимиЛицами.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бестЗаключениеДоговоровСЮридическимиЛицами.ТочкиУчета КАК ТаблицаТочкиУчета
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бестЗаключениеДоговоровСЮридическимиЛицами.ПриборыУзловУчета КАК ТаблицаПриборыУзловУчета
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бестЗаключениеДоговоровСЮридическимиЛицами.ШкалыПриборовУчета КАК ТаблицаШкалыПриборовУчета
	|				ПО ТаблицаПриборыУзловУчета.Ссылка = ТаблицаШкалыПриборовУчета.Ссылка
	|					И ТаблицаПриборыУзловУчета.IDСтрокиШкалы = ТаблицаШкалыПриборовУчета.IDСтроки
	|			ПО ТаблицаТочкиУчета.Ссылка = ТаблицаПриборыУзловУчета.Ссылка
	|				И ТаблицаТочкиУчета.IDСтроки = ТаблицаПриборыУзловУчета.IDСтроки
	|				И (ТаблицаПриборыУзловУчета.Ссылка = &Ссылка)
	|		ПО ТаблицаОбъектыРасчета.Ссылка = ТаблицаТочкиУчета.Ссылка
	|			И ТаблицаОбъектыРасчета.IDСтроки = ТаблицаТочкиУчета.IDСтрокиВладельца
	|			И (ТаблицаОбъектыРасчета.Ссылка = &Ссылка)
	|			И (ТаблицаТочкиУчета.Ссылка = &Ссылка)
	|ГДЕ
	|	бестЗаключениеДоговоровСЮридическимиЛицами.Ссылка = &Ссылка
	|	И НЕ ТаблицаТочкиУчета.ПриборУчета = ЗНАЧЕНИЕ(Справочник.энргПриборыУчетаАбонента.ПустаяСсылка)
	|	И НЕ ТаблицаПриборыУзловУчета.ПриборУчета = ЗНАЧЕНИЕ(Справочник.энргПриборыУчетаАбонента.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Организация,
	|	&Район,
	|	&ПериодНачисления,
	|	&Договор,
	|	ТаблицаТочкиУчета.ОбъектРасчета,
	|	ТаблицаТочкиУчета.ТочкаУчета,
	|	ТаблицаПриборыУзловУчета.ПриборУчета,
	|	0,
	|	ТаблицаШкалыПриборовУчета.Шкала,
	|	бестОперацияСУслугамиНП.Ссылка,
	|	бестОперацияСУслугамиНП.Дата,
	|	ВЫБОР
	|		КОГДА ТаблицаШкалыПриборовУчета.ВидДифференцированности = ЗНАЧЕНИЕ(Справочник.энргВидыДифференцированности.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.энргВидыДифференцированности.Однотарифный)
	|		ИНАЧЕ ТаблицаШкалыПриборовУчета.ВидДифференцированности
	|	КОНЕЦ,
	|	ТаблицаТочкиУчета.ОбъектРасчета.МКД
	|ИЗ
	|	Документ.бестОперацияСУслугамиНП КАК бестОперацияСУслугамиНП
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бестОперацияСУслугамиНП.ТочкиУчета КАК ТаблицаТочкиУчета
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бестОперацияСУслугамиНП.ПриборыУзловУчета КАК ТаблицаПриборыУзловУчета
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бестОперацияСУслугамиНП.ШкалыПриборовУчета КАК ТаблицаШкалыПриборовУчета
	|				ПО ТаблицаПриборыУзловУчета.Ссылка = ТаблицаШкалыПриборовУчета.Ссылка
	|					И ТаблицаПриборыУзловУчета.IDСтрокиШкалы = ТаблицаШкалыПриборовУчета.IDСтроки
	|			ПО ТаблицаТочкиУчета.Ссылка = ТаблицаПриборыУзловУчета.Ссылка
	|				И ТаблицаТочкиУчета.IDСтроки = ТаблицаПриборыУзловУчета.IDСтроки
	|				И (ТаблицаПриборыУзловУчета.Ссылка = &Ссылка)
	|		ПО бестОперацияСУслугамиНП.Ссылка = ТаблицаТочкиУчета.Ссылка
	|			И (ТаблицаТочкиУчета.Ссылка = &Ссылка)
	|ГДЕ
	|	бестОперацияСУслугамиНП.Ссылка = &Ссылка
	|	И НЕ ТаблицаТочкиУчета.ПриборУчета = ЗНАЧЕНИЕ(Справочник.энргПриборыУчетаАбонента.ПустаяСсылка)
	|	И НЕ ТаблицаПриборыУзловУчета.ПриборУчета = ЗНАЧЕНИЕ(Справочник.энргПриборыУчетаАбонента.ПустаяСсылка)";
	
	Возврат Текст;
	
КонецФункции

Функция ТекстЗапросаПриборыУзловУчета() 
	
	Текст = 
	"ВЫБРАТЬ
	|	бестЗаключениеДоговоровСЮридическимиЛицами.Организация КАК Организация,
	|	бестЗаключениеДоговоровСЮридическимиЛицами.Район КАК Район,
	|	бестЗаключениеДоговоровСЮридическимиЛицами.ПериодНачисления КАК ПериодНачисления,
	|	бестЗаключениеДоговоровСЮридическимиЛицами.Договор КАК Договор,
	|	ТаблицаОбъектыРасчета.ОбъектРасчета КАК ОбъектРасчета,
	|	ТаблицаТочкиУчета.ТочкаУчета КАК ТочкаУчета,
	|	ТаблицаТочкиУчета.ПриборУчета КАК УзелУчета,
	|	ТаблицаПриборыУзловУчета.ПриборУчета КАК ПриборУчета,
	|	бестЗаключениеДоговоровСЮридическимиЛицами.Ссылка КАК ДокРегистратор,
	|	бестЗаключениеДоговоровСЮридическимиЛицами.Дата КАК ДатаРегистратора,
	|	0 КАК НомерПозиции,
	|	ИСТИНА КАК ПриборВведен
	|ИЗ
	|	Документ.бестЗаключениеДоговоровСЮридическимиЛицами КАК бестЗаключениеДоговоровСЮридическимиЛицами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бестЗаключениеДоговоровСЮридическимиЛицами.ОбъектыРасчета КАК ТаблицаОбъектыРасчета
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бестЗаключениеДоговоровСЮридическимиЛицами.ТочкиУчета КАК ТаблицаТочкиУчета
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бестЗаключениеДоговоровСЮридическимиЛицами.ПриборыУзловУчета КАК ТаблицаПриборыУзловУчета
	|				ПО ТаблицаТочкиУчета.Ссылка = ТаблицаПриборыУзловУчета.Ссылка
	|					И ТаблицаТочкиУчета.IDСтроки = ТаблицаПриборыУзловУчета.IDСтроки
	|			ПО ТаблицаОбъектыРасчета.Ссылка = ТаблицаТочкиУчета.Ссылка
	|				И ТаблицаОбъектыРасчета.IDСтроки = ТаблицаТочкиУчета.IDСтрокиВладельца
	|				И (ТаблицаТочкиУчета.Ссылка = &Ссылка)
	|		ПО бестЗаключениеДоговоровСЮридическимиЛицами.Ссылка = ТаблицаОбъектыРасчета.Ссылка
	|			И (ТаблицаОбъектыРасчета.Ссылка = &Ссылка)
	|ГДЕ
	|	бестЗаключениеДоговоровСЮридическимиЛицами.Ссылка = &Ссылка
	|	И НЕ ТаблицаТочкиУчета.ПриборУчета = ЗНАЧЕНИЕ(Справочник.энргПриборыУчетаАбонента.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	бестОперацияСУслугамиНП.Организация,
	|	бестОперацияСУслугамиНП.Район,
	|	бестОперацияСУслугамиНП.ПериодНачисления,
	|	бестОперацияСУслугамиНП.Договор,
	|	ТаблицаТочкиУчета.ОбъектРасчета,
	|	ТаблицаТочкиУчета.ТочкаУчета,
	|	ТаблицаТочкиУчета.ПриборУчета,
	|	ТаблицаПриборыУзловУчета.ПриборУчета,
	|	бестОперацияСУслугамиНП.Ссылка,
	|	бестОперацияСУслугамиНП.Дата,
	|	0,
	|	ИСТИНА
	|ИЗ
	|	Документ.бестОперацияСУслугамиНП КАК бестОперацияСУслугамиНП
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бестОперацияСУслугамиНП.ТочкиУчета КАК ТаблицаТочкиУчета
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бестОперацияСУслугамиНП.ПриборыУзловУчета КАК ТаблицаПриборыУзловУчета
	|			ПО ТаблицаТочкиУчета.Ссылка = ТаблицаПриборыУзловУчета.Ссылка
	|				И ТаблицаТочкиУчета.IDСтроки = ТаблицаПриборыУзловУчета.IDСтроки
	|		ПО бестОперацияСУслугамиНП.Ссылка = ТаблицаТочкиУчета.Ссылка
	|			И (ТаблицаТочкиУчета.Ссылка = &Ссылка)
	|ГДЕ
	|	бестОперацияСУслугамиНП.Ссылка = &Ссылка
	|	И НЕ ТаблицаПриборыУзловУчета.ПриборУчета = ЗНАЧЕНИЕ(Справочник.энргПриборыУчетаАбонента.ПустаяСсылка)";
	
	Возврат Текст;
	
КонецФункции

Функция ТекстЗапросаПодключениеУслуги() 
	
	Текст 	=
	"ВЫБРАТЬ
	|	бестОперацияСУслугамиНП.ПериодНачисления КАК ПериодНачисления,
	|	бестОперацияСУслугамиНП.Район КАК Район,
	|	бестОперацияСУслугамиНП.Ссылка КАК Ссылка,
	|	бестОперацияСУслугамиНП.Дата КАК Дата,
	|	бестОперацияСУслугамиНП.Договор КАК Договор,
	|	бестОперацияСУслугамиНП.Организация КАК Организация
	|ПОМЕСТИТЬ Шапка
	|ИЗ
	|	Документ.бестОперацияСУслугамиНП КАК бестОперацияСУслугамиНП
	|ГДЕ
	|	бестОперацияСУслугамиНП.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Шапка.ПериодНачисления КАК ПериодНачисления,
	|	Шапка.Организация КАК Организация,
	|	Шапка.Район КАК Район,
	|	Шапка.Договор КАК Договор,
	|	бестОперацияСУслугамиНПТочкиУчета.ОбъектРасчета КАК ОбъектРасчета,
	|	бестОперацияСУслугамиНПТочкиУчета.ТочкаУчета КАК ТочкаУчета,
	|	ЕСТЬNULL(бестОперацияСУслугамиНПТочкиУчета.Услуга, ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)) КАК Услуга,
	|	Шапка.Дата КАК ДатаРегистратора,
	|	Шапка.Ссылка КАК ДокРегистратор,
	|	ИСТИНА КАК ДоговорЗаключен,
	|	ИСТИНА КАК УслугаПодключена,
	|	ВЫБОР
	|		КОГДА бестОперацияСУслугамиНПТочкиУчета.ПриборУчета = ЗНАЧЕНИЕ(Справочник.энргПриборыУчетаАбонента.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПриборВведен,
	|	ВЫБОР
	|		КОГДА бестОперацияСУслугамиНПТочкиУчета.ПриборУчета = ЗНАЧЕНИЕ(Справочник.энргПриборыУчетаАбонента.ПустаяСсылка)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ &ПериодРегистрации
	|	КОНЕЦ КАК ДатаСостоянияПрибора,
	|	бестОперацияСУслугамиНПТочкиУчета.ПриборУчета КАК ПриборУчета,
	|	бестОперацияСУслугамиНПТочкиУчета.IDСтроки КАК IDСтроки,
	|	ИСТИНА КАК ОбъектРасчетаПодключен,
	|	бестОперацияСУслугамиНПТочкиУчета.СпособРасчетаНорматива КАК СпособРасчетаНорматива,
	|	бестОбъектыРасчета.МКД КАК МКД,
	|	бестОбъектыРасчета.МКД.КоличествоЭтажей КАК КоличествоЭтажей,
	|	бестОбъектыРасчета.МКД.ГодПостройки КАК ГодПостройки,
	|	бестОбъектыРасчета.Помещение КАК Помещение,
	|	бестОперацияСУслугамиНПТочкиУчета.IDОбъектаРасчета КАК IDОбъектаРасчета,
	|	бестОперацияСУслугамиНПТочкиУчета.ДиаметрСечения КАК ДиаметрСечения
	|ПОМЕСТИТЬ ДанныеШапкиТочкиУчета
	|ИЗ
	|	Шапка КАК Шапка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бестОперацияСУслугамиНП.ТочкиУчета КАК бестОперацияСУслугамиНПТочкиУчета
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.бестОбъектыРасчета КАК бестОбъектыРасчета
	|			ПО бестОперацияСУслугамиНПТочкиУчета.ОбъектРасчета = бестОбъектыРасчета.Ссылка
	|		ПО Шапка.Ссылка = бестОперацияСУслугамиНПТочкиУчета.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	бестЗначенияПлощадейНПСрезПоследних.Площадь КАК Площадь,
	|	бестЗначенияПлощадейНПСрезПоследних.ОбъектРасчета КАК ОбъектРасчета
	|ПОМЕСТИТЬ ЗначениеПлощадей
	|ИЗ
	|	РегистрСведений.бестЗначенияПлощадейНП.СрезПоследних(
	|			&МоментВремени,
	|			ВидПлощади = ЗНАЧЕНИЕ(Перечисление.энргВидыПлощадей.ОбщаяПлощадьНП)
	|				И ОбъектРасчета В
	|					(ВЫБРАТЬ
	|						ДанныеШапкиТочкиУчета.ОбъектРасчета
	|					ИЗ
	|						ДанныеШапкиТочкиУчета)) КАК бестЗначенияПлощадейНПСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеШапкиТочкиУчета.Организация КАК Организация,
	|	ДанныеШапкиТочкиУчета.Район КАК Район,
	|	ДанныеШапкиТочкиУчета.Договор КАК Договор,
	|	бестПотребителиГВССрезПоследних.ОбъектРасчета КАК ОбъектКонтрагента,
	|	ВЫБОР
	|		КОГДА бестПотребителиГВССрезПоследних.ТипНормы = ЗНАЧЕНИЕ(Перечисление.бестВидыПериодов.Часы)
	|			ТОГДА бестПотребителиГВССрезПоследних.Количество * бестПотребителиГВССрезПоследних.КоличествоРабочихЧасовВДень * бестТипыПотребителейГВС.НормаВЧас
	|		ИНАЧЕ бестПотребителиГВССрезПоследних.Количество * бестТипыПотребителейГВС.НормаВСутки
	|	КОНЕЦ КАК ЗначениеНормативаЗаДень
	|ПОМЕСТИТЬ ЗначениеНормыГВС
	|ИЗ
	|	РегистрСведений.бестПотребителиГВС.СрезПоследних(
	|			&МоментВремени,
	|			ОбъектРасчета В
	|				(ВЫБРАТЬ
	|					ДанныеШапкиТочкиУчета.ОбъектРасчета
	|				ИЗ
	|					ДанныеШапкиТочкиУчета)) КАК бестПотребителиГВССрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеШапкиТочкиУчета КАК ДанныеШапкиТочкиУчета
	|		ПО бестПотребителиГВССрезПоследних.ОбъектРасчета = ДанныеШапкиТочкиУчета.ОбъектРасчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.бестТипыПотребителейГВС КАК бестТипыПотребителейГВС
	|		ПО бестПотребителиГВССрезПоследних.Тип = бестТипыПотребителейГВС.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	бестНагрузкаПоУслугамНПСрезПоследних.ОбъектРасчета КАК ОбъектРасчета,
	|	бестНагрузкаПоУслугамНПСрезПоследних.Услуга КАК Услуга,
	|	бестНагрузкаПоУслугамНПСрезПоследних.Нагрузка КАК Нагрузка
	|ПОМЕСТИТЬ ЗначенияНагрузки
	|ИЗ
	|	РегистрСведений.бестНагрузкаПоУслугамНП.СрезПоследних(
	|			&МоментВремени,
	|			ОбъектРасчета В
	|				(ВЫБРАТЬ
	|					ДанныеШапкиТочкиУчета.ОбъектРасчета
	|				ИЗ
	|					ДанныеШапкиТочкиУчета)) КАК бестНагрузкаПоУслугамНПСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеШапкиТочкиУчета КАК ДанныеШапкиТочкиУчета
	|		ПО бестНагрузкаПоУслугамНПСрезПоследних.ОбъектРасчета = ДанныеШапкиТочкиУчета.ОбъектРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	бестУчастиеОбъектовВРаспределенииРесурсовВМКДСрезПоследних.ОбъектРасчета КАК ОбъектРасчета
	|ПОМЕСТИТЬ ВТ_УчастиеВРаспределенииМКД
	|ИЗ
	|	РегистрСведений.бестУчастиеОбъектовВРаспределенииРесурсовВМКД.СрезПоследних(
	|			&МоментВремени,
	|			ОбъектРасчета В
	|				(ВЫБРАТЬ
	|					ДанныеШапкиТочкиУчета.ОбъектРасчета
	|				ИЗ
	|					ДанныеШапкиТочкиУчета)) КАК бестУчастиеОбъектовВРаспределенииРесурсовВМКДСрезПоследних
	|ГДЕ
	|	бестУчастиеОбъектовВРаспределенииРесурсовВМКДСрезПоследних.Участвует
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	энргТипСхемыГВССрезПоследних.Организация КАК Организация,
	|	энргТипСхемыГВССрезПоследних.Район КАК Район,
	|	энргТипСхемыГВССрезПоследних.МКД КАК МКД,
	|	энргТипСхемыГВССрезПоследних.ТипСхемы КАК ТипСхемы
	|ПОМЕСТИТЬ ВТ_ТипСхемыМКД
	|ИЗ
	|	РегистрСведений.энргТипСхемыГВС.СрезПоследних(
	|			&МоментВремени,
	|			МКД В
	|				(ВЫБРАТЬ
	|					ДанныеШапкиТочкиУчета.МКД
	|				ИЗ
	|					ДанныеШапкиТочкиУчета КАК ДанныеШапкиТочкиУчета)) КАК энргТипСхемыГВССрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	энргТипПринадлежностиМКДСрезПоследних.Организация КАК Организация,
	|	энргТипПринадлежностиМКДСрезПоследних.Район КАК Район,
	|	энргТипПринадлежностиМКДСрезПоследних.МКД КАК МКД,
	|	энргТипПринадлежностиМКДСрезПоследних.ВидТепловогоПункта КАК ВидТепловогоПункта
	|ПОМЕСТИТЬ ВТ_ВидТепловогоПункта
	|ИЗ
	|	РегистрСведений.энргТипПринадлежностиМКД.СрезПоследних(
	|			&МоментВремени,
	|			МКД В
	|				(ВЫБРАТЬ
	|					ДанныеШапкиТочкиУчета.МКД
	|				ИЗ
	|					ДанныеШапкиТочкиУчета КАК ДанныеШапкиТочкиУчета)) КАК энргТипПринадлежностиМКДСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеШапкиТочкиУчета.ПериодНачисления КАК ПериодНачисления,
	|	ДанныеШапкиТочкиУчета.Организация КАК Организация,
	|	ДанныеШапкиТочкиУчета.Район КАК Район,
	|	ДанныеШапкиТочкиУчета.Договор КАК Договор,
	|	ДанныеШапкиТочкиУчета.ОбъектРасчета КАК ОбъектРасчета,
	|	ДанныеШапкиТочкиУчета.ТочкаУчета КАК ТочкаУчета,
	|	ВЫБОР
	|		КОГДА бестОперацияСУслугамиНППоставщикиСоставныхУслуг.Ссылка ЕСТЬ NULL
	|			ТОГДА ДанныеШапкиТочкиУчета.Услуга
	|		ИНАЧЕ бестОперацияСУслугамиНППоставщикиСоставныхУслуг.ЧастьСоставнойУслуги
	|	КОНЕЦ КАК Услуга,
	|	ДанныеШапкиТочкиУчета.ПриборУчета КАК ПриборУчета,
	|	ДанныеШапкиТочкиУчета.ДатаРегистратора КАК ДатаРегистратора,
	|	ДанныеШапкиТочкиУчета.ДокРегистратор КАК ДокРегистратор,
	|	ДанныеШапкиТочкиУчета.ДоговорЗаключен КАК ДоговорЗаключен,
	|	ДанныеШапкиТочкиУчета.УслугаПодключена КАК УслугаПодключена,
	|	ДанныеШапкиТочкиУчета.ПриборВведен КАК ПриборВведен,
	|	ДанныеШапкиТочкиУчета.ДатаСостоянияПрибора КАК ДатаСостоянияПрибора,
	|	ДанныеШапкиТочкиУчета.IDСтроки КАК IDСтроки,
	|	ДанныеШапкиТочкиУчета.ОбъектРасчетаПодключен КАК ОбъектРасчетаПодключен,
	|	ДанныеШапкиТочкиУчета.СпособРасчетаНорматива КАК СпособРасчетаНорматива,
	|	ДанныеШапкиТочкиУчета.МКД КАК МКД,
	|	ДанныеШапкиТочкиУчета.КоличествоЭтажей КАК КоличествоЭтажей,
	|	ДанныеШапкиТочкиУчета.ГодПостройки КАК ГодПостройки,
	|	ДанныеШапкиТочкиУчета.Помещение КАК Помещение,
	|	ДанныеШапкиТочкиУчета.IDОбъектаРасчета КАК IDОбъектаРасчета,
	|	ДанныеШапкиТочкиУчета.ДиаметрСечения КАК ДиаметрСечения,
	|	ВЫБОР
	|		КОГДА бестОперацияСУслугамиНППоставщикиСоставныхУслуг.Ссылка ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|		ИНАЧЕ ДанныеШапкиТочкиУчета.Услуга
	|	КОНЕЦ КАК СоставнаяУслуга
	|ПОМЕСТИТЬ ДанныеШапкиСоставныеУслуги
	|ИЗ
	|	ДанныеШапкиТочкиУчета КАК ДанныеШапкиТочкиУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.бестОперацияСУслугамиНП.ПоставщикиСоставныхУслуг КАК бестОперацияСУслугамиНППоставщикиСоставныхУслуг
	|		ПО ДанныеШапкиТочкиУчета.ДокРегистратор = бестОперацияСУслугамиНППоставщикиСоставныхУслуг.Ссылка
	|			И ДанныеШапкиТочкиУчета.IDСтроки = бестОперацияСУслугамиНППоставщикиСоставныхУслуг.IDСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеШапкиСоставныеУслуги.ПериодНачисления КАК ПериодНачисления,
	|	ДанныеШапкиСоставныеУслуги.Район КАК Район,
	|	ДанныеШапкиСоставныеУслуги.Услуга КАК Услуга,
	|	ДанныеШапкиСоставныеУслуги.ТочкаУчета КАК ТочкаУчета,
	|	0 КАК НомерПозиции,
	|	&ПериодРегистрации КАК ПериодРегистрации,
	|	ДанныеШапкиСоставныеУслуги.ДатаРегистратора КАК ДатаРегистратора,
	|	ДанныеШапкиСоставныеУслуги.ДокРегистратор КАК ДокРегистратор,
	|	ДанныеШапкиСоставныеУслуги.УслугаПодключена КАК УслугаПодключена,
	|	ДанныеШапкиСоставныеУслуги.ПриборВведен КАК ПриборВведен,
	|	ДанныеШапкиСоставныеУслуги.ПриборУчета КАК ПриборУчета,
	|	ДанныеШапкиСоставныеУслуги.ДатаСостоянияПрибора КАК ДатаСостоянияПрибора,
	|	ВЫБОР
	|		КОГДА НЕ ЗначениеНормыГВС.ЗначениеНормативаЗаДень ЕСТЬ NULL
	|			ТОГДА ЗначениеНормыГВС.ЗначениеНормативаЗаДень
	|	КОНЕЦ КАК НормаПотребления,
	|	ЗначенияНагрузки.Нагрузка КАК ЗначениеНагрузки,
	|	ДанныеШапкиСоставныеУслуги.ДоговорЗаключен КАК ДоговорЗаключен,
	|	ДанныеШапкиСоставныеУслуги.ОбъектРасчетаПодключен КАК ОбъектРасчетаПодключен,
	|	ЕСТЬNULL(ЗначениеНормыГВС.ЗначениеНормативаЗаДень, 0) КАК ЗначениеНормативаЗаДень,
	|	ДанныеШапкиСоставныеУслуги.Договор КАК Договор,
	|	ДанныеШапкиСоставныеУслуги.ОбъектРасчета КАК ОбъектРасчета,
	|	ДанныеШапкиСоставныеУслуги.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ВТ_УчастиеВРаспределенииМКД.ОбъектРасчета ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОбъектУчаствуетВРаспределенииМКД,
	|	ДанныеШапкиСоставныеУслуги.СпособРасчетаНорматива КАК СпособРасчетаНорматива,
	|	ВЫБОР
	|		КОГДА бестОперацияСУслугамиНПФормулыРасчетаУслуг.Ссылка ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК РасчетПоФормуле,
	|	ЕСТЬNULL(бестОперацияСУслугамиНПФормулыРасчетаУслуг.ФормулаРасчета, """") КАК ФормулаРасчета,
	|	ЕСТЬNULL(ВТ_ТипСхемыМКД.ТипСхемы, ЗНАЧЕНИЕ(Перечисление.энргТипыСхемТеплоснабжения.ПустаяСсылка)) КАК ТипСхемыГВС,
	|	ЕСТЬNULL(ВТ_ВидТепловогоПункта.ВидТепловогоПункта, ЗНАЧЕНИЕ(Перечисление.энргВидыТепловыхПунктов.ПустаяСсылка)) КАК ВидТепловогоПункта,
	|	ДанныеШапкиСоставныеУслуги.МКД КАК МКД,
	|	ДанныеШапкиСоставныеУслуги.КоличествоЭтажей КАК КоличествоЭтажей,
	|	ДанныеШапкиСоставныеУслуги.ГодПостройки КАК ГодПостройки,
	|	ЕСТЬNULL(бестОперацияСУслугамиНПТарифныеКатегорииУслуги.ВидБлагоустройства, ЗНАЧЕНИЕ(Справочник.энргВидыБлагоустройств.ПустаяСсылка)) КАК ВидБлагоустройства,
	|	бестОперацияСУслугамиНПТарифныеКатегорииУслуги.ТарифнаяКатегория КАК ТарифнаяКатегория,
	|	ДанныеШапкиСоставныеУслуги.Помещение КАК Помещение,
	|	бестОперацияСУслугамиНПТарифныеКатегорииУслуги.РасчетПоФактическомуПотреблению КАК РасчетПоФактическомуПотреблению,
	|	ДанныеШапкиСоставныеУслуги.ДиаметрСечения КАК ДиаметрСечения,
	|	ДанныеШапкиСоставныеУслуги.СоставнаяУслуга КАК СоставнаяУслуга
	|ПОМЕСТИТЬ ОбщиеДанные
	|ИЗ
	|	ДанныеШапкиСоставныеУслуги КАК ДанныеШапкиСоставныеУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗначениеНормыГВС КАК ЗначениеНормыГВС
	|		ПО ДанныеШапкиСоставныеУслуги.Договор = ЗначениеНормыГВС.Договор
	|			И ДанныеШапкиСоставныеУслуги.ОбъектРасчета = ЗначениеНормыГВС.ОбъектКонтрагента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗначенияНагрузки КАК ЗначенияНагрузки
	|		ПО ДанныеШапкиСоставныеУслуги.ОбъектРасчета = ЗначенияНагрузки.ОбъектРасчета
	|			И ДанныеШапкиСоставныеУслуги.Услуга = ЗначенияНагрузки.Услуга
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчастиеВРаспределенииМКД КАК ВТ_УчастиеВРаспределенииМКД
	|		ПО ДанныеШапкиСоставныеУслуги.ОбъектРасчета = ВТ_УчастиеВРаспределенииМКД.ОбъектРасчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.бестОперацияСУслугамиНП.ФормулыРасчетаУслуг КАК бестОперацияСУслугамиНПФормулыРасчетаУслуг
	|		ПО ДанныеШапкиСоставныеУслуги.IDСтроки = бестОперацияСУслугамиНПФормулыРасчетаУслуг.IDСтроки
	|			И ДанныеШапкиСоставныеУслуги.Услуга = бестОперацияСУслугамиНПФормулыРасчетаУслуг.Услуга
	|			И (бестОперацияСУслугамиНПФормулыРасчетаУслуг.Ссылка = &Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТипСхемыМКД КАК ВТ_ТипСхемыМКД
	|		ПО ДанныеШапкиСоставныеУслуги.Организация = ВТ_ТипСхемыМКД.Организация
	|			И ДанныеШапкиСоставныеУслуги.Район = ВТ_ТипСхемыМКД.Район
	|			И ДанныеШапкиСоставныеУслуги.МКД = ВТ_ТипСхемыМКД.МКД
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВидТепловогоПункта КАК ВТ_ВидТепловогоПункта
	|		ПО ДанныеШапкиСоставныеУслуги.Организация = ВТ_ВидТепловогоПункта.Организация
	|			И ДанныеШапкиСоставныеУслуги.Район = ВТ_ВидТепловогоПункта.Район
	|			И ДанныеШапкиСоставныеУслуги.МКД = ВТ_ВидТепловогоПункта.МКД
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.бестОперацияСУслугамиНП.ТарифныеКатегорииУслуги КАК бестОперацияСУслугамиНПТарифныеКатегорииУслуги
	|		ПО ДанныеШапкиСоставныеУслуги.Услуга = бестОперацияСУслугамиНПТарифныеКатегорииУслуги.Услуга
	|			И ДанныеШапкиСоставныеУслуги.IDОбъектаРасчета = бестОперацияСУслугамиНПТарифныеКатегорииУслуги.IDСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбщиеДанные.ПериодНачисления КАК ПериодНачисления,
	|	ОбщиеДанные.Район КАК Район,
	|	ОбщиеДанные.Услуга КАК Услуга,
	|	ОбщиеДанные.ТочкаУчета КАК ТочкаУчета,
	|	ОбщиеДанные.НомерПозиции КАК НомерПозиции,
	|	ОбщиеДанные.ПериодРегистрации КАК ПериодРегистрации,
	|	ОбщиеДанные.ДатаРегистратора КАК ДатаРегистратора,
	|	ОбщиеДанные.ДокРегистратор КАК ДокРегистратор,
	|	ОбщиеДанные.УслугаПодключена КАК УслугаПодключена,
	|	ОбщиеДанные.ПриборВведен КАК ПриборВведен,
	|	ОбщиеДанные.ПриборУчета КАК ПриборУчета,
	|	ОбщиеДанные.ДатаСостоянияПрибора КАК ДатаСостоянияПрибора,
	|	ЕСТЬNULL(ЗначениеПлощадей.Площадь, 0) КАК ЗначениеПлощади,
	|	ОбщиеДанные.НормаПотребления КАК НормаПотребления,
	|	ИСТИНА КАК МенялосьСостояниеПУ,
	|	ИСТИНА КАК МенялосьСостояниеФормулы,
	|	ЗначениеПлощадей.Площадь КАК Площадь,
	|	ОбщиеДанные.ЗначениеНагрузки КАК ЗначениеНагрузки,
	|	ОбщиеДанные.ДоговорЗаключен КАК ДоговорЗаключен,
	|	ОбщиеДанные.ОбъектРасчетаПодключен КАК ОбъектРасчетаПодключен,
	|	ОбщиеДанные.ЗначениеНормативаЗаДень КАК ЗначениеНормативаЗаДень,
	|	ОбщиеДанные.Договор КАК Договор,
	|	ОбщиеДанные.ОбъектРасчета КАК ОбъектРасчета,
	|	ОбщиеДанные.Организация КАК Организация,
	|	ОбщиеДанные.ОбъектУчаствуетВРаспределенииМКД КАК ОбъектУчаствуетВРаспределенииМКД,
	|	ОбщиеДанные.СпособРасчетаНорматива КАК СпособРасчетаНорматива,
	|	ОбщиеДанные.РасчетПоФормуле КАК РасчетПоФормуле,
	|	ОбщиеДанные.ФормулаРасчета КАК ФормулаРасчета,
	|	&Поставщик КАК Поставщик,
	|	ОбщиеДанные.ТипСхемыГВС КАК ТипСхемыГВС,
	|	ОбщиеДанные.ВидТепловогоПункта КАК ВидТепловогоПункта,
	|	ОбщиеДанные.МКД КАК МКД,
	|	ОбщиеДанные.КоличествоЭтажей КАК КоличествоЭтажей,
	|	ОбщиеДанные.ГодПостройки КАК ГодПостройки,
	|	ОбщиеДанные.ТарифнаяКатегория КАК ТарифнаяГруппа,
	|	ОбщиеДанные.ВидБлагоустройства КАК ВидБлагоустройства,
	|	0 КАК КоличествоКомнат,
	|	0 КАК КоличествоПрописанных,
	|	0 КАК КоличествоПроживающих,
	|	0 КАК КоличествоСобственников,
	|	ЗНАЧЕНИЕ(Перечисление.энргТипыСобственниковЖилья.ЧастнаяСобственность) КАК ВидСобственности,
	|	ЗНАЧЕНИЕ(Справочник.энргНаправлениеИспользованияТочекУчета.ОсновноеНаправление) КАК НаправлениеИспользованияТУ,
	|	ОбщиеДанные.Помещение КАК Помещение,
	|	ОбщиеДанные.МКД КАК Строение,
	|	ОбщиеДанные.РасчетПоФактическомуПотреблению КАК РасчетПоФактическомуПотреблению,
	|	ОбщиеДанные.ДиаметрСечения КАК ДиаметрСечения,
	|	ОбщиеДанные.СоставнаяУслуга КАК СоставнаяУслуга
	|ПОМЕСТИТЬ ВсеПараметрыРасчета
	|ИЗ
	|	ОбщиеДанные КАК ОбщиеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗначениеПлощадей КАК ЗначениеПлощадей
	|		ПО ОбщиеДанные.ОбъектРасчета = ЗначениеПлощадей.ОбъектРасчета";
	
	Текст  = Текст + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Текст = Текст + Справочники.энргКлючиНормативов.ТекстОпределенияКлючейНорматива();
	
	Текст  = Текст + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Текст  = Текст +
	"ВЫБРАТЬ
	|	ВсеПараметрыРасчета.*,
	|	КлючиНорматива.КлючНорматива КАК КлючНорматива
	|ИЗ
	|	ВсеПараметрыРасчета КАК ВсеПараметрыРасчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ КлючиНорматива КАК КлючиНорматива
	|		ПО (ВсеПараметрыРасчета.Услуга = КлючиНорматива.Услуга)
	|		И (ВсеПараметрыРасчета.НаправлениеИспользованияТУ = КлючиНорматива.НаправлениеИспользованияТУ)";
	
	Возврат Текст;	

	
КонецФункции

#КонецОбласти

#Область ОсновныеПроцедурыРаботыСПериодомДействия

Процедура ЗаполнитьНомераПозицийНП(МВТ,Параметры,ИмяТаблицы,Увеличивать = ложь)
	
	СоотвествиеПолей = СоотвествиеПолейНП();
	Запрос  = Новый запрос;
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.УстановитьПараметр("ПериодНачисления",параметры.ПериодНачисления);
	ПараметрыЗапроса  = Параметры.ПараметрыЗапроса;
	для Каждого стр из ПараметрыЗапроса цикл
		Запрос.УстановитьПараметр(стр.ключ,стр.Значение);
	КонецЦикла; 

	Текст = 
	"ВЫБРАТЬ
	|	бестНомераСтрокСтабильногоПериодаНП.ПериодНачисления КАК ПериодНачисления,
	|	бестНомераСтрокСтабильногоПериодаНП.Район КАК Район,
	|	бестНомераСтрокСтабильногоПериодаНП.Организация КАК Организация,
	|	бестНомераСтрокСтабильногоПериодаНП.Договор КАК Договор,
	|	бестНомераСтрокСтабильногоПериодаНП.ОбъектРасчета КАК ОбъектРасчета,
	|	бестНомераСтрокСтабильногоПериодаНП.Услуга КАК Услуга,
	|	бестНомераСтрокСтабильногоПериодаНП.ТочкаУчета КАК точкаУчета,
	|	МАКСИМУМ(бестНомераСтрокСтабильногоПериодаНП.НомерПозиции) КАК НомерПозиции,
	|	бестНомераСтрокСтабильногоПериодаНП.МКД КАК МКД
	|ПОМЕСТИТЬ МаксНомерПозиции
	|ИЗ
	|	РегистрСведений.бестНомераСтрокСтабильногоПериодаНП КАК бестНомераСтрокСтабильногоПериодаНП
	|ГДЕ
	|	бестНомераСтрокСтабильногоПериодаНП.ПериодНачисления = &ПериодНачисления
	|	И бестНомераСтрокСтабильногоПериодаНП.Район = &Район
	|	И бестНомераСтрокСтабильногоПериодаНП.Организация = &Организация
	|	И бестНомераСтрокСтабильногоПериодаНП.Договор = &Договор
	|
	|СГРУППИРОВАТЬ ПО
	|	бестНомераСтрокСтабильногоПериодаНП.ПериодНачисления,
	|	бестНомераСтрокСтабильногоПериодаНП.Район,
	|	бестНомераСтрокСтабильногоПериодаНП.Организация,
	|	бестНомераСтрокСтабильногоПериодаНП.Договор,
	|	бестНомераСтрокСтабильногоПериодаНП.ОбъектРасчета,
	|	бестНомераСтрокСтабильногоПериодаНП.Услуга,
	|	бестНомераСтрокСтабильногоПериодаНП.ТочкаУчета,
	|	бестНомераСтрокСтабильногоПериодаНП.МКД";

	Текст = Текст + Символы.ПС;
	Текст = Текст + ";";
	Текст = Текст + Символы.ПС;
	Текст = Текст + "////////////////////";
 
	Текст = Текст + Символы.ПС;
	Текст = Текст + "ВЫБРАТЬ
	|";
	Сч = 0;
	Измерения  = Параметры.Измерения;
	Ресурсы  	= Параметры.ресурсы;
	для Каждого стр из СоотвествиеПолей цикл
		Сч = Сч + 1;
		ЕстьПоле 	= Измерения.найти(стр.ключ) <>Неопределено или Ресурсы.найти(стр.ключ) <>Неопределено;		
		Если ЕстьПоле тогда
			Текст 	= Текст +?(Сч = 1 ,"",", ")+ ИмяТаблицы + "." + стр.ключ + " как " + стр.ключ+ Символы.ПС;
		иначе
			Текст 	= Текст +?(Сч = 1 ,"",", ")+ "МаксНомерПозиции" + "." + стр.ключ + " как " + стр.ключ+ Символы.ПС;
		КонецЕсли;  		
	КонецЦикла;
	
	для Каждого стр из Ресурсы цикл
		Сч = Сч + 1;
		Текст = Текст +", "+ ИмяТаблицы + "." + стр + " как " + стр+ Символы.ПС;
	КонецЦикла;	
	
	Текст = Текст  + "
	|ПОМЕСТИТЬ НомераПозиций" + ИмяТаблицы + " 
	|ИЗ 
	|" +  ИмяТаблицы + " как " + ИмяТаблицы + "
	| ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаксНомерПозиции КАК МаксНомерПозиции";  
	
	Текст = Текст + "
	| по ";
	
	Сч = 0;
	для Каждого стр из Измерения цикл
		Текст = Текст+?(Сч= 0 ,""," и ") +ИмяТаблицы+"."+стр + "=МаксНомерПозиции." + стр + Символы.ПС;
		Сч = Сч + 1;
	КонецЦикла;
	
			
	Запрос.Текст = Текст;
	Запрос.Выполнить();
	
	ДобавитьСтрокуСтабильногоПериодаНП(МВТ,Параметры,ИмяТаблицы,Увеличивать);
	
КонецПроцедуры

Процедура ДобавитьСтрокуСтабильногоПериодаНП(МВТ,Параметры,ИмяТаблицы,Увеличивать)
	
	РесурсыРегистра 										= РесурсыСтабильногоПериодаНП();
	РесурсыРегистраШкал										= РесурсыСтабильногоПериодаШкалНП();
	РесурсыРегистраПриборыУзлов								= РесурсыСтабильногоПериодаПриборыУзловУчетаНП();

	Ресурсы  												= Параметры.Ресурсы;	 
	Запрос  												= Новый Запрос;
	Запрос.МенеджерВременныхТаблиц 							= МВТ;
	Запрос.УстановитьПараметр("Ссылка",				Параметры.ссылка);
	Запрос.УстановитьПараметр("ПериодРегистрации",	Параметры.ПараметрыЗапроса.ПериодРегистрации);
	Запрос.УстановитьПараметр("ДатаДок",			Параметры.ДатаДок);
	
	Текст 											=  	
	"ВЫБРАТЬ
	|	бестСтабильныеПериодыПриборыУзловУчета.Организация КАК Организация,
	|	бестСтабильныеПериодыПриборыУзловУчета.ПериодНачисления КАК ПериодНачисления,
	|	бестСтабильныеПериодыПриборыУзловУчета.Район КАК Район,
	|	бестСтабильныеПериодыПриборыУзловУчета.Договор КАК Договор,
	|	бестСтабильныеПериодыПриборыУзловУчета.ОбъектРасчета КАК ОбъектРасчета,
	|	бестСтабильныеПериодыПриборыУзловУчета.ТочкаУчета КАК ТочкаУчета,
	|	бестСтабильныеПериодыПриборыУзловУчета.УзелУчета КАК УзелУчета,
	|	бестСтабильныеПериодыПриборыУзловУчета.ПриборУчета КАК ПриборУчета,
	|	бестСтабильныеПериодыПриборыУзловУчета.НомерПозиции КАК НомерПозиции,
	|	&Ссылка КАК ДокРегистратор,
	|	&ДатаДок КАК ДатаРегистратора,
	|	бестСтабильныеПериодыПриборыУзловУчета.ПриборВведен КАК ПриборВведен,
	|	бестСтабильныеПериодыПриборыУзловУчета.ДатаСостоянияПрибора КАК ДатаСостоянияПрибора,
	|	бестСтабильныеПериодыПриборыУзловУчета.КоэффициентПУ КАК КоэффициентПУ
	|ПОМЕСТИТЬ НомераПозицийПриборыУзловУчета" + ИмяТаблицы + " 
	|ИЗ
	|	НомераПозиций" + ИмяТаблицы + " КАК НомераПозиций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бестСтабильныеПериодыПриборыУзловУчета КАК бестСтабильныеПериодыПриборыУзловУчета
	|		ПО НомераПозиций.Организация = бестСтабильныеПериодыПриборыУзловУчета.Организация
	|			И НомераПозиций.ПериодНачисления = бестСтабильныеПериодыПриборыУзловУчета.ПериодНачисления
	|			И НомераПозиций.Район = бестСтабильныеПериодыПриборыУзловУчета.Район
	|			И НомераПозиций.Договор = бестСтабильныеПериодыПриборыУзловУчета.Договор
	|			И НомераПозиций.ОбъектРасчета = бестСтабильныеПериодыПриборыУзловУчета.ОбъектРасчета
	|			И НомераПозиций.ТочкаУчета = бестСтабильныеПериодыПриборыУзловУчета.ТочкаУчета
	|			И НомераПозиций.НомерПозиции = бестСтабильныеПериодыПриборыУзловУчета.НомерПозиции";

	Текст 											= Текст + "	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	

	Текст 													=  Текст + 	
	"ВЫБРАТЬ
	|	НомераПозиций.ПериодНачисления,
	|	НомераПозиций.Организация,
	|	НомераПозиций.Район,
	|	НомераПозиций.Договор,
	|	НомераПозиций.ОбъектРасчета,
	|	НомераПозиций.МКД,
	|	НомераПозиций.Услуга,
	|	НомераПозиций.ТочкаУчета,
	|	НомераПозиций.НомерПозиции + 1 КАК НомерПозиции,
	|	&ПериодРегистрации КАК ПериодРегистрации,";
	для Каждого стр из РесурсыРегистра цикл 		
		ЕстьРесурс 											= Ресурсы.найти(стр) <> Неопределено;
		Текст 												= Текст + Символы.ПС + ?(ЕстьРесурс,"НомераПозиций","бестСтабильныеПериодыНП") + "." + стр  + " как " + стр + ",";
	КонецЦикла;
	
	
	
	Текст =Текст +"			 
	|	&Ссылка КАК ДокРегистратор,
	|	&ДатаДок КАК ДатаРегистратора
	|ИЗ
	|	НомераПозиций" + ИмяТаблицы + " КАК НомераПозиций
	|		внутреннее СОЕДИНЕНИЕ РегистрСведений.бестСтабильныеПериодыНП КАК бестСтабильныеПериодыНП
	|		ПО НомераПозиций.ПериодНачисления = бестСтабильныеПериодыНП.ПериодНачисления
	|			И НомераПозиций.Организация = бестСтабильныеПериодыНП.Организация
	|			И НомераПозиций.Район = бестСтабильныеПериодыНП.Район
	|			И НомераПозиций.Договор = бестСтабильныеПериодыНП.Договор
	|			И НомераПозиций.ОбъектРасчета = бестСтабильныеПериодыНП.ОбъектРасчета
	|			И НомераПозиций.МКД = бестСтабильныеПериодыНП.МКД
	|			И НомераПозиций.Услуга = бестСтабильныеПериодыНП.Услуга
	|			И НомераПозиций.ТочкаУчета = бестСтабильныеПериодыНП.ТочкаУчета
	|			И НомераПозиций.НомерПозиции = бестСтабильныеПериодыНП.НомерПозиции";
	
	//приборы узлов учета
	
	
	Текст 											= Текст + "	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Текст 											= Текст + 	
	"ВЫБРАТЬ
	|	НомераПозицийПриборыУзловУчета.Организация КАК Организация,
	|	НомераПозицийПриборыУзловУчета.ПериодНачисления КАК ПериодНачисления,
	|	НомераПозицийПриборыУзловУчета.Район КАК Район,
	|	НомераПозицийПриборыУзловУчета.Договор КАК Договор,
	|	НомераПозицийПриборыУзловУчета.ОбъектРасчета КАК ОбъектРасчета,
	|	НомераПозицийПриборыУзловУчета.ТочкаУчета КАК ТочкаУчета,
	|	НомераПозицийПриборыУзловУчета.УзелУчета КАК УзелУчета,
	|	НомераПозицийПриборыУзловУчета.ПриборУчета КАК ПриборУчета,
	|	НомераПозицийПриборыУзловУчета.НомерПозиции + 1 КАК НомерПозиции,
	|	НомераПозицийПриборыУзловУчета.ДокРегистратор КАК ДокРегистратор,
	|	НомераПозицийПриборыУзловУчета.ДатаРегистратора КАК ДатаРегистратора,
	|	МАКСИМУМ(НомераПозицийПриборыУзловУчета.ПриборВведен) КАК ПриборВведен,
	|	МАКСИМУМ(НомераПозицийПриборыУзловУчета.ДатаСостоянияПрибора) КАК ДатаСостоянияПрибора,
	|	МАКСИМУМ(НомераПозицийПриборыУзловУчета.КоэффициентПУ) КАК КоэффициентПУ
	|ИЗ
	|	НомераПозицийПриборыУзловУчета" + ИмяТаблицы + " КАК НомераПозицийПриборыУзловУчета
	|
	|СГРУППИРОВАТЬ ПО
	|	НомераПозицийПриборыУзловУчета.Организация,
	|	НомераПозицийПриборыУзловУчета.ПериодНачисления,
	|	НомераПозицийПриборыУзловУчета.Район,
	|	НомераПозицийПриборыУзловУчета.Договор,
	|	НомераПозицийПриборыУзловУчета.ОбъектРасчета,
	|	НомераПозицийПриборыУзловУчета.ТочкаУчета,
	|	НомераПозицийПриборыУзловУчета.УзелУчета,
	|	НомераПозицийПриборыУзловУчета.ПриборУчета,
	|	НомераПозицийПриборыУзловУчета.НомерПозиции + 1,
	|	НомераПозицийПриборыУзловУчета.ДокРегистратор,
	|	НомераПозицийПриборыУзловУчета.ДатаРегистратора";
	
	
	ДобавлятьШкалы  									= Истина;
	Если Параметры.Свойство("ШкалыОтдельно") и Параметры.ШкалыОтдельно Тогда
		ДобавлятьШкалы 									= Ложь;
	КонецЕсли;
	
	ДобавлятьУзлы  										= Истина;
	Если Параметры.Свойство("УзлыОтдельно") и Параметры.УзлыОтдельно Тогда
		ДобавлятьУзлы 									= Ложь;
	КонецЕсли;
	
	Если ДобавлятьШкалы Тогда
		Текст 											= Текст + "	
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НомераПозиций.Организация,
		|	НомераПозиций.ПериодНачисления,
		|	НомераПозиций.Район,
		|	НомераПозиций.Договор,
		|	НомераПозиций.ОбъектРасчета,
		|	НомераПозиций.ТочкаУчета,
		|	НомераПозиций.ПриборУчета,
		|	НомераПозиций.НомерПозиции + 1 КАК НомерПозиции,
		|	бестСтабильныеПериодыШкалыНП.Шкала,
		|	&ПериодРегистрации КАК ПериодРегистрации,";
		
		для Каждого стр из РесурсыРегистраШкал цикл 		
			ЕстьРесурс 									= Ресурсы.найти(стр) <> Неопределено;
			Текст 										= Текст + Символы.ПС + ?(ЕстьРесурс,"НомераПозиций","бестСтабильныеПериодыШкалыНП") + "." + стр  + " как " + стр + ",";
		КонецЦикла;
		
		Текст 											= Текст +"			 
		|	&Ссылка КАК ДокРегистратор,
		|	&ДатаДок КАК ДатаРегистратора
		|ИЗ
		|	НомераПозицийПриборыУзловУчета" + ИмяТаблицы + " КАК НомераПозиций
		|		внутреннее СОЕДИНЕНИЕ РегистрСведений.бестСтабильныеПериодыШкалыНП КАК бестСтабильныеПериодыШкалыНП
		|		ПО НомераПозиций.Организация = бестСтабильныеПериодыШкалыНП.Организация
		|			И НомераПозиций.ПериодНачисления = бестСтабильныеПериодыШкалыНП.ПериодНачисления
		|			И НомераПозиций.Район = бестСтабильныеПериодыШкалыНП.Район
		|			И НомераПозиций.Договор = бестСтабильныеПериодыШкалыНП.Договор
		|			И НомераПозиций.ОбъектРасчета = бестСтабильныеПериодыШкалыНП.ОбъектРасчета
		|			И НомераПозиций.ТочкаУчета = бестСтабильныеПериодыШкалыНП.ТочкаУчета
		|			И НомераПозиций.ПриборУчета = бестСтабильныеПериодыШкалыНП.ПриборУчета
		|			И НомераПозиций.НомерПозиции = бестСтабильныеПериодыШкалыНП.НомерПозиции
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бестСтабильныеПериодыШкалыНП КАК бестСтабильныеПериодыШкалыНПСлед
		|		ПО НомераПозиций.Организация = бестСтабильныеПериодыШкалыНПСлед.Организация
		|			И НомераПозиций.ПериодНачисления = бестСтабильныеПериодыШкалыНПСлед.ПериодНачисления
		|			И НомераПозиций.Район = бестСтабильныеПериодыШкалыНПСлед.Район
		|			И НомераПозиций.Договор = бестСтабильныеПериодыШкалыНПСлед.Договор
		|			И НомераПозиций.ОбъектРасчета = бестСтабильныеПериодыШкалыНПСлед.ОбъектРасчета                                           
		|			И НомераПозиций.ТочкаУчета = бестСтабильныеПериодыШкалыНПСлед.ТочкаУчета
		|			И НомераПозиций.ПриборУчета = бестСтабильныеПериодыШкалыНПСлед.ПриборУчета
		|			И (НомераПозиций.НомерПозиции + 1 = бестСтабильныеПериодыШкалыНПСлед.НомерПозиции)
		|ГДЕ
		|	бестСтабильныеПериодыШкалыНПСлед.ПриборУчета ЕСТЬ NULL";		
	КонецЕсли;
	
	

	Запрос.Текст 											= Текст;
	Результат  												= Запрос.ВыполнитьПакет();
	
	Запрос.Текст 											= "УНИЧТОЖИТЬ МаксНомерПозиции";
	Запрос.Выполнить();
		
	Выборка  												= Результат[1].Выбрать();
	Пока Выборка.Следующий() цикл		
		СтрокаСтабПериоды									= Параметры.НаборСтабильныеПериоды.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСтабПериоды,Выборка);
		
		Если Увеличивать тогда
			СтрокаСтабПериоды.НомерПозиции  				= СтрокаСтабПериоды.НомерПозиции + 1;
		КонецЕсли;
		
		Если Увеличивать тогда
			для Сч = 0 по Параметры.НаборПоследнихНомеров.количество()-1 цикл
				СтрокаПоследнихНомеров 						= Параметры.НаборПоследнихНомеров[СЧ];
				Если СтрокаПоследнихНомеров.Услуга  = Выборка.Услуга и СтрокаПоследнихНомеров.ТочкаУчета  = Выборка.ТочкаУчета тогда
					СтрокаПоследнихНомеров.НомерПозиции 	= СтрокаПоследнихНомеров.НомерПозиции + 1;
					Прервать;
				КонецЕсли; 				  
			КонецЦикла;  			
		иначе
			СтрокаПоследнихНомеров  						= Параметры.НаборПоследнихНомеров.добавить();
			ЗаполнитьЗначенияСвойств(СтрокаПоследнихНомеров,Выборка);		
			СтрокаПоследнихНомеров.период 					= Параметры.ПараметрыЗапроса.ПериодРегистрации;	
		КонецЕсли; 		
	КонецЦикла; 
	
	Если ДобавлятьШкалы Тогда
		ВыборкаШкалы 									= Результат[3].Выбрать();
		
		Пока ВыборкаШкалы.Следующий() цикл		
			СтрокаСтабПериоды							= Параметры.НаборСтабильныеПериодыШкалы.добавить();
			ЗаполнитьЗначенияСвойств(СтрокаСтабПериоды,ВыборкаШкалы);				
		КонецЦикла;		
	КонецЕсли;
	
	Если ДобавлятьУзлы Тогда
		ВыборкаПриборыУзловУчета 							= Результат[2].Выбрать();
		
		Пока ВыборкаПриборыУзловУчета.Следующий() цикл		
			СтрокаСтабПериоды							= Параметры.НаборСтабильныеПериодыПриборыУзловУчета.добавить();
			ЗаполнитьЗначенияСвойств(СтрокаСтабПериоды,ВыборкаПриборыУзловУчета);				
		КонецЦикла;	
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ВспомогательныеПроцедуры

Функция СоотвествиеПолейНП()
	СоотвествиеПолей  	= Новый Соответствие;	
	
	ПоляПропустить 		= Новый Массив;
	ПоляПропустить.Добавить("ДатаРегистратора");
	ПоляПропустить.Добавить("ДокРегистратор");
	
	МетаданныеРег  		= Метаданные.РегистрыСведений.бестНомераСтрокСтабильногоПериодаНП;
	для Каждого Измерение из МетаданныеРег.измерения цикл
		Если ПоляПропустить.Найти(Измерение.имя) <> Неопределено тогда
			Продолжить;
		КонецЕсли;
		
		Тип  			=  Измерение.тип.типы()[0]; // не нужно тут использовать поля составного типа
		СоотвествиеПолей.Вставить(Измерение.имя,ПустоеЗначениеПоТипу(Тип));
	КонецЦикла;   	
	
	для Каждого Рерсур из МетаданныеРег.Ресурсы цикл
		Если ПоляПропустить.Найти(Рерсур.имя) <> Неопределено тогда
			Продолжить;
		КонецЕсли;
		Тип  			=  Рерсур.тип.типы()[0]; // не нужно тут использовать поля составного типа
		СоотвествиеПолей.Вставить(Рерсур.имя,ПустоеЗначениеПоТипу(Тип));
	КонецЦикла;
	
	Возврат СоотвествиеПолей;
КонецФункции

Функция РесурсыСтабильногоПериодаНП()
	МетаданныеРег  = Метаданные.РегистрыСведений.бестСтабильныеПериодыНП;
	РесурсыСтабильногоПериода = Новый Массив;
	для Каждого Рерсур из МетаданныеРег.Ресурсы цикл
		Тип  =   Рерсур.тип.типы()[0]; // не нужно тут использовать поля составного типа
		РесурсыСтабильногоПериода.Добавить(Рерсур.имя);
	КонецЦикла;
	Возврат РесурсыСтабильногоПериода;
КонецФункции  

Функция РесурсыСтабильногоПериодаПриборыУзловУчетаНП()
	МетаданныеРег  = Метаданные.РегистрыСведений.бестСтабильныеПериодыПриборыУзловУчета;
	РесурсыСтабильногоПериода = Новый Массив;
	для Каждого Рерсур из МетаданныеРег.Ресурсы цикл
		Тип  =   Рерсур.тип.типы()[0]; // не нужно тут использовать поля составного типа
		РесурсыСтабильногоПериода.Добавить(Рерсур.имя);
	КонецЦикла;
	Возврат РесурсыСтабильногоПериода;
КонецФункции

Функция РесурсыСтабильногоПериодаШкалНП()
	МетаданныеРег  = Метаданные.РегистрыСведений.бестСтабильныеПериодыШкалыНП;
	РесурсыСтабильногоПериода = Новый Массив;
	для Каждого Рерсур из МетаданныеРег.Ресурсы цикл
		Тип  =   Рерсур.тип.типы()[0]; // не нужно тут использовать поля составного типа
		РесурсыСтабильногоПериода.Добавить(Рерсур.имя);
	КонецЦикла;
	Возврат РесурсыСтабильногоПериода;
КонецФункции

Функция ПустоеЗначениеПоТипу(Тип)
	
	Если  Тип= тип("Булево") тогда
		Возврат "Ложь";
	ИначеЕсли  Тип= тип("Число") тогда
		Возврат "0";
	ИначеЕсли  Тип= тип("Дата") тогда
		Возврат "ДатаВремя(1,1,1)";	
	ИначеЕсли  Тип= тип("СправочникСсылка.энргТочкиУчета") тогда
		Возврат "Значение(Справочник.энргТочкиУчета.ПустаяСсылка)";
	ИначеЕсли  Тип= тип("СправочникСсылка.энргЗоныОтвественности") тогда
		Возврат "Значение(Справочник.энргЗоныОтвественности.ПустаяСсылка)";
	ИначеЕсли  Тип= тип("СправочникСсылка.энргСтроения") тогда
		Возврат "Значение(Справочник.энргСтроения.ПустаяСсылка)";
	ИначеЕсли  Тип= тип("СправочникСсылка.энргАбоненты") тогда
		Возврат "Значение(Справочник.энргАбоненты.ПустаяСсылка)";	
	ИначеЕсли  Тип= тип("СправочникСсылка.энргПриборыУчетаАбонента") тогда
		Возврат "Значение(Справочник.энргПриборыУчетаАбонента.ПустаяСсылка)";
	ИначеЕсли  Тип= тип("СправочникСсылка.энргВидыУслуг") тогда
		Возврат "Значение(Справочник.энргВидыУслуг.ПустаяСсылка)";	
	КонецЕсли;
	
КонецФункции

#КонецОбласти


