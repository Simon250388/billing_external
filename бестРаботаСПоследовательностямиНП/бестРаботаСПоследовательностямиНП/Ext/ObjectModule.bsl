
#Область РегламетныеПроцедуры

// Выполнение регламентных процедур
Процедура РегламетныеПроцедурыБиллинг() Экспорт 
	
	ЗначениеКонстанты  				= Константы.энргДатаНачалаВеденияУчета.Получить();
	
	Запрос  = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоВеденияУчета",ЗначениеКонстанты);
	Запрос.Текст ="ВЫБРАТЬ
	              |	МАКСИМУМ(ВложенныйЗапрос.ПериодНачисления) КАК ПериодНачисления,
	              |	ВложенныйЗапрос.Район КАК Район,
	              |	ВложенныйЗапрос.Организация КАК Организация
	              |ИЗ
	              |	(ВЫБРАТЬ
	              |		энргЗакрытиеПериодаСрезПоследних.ПериодНачисления КАК ПериодНачисления,
	              |		энргЗакрытиеПериодаСрезПоследних.Район КАК Район,
	              |		энргЗакрытиеПериодаСрезПоследних.Организация КАК Организация
	              |	ИЗ
	              |		РегистрСведений.энргЗакрытиеПериода.СрезПоследних(, ) КАК энргЗакрытиеПериодаСрезПоследних
	              |	
	              |	ОБЪЕДИНИТЬ ВСЕ
	              |	
	              |	ВЫБРАТЬ
	              |		НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&НачалоВеденияУчета, МЕСЯЦ), СЕКУНДА, -1), МЕСЯЦ),
	              |		энргЗоныОтвественности.Ссылка,
	              |		энргЗоныОтвественности.Организация
	              |	ИЗ
	              |		Справочник.энргЗоныОтвественности КАК энргЗоныОтвественности
	              |	ГДЕ
	              |		НЕ энргЗоныОтвественности.ПометкаУдаления) КАК ВложенныйЗапрос
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	ВложенныйЗапрос.Район,
	              |	ВложенныйЗапрос.Организация";
	
	Результат  						= Запрос.Выполнить();
	Выборка  						= Результат.Выбрать();
	Пока Выборка.Следующий() цикл 		
		ПараметрыЗадания  			= Новый Массив;
		ПараметрыЗадания.Добавить(КонецМесяца(Выборка.ПериодНачисления)+1);
		ПараметрыЗадания.Добавить(Выборка.Район);
		ПараметрыЗадания.Добавить(Выборка.Организация);
		ФоновыеЗадания.Выполнить("бестРаботаСПоследовательностямиНП.ВыполнитьРегламетныеОперацииНП",ПараметрыЗадания);
	КонецЦикла;	
	
КонецПроцедуры

// Выполнение регламентных процедур
//
// Параметры:
//   ПериодНачисления 		- Период начисления, по которому происходит восстановление последовательности.
//   Район					- район, по которому происходит восстановление последовательности.
//   МКД					- МКД, по которому происходит восстановление последовательности.
//   СбрасыватьСостояниеПоследовательности				- Сбрасывать состояние последовательности.
//
Процедура ОтложенныеДвиженияДокументовНачисленияНП(Организация,ПериодНачисления, Район, Договор = Неопределено,СбрасыватьСостояниеПоследовательности=ложь) Экспорт
	
	Если Не ЗначениеЗаполнено(ПериодНачисления) или Не ЗначениеЗаполнено(Район) тогда
		Возврат;
	КонецЕсли;
	
	ГраницыПериода  											= энргРаботаСПериодомДействия.ГраницыРасчетногоПериода(Организация,ПериодНачисления,Ложь);
	
	НачалоПериодаРасчета										= ГраницыПериода.НачалоОП;
	
	МВТ  														= Новый МенеджерВременныхТаблиц;
	
	Результат 													= РезультатНачальныеОстаткиСтабильногоПериодаНП(ПериодНачисления,Организация,Район,НачалоПериодаРасчета,Договор);
	Выборка  													= Результат[6].Выбрать();
	
	ВыборкаПоказания 											= Результат[7].Выбрать();
	ВыборкаШкалы	 											= Результат[8].Выбрать();
	ВыборкаПриборыУзлаУчета										= Результат[9].Выбрать();

	
	ПериодНачисленияПред 										= НачалоМесяца(НачалоМесяца(ПериодНачисления)-1);
	ТекДоговор  												= Неопределено;
	НаборСтабильныеПериоды 										= Неопределено;
	НаборСтабильныеПериодыШкалы									= Неопределено;
	НаборНомерСтрокСтабПериода 									= Неопределено;
	НаборСтабильныеПериодыПриборыУзловУчета 					= Неопределено;
	//НаборМаксимальныеПоказания 									= Неопределено;
	НаборОтложенныхДвижений 									= Неопределено;
	НаборМаксимальныеПоказанияПред 								= Неопределено;
	
	ВводНачальныхОстатков 										= Неопределено;
	Если Выборка.Количество() > 0 тогда		
		НачатьТранзакцию();
	Иначе
		Возврат;	
	КонецЕсли;	
	
	ЕстьСледующийПоказания 										= ВыборкаПоказания.Следующий();
	ЕстьСледующийШКалы	 										= ВыборкаШкалы.Следующий();
	ЕстьСледующийПриборыУзлаУчета	 							= ВыборкаПриборыУзлаУчета.Следующий();

	
	Пока Выборка.Следующий() цикл		
		Если ТекДоговор <> Выборка.Договор тогда   						
			Если ТекДоговор <> Неопределено тогда
				
				Пока ВыборкаШкалы.Договор = ТекДоговор и ЕстьСледующийШКалы Цикл
					
					СтрокаНабораПоказаний 						= НаборСтабильныеПериодыШкалы.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаНабораПоказаний, ВыборкаШкалы);
					
					ЕстьСледующийШКалы 							= ВыборкаШкалы.Следующий();
					Если Не ЕстьСледующийШКалы Тогда
						Прервать;
					КонецЕсли;					
				КонецЦикла;
				
				Пока ВыборкаПриборыУзлаУчета.Договор = ТекДоговор и ЕстьСледующийПриборыУзлаУчета Цикл
					
					СтрокаНабораПоказаний 						= НаборСтабильныеПериодыПриборыУзловУчета.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаНабораПоказаний, ВыборкаПриборыУзлаУчета);
					
					ЕстьСледующийПриборыУзлаУчета 							= ВыборкаПриборыУзлаУчета.Следующий();
					Если Не ЕстьСледующийПриборыУзлаУчета Тогда
						Прервать;
					КонецЕсли;					
				КонецЦикла;

				
				Попытка 										
					Если СбрасыватьСостояниеПоследовательности тогда
						СброситьСостояниеПоследовательности("бестСтабильныеПериодыПоследовательностьНП",	Организация,ПериодНачисления,Район,ТекДоговор);
						СброситьСостояниеПоследовательности("бестПоказанияПУНППоследовательность", 		Организация,ПериодНачисления,Район,ТекДоговор);
					КонецЕсли;
					
					НаборОтложенные 							= РегистрыСведений.бестОтложенныеДвиженияДокументовНП.СоздатьНаборЗаписей();
					НаборОтложенные.отбор.Организация.установить(Организация);
					НаборОтложенные.отбор.ПериодНачисления.установить(ПериодНачисления);
					НаборОтложенные.отбор.Район.установить(Район); 						
					НаборОтложенные.отбор.РазделЗаписи.установить(Перечисления.бестРазделыЗаписиНП.СтабильныеПериодыНП);
					НаборОтложенные.отбор.Договор.установить(ТекДоговор);
					НаборОтложенные.Записать(); 
					
					НаборСтабильныеПериоды.записать(Ложь);
					НаборСтабильныеПериодыШкалы.записать(Ложь);
					НаборНомерСтрокСтабПериода.записать(Ложь); 						
					ЗафиксироватьТранзакцию();
					НачатьТранзакцию(); 
				Исключение
					ПредставлениеОшибки 						= ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ПредставлениеОшибки);
					ЗаписьЖурналаРегистрации("Заполнение начальных остатков по району " +Район + " за период:" + ПериодНачисления ,УровеньЖурналаРегистрации.Ошибка,,,ПредставлениеОшибки);
					ОтменитьТранзакцию();
					НачатьТранзакцию(); 					
				КонецПопытки;			
			КонецЕсли;
			ВводНачальныхОстатков 								= Выборка.ВводНачальныхОстатков;
			// Очищаем набор записей и создаем приемники данных.			
			ОчиститьНаборыЗаписей(Организация, ПериодНачисления,Район,Выборка.Договор,Выборка.ДокРегистратор,ВводНачальныхОстатков);
			
			НаборСтабильныеПериоды								= РегистрыСведений.бестСтабильныеПериодыНП.СоздатьНаборЗаписей();
			НаборСтабильныеПериодыШкалы							= РегистрыСведений.бестСтабильныеПериодыШкалыНП.СоздатьНаборЗаписей();
			НаборСтабильныеПериодыПриборыУзловУчета				= РегистрыСведений.бестСтабильныеПериодыПриборыУзловУчета.СоздатьНаборЗаписей();
			НаборНомерСтрокСтабПериода 							= РегистрыСведений.бестНомераСтрокСтабильногоПериодаНП.СоздатьНаборЗаписей();
		КонецЕсли;     		
			
		СтрокаСтабПериоды  										= НаборСтабильныеПериоды.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСтабПериоды,Выборка);	
		СтрокаСтабПериоды.ПериодНачисления 						= ПериодНачисления;
		
		СтрокаНомеровСтрок 										= НаборНомерСтрокСтабПериода.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаНомеровСтрок,Выборка);
		СтрокаНомеровСтрок.ПериодНачисления 					= ПериодНачисления;
		СтрокаНомеровСтрок.период  								= Выборка.ДатаРегистратора;
		
		ТекДоговор 												= Выборка.Договор;
	КонецЦикла;  
	
	Если ТекДоговор <>Неопределено тогда
				
		Пока ВыборкаШкалы.Договор  = ТекДоговор и ЕстьСледующийШКалы Цикл
			
			СтрокаНабораПоказаний 								= НаборСтабильныеПериодыШкалы.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаНабораПоказаний, ВыборкаШкалы);
			
			ЕстьСледующийШКалы 									= ВыборкаШкалы.Следующий();
			Если Не ЕстьСледующийШКалы Тогда
				Прервать;
			КонецЕсли;					
		КонецЦикла;
		
		Пока ВыборкаПриборыУзлаУчета.Договор  = ТекДоговор и ЕстьСледующийПриборыУзлаУчета Цикл
			
			СтрокаНабораПоказаний 								= НаборСтабильныеПериодыПриборыУзловУчета.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаНабораПоказаний, ВыборкаПриборыУзлаУчета);
			
			ЕстьСледующийПриборыУзлаУчета 									= ВыборкаПриборыУзлаУчета.Следующий();
			Если Не ЕстьСледующийПриборыУзлаУчета Тогда
				Прервать;
			КонецЕсли;					
		КонецЦикла;
		
		Попытка 				
			Если СбрасыватьСостояниеПоследовательности тогда 
				СброситьСостояниеПоследовательности("бестСтабильныеПериодыПоследовательностьНП",	Организация,ПериодНачисления,Район,ТекДоговор);
				СброситьСостояниеПоследовательности("бестПоказанияПУНППоследовательность",		Организация,ПериодНачисления,Район,ТекДоговор);
			КонецЕсли;
			НаборОтложенные 									= РегистрыСведений.бестОтложенныеДвиженияДокументовНП.СоздатьНаборЗаписей();
			НаборОтложенные.отбор.Организация.установить(Организация);
			НаборОтложенные.отбор.ПериодНачисления.установить(ПериодНачисления);
			НаборОтложенные.отбор.Район.установить(Район); 						
			НаборОтложенные.отбор.РазделЗаписи.установить(Перечисления.бестРазделыЗаписиНП.СтабильныеПериодыНП);
			НаборОтложенные.отбор.Договор.установить(ТекДоговор);
			НаборОтложенные.Записать();  
			
			НаборСтабильныеПериоды.записать(Ложь);
			НаборСтабильныеПериодыШкалы.записать(Ложь);
			НаборНомерСтрокСтабПериода.записать(Ложь);			
			ЗафиксироватьТранзакцию(); 			
		Исключение
			ПредставлениеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ЗаписьЖурналаРегистрации("Заполнение начальных остатков по району " +Район + " за период:" + ПериодНачисления ,УровеньЖурналаРегистрации.Ошибка,,,ПредставлениеОшибки);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ПредставлениеОшибки);
			ОтменитьТранзакцию();
		КонецПопытки;	

	КонецЕсли;  	
	
	ПересчитатьСреднийОбъемПотребленияНП(Организация,ПериодНачисления,Район,Ложь);	
КонецПроцедуры

// Выполнение регламентных процедур
//
// Параметры:
//   ПериодНачисления 		- Период начисления, по которому происходит восстановление последовательности.
//   Район					- район, по которому происходит восстановление последовательности.
//   ОтборПоДому			- устанавливать отбор по дому.
//   МКД					- МКД, по которому происходит восстановление последовательности.
//   Абонент				- Абонент, по которому происходит восстановление последовательности.
//
Процедура ПересчитатьСреднийОбъемПотребленияНП(Организация,ПериодНачисления,Район,ОтборПоДому=ложь,Договор=Неопределено) Экспорт 
	
	Результат 						= РезультатаЗапросаСреднегоПотребленияНП(Организация,ПериодНачисления,Район,ОтборПоДому,Договор);
	Выборка  						= Результат.выбрать();
	Набор  							= РегистрыСведений.бестСреднийОбъемПотребленияНП.СоздатьНаборЗаписей();
	
	Набор.Отбор.ПериодНачисления.установить(ПериодНачисления);
	Набор.Отбор.район.установить(Организация);
	Набор.Отбор.район.установить(Район); 
	
	
	Если Договор<>Неопределено тогда
		Набор.Отбор.Договор.Установить(Договор);
	КонецЕсли;  	
	Набор.Записать();
	
	Набор  							= РегистрыСведений.бестСреднийОбъемПотребленияНП.СоздатьНаборЗаписей();				 
	Пока Выборка.следующий() цикл
		ЗаполнитьЗначенияСвойств(Набор.Добавить(),Выборка);		
	КонецЦикла;
	Набор.Записать(Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Выполнить Регламетные Операции НП.
Процедура ВыполнитьРегламетныеОперацииНП(Организация,ПериодНачисления,Район) Экспорт  	
	//ПараметрыЗаписиЖурнала  = ПараметрыЗаписиЖурнала("ОтложенныеДвиженияДокументовНачисления",ПериодНачисления,Район);
	//ЗаписьЖурналаРегистрации(ПараметрыЗаписиЖурнала.ИмяОперации,ПараметрыЗаписиЖурнала.Уровень,ПараметрыЗаписиЖурнала.Метаданные,ПараметрыЗаписиЖурнала.КомментарийСтарт);
	//ОтложенныеДвиженияДокументовНачисления(ПериодНачисления,Район);
	//ЗаписьЖурналаРегистрации(ПараметрыЗаписиЖурнала.ИмяОперации,УровеньЖурналаРегистрации.Информация,ПараметрыЗаписиЖурнала.Метаданные,ПараметрыЗаписиЖурнала.КомментарийСтоп);
	//
	ПараметрыЗаписиЖурнала  = ПараметрыЗаписиЖурнала("ВосстановитьПоследовательностьСтабильныеПериодыНП",ПериодНачисления,Район);
	ЗаписьЖурналаРегистрации(ПараметрыЗаписиЖурнала.ИмяОперации,ПараметрыЗаписиЖурнала.Уровень,ПараметрыЗаписиЖурнала.Метаданные,ПараметрыЗаписиЖурнала.КомментарийСтарт);
	ВосстановитьПоследовательностьСтабильныеПериодыНП(ПериодНачисления,Организация,Район);
	ЗаписьЖурналаРегистрации(ПараметрыЗаписиЖурнала.ИмяОперации,УровеньЖурналаРегистрации.Информация,ПараметрыЗаписиЖурнала.Метаданные,ПараметрыЗаписиЖурнала.КомментарийСтоп);
КонецПроцедуры

// Сбросить Состояние Последовательности.
//
// Параметры:
//   ИмяПоследовательности	- Имя последовательности, по которой происходит сброс состояния.
//   ПериодНачисления 		- Период начисления, по которому происходит восстановление последовательности.
//   Район					- район, по которому происходит восстановление последовательности.
//   МКД					- МКД, по которому происходит восстановление последовательности.
//   Абонент				- Абонент, по которому происходит восстановление последовательности.
//
Процедура СброситьСостояниеПоследовательностиНП(ИмяПоследовательности,ПериодНачисления,Организация,Район,Договор=Неопределено) Экспорт 
	
	ПроведенСНарушением 				= Перечисления.энргСостояниеДокументаВПоследовательности.ПроведенСНарушениемПоследовательности;
	ПроведенВПоследовательности  		= Перечисления.энргСостояниеДокументаВПоследовательности.ПроведенВПоследовательности;
	
	Набор 								= РегистрыСведений[ИмяПоследовательности].СоздатьНаборЗаписей();
	Набор.Отбор.ПериодНачисления.установить(ПериодНачисления);
	Набор.Отбор.Организация.установить(Организация);
	Набор.Отбор.Район.установить(Район);
	Набор.Отбор.СостояниеПроведения.установить(ПроведенВПоследовательности);
	
	Если Договор<>Неопределено тогда
		Набор.Отбор.Договор.установить(Договор);
	КонецЕсли; 
	
	Набор.Прочитать();
	ТаблицаНабора 						= Набор.Выгрузить();
	Набор.Очистить();
	Набор.Записать();
	ТаблицаНабора.ЗаполнитьЗначения(ПроведенСНарушением,"СостояниеПроведения");
	Набор 								= РегистрыСведений[ИмяПоследовательности].СоздатьНаборЗаписей();
	Набор.Загрузить(ТаблицаНабора);
	Набор.Записать(Ложь); 
	
КонецПроцедуры

// Восстановить Последовательность Стабильные Периоды юр. лиц.
//
Процедура ВосстановитьПоследовательностьСтабильныеПериодыНП(Организация,ПериодНачисления,Район,Договор=Неопределено) Экспорт 
	
	ГраницыПериода  								= энргРаботаСПериодомДействия.ГраницыРасчетногоПериода(Организация, ПериодНачисления);
	
	НачалоПериодаРасчета							= ГраницыПериода.НачалоОП;
	
	Отбор = Новый Структура;
	Отбор.Вставить("ПериодНачисления",ПериодНачисления);
	Отбор.Вставить("Район",Район);
	Отбор.Вставить("Организация",Организация);

	Если Договор<>Неопределено тогда
		Отбор.Вставить("Договор",Договор);
	КонецЕсли;
	
	Отказ = Ложь; 	
	
	НачатьТранзакцию();
	УстановитьБлокировкуНабораЗаписейПоследовательностиПоРегистратору(Отбор, "бестСтабильныеПериодыНП",Отказ);
	
	Если Отказ тогда			
		Возврат;
	КонецЕсли;
	
	Результат 									= РезультатЗапросаСтабильныеПериодыНП(Отбор);
	
	Выборка  									= Результат.Выбрать();
	ТекДоговор 									= Неопределено;
	
	ПроведенВПоследовательности 				= Перечисления.энргСостояниеДокументаВПоследовательности.ПроведенВПоследовательности;
	Исключен 									= Перечисления.энргСостояниеДокументаВПоследовательности.ИсключенИзПоследовательности; 
	Ошибки 										= Новый Массив;
	МассивДокументов 							= Новый Массив;
	
	Пока Выборка.следующий() цикл  		
		Если ТекДоговор <> Выборка.Договор тогда 						
			Если ТекДоговор <> Неопределено тогда // Это не первая строка.				
				Отказ 							= ПровестиПоСтабильнымПериодамНП(МассивДокументов,Ошибки,НачалоПериодаРасчета);
				Если не Отказ тогда
					// Если все выполнено тогда изменяем состояние в последовательности.
					НаборПоследовательности  	= РегистрыСведений.бестСтабильныеПериодыПоследовательностьНП.СоздатьНаборЗаписей();
					НаборПоследовательности.Отбор.ПериодНачисления.установить(ПериодНачисления);
					НаборПоследовательности.Отбор.Организация.установить(Организация);
					НаборПоследовательности.Отбор.Район.установить(Район);
					НаборПоследовательности.Отбор.Договор.установить(ТекДоговор);
					НаборПоследовательности.Прочитать();
					ТаблицаНабора  				= НаборПоследовательности.Выгрузить();
					НаборПоследовательности.Очистить();
					НаборПоследовательности.Записать();
					для Каждого стр из ТаблицаНабора цикл
						стр.СостояниеПроведения = ПроведенВПоследовательности;
					КонецЦикла;
					НаборПоследовательности  	= РегистрыСведений.бестСтабильныеПериодыПоследовательностьНП.СоздатьНаборЗаписей();
					НаборПоследовательности.Загрузить(ТаблицаНабора);
					НаборПоследовательности.Записать(Ложь); 										
					ЗафиксироватьТранзакцию();
					НачатьТранзакцию();
				иначе
					ОтменитьТранзакцию();
					НачатьТранзакцию();
				КонецЕсли;					
			КонецЕсли;
			МассивДокументов 					= Новый Массив; 			
		КонецЕсли;
		
		ОписаниеСтроки 							= Новый ФиксированнаяСтруктура("ПериодНачисления,Организация,Район,Договор,ПериодРегистрации,Документ,МоментВремени,Дата");
		
		Набор 									= РегистрыСведений.бестСтабильныеПериодыНП.СоздатьНаборЗаписей();
		Набор.Отбор.ДокРегистратор.установить(Выборка.ДокРегистратор);
		Набор.Отбор.ПериодНачисления.установить(ПериодНачисления); 
		Набор.Отбор.Организация.установить(Организация);
		Набор.Отбор.Район.установить(Район);
		Набор.Отбор.Договор.установить(Выборка.Договор);
		Набор.Записать();
		
		Набор 									= РегистрыСведений.бестСтабильныеПериодыШкалыНП.СоздатьНаборЗаписей();
		Набор.Отбор.ДокРегистратор.установить(Выборка.ДокРегистратор);
		Набор.Отбор.ПериодНачисления.установить(ПериодНачисления); 
		Набор.Отбор.Организация.установить(Организация);
		Набор.Отбор.Район.установить(Район);
		Набор.Отбор.Договор.установить(Выборка.Договор);
		Набор.Записать();
		
		Набор 									= РегистрыСведений.бестНомераСтрокСтабильногоПериодаНП.СоздатьНаборЗаписей();
		Набор.Отбор.ДокРегистратор.установить(Выборка.ДокРегистратор);
		Набор.Отбор.ПериодНачисления.установить(ПериодНачисления); 
		Набор.Отбор.Организация.установить(Организация);
		Набор.Отбор.Район.установить(Район);
		Набор.Отбор.Договор.установить(Выборка.Договор);
		Набор.Записать();

		
		Набор 							= РегистрыСведений.бестСтабильныеПериодыПриборыУзловУчета.СоздатьНаборЗаписей();
		Набор.Отбор.ДокРегистратор.установить(Выборка.ДокРегистратор);
		Набор.Отбор.ПериодНачисления.установить(ПериодНачисления); 
		Набор.Отбор.Организация.установить(Организация);
		Набор.Отбор.Район.установить(Район);
		Набор.Отбор.Договор.установить(Выборка.Договор);
		Набор.Записать();		
		
		Если Выборка.СостояниеПроведения = Исключен тогда
			
			НаборПоследовательности  	= РегистрыСведений.бестСтабильныеПериодыПоследовательностьНП.СоздатьНаборЗаписей();
			НаборПоследовательности.Отбор.ПериодНачисления.установить(ПериодНачисления);
			НаборПоследовательности.Отбор.Район.установить(Организация);
			НаборПоследовательности.Отбор.Район.установить(Район);
			НаборПоследовательности.Отбор.Договор.установить(Выборка.Договор);
			НаборПоследовательности.Отбор.ДокРегистратор.установить(Выборка.ДокРегистратор);
			НаборПоследовательности.Записать();
			
			ТекДоговор  					= Выборка.Договор;
			
			Продолжить;
		КонецЕсли;
		
		ДанныеСтроки  					= Новый Структура(ОписаниеСтроки);
		ДанныеСтроки.ПериодНачисления 	= ПериодНачисления;
		ДанныеСтроки.Организация 		= Организация;
		ДанныеСтроки.Район 				= Район;
		ДанныеСтроки.Договор			= Выборка.Договор;
		//ДанныеСтроки.ОбъектРасчета		= Выборка.ОбъектРасчета;
		ДанныеСтроки.Документ			= Выборка.ДокРегистратор;
		ДанныеСтроки.ПериодРегистрации	= Выборка.ПериодРегистрации;
		ДанныеСтроки.МоментВремени  	= Новый МоментВремени(Выборка.ДатаРегистратора,Выборка.ДокРегистратор);
		ДанныеСтроки.Дата			  	= Выборка.ДатаРегистратора;
		
		МассивДокументов.Добавить(ДанныеСтроки);// Добавляем в набор.			
		ТекДоговор  					= Выборка.Договор;	
	КонецЦикла; 	
	
	Если ТекДоговор <> Неопределено тогда
		// Закончили чистку можно проводить документы.
		Отказ 						= ПровестиПоСтабильнымПериодамНП(МассивДокументов,Ошибки,НачалоПериодаРасчета);
		Если не Отказ тогда
			// Если все выполнено тогда изменяем состояние в последовательности.
			НаборПоследовательности  = РегистрыСведений.бестСтабильныеПериодыПоследовательностьНП.СоздатьНаборЗаписей();
			НаборПоследовательности.Отбор.ПериодНачисления.установить(ПериодНачисления);
			НаборПоследовательности.Отбор.Район.установить(Организация);
			НаборПоследовательности.Отбор.Район.установить(Район);
			НаборПоследовательности.Отбор.Договор.установить(ТекДоговор);
			НаборПоследовательности.Прочитать();
			ТаблицаНабора  			= НаборПоследовательности.Выгрузить();
			НаборПоследовательности.Очистить();
			НаборПоследовательности.Записать();
			для Каждого стр из ТаблицаНабора цикл
				стр.СостояниеПроведения = ПроведенВПоследовательности;
			КонецЦикла;
			НаборПоследовательности  = РегистрыСведений.бестСтабильныеПериодыПоследовательностьНП.СоздатьНаборЗаписей();
			НаборПоследовательности.Загрузить(ТаблицаНабора);
			НаборПоследовательности.Записать(Ложь);				
			ЗафиксироватьТранзакцию();
		иначе
			ОтменитьТранзакцию();	
		КонецЕсли; 					
	КонецЕсли;
	
КонецПроцедуры

// Восстановить Последовательность Показания ПУ.
//
// Параметры:
//   ПериодНачисления 		- Период начисления, по которому происходит восстановление последовательности.
//   Район					- район, по которому происходит восстановление последовательности.
//   МКД					- МКД, по которому происходит восстановление последовательности.
//
Процедура ВосстановитьПоследовательностьПоказанияПУНП(Организация, ПериодНачисления,Район,Договор=Неопределено) Экспорт 
	ГраницыПериода  							= энргРаботаСПериодомДействия.ГраницыРасчетногоПериода(Организация, ПериодНачисления);
	
	НачалоПериодаРасчета						= ГраницыПериода.НачалоОП;
	
	Отбор 										= Новый Структура;
	Отбор.Вставить("Организация",		Организация);
	Отбор.Вставить("ПериодНачисления",	ПериодНачисления);
	
	Отбор.Вставить("Район",				Район);
	Если Договор<>Неопределено тогда
		Отбор.Вставить("Договор",Договор);
	КонецЕсли;
	
	Отказ 										= Ложь;
	
	МВТ  										= Новый МенеджерВременныхТаблиц;
	Результат  									= РезультатЗапросаПоказанияПУНП(МВТ,Отбор,НачалоПериодаРасчета);
	
	ДанныеМаксимальногоПотребления 				= ДанныеМаксимальногоПотребления(НачалоПериодаРасчета);
	
	РезультатСреднийОбъем 						= РезультатСреднийОбъемПотребленияНП(МВТ,Отбор);
	ВыборкаСреднийОбъем 						= РезультатСреднийОбъем.выбрать();
	
	ПроведенСНарушением 						= Перечисления.энргСостояниеДокументаВПоследовательности.ПроведенСНарушениемПоследовательности;
	ПроведенВПоследовательности 				= Перечисления.энргСостояниеДокументаВПоследовательности.ПроведенВПоследовательности;
	ПредыдущиеМакс 								= 0;
	Выборка  									= Результат.выбрать();
	ТекДоговор 									= Неопределено;
	ТекОбъект 									= Неопределено;
	ТекПрибор 									= Неопределено;
	ТекШкала		 							= Неопределено;
	ТекТарифнаяЗона 							= Неопределено;
	МассивДокументов							= Неопределено;
	НомерПозиции 								= Неопределено;
	ДанныеСреднегоОбъема 						= Неопределено;
	ОписаниеСтроки 								= Новый ФиксированнаяСтруктура("
	|ДокРегистратор,СостояниеПроведения,ПериодРегистрации,ДатаРегистратора,
	|СостояниеПоказаний,Показание,Переворот,МаксПоказания,ПериодМаксПоказаний,	 
	|РегистраторМаксПоказаний,ДатаРегистратораМаксимальных,БылПереворот,Разделитель,НомерСтрокиТЧ,
	|КоэффициентПУ,МаксимальноВозможныеПоказания,ВыводПрибораУчета,ИмяТабЧасти,КС, ТочкаУчета");
	
	Если Выборка.количество() > 0 тогда
		ВыборкаСреднийОбъем.Следующий();
		НачатьТранзакцию();
	КонецЕсли;
	
	СтруктураСреза  							= РегистрыСведений.энргПериодыПриемаПоказаний.ПолучитьПоследнее(ПериодНачисления, Новый Структура("Организация", Организация));
	ПоказанияС									= ?(не ЗначениеЗаполнено(СтруктураСреза.ДатаС),1,СтруктураСреза.ДатаС);
	ПоказанияПО 								= ?(не ЗначениеЗаполнено(СтруктураСреза.ДатаПо),31,СтруктураСреза.ДатаПо);
	
	Пока Выборка.следующий() цикл
		Если ТекДоговор <> Выборка.Договор или ТекОбъект <> Выборка.ОбъектРасчета или ТекПрибор <> Выборка.ПриборУчета Или ТекШкала <> Выборка.Шкала или ТекТарифнаяЗона <> Выборка.ТарифнаяЗона тогда 			  			
			Если ТекДоговор <> Неопределено тогда
				
				//	ДанныеСреднегоОбъема 			= ДанныеСреднегоОбъемаНП(ВыборкаСреднийОбъем,ТекДоговор);
				Если Не Отказ Тогда
					
					ПараметрыПроведений  					= Новый Структура("
					|Организация, ПериодНачисления,район,Договор,ОбъектРасчета,ПриборУчета,Шкала,ТарифнаяЗона,НомерПозиции,ПоказанияС,ПоказанияПО,НачалоПериодаРасчета",
					Организация, ПериодНачисления,район,ТекДоговор,ТекОбъект,ТекПрибор,Текшкала,ТекТарифнаяЗона,НомерПозиции,ПоказанияС,ПоказанияПО,НачалоПериодаРасчета);
					
					ОтказПоТарифнойЗоне			= Ложь;
					ОтказПоТарифнойЗоне			= ПровестиПоказанияПриборовУчетаНП(ПараметрыПроведений,МассивДокументов,ДанныеСреднегоОбъема,ДанныеМаксимальногоПотребления);
					
					Если ОтказПоТарифнойЗоне Тогда
						Отказ 					= Истина;
					КонецЕсли;
					
				КонецЕсли;

				
				Если  ТекОбъект<> Выборка.ОбъектРасчета или ТекПрибор <> Выборка.ПриборУчета тогда
					
					Если не Отказ тогда
						// Если все выполнено тогда изменяем состояние в последовательности.
						НаборПоследовательности  	= РегистрыСведений.бестПоказанияПУНППоследовательность.СоздатьНаборЗаписей();
						НаборПоследовательности.Отбор.ПериодНачисления.установить(ПериодНачисления);
						НаборПоследовательности.Отбор.Организация.установить(Организация);
						НаборПоследовательности.Отбор.Район.установить(Район);
						НаборПоследовательности.Отбор.СостояниеПроведения.установить(ПроведенСНарушением);
						НаборПоследовательности.Отбор.Договор.установить(ТекДоговор);
						НаборПоследовательности.Отбор.ОбъектРасчета.установить(ТекОбъект);
						НаборПоследовательности.Отбор.ПриборУчета.установить(ТекПрибор);
						
						НаборПоследовательности.Прочитать();
						ТаблицаНабора  				= НаборПоследовательности.Выгрузить();
						НаборПоследовательности.Очистить();
						НаборПоследовательности.Записать();
						
						ТаблицаНабора.ЗаполнитьЗначения(ПроведенВПоследовательности,"СостояниеПроведения");
						
						НаборПоследовательности  	= РегистрыСведений.бестПоказанияПУНППоследовательность.СоздатьНаборЗаписей();
						НаборПоследовательности.Загрузить(ТаблицаНабора);
						НаборПоследовательности.Записать(Ложь); 										
						ЗафиксироватьТранзакцию();
						НачатьТранзакцию(); 
						Отказ					= Ложь;
					иначе
						ОтменитьТранзакцию();
						НачатьТранзакцию();
					КонецЕсли; 				
					
				КонецЕсли;
				МассивДокументов.очистить();
			КонецЕсли;	
			
			Если ТекОбъект <> Выборка.ОбъектРасчета Тогда
				ДанныеСреднегоОбъема 		= ДанныеСреднегоОбъемаНП(ВыборкаСреднийОбъем,ТекДоговор);
			КонецЕсли;

			МассивДокументов					= Новый Массив;
			НомерПозиции 						= Выборка.НомерПозици+1;
		КонецЕсли; 	
		
		ДанныеСтроки 							= Новый Структура(ОписаниеСтроки);
		ЗаполнитьЗначенияСвойств(ДанныеСтроки,Выборка);
		МассивДокументов.Добавить(ДанныеСтроки); 	
		
		// Очищаем данные
		Набор 									= РегистрыСведений.бестПредоставленныеПоказанияНП.СоздатьНаборЗаписей();
		Набор.Отбор.ДокРегистратор.установить(Выборка.ДокРегистратор);
		Набор.Отбор.Организация.установить(Организация);
		Набор.Отбор.периодНачисления.установить(ПериодНачисления);
		Набор.Отбор.Организация.установить(Организация);
		Набор.Отбор.Район.установить(Район);
		Набор.Отбор.Договор.установить(Выборка.Договор);
		Набор.Отбор.ОбъектРасчета.установить(Выборка.ОбъектРасчета);
		Набор.Отбор.ПриборУчета.установить(Выборка.ПриборУчета);
		Набор.Отбор.Шкала.установить(Выборка.Шкала);
		Набор.Отбор.ТарифнаяЗона.установить(Выборка.ТарифнаяЗона);
		Набор.Записать();
		
		Набор 										= РегистрыСведений.бестРасчетСреднегоОбъемаНП.СоздатьНаборЗаписей();
		Набор.Отбор.ДокРегистратор.установить(Выборка.ДокРегистратор);
		Набор.Отбор.Организация.установить(Организация);
		Набор.Отбор.Район.установить(Район);
		Набор.Отбор.Договор.установить(Выборка.Договор);
		Набор.Отбор.ОбъектРасчета.установить(Выборка.ОбъектРасчета);
		Набор.Отбор.ТочкаУчета.установить(Выборка.ТочкаУчета);
		Набор.Отбор.Шкала.установить(Выборка.Шкала);
		Набор.Отбор.ТарифнаяЗона.установить(Выборка.ТарифнаяЗона);
		Набор.Отбор.ПериодНачисления.установить(ПериодНачисления);
		Набор.Записать();

		
		ТекМКД  								= Выборка.МКД;
		ТекДоговор  							= Выборка.Договор;
		ТекОбъект	  							= Выборка.ОбъектРасчета;
		ТекПрибор 								= Выборка.ПриборУчета;
		ТекШкала 								= Выборка.Шкала;
		ТекТарифнаяЗона 						= Выборка.ТарифнаяЗона;
	КонецЦикла;
	
	Если ТекДоговор<> Неопределено  тогда
		
		//ДанныеСреднегоОбъема 					= ДанныеСреднегоОбъемаНП(ВыборкаСреднийОбъем,ТекДоговор);
		
		Если Не Отказ Тогда
			
			ПараметрыПроведений  					= Новый Структура("
			|Организация, ПериодНачисления,район,Договор,ОбъектРасчета,ПриборУчета,Шкала,ТарифнаяЗона,НомерПозиции,ПоказанияС,ПоказанияПО,НачалоПериодаРасчета",
			Организация, ПериодНачисления,район,ТекДоговор,ТекОбъект,ТекПрибор,Текшкала,ТекТарифнаяЗона,НомерПозиции,ПоказанияС,ПоказанияПО,НачалоПериодаРасчета);

			ОтказПоТарифнойЗоне			= Ложь;
			ОтказПоТарифнойЗоне			= ПровестиПоказанияПриборовУчетаНП(ПараметрыПроведений,МассивДокументов,ДанныеСреднегоОбъема,ДанныеМаксимальногоПотребления);
			
			Если ОтказПоТарифнойЗоне Тогда
				Отказ 					= Истина;
			КонецЕсли;
		КонецЕсли;
		
		Если не Отказ тогда
			// Если все выполнено тогда изменяем состояние в последовательности.
			НаборПоследовательности  			= РегистрыСведений.бестПоказанияПУНППоследовательность.СоздатьНаборЗаписей();
			НаборПоследовательности.Отбор.Организация.установить(Организация);
			НаборПоследовательности.Отбор.ПериодНачисления.установить(ПериодНачисления);
			НаборПоследовательности.Отбор.Организация.установить(Организация);
			НаборПоследовательности.Отбор.Район.установить(Район);
			НаборПоследовательности.Отбор.СостояниеПроведения.установить(ПроведенСНарушением);
			НаборПоследовательности.Отбор.Договор.установить(ТекДоговор);
			НаборПоследовательности.Отбор.ОбъектРасчета.установить(ТекОбъект);
			НаборПоследовательности.Отбор.ПриборУчета.установить(ТекПрибор);
			НаборПоследовательности.Отбор.ТарифнаяЗона.установить(ТекТарифнаяЗона);
			НаборПоследовательности.Прочитать();
			ТаблицаНабора  						= НаборПоследовательности.Выгрузить();
			НаборПоследовательности.Очистить();
			НаборПоследовательности.Записать();
			
			ТаблицаНабора.ЗаполнитьЗначения(ПроведенВПоследовательности,"СостояниеПроведения");
			
			НаборПоследовательности  			= РегистрыСведений.бестПоказанияПУНППоследовательность.СоздатьНаборЗаписей();
			НаборПоследовательности.Загрузить(ТаблицаНабора);
			НаборПоследовательности.Записать(Ложь); 
			ЗафиксироватьТранзакцию();
			иначе
			ОтменитьТранзакцию(); 			 
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

// Восстановить Последовательность По нежилому помещению.
//
// Параметры:
//   ПериодНачисления 		- Период начисления, по которому происходит восстановление последовательности.
//   Район					- район, по которому происходит восстановление последовательности.
//   МКД					- МКД, по которому происходит восстановление последовательности.
//   Абонент				- Абонент, по которому происходит восстановление последовательности.
//
Процедура ВосстановитьПоследовательностьПоНП(Организация, ПериодНачисления,Район,Договор=Неопределено) Экспорт  
	ПараметрыЗадания  			= Новый Массив;
	ПараметрыЗадания.Добавить(Организация);
	ПараметрыЗадания.Добавить(ПериодНачисления);
	ПараметрыЗадания.Добавить(Район);
	ПараметрыЗадания.Добавить(Договор);
	
	ФоновыеЗадания.Выполнить("бестРаботаСПоследовательностямиНП.ВосстановитьПоследовательностьСтабильныеПериодыНП",		ПараметрыЗадания);
	ФоновыеЗадания.Выполнить("бестРаботаСПоследовательностямиНП.ВосстановитьПоследовательностьПоказанияПУНП",			ПараметрыЗадания);	
	//ФоновыеЗадания.Выполнить("бестРаботаСПоследовательностями.ВосстановитьПоследовательностьВзаиморасчеты",			ПараметрыЗадания);
КонецПроцедуры

// Сбросить Состояние Последовательности.
//
// Параметры:
//   ИмяПоследовательности	- Имя последовательности, по которой происходит сброс состояния.
//   ПериодНачисления 		- Период начисления, по которому происходит восстановление последовательности.
//   Район					- район, по которому происходит восстановление последовательности.
//   МКД					- МКД, по которому происходит восстановление последовательности.
//   Абонент				- Абонент, по которому происходит восстановление последовательности.
//
Процедура СброситьСостояниеПоследовательности(ИмяПоследовательности,Организация,ПериодНачисления,Район,Договор=Неопределено) Экспорт 
	
	ПроведенСНарушением 				= Перечисления.энргСостояниеДокументаВПоследовательности.ПроведенСНарушениемПоследовательности;
	ПроведенВПоследовательности  		= Перечисления.энргСостояниеДокументаВПоследовательности.ПроведенВПоследовательности;
	
	Набор 								= РегистрыСведений[ИмяПоследовательности].СоздатьНаборЗаписей();
	Набор.Отбор.Организация.установить(Организация);
	Набор.Отбор.ПериодНачисления.установить(ПериодНачисления);
	Набор.Отбор.Район.установить(Район);
	Набор.Отбор.СостояниеПроведения.установить(ПроведенВПоследовательности);
	Если Договор<>Неопределено тогда
		Набор.Отбор.Договор.установить(Договор);
	КонецЕсли;
	 	
	Набор.Прочитать();
	ТаблицаНабора 						= Набор.Выгрузить();
	Набор.Очистить();
	Набор.Записать();
	ТаблицаНабора.ЗаполнитьЗначения(ПроведенСНарушением,"СостояниеПроведения");
	Набор 								= РегистрыСведений[ИмяПоследовательности].СоздатьНаборЗаписей();
	Набор.Загрузить(ТаблицаНабора);
	Набор.Записать(Ложь); 
	
КонецПроцедуры

#КонецОбласти

#Область ВосстановитьПоследовательностьСтабильныеПериодыНП
Процедура ОчиститьНаборыЗаписей(Организация, ПериодНачисления,Район,Договор,ДокРегистратор,ВводНачальныхОстатков)
	
	НаборСтабильныеПериоды					= РегистрыСведений.бестСтабильныеПериодыНП.СоздатьНаборЗаписей();
	НаборСтабильныеПериоды.ДополнительныеСвойства.Вставить("НеПроверятьДатуЗапретаРедактирования",Истина);
	НаборСтабильныеПериоды.Отбор.Организация.установить(Организация);
	НаборСтабильныеПериоды.Отбор.ПериодНачисления.установить(ПериодНачисления);
	НаборСтабильныеПериоды.Отбор.Район.установить(Район);
	НаборСтабильныеПериоды.Отбор.Договор.установить(Договор);
	НаборСтабильныеПериоды.записать();
	
	НаборСтабильныеПериоды					= РегистрыСведений.бестСтабильныеПериодыШкалыНП.СоздатьНаборЗаписей();
	НаборСтабильныеПериоды.ДополнительныеСвойства.Вставить("НеПроверятьДатуЗапретаРедактирования",Истина);
	НаборСтабильныеПериоды.Отбор.Организация.установить(Организация);
	НаборСтабильныеПериоды.Отбор.ПериодНачисления.установить(ПериодНачисления);
	НаборСтабильныеПериоды.Отбор.Район.установить(Район);
	НаборСтабильныеПериоды.Отбор.Договор.установить(Договор);
	НаборСтабильныеПериоды.записать();
	
	НаборСтабильныеПериоды					= РегистрыСведений.бестСтабильныеПериодыПриборыУзловУчета.СоздатьНаборЗаписей();
	НаборСтабильныеПериоды.ДополнительныеСвойства.Вставить("НеПроверятьДатуЗапретаРедактирования",Истина);
	НаборСтабильныеПериоды.Отбор.Организация.установить(Организация);
	НаборСтабильныеПериоды.Отбор.ПериодНачисления.установить(ПериодНачисления);
	НаборСтабильныеПериоды.Отбор.Район.установить(Район);
	НаборСтабильныеПериоды.Отбор.Договор.установить(Договор);
	НаборСтабильныеПериоды.записать();

	
	НаборНомерСтрокСтабПериода 				= РегистрыСведений.бестНомераСтрокСтабильногоПериодаНП.СоздатьНаборЗаписей();
	НаборНомерСтрокСтабПериода.Отбор.Организация.установить(Организация);
	НаборНомерСтрокСтабПериода.Отбор.ПериодНачисления.установить(ПериодНачисления);
	НаборНомерСтрокСтабПериода.Отбор.Район.установить(Район);
	НаборНомерСтрокСтабПериода.Отбор.Договор.установить(Договор);
	НаборНомерСтрокСтабПериода.Записать();
		
	НаборОтложенныхДвижений  				= РегистрыСведений.бестОтложенныеДвиженияДокументовНП.СоздатьНаборЗаписей();
	НаборОтложенныхДвижений.Отбор.ДокРегистратор.установить(ДокРегистратор);
	НаборОтложенныхДвижений.Записать();
КонецПроцедуры

Функция ПровестиПоСтабильнымПериодамНП(Документы,Ошибки,НачалоПериодаРасчета)
	
	для Каждого ОписаниеДокумента из Документы цикл
		Организация                             = ОписаниеДокумента.Организация;
		Район  									= ОписаниеДокумента.Район;
		Договор  								= ОписаниеДокумента.Договор;
		//ОбъектРасчета  							= ОписаниеДокумента.ОбъектРасчета;
		МоментВремени  							= ОписаниеДокумента.МоментВремени;
		Документ 								= ОписаниеДокумента.Документ;		
		Дата 									= ОписаниеДокумента.Дата;
		ПериодРегистрации						= ОписаниеДокумента.ПериодРегистрации;
		
		НаборСтабильныеПериоды  				= РегистрыСведений.бестСтабильныеПериодыНП.СоздатьНаборЗаписей();
		НаборСтабильныеПериодыШкалы				= РегистрыСведений.бестСтабильныеПериодыШкалыНП.СоздатьНаборЗаписей();
		НаборСтабильныеПериодыПриборыУзловУчета	= РегистрыСведений.бестСтабильныеПериодыПриборыУзловУчета.СоздатьНаборЗаписей();

		НаборПоследнихНомеров           		= РегистрыСведений.бестНомераСтрокСтабильногоПериодаНП.СоздатьНаборЗаписей();
		
		ПараметрыЗапроса					= Новый Структура("Организация,Район,Договор,ПериодРегистрации",Организация,Район,Договор,Макс(ПериодРегистрации,НачалоПериодаРасчета));
		Параметры 							= Новый Структура("ПараметрыЗапроса,Отказ,МоментВремени,РазрешенПустойНабор,
		|ссылка,ДатаДок,ПериодНачисления,
		|НаборСтабильныеПериоды,НаборСтабильныеПериодыШкалы,НаборСтабильныеПериодыПриборыУзловУчета,НаборПоследнихНомеров",
		ПараметрыЗапроса,Ложь,МоментВремени,Ложь,
		Документ,Дата,ОписаниеДокумента.ПериодНачисления,
		НаборСтабильныеПериоды,НаборСтабильныеПериодыШкалы,НаборСтабильныеПериодыПриборыУзловУчета,НаборПоследнихНомеров);
		
		бестРаботаСПериодомДействияНП.ПровестиПоСтабильнымПериодамНП(Документ,Параметры);
		
		Если не Параметры.РазрешенПустойНабор и НаборСтабильныеПериоды.Количество() =0 тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось восставновить последовательности документов по договору " + Договор +": " + Документ);
			Возврат истина;
		КонецЕсли; 		
		
		Попытка		
			НаборПоследнихНомеров.Записать(Ложь);
			НаборСтабильныеПериоды.ДополнительныеСвойства.Вставить("НеПроверятьДатуЗапретаРедактирования",Истина);
			НаборСтабильныеПериоды.Записать(Ложь);
			
			НаборСтабильныеПериодыШкалы.ДополнительныеСвойства.Вставить("НеПроверятьДатуЗапретаРедактирования",Истина);
			НаборСтабильныеПериодыШкалы.Записать(Ложь);
			
			НаборСтабильныеПериодыПриборыУзловУчета.ДополнительныеСвойства.Вставить("НеПроверятьДатуЗапретаРедактирования",Истина);
			НаборСтабильныеПериодыПриборыУзловУчета.Записать(Ложь);
		Исключение
			Представление  =ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Представление);
			Возврат истина;
		КонецПопытки;				
	КонецЦикла;
	Возврат Ложь;
КонецФункции

Функция РезультатЗапросаСтабильныеПериодыНП(Отбор) 
	Запрос  = Новый Запрос;
	Текст ="ВЫБРАТЬ
	       |	бестСтабильныеПериодыПоследовательностьНП.ПериодНачисления КАК ПериодНачисления,
	       |	бестСтабильныеПериодыПоследовательностьНП.Район КАК Район,
	       |	МИНИМУМ(бестСтабильныеПериодыПоследовательностьНП.ПериодРегистрации) КАК ПериодРегистрации,
	       |	бестСтабильныеПериодыПоследовательностьНП.Организация КАК Организация,
	       |	бестСтабильныеПериодыПоследовательностьНП.Договор КАК Договор
	       |ПОМЕСТИТЬ МинПериодРегистрации
	       |ИЗ
	       |	РегистрСведений.бестСтабильныеПериодыПоследовательностьНП КАК бестСтабильныеПериодыПоследовательностьНП
	       |ГДЕ
	       |	бестСтабильныеПериодыПоследовательностьНП.ПериодНачисления = &ПериодНачисления
	       |	И бестСтабильныеПериодыПоследовательностьНП.Район = &Район
	       |	И бестСтабильныеПериодыПоследовательностьНП.СостояниеПроведения В (ЗНАЧЕНИЕ(Перечисление.энргСостояниеДокументаВПоследовательности.ПроведенСНарушениемПоследовательности), ЗНАЧЕНИЕ(Перечисление.энргСостояниеДокументаВПоследовательности.ИсключенИзПоследовательности))
	       |	И бестСтабильныеПериодыПоследовательностьНП.Организация = &Организация
	       |	И бестСтабильныеПериодыПоследовательностьНП.Договор = &Договор
	       |
	       |СГРУППИРОВАТЬ ПО
	       |	бестСтабильныеПериодыПоследовательностьНП.ПериодНачисления,
	       |	бестСтабильныеПериодыПоследовательностьНП.Район,
	       |	бестСтабильныеПериодыПоследовательностьНП.Организация,
	       |	бестСтабильныеПериодыПоследовательностьНП.Договор
	       |;
	       |
	       |////////////////////////////////////////////////////////////////////////////////
	       |ВЫБРАТЬ
	       |	бестСтабильныеПериодыПоследовательностьНП.ПериодНачисления КАК ПериодНачисления,
	       |	бестСтабильныеПериодыПоследовательностьНП.Район КАК Район,
	       |	бестСтабильныеПериодыПоследовательностьНП.ПериодРегистрации КАК ПериодРегистрации,
	       |	МИНИМУМ(бестСтабильныеПериодыПоследовательностьНП.ДатаРегистратора) КАК ДатаРегистратора,
	       |	бестСтабильныеПериодыПоследовательностьНП.Договор КАК Договор,
	       |	бестСтабильныеПериодыПоследовательностьНП.Организация КАК Организация
	       |ПОМЕСТИТЬ МинимальныйПериод
	       |ИЗ
	       |	МинПериодРегистрации КАК МинПериодРегистрации
	       |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бестСтабильныеПериодыПоследовательностьНП КАК бестСтабильныеПериодыПоследовательностьНП
	       |		ПО МинПериодРегистрации.ПериодНачисления = бестСтабильныеПериодыПоследовательностьНП.ПериодНачисления
	       |			И МинПериодРегистрации.Район = бестСтабильныеПериодыПоследовательностьНП.Район
	       |			И МинПериодРегистрации.ПериодРегистрации = бестСтабильныеПериодыПоследовательностьНП.ПериодРегистрации
	       |			И (бестСтабильныеПериодыПоследовательностьНП.ПериодНачисления = &ПериодНачисления)
	       |			И (бестСтабильныеПериодыПоследовательностьНП.Район = &Район)
	       |			И (бестСтабильныеПериодыПоследовательностьНП.СостояниеПроведения В (ЗНАЧЕНИЕ(Перечисление.энргСостояниеДокументаВПоследовательности.ПроведенСНарушениемПоследовательности), ЗНАЧЕНИЕ(Перечисление.энргСостояниеДокументаВПоследовательности.ИсключенИзПоследовательности)))
	       |			И МинПериодРегистрации.Организация = бестСтабильныеПериодыПоследовательностьНП.Организация
	       |			И МинПериодРегистрации.Договор = бестСтабильныеПериодыПоследовательностьНП.Договор
	       |			И (бестСтабильныеПериодыПоследовательностьНП.Договор = &Договор)
	       |			И (бестСтабильныеПериодыПоследовательностьНП.Организация = &Организация)
	       |
	       |СГРУППИРОВАТЬ ПО
	       |	бестСтабильныеПериодыПоследовательностьНП.ПериодНачисления,
	       |	бестСтабильныеПериодыПоследовательностьНП.Район,
	       |	бестСтабильныеПериодыПоследовательностьНП.ПериодРегистрации,
	       |	бестСтабильныеПериодыПоследовательностьНП.Договор,
	       |	бестСтабильныеПериодыПоследовательностьНП.Организация
	       |;
	       |
	       |////////////////////////////////////////////////////////////////////////////////
	       |ВЫБРАТЬ
	       |	МинимальныйПериод.ПериодНачисления КАК ПериодНачисления,
	       |	МинимальныйПериод.Район КАК Район,
	       |	МинимальныйПериод.ПериодРегистрации КАК ПериодРегистрации,
	       |	МинимальныйПериод.ДатаРегистратора КАК ДатаРегистратора,
	       |	МИНИМУМ(бестСтабильныеПериодыПоследовательностьНП.ДокРегистратор) КАК ДокРегистратор,
	       |	МинимальныйПериод.Договор КАК Договор,
	       |	МинимальныйПериод.Организация КАК Организация
	       |ПОМЕСТИТЬ МинимальныйРегистратор
	       |ИЗ
	       |	МинимальныйПериод КАК МинимальныйПериод
	       |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бестСтабильныеПериодыПоследовательностьНП КАК бестСтабильныеПериодыПоследовательностьНП
	       |		ПО МинимальныйПериод.ПериодНачисления = бестСтабильныеПериодыПоследовательностьНП.ПериодНачисления
	       |			И МинимальныйПериод.Район = бестСтабильныеПериодыПоследовательностьНП.Район
	       |			И МинимальныйПериод.ПериодРегистрации = бестСтабильныеПериодыПоследовательностьНП.ПериодРегистрации
	       |			И (бестСтабильныеПериодыПоследовательностьНП.СостояниеПроведения В (ЗНАЧЕНИЕ(Перечисление.энргСостояниеДокументаВПоследовательности.ПроведенСНарушениемПоследовательности), ЗНАЧЕНИЕ(Перечисление.энргСостояниеДокументаВПоследовательности.ИсключенИзПоследовательности)))
	       |			И МинимальныйПериод.ДатаРегистратора = бестСтабильныеПериодыПоследовательностьНП.ДатаРегистратора
	       |			И (бестСтабильныеПериодыПоследовательностьНП.ПериодНачисления = &ПериодНачисления)
	       |			И (бестСтабильныеПериодыПоследовательностьНП.Район = &Район)
	       |			И МинимальныйПериод.Организация = бестСтабильныеПериодыПоследовательностьНП.Организация
	       |			И МинимальныйПериод.Договор = бестСтабильныеПериодыПоследовательностьНП.Договор
	       |			И (бестСтабильныеПериодыПоследовательностьНП.Договор = &Договор)
	       |			И (бестСтабильныеПериодыПоследовательностьНП.Организация = &Организация)
	       |
	       |СГРУППИРОВАТЬ ПО
	       |	МинимальныйПериод.ПериодНачисления,
	       |	МинимальныйПериод.Район,
	       |	МинимальныйПериод.ПериодРегистрации,
	       |	МинимальныйПериод.ДатаРегистратора,
	       |	МинимальныйПериод.Договор,
	       |	МинимальныйПериод.Организация
	       |;
	       |
	       |////////////////////////////////////////////////////////////////////////////////
	       |ВЫБРАТЬ
	       |	МинимальныйРегистратор.ПериодНачисления КАК ПериодНачисления,
	       |	МинимальныйРегистратор.Район КАК Район,
	       |	бестСтабильныеПериодыПоследовательностьНП.ПериодРегистрации КАК ПериодРегистрации,
	       |	бестСтабильныеПериодыПоследовательностьНП.СостояниеПроведения КАК СостояниеПроведения,
	       |	бестСтабильныеПериодыПоследовательностьНП.ДатаРегистратора КАК ДатаРегистратора,
	       |	бестСтабильныеПериодыПоследовательностьНП.ДокРегистратор КАК ДокРегистратор,
	       |	МинимальныйРегистратор.Договор КАК Договор,
	       |	МинимальныйРегистратор.Организация КАК Организация
	       |ИЗ
	       |	МинимальныйРегистратор КАК МинимальныйРегистратор
	       |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бестСтабильныеПериодыПоследовательностьНП КАК бестСтабильныеПериодыПоследовательностьНП
	       |		ПО МинимальныйРегистратор.ПериодНачисления = бестСтабильныеПериодыПоследовательностьНП.ПериодНачисления
	       |			И МинимальныйРегистратор.Район = бестСтабильныеПериодыПоследовательностьНП.Район
	       |			И (ВЫБОР
	       |				КОГДА МинимальныйРегистратор.ПериодРегистрации < бестСтабильныеПериодыПоследовательностьНП.ПериодРегистрации
	       |					ТОГДА ИСТИНА
	       |				КОГДА МинимальныйРегистратор.ПериодРегистрации = бестСтабильныеПериодыПоследовательностьНП.ПериодРегистрации
	       |					ТОГДА ВЫБОР
	       |							КОГДА МинимальныйРегистратор.ДатаРегистратора < бестСтабильныеПериодыПоследовательностьНП.ДатаРегистратора
	       |								ТОГДА ИСТИНА
	       |							КОГДА МинимальныйРегистратор.ДатаРегистратора = бестСтабильныеПериодыПоследовательностьНП.ДатаРегистратора
	       |								ТОГДА МинимальныйРегистратор.ДокРегистратор <= бестСтабильныеПериодыПоследовательностьНП.ДокРегистратор
	       |							ИНАЧЕ ЛОЖЬ
	       |						КОНЕЦ
	       |				ИНАЧЕ ЛОЖЬ
	       |			КОНЕЦ)
	       |			И (бестСтабильныеПериодыПоследовательностьНП.ПериодНачисления = &ПериодНачисления)
	       |			И (бестСтабильныеПериодыПоследовательностьНП.Район = &Район)
	       |			И (бестСтабильныеПериодыПоследовательностьНП.Договор = &Договор)
	       |			И (бестСтабильныеПериодыПоследовательностьНП.Организация = &Организация)
	       |			И МинимальныйРегистратор.Договор = бестСтабильныеПериодыПоследовательностьНП.Договор
	       |			И МинимальныйРегистратор.Организация = бестСтабильныеПериодыПоследовательностьНП.Организация
	       |
	       |УПОРЯДОЧИТЬ ПО
	       |	ПериодНачисления,
	       |	Район,
	       |	ПериодРегистрации,
	       |	ДатаРегистратора,
	       |	ДокРегистратор";   	       
	
	Если не Отбор.свойство("Договор") тогда
		Текст = СтрЗаменить(Текст,"И бестСтабильныеПериодыПоследовательностьНП.Договор = &Договор","");
		Текст = СтрЗаменить(Текст,"И (бестСтабильныеПериодыПоследовательностьНП.Договор = &Договор)","");		
	КонецЕсли;
	
	//Если не Отбор.свойство("ОбъектРасчета") тогда
	//	Текст = СтрЗаменить(Текст,"И бестСтабильныеПериодыПоследовательностьНП.ОбъектРасчета = &ОбъектРасчета","");
	//	Текст = СтрЗаменить(Текст,"И (бестСтабильныеПериодыПоследовательностьНП.ОбъектРасчета = &ОбъектРасчета)","");		
	//КонецЕсли;

		
	Запрос.Текст = Текст;
	Запрос.УстановитьПараметр("Организация",		Отбор.Организация);
	Запрос.УстановитьПараметр("Район",				Отбор.район);
	Запрос.УстановитьПараметр("ПериодНачисления",	Отбор.ПериодНачисления);
	
	Если Отбор.свойство("Договор") тогда
		Запрос.УстановитьПараметр("Договор",		Отбор.Договор);
	КонецЕсли; 
	
	//Если Отбор.свойство("ОбъектРасчета") тогда
	//	Запрос.УстановитьПараметр("ОбъектРасчета",		Отбор.ОбъектРасчета);
	//КонецЕсли; 
	
	
	Возврат Запрос.Выполнить();
	
КонецФункции

#КонецОбласти


#Область ВосстановитьПоследовательностьПоказанияПУНП

Процедура ОбновитьДанныеВДокументеНП(ПериодНачисления,ДокРегистратор,ПараметрыОперации)
	
	ПоказанияПриняты 									= Перечисления.энргСостояниеПоказаний.Приняты;
	
	ДокОбъект  											= ДокРегистратор.получитьОбъект();
	ДокОбъект.ДополнительныеСвойства.вставить("ВосстановлениеПоследовательности",Истина);
	
	Если ЗначениеЗаполнено(ПараметрыОперации.ИмяТабЧасти) тогда
		ИмяТЧ 											= ПараметрыОперации.ИмяТабЧасти;
	иначе
		ИмяТЧ 											= ИмяТабличнойЧастиПоказанийНП(ДокРегистратор);
	КонецЕсли;
	
	тчТочкиУчета 										= ДокОбъект["ТочкиУчета"];
	тчШкалыПриборов 									= ДокОбъект["ШкалыПриборовУчета"];
	тчПоказания 										= ДокОбъект["ПоказанияПриборовУчета"];
	
	Если ПараметрыОперации.НомерСтрокиТЧ > 0 тогда
		СтрокаПоказаний									= тчПоказания[ПараметрыОперации.НомерСтрокиТЧ-1];
		СтрокиШкал										= тчШкалыПриборов.НайтиСтроки(Новый Структура("IDСтроки", СтрокаПоказаний.IDСтроки));
		Если СтрокиШкал.Количество() <> 1 тогда
			// Исключительная ситуация когда в документе у одного прибора учета показания указаны более одного раза.
		КонецЕсли;		
		СтрокаШкалы 									= СтрокиШкал[0];
		СтрокиТочки										= тчТочкиУчета.НайтиСтроки(Новый Структура("IDСтроки", СтрокаШкалы.IDСтрокиТочкиУчета));
		Если СтрокиТочки.Количество() <> 1 тогда
			// Исключительная ситуация когда в документе у одного прибора учета показания указаны более одного раза.
		КонецЕсли;
		СтрокаТочки 									= СтрокиТочки[0];
	иначе		
		СтрокиТочки		 								= тчТочкиУчета.найтиСтроки(Новый Структура("ПриборУчета",ПараметрыОперации.ПриборУчета));
		Если СтрокиТочки.Количество() <> 1 тогда
			// Исключительная ситуация когда в документе у одного прибора учета показания указаны более одного раза.
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В документе " + ДокРегистратор + " для прибора учета "   +  ПараметрыОперации.ПриборУчета + " найдено более одной строки");
		КонецЕсли;		
		СтрокаТочки  									= СтрокиТочки[0];
		
		СтрокиШкал 										= тчШкалыПриборов.найтиСтроки(Новый Структура("IDСтрокиТочкиУчета, Шкала",СтрокаТочки.IDСтроки, ПараметрыОперации.Шкала));
		Если СтрокиШкал.Количество() <> 1 тогда
			// Исключительная ситуация когда в документе у одного прибора учета показания указаны более одного раза.
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В документе " + ДокРегистратор + " для шкалы - " + ПараметрыОперации.Шкала + " прибора учета "   +  ПараметрыОперации.ПриборУчета + " найдено более одной строки");
		КонецЕсли;
		
		СтрокаШкалы                                    	= СтрокиШкал[0];
		СтрокиПоказаний 								= тчПоказания.НайтиСтроки(Новый Структура("IDСтроки, ТарифнаяЗона", СтрокаШкалы.IDСтроки, ПараметрыОперации.ТарифнаяЗона));
		Если СтрокиПоказаний.Количество() <> 1 тогда
			// Исключительная ситуация когда в документе у одного прибора учета показания указаны более одного раза.
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В документе " + ДокРегистратор + " для шкалы - " + ПараметрыОперации.Шкала + " прибора учета " +  ПараметрыОперации.ПриборУчета + " и тарифной зоны " +  ПараметрыОперации.ТарифнаяЗона  + " найдено более одной строки");
		КонецЕсли;
		
		СтрокаПоказаний 								= СтрокиПоказаний[0];
		
	КонецЕсли;
	
	ДанныеСреднегоОбъема 								= ПараметрыОперации.ДанныеСреднегоОбъема;
	
	Если СтрокаТочки = Неопределено тогда
		СреднийОбъема 									= 0;
	ИначеЕсли ДанныеСреднегоОбъема[СтрокаТочки.ТочкаУчета] = Неопределено тогда
		СреднийОбъема 									= 0;
	ИначеЕсли  ДанныеСреднегоОбъема[СтрокаТочки.ТочкаУчета][ПараметрыОперации.Шкала] = Неопределено тогда
		СреднийОбъема 									= 0;
	ИначеЕсли ДанныеСреднегоОбъема[СтрокаТочки.ТочкаУчета][ПараметрыОперации.Шкала][ПараметрыОперации.ТарифнаяЗона] = Неопределено тогда
		СреднийОбъема 									= 0;
	иначе
		СреднийОбъема 									= ДанныеСреднегоОбъема[СтрокаТочки.ТочкаУчета][ПараметрыОперации.Шкала][ПараметрыОперации.ТарифнаяЗона];
	КонецЕсли;
	
	ДанныеМаксимальногоПотребления 						= ПараметрыОперации.ДанныеМаксимальногоПотребления;
	Если ДанныеМаксимальногоПотребления[СтрокаТочки.Услуга] = Неопределено тогда
		МаксимальноВозможныйОбъемПотребления 			= 1000;
	иначе 
		СтрокаСоотвествия 								= ДанныеМаксимальногоПотребления[СтрокаТочки.Услуга];
		МаксимальноВозможныйОбъемПотребления 			= СтрокаСоотвествия.ПовышающийКоэффициент * СтрокаСоотвествия.МаксимальноеПотребления;	
	КонецЕсли;
	
	ДанныеСтроки 										= бестРаботаСПоказаниямиПриборовУчетаНПКлиентСервер.ДанныеСтрокиПоказаний();
	
	ДанныеСтроки.ТекущиеПоказания	 					= СтрокаПоказаний.ТекущиеПоказания;
	ДанныеСтроки.Разница 								= СтрокаПоказаний.Разница;
	ДанныеСтроки.ПереворотИзмененПользователем 			= СтрокаПоказаний.ПереворотИзмененПользователем;
	ДанныеСтроки.СтатусИзмененПользователем 			= СтрокаПоказаний.СтатусИзмененПользователем;
	//ДанныеСтроки.Сумма				 					= СтрокаТЧ.Сумма;
	
	ДанныеСтроки.ПредыдущиеПоказания 					= ПараметрыОперации.ПредыдущиеМакс;
	ДанныеСтроки.ДатаПоследнихПоказаний 				= НачалоДня(ПараметрыОперации.ПериодПредыдущихМаксПок);
	ДанныеСтроки.СостояниеПоказаний 					= ПараметрыОперации.СостояниеПоказаний; 	
	ДанныеСтроки.СреднийОбъемПотребления 				= СреднийОбъема;
	ДанныеСтроки.МаксимальноВозможныеПоказания			= ПараметрыОперации.МаксимальноВозможныеПоказания;
	ДанныеСтроки.МаксимальноВозможныйОбъемПотребления	= МаксимальноВозможныйОбъемПотребления; 
	ДанныеСтроки.КоэффициентПУ							= ПараметрыОперации.КоэффициентПУ; 	
	ДанныеСтроки.Переворот 								= ПараметрыОперации.Переворот;  	
	//ДанныеСтроки.ЗначениеТарифа				 			= СтрокаТЧ.ЗначениеТарифа;		
	КонтрольныйСъем 									= ПараметрыОперации.КС;
	
	бестРаботаСПоказаниямиПриборовУчетаНПКлиентСервер.ПересчитатьСтрокуПриборовУчета(ДанныеСтроки,ПериодНачисления,КонтрольныйСъем);
	
	Если ДанныеСтрокиИзмененыНП(ДанныеСтроки,СтрокаПоказаний) тогда
		// Если что то изменилось в документе.
		ЗаполнитьЗначенияСвойств(СтрокаПоказаний,ДанныеСтроки);				
		ДокОбъект.ДополнительныеСвойства.вставить("ВосстановлениеПоследовательности",Истина);
		ДокОбъект.записать();
	КонецЕсли;
	
	Если ДанныеСтроки.СостояниеПоказаний <> ПараметрыОперации.СостояниеПоказаний или ДанныеСтроки.Переворот <> ПараметрыОперации.Переворот тогда
		// Если данные изменились записываем их.
		НаборПоказаний 								= РегистрыСведений.бестПоказанияПриборовУчетаНП.СоздатьНаборЗаписей();
		НаборПоказаний.Отбор.регистратор.установить(ДокРегистратор);
		НаборПоказаний.Прочитать();
		ТаблицаПоказаний  							= НаборПоказаний.Выгрузить();
		для Каждого стр из ТаблицаПоказаний цикл
			стр.активность 							= истина;
		КонецЦикла;   			
		НаборПоказаний.Очистить();
		НаборПоказаний.Записать();
		СтрокиПоказаний  							= ТаблицаПоказаний.НайтиСтроки(Новый Структура("Договор,ОбъектРасчета,ПриборУчета,ТарифнаяЗона,Разделитель",ПараметрыОперации.Договор,ПараметрыОперации.ОбъектРасчета,ПараметрыОперации.ПриборУчета,ПараметрыОперации.ТарифнаяЗона,ПараметрыОперации.Разделитель)); 
		Если СтрокиПоказаний.Количество() = 0 тогда 	
			// Движений по данному пу нету.	
			Если СтрокаПоказаний.ТекущиеПоказания > 0 тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не восстановлена последовательность в документе " + ДокРегистратор + " по прибору " + ПараметрыОперации.ПриборУчета);
			КонецЕсли;				
		иначеЕсли СтрокиПоказаний.Количество() > 1 тогда
			// Исключительная ситуация когда в документе у одного прибора учета показания указаны более одного раза.
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не восстановлена последовательность в документе " + ДокРегистратор + " по прибору " + ПараметрыОперации.ПриборУчета);
		иначе
			СтрокаПоказаний  						= СтрокиПоказаний[0];
			СтрокаПоказаний.Показание 				= ДанныеСтроки.ТекущиеПоказания;
			СтрокаПоказаний.Переворот 				= ДанныеСтроки.Переворот;
			СтрокаПоказаний.СостояниеПоказаний 		= ДанныеСтроки.СостояниеПоказаний;
		КонецЕсли;			
		
		// Записываем новый набор показаний.
		НаборПоказаний 								= РегистрыСведений.бестПоказанияПриборовУчетаНП.СоздатьНаборЗаписей();
		НаборПоказаний.Отбор.регистратор.установить(ДокРегистратор);
		НаборПоказаний.Загрузить(ТаблицаПоказаний);
		НаборПоказаний.Записать(Ложь);			
		ПараметрыОперации.СостояниеПоказаний 		= ДанныеСтроки.СостояниеПоказаний;
		ПараметрыОперации.Переворот 				= ДанныеСтроки.Переворот;
	КонецЕсли;
	
КонецПроцедуры

Функция ДанныеСреднегоОбъемаНП(ВыборкаСреднийОбъем,ТекОбъект) 
	
	ТекТочкаУчета					= Неопределено;
	ТекШкала 						= Неопределено;
	СоотвествиеТочек 				= Новый Соответствие;
	СоответствиеЗоны 				= Неопределено;
	СоотвествиеШкал 				= Неопределено;
	Пока ВыборкаСреднийОбъем.ОбъектРасчета  = ТекОбъект цикл		
		Если ЗначениеЗаполнено(ВыборкаСреднийОбъем.Шкала) и ЗначениеЗаполнено(ВыборкаСреднийОбъем.ТарифнаяЗона) Тогда
			Если ТекШкала <> ВыборкаСреднийОбъем.Шкала Тогда
				Если ТекШкала <> Неопределено тогда
					СоотвествиеШкал.Вставить(ТекШкала,СоответствиеЗоны);
				КонецЕсли;
				СоотвествиеШкал		= Новый Соответствие;
				СоответствиеЗоны	= Новый Соответствие;
			КонецЕсли;
			
			Если ТекТочкаУчета <> ВыборкаСреднийОбъем.ТочкаУчета тогда
				Если ТекТочкаУчета <> Неопределено тогда
					СоотвествиеТочек.Вставить(ТекТочкаУчета,СоотвествиеШкал);
				КонецЕсли;
				СоотвествиеШкал		= Новый Соответствие;
				СоответствиеЗоны	= Новый Соответствие;
			КонецЕсли; 	
			
			СоответствиеЗоны.Вставить(ВыборкаСреднийОбъем.ТарифнаяЗона,ВыборкаСреднийОбъем.СреднееПотребление);
		КонецЕсли;
	
		Если не ВыборкаСреднийОбъем.следующий() тогда
			Прервать;
		КонецЕсли;
	КонецЦикла; 
	 	
	Если ТекШкала <> Неопределено тогда
		СоотвествиеШкал.Вставить(ТекШкала,СоответствиеЗоны);
	КонецЕсли;		
		
	Если ТекТочкаУчета <> Неопределено тогда
		СоотвествиеТочек.Вставить(ТекТочкаУчета,СоотвествиеШкал);
	КонецЕсли;	  
	
	Возврат СоотвествиеТочек;

КонецФункции

Функция РезультатСреднийОбъемПотребленияНП(МВТ,Отбор)
	
	Запрос 	= Новый Запрос;
	Запрос.МенеджерВременныхТаблиц =МВТ;
	Текст 	=
	"ВЫБРАТЬ
	|	бестСреднийОбъемПотребленияНП.Организация КАК Организация,
	|	бестСреднийОбъемПотребленияНП.ПериодНачисления КАК ПериодНачисления,
	|	бестСреднийОбъемПотребленияНП.Район КАК Район,
	|	бестСреднийОбъемПотребленияНП.МКД КАК МКД,
	|	бестСреднийОбъемПотребленияНП.ТочкаУчета КАК ТочкаУчета,
	|	бестСреднийОбъемПотребленияНП.Шкала КАК Шкала,
	|	бестСреднийОбъемПотребленияНП.ТарифнаяЗона КАК ТарифнаяЗона,
	|	бестСреднийОбъемПотребленияНП.Объем КАК Объем,
	|	бестСреднийОбъемПотребленияНП.Договор КАК Договор,
	|	бестСреднийОбъемПотребленияНП.ОбъектРасчета КАК ОбъектРасчета
	|ПОМЕСТИТЬ СреднийОбъем
	|ИЗ
	|	РегистрСведений.бестСреднийОбъемПотребленияНП КАК бестСреднийОбъемПотребленияНП
	|ГДЕ
	|	бестСреднийОбъемПотребленияНП.Организация = &Организация
	|	И бестСреднийОбъемПотребленияНП.ПериодНачисления = &ПериодНачисления
	|	И бестСреднийОбъемПотребленияНП.Район = &Район
	|	И бестСреднийОбъемПотребленияНП.Договор = &Договор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Граница.Организация КАК Организация,
	|	Граница.ПериодНачисления КАК ПериодНачисления,
	|	Граница.Район КАК Район,
	|	Граница.МКД КАК МКД,
	|	ЕСТЬNULL(СреднийОбъем.ТочкаУчета, ЗНАЧЕНИЕ(Справочник.энргТочкиУчета.ПустаяСсылка)) КАК ТочкаУчета,
	|	ЕСТЬNULL(СреднийОбъем.Шкала, ЗНАЧЕНИЕ(Справочник.энргШкалыПриборовУчета.ПустаяСсылка)) КАК Шкала,
	|	ЕСТЬNULL(СреднийОбъем.ТарифнаяЗона, ЗНАЧЕНИЕ(Справочник.энргТарифныеЗоны.ПустаяСсылка)) КАК ТарифнаяЗона,
	|	ЕСТЬNULL(СреднийОбъем.Объем, 0) КАК СреднееПотребление,
	|	СреднийОбъем.Договор КАК Договор,
	|	СреднийОбъем.ОбъектРасчета КАК ОбъектРасчета
	|ИЗ
	|	Граница КАК Граница
	|		ЛЕВОЕ СОЕДИНЕНИЕ СреднийОбъем КАК СреднийОбъем
	|		ПО (Граница.Организация = СреднийОбъем.Организация
	|				И Граница.ПериодНачисления = СреднийОбъем.ПериодНачисления
	|				И Граница.Район = СреднийОбъем.Район
	|				И Граница.Договор = СреднийОбъем.Договор
	|				И Граница.ОбъектРасчета = СреднийОбъем.ОбъектРасчета)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	ПериодНачисления,
	|	Район,
	|	Договор,
	|	ОбъектРасчета,
	|	Шкала,
	|	ТарифнаяЗона"; 
	
	Если не Отбор.свойство("Договор") тогда
		Текст 		= СтрЗаменить(Текст,"И бестСреднийОбъемПотребленияНП.Договор = &Договор","");
	иначе
		Запрос.УстановитьПараметр("Договор",			Отбор.Договор);
	КонецЕсли;
		
	Запрос.УстановитьПараметр("Район",				Отбор.район);
	Запрос.УстановитьПараметр("Организация",		Отбор.Организация);
	Запрос.УстановитьПараметр("ПериодНачисления",	Отбор.ПериодНачисления);
	
	Запрос.Текст 	= Текст;
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ДанныеМаксимальногоПотребления(НачалоПериодаРасчета)
	МаксПотреб		 = Новый Соответствие;
	Запрос  		= Новый Запрос;
	Запрос.УстановитьПараметр("Период",КонецМесяца(НачалоПериодаРасчета)+1);
	Запрос.Текст 	="ВЫБРАТЬ
	|	энргМаксимальныеПоказателиПотребленияСрезПоследних.Услуга,
	|	энргМаксимальныеПоказателиПотребленияСрезПоследних.ТарифнаяЗона,
	|	энргМаксимальныеПоказателиПотребленияСрезПоследних.ПовышающийКоэффициент,
	|	энргМаксимальныеПоказателиПотребленияСрезПоследних.МаксимальноеПотребления
	|ИЗ
	|	РегистрСведений.энргМаксимальныеПоказателиПотребления.СрезПоследних(&Период, ) КАК энргМаксимальныеПоказателиПотребленияСрезПоследних";
	Результат  		= Запрос.Выполнить();
	Выборка  		= Результат.Выбрать();
	Пока Выборка.Следующий() цикл
		МаксПотреб.Вставить(Выборка.Услуга,Новый Структура("ПовышающийКоэффициент,МаксимальноеПотребления",Выборка.ПовышающийКоэффициент,Выборка.МаксимальноеПотребления));
	КонецЦикла;
	
	Возврат МаксПотреб;
КонецФункции

Функция ДанныеСтрокиИзмененыНП(Источник,Приемник)	
	
	для Каждого КлючЗначение из Источник цикл
		Если Источник[КлючЗначение.ключ] <> Приемник[КлючЗначение.ключ] тогда
			Возврат Истина;
			Прервать;				
		КонецЕсли;  		
	КонецЦикла; 	
	Возврат Ложь;
	
КонецФункции

Функция РезультатЗапросаПоказанияПУНП(МВТ,Отбор,НачалоПериодаРасчета) 
	
	Запрос  = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МВТ;
	
	Текст ="ВЫБРАТЬ
	       |	бестПоказанияПУНППоследовательность.Организация КАК Организация,
	       |	бестПоказанияПУНППоследовательность.ПериодНачисления КАК ПериодНачисления,
	       |	бестПоказанияПУНППоследовательность.Район КАК Район,
	       |	бестПоказанияПУНППоследовательность.МКД КАК МКД,
	       |	бестПоказанияПУНППоследовательность.ПриборУчета КАК ПриборУчета,
	       |	МИНИМУМ(бестПоказанияПУНППоследовательность.ПериодРегистрации) КАК ПериодРегистрации,
	       |	бестПоказанияПУНППоследовательность.Договор КАК Договор,
	       |	бестПоказанияПУНППоследовательность.ОбъектРасчета КАК ОбъектРасчета
	       |ПОМЕСТИТЬ МинимальныйПериод
	       |ИЗ
	       |	РегистрСведений.бестПоказанияПУНППоследовательность КАК бестПоказанияПУНППоследовательность
	       |ГДЕ
	       |	бестПоказанияПУНППоследовательность.Организация = &Организация
	       |	И бестПоказанияПУНППоследовательность.ПериодНачисления = &ПериодНачисления
	       |	И бестПоказанияПУНППоследовательность.Район = &Район
	       |	И бестПоказанияПУНППоследовательность.СостояниеПроведения В (ЗНАЧЕНИЕ(Перечисление.энргСостояниеДокументаВПоследовательности.ПроведенСНарушениемПоследовательности), ЗНАЧЕНИЕ(Перечисление.энргСостояниеДокументаВПоследовательности.ИсключенИзПоследовательности))
	       |	И бестПоказанияПУНППоследовательность.Договор = &Договор
	       |
	       |СГРУППИРОВАТЬ ПО
	       |	бестПоказанияПУНППоследовательность.Организация,
	       |	бестПоказанияПУНППоследовательность.ПериодНачисления,
	       |	бестПоказанияПУНППоследовательность.МКД,
	       |	бестПоказанияПУНППоследовательность.Район,
	       |	бестПоказанияПУНППоследовательность.ПриборУчета,
	       |	бестПоказанияПУНППоследовательность.Договор,
	       |	бестПоказанияПУНППоследовательность.ОбъектРасчета
	       |;
	       |
	       |////////////////////////////////////////////////////////////////////////////////
	       |ВЫБРАТЬ
	       |	МинимальныйПериод.Организация КАК Организация,
	       |	МинимальныйПериод.ПериодНачисления КАК ПериодНачисления,
	       |	МинимальныйПериод.Район КАК Район,
	       |	МинимальныйПериод.МКД КАК МКД,
	       |	МинимальныйПериод.ПриборУчета КАК ПриборУчета,
	       |	МинимальныйПериод.ПериодРегистрации КАК ПериодРегистрации,
	       |	МИНИМУМ(бестПоказанияПУНППоследовательность.ДатаРегистратора) КАК ДатаРегистратора,
	       |	МинимальныйПериод.Договор КАК Договор,
	       |	МинимальныйПериод.ОбъектРасчета КАК ОбъектРасчета
	       |ПОМЕСТИТЬ МинимальнаяДатаРегистратора
	       |ИЗ
	       |	МинимальныйПериод КАК МинимальныйПериод
	       |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бестПоказанияПУНППоследовательность КАК бестПоказанияПУНППоследовательность
	       |		ПО МинимальныйПериод.Организация = бестПоказанияПУНППоследовательность.Организация
	       |			И МинимальныйПериод.ПериодНачисления = бестПоказанияПУНППоследовательность.ПериодНачисления
	       |			И МинимальныйПериод.Район = бестПоказанияПУНППоследовательность.Район
	       |			И (бестПоказанияПУНППоследовательность.СостояниеПроведения В (ЗНАЧЕНИЕ(Перечисление.энргСостояниеДокументаВПоследовательности.ПроведенСНарушениемПоследовательности), ЗНАЧЕНИЕ(Перечисление.энргСостояниеДокументаВПоследовательности.ИсключенИзПоследовательности)))
	       |			И МинимальныйПериод.ПриборУчета = бестПоказанияПУНППоследовательность.ПриборУчета
	       |			И МинимальныйПериод.ПериодРегистрации = бестПоказанияПУНППоследовательность.ПериодРегистрации
	       |			И (бестПоказанияПУНППоследовательность.Организация = &Организация)
	       |			И (бестПоказанияПУНППоследовательность.ПериодНачисления = &ПериодНачисления)
	       |			И (бестПоказанияПУНППоследовательность.Район = &Район)
	       |			И МинимальныйПериод.Договор = бестПоказанияПУНППоследовательность.Договор
	       |			И МинимальныйПериод.ОбъектРасчета = бестПоказанияПУНППоследовательность.ОбъектРасчета
	       |			И (бестПоказанияПУНППоследовательность.Договор = &Договор)
	       |
	       |СГРУППИРОВАТЬ ПО
	       |	МинимальныйПериод.Организация,
	       |	МинимальныйПериод.ПериодНачисления,
	       |	МинимальныйПериод.Район,
	       |	МинимальныйПериод.МКД,
	       |	МинимальныйПериод.ПриборУчета,
	       |	МинимальныйПериод.ПериодРегистрации,
	       |	МинимальныйПериод.ОбъектРасчета,
	       |	МинимальныйПериод.Договор
	       |;
	       |
	       |////////////////////////////////////////////////////////////////////////////////
	       |ВЫБРАТЬ
	       |	МинимальнаяДатаРегистратора.Организация КАК Организация,
	       |	МинимальнаяДатаРегистратора.ПериодНачисления КАК ПериодНачисления,
	       |	МинимальнаяДатаРегистратора.Район КАК Район,
	       |	МинимальнаяДатаРегистратора.МКД КАК МКД,
	       |	МинимальнаяДатаРегистратора.ПриборУчета КАК ПриборУчета,
	       |	МинимальнаяДатаРегистратора.ПериодРегистрации КАК ПериодРегистрации,
	       |	МинимальнаяДатаРегистратора.ДатаРегистратора КАК ДатаРегистратора,
	       |	МИНИМУМ(бестПоказанияПУНППоследовательность.ДокРегистратор) КАК ДокРегистратор,
	       |	МинимальнаяДатаРегистратора.Договор КАК Договор,
	       |	МинимальнаяДатаРегистратора.ОбъектРасчета КАК ОбъектРасчета
	       |ПОМЕСТИТЬ МинимальныйРегистратор
	       |ИЗ
	       |	МинимальнаяДатаРегистратора КАК МинимальнаяДатаРегистратора
	       |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бестПоказанияПУНППоследовательность КАК бестПоказанияПУНППоследовательность
	       |		ПО МинимальнаяДатаРегистратора.Организация = бестПоказанияПУНППоследовательность.Организация
	       |			И МинимальнаяДатаРегистратора.ПериодНачисления = бестПоказанияПУНППоследовательность.ПериодНачисления
	       |			И МинимальнаяДатаРегистратора.Район = бестПоказанияПУНППоследовательность.Район
	       |			И (бестПоказанияПУНППоследовательность.СостояниеПроведения В (ЗНАЧЕНИЕ(Перечисление.энргСостояниеДокументаВПоследовательности.ПроведенСНарушениемПоследовательности), ЗНАЧЕНИЕ(Перечисление.энргСостояниеДокументаВПоследовательности.ИсключенИзПоследовательности)))
	       |			И МинимальнаяДатаРегистратора.ОбъектРасчета = бестПоказанияПУНППоследовательность.ОбъектРасчета
	       |			И МинимальнаяДатаРегистратора.ПриборУчета = бестПоказанияПУНППоследовательность.ПриборУчета
	       |			И МинимальнаяДатаРегистратора.ПериодРегистрации = бестПоказанияПУНППоследовательность.ПериодРегистрации
	       |			И (бестПоказанияПУНППоследовательность.Организация = &Организация)
	       |			И (бестПоказанияПУНППоследовательность.ПериодНачисления = &ПериодНачисления)
	       |			И (бестПоказанияПУНППоследовательность.Район = &Район)
	       |			И (бестПоказанияПУНППоследовательность.Договор = &Договор)
	       |			И МинимальнаяДатаРегистратора.Договор = бестПоказанияПУНППоследовательность.Договор
	       |
	       |СГРУППИРОВАТЬ ПО
	       |	МинимальнаяДатаРегистратора.Организация,
	       |	МинимальнаяДатаРегистратора.ПериодНачисления,
	       |	МинимальнаяДатаРегистратора.Район,
	       |	МинимальнаяДатаРегистратора.МКД,
	       |	МинимальнаяДатаРегистратора.ПриборУчета,
	       |	МинимальнаяДатаРегистратора.ПериодРегистрации,
	       |	МинимальнаяДатаРегистратора.ДатаРегистратора,
	       |	МинимальнаяДатаРегистратора.Договор,
	       |	МинимальнаяДатаРегистратора.ОбъектРасчета
	       |;
	       |
	       |////////////////////////////////////////////////////////////////////////////////
	       |ВЫБРАТЬ
	       |	ВложенныйЗапрос.Организация КАК Организация,
	       |	ВложенныйЗапрос.ПериодНачисления КАК ПериодНачисления,
	       |	ВложенныйЗапрос.Район КАК Район,
	       |	ВложенныйЗапрос.МКД КАК МКД,
	       |	ВложенныйЗапрос.ПриборУчета КАК ПриборУчета,
	       |	ВложенныйЗапрос.ПериодРегистрации КАК ПериодРегистрации,
	       |	ВложенныйЗапрос.ДатаРегистратора КАК ДатаРегистратора,
	       |	ВложенныйЗапрос.ДокРегистратор КАК ДокРегистратор,
	       |	ВложенныйЗапрос.Разделитель КАК Разделитель,
	       |	ВЫБОР
	       |		КОГДА ВложенныйЗапрос.ПериодРегистрации < &НачалоПериодаРасчета
	       |			ТОГДА &НачалоПериодаРасчета
	       |		ИНАЧЕ ВложенныйЗапрос.ПериодРегистрации
	       |	КОНЕЦ КАК ПериодРегистрацииПоказаний,
	       |	ВложенныйЗапрос.Договор КАК Договор,
	       |	ВложенныйЗапрос.ОбъектРасчета КАК ОбъектРасчета
	       |ПОМЕСТИТЬ Граница
	       |ИЗ
	       |	(ВЫБРАТЬ
	       |		МинимальныйРегистратор.Организация КАК Организация,
	       |		МинимальныйРегистратор.ПериодНачисления КАК ПериодНачисления,
	       |		МинимальныйРегистратор.Район КАК Район,
	       |		МинимальныйРегистратор.МКД КАК МКД,
	       |		МинимальныйРегистратор.ПриборУчета КАК ПриборУчета,
	       |		МинимальныйРегистратор.ПериодРегистрации КАК ПериодРегистрации,
	       |		МинимальныйРегистратор.ДатаРегистратора КАК ДатаРегистратора,
	       |		МинимальныйРегистратор.ДокРегистратор КАК ДокРегистратор,
	       |		МИНИМУМ(бестПоказанияПУНППоследовательность.Разделитель) КАК Разделитель,
	       |		МинимальныйРегистратор.Договор КАК Договор,
	       |		МинимальныйРегистратор.ОбъектРасчета КАК ОбъектРасчета
	       |	ИЗ
	       |		МинимальныйРегистратор КАК МинимальныйРегистратор
	       |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бестПоказанияПУНППоследовательность КАК бестПоказанияПУНППоследовательность
	       |			ПО МинимальныйРегистратор.Организация = бестПоказанияПУНППоследовательность.Организация
	       |				И МинимальныйРегистратор.ПериодНачисления = бестПоказанияПУНППоследовательность.ПериодНачисления
	       |				И МинимальныйРегистратор.Район = бестПоказанияПУНППоследовательность.Район
	       |				И МинимальныйРегистратор.ПриборУчета = бестПоказанияПУНППоследовательность.ПриборУчета
	       |				И МинимальныйРегистратор.ПериодРегистрации = бестПоказанияПУНППоследовательность.ПериодРегистрации
	       |				И МинимальныйРегистратор.ДатаРегистратора = бестПоказанияПУНППоследовательность.ДатаРегистратора
	       |				И (бестПоказанияПУНППоследовательность.СостояниеПроведения В (ЗНАЧЕНИЕ(Перечисление.энргСостояниеДокументаВПоследовательности.ПроведенСНарушениемПоследовательности), ЗНАЧЕНИЕ(Перечисление.энргСостояниеДокументаВПоследовательности.ИсключенИзПоследовательности)))
	       |				И (бестПоказанияПУНППоследовательность.Организация = &Организация)
	       |				И (бестПоказанияПУНППоследовательность.ПериодНачисления = &ПериодНачисления)
	       |				И (бестПоказанияПУНППоследовательность.Район = &Район)
	       |				И (бестПоказанияПУНППоследовательность.Договор = &Договор)
	       |				И МинимальныйРегистратор.ПриборУчета = бестПоказанияПУНППоследовательность.ПриборУчета
	       |				И МинимальныйРегистратор.Договор = бестПоказанияПУНППоследовательность.Договор
	       |				И МинимальныйРегистратор.ОбъектРасчета = бестПоказанияПУНППоследовательность.ОбъектРасчета
	       |	
	       |	СГРУППИРОВАТЬ ПО
	       |		МинимальныйРегистратор.Организация,
	       |		МинимальныйРегистратор.ПериодНачисления,
	       |		МинимальныйРегистратор.Район,
	       |		МинимальныйРегистратор.МКД,
	       |		МинимальныйРегистратор.ПриборУчета,
	       |		МинимальныйРегистратор.ПериодРегистрации,
	       |		МинимальныйРегистратор.ДатаРегистратора,
	       |		МинимальныйРегистратор.ДокРегистратор,
	       |		МинимальныйРегистратор.Договор,
	       |		МинимальныйРегистратор.ОбъектРасчета) КАК ВложенныйЗапрос
	       |;
	       |
	       |////////////////////////////////////////////////////////////////////////////////
	       |ВЫБРАТЬ
	       |	бестПоказанияПУНППоследовательность.Организация КАК Организация,
	       |	бестПоказанияПУНППоследовательность.ПериодНачисления КАК ПериодНачисления,
	       |	бестПоказанияПУНППоследовательность.Район КАК Район,
	       |	бестПоказанияПУНППоследовательность.СостояниеПроведения КАК СостояниеПроведения,
	       |	бестПоказанияПУНППоследовательность.МКД КАК МКД,
	       |	бестПоказанияПУНППоследовательность.ПриборУчета КАК ПриборУчета,
	       |	бестПоказанияПУНППоследовательность.ПериодРегистрации КАК ПериодРегистрации,
	       |	бестПоказанияПУНППоследовательность.ДатаРегистратора КАК ДатаРегистратора,
	       |	бестПоказанияПУНППоследовательность.ДокРегистратор КАК ДокРегистратор,
	       |	бестПоказанияПУНППоследовательность.Разделитель КАК Разделитель,
	       |	бестПоказанияПУНППоследовательность.Договор КАК Договор,
	       |	бестПоказанияПУНППоследовательность.ОбъектРасчета КАК ОбъектРасчета
	       |ПОМЕСТИТЬ НаборПроведенныхВПоследовательности
	       |ИЗ
	       |	Граница КАК Граница
	       |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бестПоказанияПУНППоследовательность КАК бестПоказанияПУНППоследовательность
	       |		ПО Граница.Организация = бестПоказанияПУНППоследовательность.Организация
	       |			И Граница.ПериодНачисления = бестПоказанияПУНППоследовательность.ПериодНачисления
	       |			И Граница.Район = бестПоказанияПУНППоследовательность.Район
	       |			И Граница.ПриборУчета = бестПоказанияПУНППоследовательность.ПриборУчета
	       |			И (ВЫБОР
	       |				КОГДА Граница.ПериодРегистрации = бестПоказанияПУНППоследовательность.ПериодРегистрации
	       |						И Граница.ДатаРегистратора = бестПоказанияПУНППоследовательность.ДатаРегистратора
	       |						И Граница.ДокРегистратор = бестПоказанияПУНППоследовательность.ДокРегистратор
	       |						И Граница.Разделитель > бестПоказанияПУНППоследовательность.Разделитель
	       |					ТОГДА ИСТИНА
	       |				КОГДА Граница.ПериодРегистрации = бестПоказанияПУНППоследовательность.ПериодРегистрации
	       |						И Граница.ДатаРегистратора = бестПоказанияПУНППоследовательность.ДатаРегистратора
	       |						И Граница.ДокРегистратор > бестПоказанияПУНППоследовательность.ДокРегистратор
	       |					ТОГДА ИСТИНА
	       |				КОГДА Граница.ПериодРегистрации = бестПоказанияПУНППоследовательность.ПериодРегистрации
	       |						И Граница.ДатаРегистратора > бестПоказанияПУНППоследовательность.ДатаРегистратора
	       |					ТОГДА ИСТИНА
	       |				ИНАЧЕ Граница.ПериодРегистрации > бестПоказанияПУНППоследовательность.ПериодРегистрации
	       |			КОНЕЦ)
	       |			И (бестПоказанияПУНППоследовательность.СостояниеПроведения = ЗНАЧЕНИЕ(Перечисление.энргСостояниеДокументаВПоследовательности.ПроведенВПоследовательности))
	       |			И (бестПоказанияПУНППоследовательность.Организация = &Организация)
	       |			И (бестПоказанияПУНППоследовательность.ПериодНачисления = &ПериодНачисления)
	       |			И (бестПоказанияПУНППоследовательность.Район = &Район)
	       |			И (бестПоказанияПУНППоследовательность.Договор = &Договор)
	       |;
	       |
	       |////////////////////////////////////////////////////////////////////////////////
	       |ВЫБРАТЬ
	       |	НаборПроведенныхВПоследовательности.Организация КАК Организация,
	       |	НаборПроведенныхВПоследовательности.ПериодНачисления КАК ПериодНачисления,
	       |	НаборПроведенныхВПоследовательности.Район КАК Район,
	       |	НаборПроведенныхВПоследовательности.СостояниеПроведения КАК СостояниеПроведения,
	       |	НаборПроведенныхВПоследовательности.МКД КАК МКД,
	       |	НаборПроведенныхВПоследовательности.ПриборУчета КАК ПриборУчета,
	       |	МАКСИМУМ(НаборПроведенныхВПоследовательности.ПериодРегистрации) КАК ПериодРегистрации,
	       |	НаборПроведенныхВПоследовательности.Договор КАК Договор,
	       |	НаборПроведенныхВПоследовательности.ОбъектРасчета КАК ОбъектРасчета
	       |ПОМЕСТИТЬ МаксимальныйПериодРегистрацииПроведенных
	       |ИЗ
	       |	НаборПроведенныхВПоследовательности КАК НаборПроведенныхВПоследовательности
	       |
	       |СГРУППИРОВАТЬ ПО
	       |	НаборПроведенныхВПоследовательности.Организация,
	       |	НаборПроведенныхВПоследовательности.ПериодНачисления,
	       |	НаборПроведенныхВПоследовательности.Район,
	       |	НаборПроведенныхВПоследовательности.СостояниеПроведения,
	       |	НаборПроведенныхВПоследовательности.МКД,
	       |	НаборПроведенныхВПоследовательности.ПриборУчета,
	       |	НаборПроведенныхВПоследовательности.Договор,
	       |	НаборПроведенныхВПоследовательности.ОбъектРасчета
	       |;
	       |
	       |////////////////////////////////////////////////////////////////////////////////
	       |ВЫБРАТЬ
	       |	МаксимальныйПериодРегистрацииПроведенных.Организация КАК Организация,
	       |	МаксимальныйПериодРегистрацииПроведенных.ПериодНачисления КАК ПериодНачисления,
	       |	МаксимальныйПериодРегистрацииПроведенных.Район КАК Район,
	       |	МаксимальныйПериодРегистрацииПроведенных.СостояниеПроведения КАК СостояниеПроведения,
	       |	МаксимальныйПериодРегистрацииПроведенных.МКД КАК МКД,
	       |	МаксимальныйПериодРегистрацииПроведенных.ПриборУчета КАК ПриборУчета,
	       |	МаксимальныйПериодРегистрацииПроведенных.ПериодРегистрации КАК ПериодРегистрации,
	       |	МАКСИМУМ(НаборПроведенныхВПоследовательности.ДатаРегистратора) КАК ДатаРегистратора,
	       |	МаксимальныйПериодРегистрацииПроведенных.Договор КАК Договор,
	       |	МаксимальныйПериодРегистрацииПроведенных.ОбъектРасчета КАК ОбъектРасчета
	       |ПОМЕСТИТЬ МаксимальнаяДатаПроведенных
	       |ИЗ
	       |	НаборПроведенныхВПоследовательности КАК НаборПроведенныхВПоследовательности
	       |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаксимальныйПериодРегистрацииПроведенных КАК МаксимальныйПериодРегистрацииПроведенных
	       |		ПО НаборПроведенныхВПоследовательности.Организация = МаксимальныйПериодРегистрацииПроведенных.Организация
	       |			И НаборПроведенныхВПоследовательности.ПериодНачисления = МаксимальныйПериодРегистрацииПроведенных.ПериодНачисления
	       |			И НаборПроведенныхВПоследовательности.Район = МаксимальныйПериодРегистрацииПроведенных.Район
	       |			И НаборПроведенныхВПоследовательности.СостояниеПроведения = МаксимальныйПериодРегистрацииПроведенных.СостояниеПроведения
	       |			И НаборПроведенныхВПоследовательности.Договор = МаксимальныйПериодРегистрацииПроведенных.Договор
	       |			И НаборПроведенныхВПоследовательности.ОбъектРасчета = МаксимальныйПериодРегистрацииПроведенных.ОбъектРасчета
	       |			И НаборПроведенныхВПоследовательности.ПриборУчета = МаксимальныйПериодРегистрацииПроведенных.ПриборУчета
	       |			И НаборПроведенныхВПоследовательности.ПериодРегистрации = МаксимальныйПериодРегистрацииПроведенных.ПериодРегистрации
	       |
	       |СГРУППИРОВАТЬ ПО
	       |	МаксимальныйПериодРегистрацииПроведенных.Организация,
	       |	МаксимальныйПериодРегистрацииПроведенных.ПериодНачисления,
	       |	МаксимальныйПериодРегистрацииПроведенных.Район,
	       |	МаксимальныйПериодРегистрацииПроведенных.СостояниеПроведения,
	       |	МаксимальныйПериодРегистрацииПроведенных.МКД,
	       |	МаксимальныйПериодРегистрацииПроведенных.ПриборУчета,
	       |	МаксимальныйПериодРегистрацииПроведенных.ПериодРегистрации,
	       |	МаксимальныйПериодРегистрацииПроведенных.Договор,
	       |	МаксимальныйПериодРегистрацииПроведенных.ОбъектРасчета
	       |;
	       |
	       |////////////////////////////////////////////////////////////////////////////////
	       |ВЫБРАТЬ
	       |	МаксимальнаяДатаПроведенных.Организация КАК Организация,
	       |	МаксимальнаяДатаПроведенных.ПериодНачисления КАК ПериодНачисления,
	       |	МаксимальнаяДатаПроведенных.Район КАК Район,
	       |	МаксимальнаяДатаПроведенных.СостояниеПроведения КАК СостояниеПроведения,
	       |	МаксимальнаяДатаПроведенных.МКД КАК МКД,
	       |	МаксимальнаяДатаПроведенных.ПриборУчета КАК ПриборУчета,
	       |	МаксимальнаяДатаПроведенных.ПериодРегистрации КАК ПериодРегистрации,
	       |	МаксимальнаяДатаПроведенных.ДатаРегистратора КАК ДатаРегистратора,
	       |	МАКСИМУМ(НаборПроведенныхВПоследовательности.ДокРегистратор) КАК ДокРегистратор,
	       |	МаксимальнаяДатаПроведенных.Договор КАК Договор,
	       |	МаксимальнаяДатаПроведенных.ОбъектРасчета КАК ОбъектРасчета
	       |ПОМЕСТИТЬ МаксимальныйРегистраторПроведенных
	       |ИЗ
	       |	МаксимальнаяДатаПроведенных КАК МаксимальнаяДатаПроведенных
	       |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НаборПроведенныхВПоследовательности КАК НаборПроведенныхВПоследовательности
	       |		ПО МаксимальнаяДатаПроведенных.Организация = НаборПроведенныхВПоследовательности.Организация
	       |			И МаксимальнаяДатаПроведенных.ПериодНачисления = НаборПроведенныхВПоследовательности.ПериодНачисления
	       |			И МаксимальнаяДатаПроведенных.Район = НаборПроведенныхВПоследовательности.Район
	       |			И МаксимальнаяДатаПроведенных.СостояниеПроведения = НаборПроведенныхВПоследовательности.СостояниеПроведения
	       |			И МаксимальнаяДатаПроведенных.Договор = НаборПроведенныхВПоследовательности.Договор
	       |			И МаксимальнаяДатаПроведенных.ОбъектРасчета = НаборПроведенныхВПоследовательности.ОбъектРасчета
	       |			И МаксимальнаяДатаПроведенных.ПриборУчета = НаборПроведенныхВПоследовательности.ПриборУчета
	       |			И МаксимальнаяДатаПроведенных.ПериодРегистрации = НаборПроведенныхВПоследовательности.ПериодРегистрации
	       |			И МаксимальнаяДатаПроведенных.ДатаРегистратора = НаборПроведенныхВПоследовательности.ДатаРегистратора
	       |
	       |СГРУППИРОВАТЬ ПО
	       |	МаксимальнаяДатаПроведенных.Организация,
	       |	МаксимальнаяДатаПроведенных.ПериодНачисления,
	       |	МаксимальнаяДатаПроведенных.Район,
	       |	МаксимальнаяДатаПроведенных.СостояниеПроведения,
	       |	МаксимальнаяДатаПроведенных.МКД,
	       |	МаксимальнаяДатаПроведенных.ПриборУчета,
	       |	МаксимальнаяДатаПроведенных.ПериодРегистрации,
	       |	МаксимальнаяДатаПроведенных.ДатаРегистратора,
	       |	МаксимальнаяДатаПроведенных.Договор,
	       |	МаксимальнаяДатаПроведенных.ОбъектРасчета
	       |;
	       |
	       |////////////////////////////////////////////////////////////////////////////////
	       |ВЫБРАТЬ
	       |	МаксимальныйРегистраторПроведенных.Организация КАК Организация,
	       |	МаксимальныйРегистраторПроведенных.ПериодНачисления КАК ПериодНачисления,
	       |	МаксимальныйРегистраторПроведенных.Район КАК Район,
	       |	МаксимальныйРегистраторПроведенных.СостояниеПроведения КАК СостояниеПроведения,
	       |	МаксимальныйРегистраторПроведенных.МКД КАК МКД,
	       |	МаксимальныйРегистраторПроведенных.ПриборУчета КАК ПриборУчета,
	       |	МаксимальныйРегистраторПроведенных.ПериодРегистрации КАК ПериодРегистрации,
	       |	МаксимальныйРегистраторПроведенных.ДатаРегистратора КАК ДатаРегистратора,
	       |	МаксимальныйРегистраторПроведенных.ДокРегистратор КАК ДокРегистратор,
	       |	МАКСИМУМ(НаборПроведенныхВПоследовательности.Разделитель) КАК Разделитель,
	       |	МаксимальныйРегистраторПроведенных.Договор КАК Договор,
	       |	МаксимальныйРегистраторПроведенных.ОбъектРасчета КАК ОбъектРасчета
	       |ПОМЕСТИТЬ МаксимальныйРазделительПроведенных
	       |ИЗ
	       |	МаксимальныйРегистраторПроведенных КАК МаксимальныйРегистраторПроведенных
	       |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НаборПроведенныхВПоследовательности КАК НаборПроведенныхВПоследовательности
	       |		ПО МаксимальныйРегистраторПроведенных.Организация = НаборПроведенныхВПоследовательности.Организация
	       |			И МаксимальныйРегистраторПроведенных.ПериодНачисления = НаборПроведенныхВПоследовательности.ПериодНачисления
	       |			И МаксимальныйРегистраторПроведенных.Район = НаборПроведенныхВПоследовательности.Район
	       |			И МаксимальныйРегистраторПроведенных.СостояниеПроведения = НаборПроведенныхВПоследовательности.СостояниеПроведения
	       |			И МаксимальныйРегистраторПроведенных.Договор = НаборПроведенныхВПоследовательности.Договор
	       |			И МаксимальныйРегистраторПроведенных.ОбъектРасчета = НаборПроведенныхВПоследовательности.ОбъектРасчета
	       |			И МаксимальныйРегистраторПроведенных.ПриборУчета = НаборПроведенныхВПоследовательности.ПриборУчета
	       |			И МаксимальныйРегистраторПроведенных.ПериодРегистрации = НаборПроведенныхВПоследовательности.ПериодРегистрации
	       |			И МаксимальныйРегистраторПроведенных.ДатаРегистратора = НаборПроведенныхВПоследовательности.ДатаРегистратора
	       |			И МаксимальныйРегистраторПроведенных.ДокРегистратор = НаборПроведенныхВПоследовательности.ДокРегистратор
	       |
	       |СГРУППИРОВАТЬ ПО
	       |	МаксимальныйРегистраторПроведенных.Организация,
	       |	МаксимальныйРегистраторПроведенных.ПериодНачисления,
	       |	МаксимальныйРегистраторПроведенных.Район,
	       |	МаксимальныйРегистраторПроведенных.СостояниеПроведения,
	       |	МаксимальныйРегистраторПроведенных.МКД,
	       |	МаксимальныйРегистраторПроведенных.ПриборУчета,
	       |	МаксимальныйРегистраторПроведенных.ПериодРегистрации,
	       |	МаксимальныйРегистраторПроведенных.ДатаРегистратора,
	       |	МаксимальныйРегистраторПроведенных.ДокРегистратор,
	       |	МаксимальныйРегистраторПроведенных.Договор,
	       |	МаксимальныйРегистраторПроведенных.ОбъектРасчета
	       |;
	       |
	       |////////////////////////////////////////////////////////////////////////////////
	       |ВЫБРАТЬ
	       |	МаксимальныйРазделительПроведенных.Организация КАК Организация,
	       |	МаксимальныйРазделительПроведенных.ПериодНачисления КАК ПериодНачисления,
	       |	МаксимальныйРазделительПроведенных.Район КАК Район,
	       |	МаксимальныйРазделительПроведенных.МКД КАК МКД,
	       |	МаксимальныйРазделительПроведенных.ПриборУчета КАК ПриборУчета,
	       |	бестПредоставленныеПоказанияНП.Шкала КАК Шкала,
	       |	бестПредоставленныеПоказанияНП.ТарифнаяЗона КАК ТарифнаяЗона,
	       |	МаксимальныйРазделительПроведенных.Разделитель КАК Разделитель,
	       |	бестПредоставленныеПоказанияНП.НомерПозиции КАК НомерПозиции,
	       |	МаксимальныйРазделительПроведенных.Договор КАК Договор,
	       |	МаксимальныйРазделительПроведенных.ОбъектРасчета КАК ОбъектРасчета
	       |ПОМЕСТИТЬ ПоследниеНомераПозиции
	       |ИЗ
	       |	МаксимальныйРазделительПроведенных КАК МаксимальныйРазделительПроведенных
	       |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бестПредоставленныеПоказанияНП КАК бестПредоставленныеПоказанияНП
	       |		ПО МаксимальныйРазделительПроведенных.Организация = бестПредоставленныеПоказанияНП.Организация
	       |			И МаксимальныйРазделительПроведенных.ПериодНачисления = бестПредоставленныеПоказанияНП.ПериодНачисления
	       |			И МаксимальныйРазделительПроведенных.Район = бестПредоставленныеПоказанияНП.Район
	       |			И МаксимальныйРазделительПроведенных.Договор = бестПредоставленныеПоказанияНП.Договор
	       |			И МаксимальныйРазделительПроведенных.ОбъектРасчета = бестПредоставленныеПоказанияНП.ОбъектРасчета
	       |			И МаксимальныйРазделительПроведенных.ДокРегистратор = бестПредоставленныеПоказанияНП.ДокРегистратор
	       |			И МаксимальныйРазделительПроведенных.Разделитель = бестПредоставленныеПоказанияНП.Разделитель
	       |			И (бестПредоставленныеПоказанияНП.Организация = &Организация)
	       |			И (бестПредоставленныеПоказанияНП.ПериодНачисления = &ПериодНачисления)
	       |			И (бестПредоставленныеПоказанияНП.Район = &Район)
	       |			И (бестПредоставленныеПоказанияНП.Договор = &Договор)
	       |			И МаксимальныйРазделительПроведенных.ПериодРегистрации = бестПредоставленныеПоказанияНП.ДатаРегистратора
	       |			И МаксимальныйРазделительПроведенных.ПриборУчета = бестПредоставленныеПоказанияНП.ПриборУчета
	       |;
	       |
	       |////////////////////////////////////////////////////////////////////////////////
	       |ВЫБРАТЬ
	       |	бестМаксимальныеПоказанияНП.Организация КАК Организация,
	       |	бестМаксимальныеПоказанияНП.Район КАК Район,
	       |	бестМаксимальныеПоказанияНП.ПриборУчета КАК ПриборУчета,
	       |	бестМаксимальныеПоказанияНП.Шкала КАК Шкала,
	       |	бестМаксимальныеПоказанияНП.ТарифнаяЗона КАК ТарифнаяЗона,
	       |	Граница.ПериодРегистрацииПоказаний КАК ПериодРегистрацииПоказаний,
	       |	Граница.ДокРегистратор КАК ДокРегистратор,
	       |	Граница.Разделитель КАК Разделитель,
	       |	МАКСИМУМ(бестМаксимальныеПоказанияНП.Период) КАК ПериодМаксПоказаний,
	       |	бестМаксимальныеПоказанияНП.ОбъектРасчета КАК ОбъектРасчета,
	       |	бестМаксимальныеПоказанияНП.Договор КАК Договор
	       |ПОМЕСТИТЬ МаксПерПоказаний
	       |ИЗ
	       |	Граница КАК Граница
	       |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бестМаксимальныеПоказанияНП КАК бестМаксимальныеПоказанияНП
	       |		ПО Граница.Организация = бестМаксимальныеПоказанияНП.Организация
	       |			И Граница.Район = бестМаксимальныеПоказанияНП.Район
	       |			И Граница.ПриборУчета = бестМаксимальныеПоказанияНП.ПриборУчета
	       |			И (ВЫБОР
	       |				КОГДА Граница.ПериодРегистрацииПоказаний = бестМаксимальныеПоказанияНП.Период
	       |						И Граница.ДокРегистратор = бестМаксимальныеПоказанияНП.Регистратор
	       |						И Граница.Разделитель > бестМаксимальныеПоказанияНП.Разделитель
	       |					ТОГДА ИСТИНА
	       |				КОГДА Граница.ПериодРегистрацииПоказаний = бестМаксимальныеПоказанияНП.Период
	       |						И Граница.ДокРегистратор > бестМаксимальныеПоказанияНП.Регистратор
	       |					ТОГДА ИСТИНА
	       |				ИНАЧЕ Граница.ПериодРегистрацииПоказаний > бестМаксимальныеПоказанияНП.Период
	       |			КОНЕЦ)
	       |			И (бестМаксимальныеПоказанияНП.Организация = &Организация)
	       |			И (бестМаксимальныеПоказанияНП.Район = &Район)
	       |			И (бестМаксимальныеПоказанияНП.Договор = &Договор)
	       |
	       |СГРУППИРОВАТЬ ПО
	       |	бестМаксимальныеПоказанияНП.Организация,
	       |	бестМаксимальныеПоказанияНП.Район,
	       |	бестМаксимальныеПоказанияНП.ПриборУчета,
	       |	бестМаксимальныеПоказанияНП.Шкала,
	       |	бестМаксимальныеПоказанияНП.ТарифнаяЗона,
	       |	Граница.ПериодРегистрацииПоказаний,
	       |	Граница.ДокРегистратор,
	       |	Граница.Разделитель,
	       |	бестМаксимальныеПоказанияНП.ОбъектРасчета,
	       |	бестМаксимальныеПоказанияНП.Договор
	       |;
	       |
	       |////////////////////////////////////////////////////////////////////////////////
	       |ВЫБРАТЬ
	       |	бестМаксимальныеПоказанияНП.Организация КАК Организация,
	       |	бестМаксимальныеПоказанияНП.Район КАК Район,
	       |	бестМаксимальныеПоказанияНП.ПриборУчета КАК ПриборУчета,
	       |	бестМаксимальныеПоказанияНП.Шкала КАК Шкала,
	       |	бестМаксимальныеПоказанияНП.ТарифнаяЗона КАК ТарифнаяЗона,
	       |	МаксПерПоказаний.ПериодРегистрацииПоказаний КАК ПериодРегистрацииПоказаний,
	       |	МаксПерПоказаний.ДокРегистратор КАК ДокРегистратор,
	       |	МаксПерПоказаний.Разделитель КАК Разделитель,
	       |	МаксПерПоказаний.ПериодМаксПоказаний КАК ПериодМаксПоказаний,
	       |	МАКСИМУМ(бестМаксимальныеПоказанияНП.Регистратор) КАК РегистраторМаксПоказаний,
	       |	бестМаксимальныеПоказанияНП.Договор КАК Договор,
	       |	бестМаксимальныеПоказанияНП.ОбъектРасчета КАК ОбъектРасчета
	       |ПОМЕСТИТЬ РегМакПок
	       |ИЗ
	       |	МаксПерПоказаний КАК МаксПерПоказаний
	       |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бестМаксимальныеПоказанияНП КАК бестМаксимальныеПоказанияНП
	       |		ПО МаксПерПоказаний.Организация = бестМаксимальныеПоказанияНП.Организация
	       |			И МаксПерПоказаний.Район = бестМаксимальныеПоказанияНП.Район
	       |			И МаксПерПоказаний.ПриборУчета = бестМаксимальныеПоказанияНП.ПриборУчета
	       |			И МаксПерПоказаний.Шкала = бестМаксимальныеПоказанияНП.Шкала
	       |			И МаксПерПоказаний.ТарифнаяЗона = бестМаксимальныеПоказанияНП.ТарифнаяЗона
	       |			И МаксПерПоказаний.ПериодМаксПоказаний = бестМаксимальныеПоказанияНП.Период
	       |			И (ВЫБОР
	       |				КОГДА МаксПерПоказаний.ПериодРегистрацииПоказаний = бестМаксимальныеПоказанияНП.Период
	       |						И МаксПерПоказаний.ДокРегистратор = бестМаксимальныеПоказанияНП.Регистратор
	       |						И МаксПерПоказаний.Разделитель > бестМаксимальныеПоказанияНП.Разделитель
	       |					ТОГДА ИСТИНА
	       |				КОГДА МаксПерПоказаний.ПериодРегистрацииПоказаний = бестМаксимальныеПоказанияНП.Период
	       |						И МаксПерПоказаний.ДокРегистратор > бестМаксимальныеПоказанияНП.Регистратор
	       |					ТОГДА ИСТИНА
	       |				ИНАЧЕ МаксПерПоказаний.ПериодРегистрацииПоказаний > бестМаксимальныеПоказанияНП.Период
	       |			КОНЕЦ)
	       |			И (бестМаксимальныеПоказанияНП.Организация = &Организация)
	       |			И (бестМаксимальныеПоказанияНП.Район = &Район)
	       |			И МаксПерПоказаний.ОбъектРасчета = бестМаксимальныеПоказанияНП.ОбъектРасчета
	       |			И МаксПерПоказаний.Договор = бестМаксимальныеПоказанияНП.Договор
	       |			И (бестМаксимальныеПоказанияНП.Договор = &Договор)
	       |
	       |СГРУППИРОВАТЬ ПО
	       |	бестМаксимальныеПоказанияНП.Организация,
	       |	бестМаксимальныеПоказанияНП.Район,
	       |	бестМаксимальныеПоказанияНП.ПриборУчета,
	       |	бестМаксимальныеПоказанияНП.Шкала,
	       |	бестМаксимальныеПоказанияНП.ТарифнаяЗона,
	       |	МаксПерПоказаний.ПериодРегистрацииПоказаний,
	       |	МаксПерПоказаний.ДокРегистратор,
	       |	МаксПерПоказаний.Разделитель,
	       |	МаксПерПоказаний.ПериодМаксПоказаний,
	       |	бестМаксимальныеПоказанияНП.Договор,
	       |	бестМаксимальныеПоказанияНП.ОбъектРасчета
	       |;
	       |
	       |////////////////////////////////////////////////////////////////////////////////
	       |ВЫБРАТЬ
	       |	бестМаксимальныеПоказанияНП.Организация КАК Организация,
	       |	бестМаксимальныеПоказанияНП.Район КАК Район,
	       |	бестМаксимальныеПоказанияНП.ПриборУчета КАК ПриборУчета,
	       |	бестМаксимальныеПоказанияНП.Шкала КАК Шкала,
	       |	бестМаксимальныеПоказанияНП.ТарифнаяЗона КАК ТарифнаяЗона,
	       |	РегМакПок.ПериодМаксПоказаний КАК ПериодМаксПоказаний,
	       |	РегМакПок.РегистраторМаксПоказаний КАК РегистраторМаксПоказаний,
	       |	МАКСИМУМ(ЕСТЬNULL(бестМаксимальныеПоказанияНП.Разделитель, 0)) КАК РазделительМаксПоказаний,
	       |	бестМаксимальныеПоказанияНП.ОбъектРасчета КАК ОбъектРасчета,
	       |	бестМаксимальныеПоказанияНП.Договор КАК Договор
	       |ПОМЕСТИТЬ РазделительМакПок
	       |ИЗ
	       |	РегМакПок КАК РегМакПок
	       |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бестМаксимальныеПоказанияНП КАК бестМаксимальныеПоказанияНП
	       |		ПО РегМакПок.Организация = бестМаксимальныеПоказанияНП.Организация
	       |			И РегМакПок.Район = бестМаксимальныеПоказанияНП.Район
	       |			И РегМакПок.ПриборУчета = бестМаксимальныеПоказанияНП.ПриборУчета
	       |			И РегМакПок.Шкала = бестМаксимальныеПоказанияНП.Шкала
	       |			И РегМакПок.ТарифнаяЗона = бестМаксимальныеПоказанияНП.ТарифнаяЗона
	       |			И РегМакПок.ПериодМаксПоказаний = бестМаксимальныеПоказанияНП.Период
	       |			И РегМакПок.РегистраторМаксПоказаний = бестМаксимальныеПоказанияНП.Регистратор
	       |			И (ВЫБОР
	       |				КОГДА РегМакПок.ПериодРегистрацииПоказаний = бестМаксимальныеПоказанияНП.Период
	       |						И РегМакПок.ДокРегистратор = бестМаксимальныеПоказанияНП.Регистратор
	       |						И РегМакПок.Разделитель > бестМаксимальныеПоказанияНП.Разделитель
	       |					ТОГДА ИСТИНА
	       |				КОГДА РегМакПок.ПериодРегистрацииПоказаний = бестМаксимальныеПоказанияНП.Период
	       |						И РегМакПок.ДокРегистратор > бестМаксимальныеПоказанияНП.Регистратор
	       |					ТОГДА ИСТИНА
	       |				ИНАЧЕ РегМакПок.ПериодРегистрацииПоказаний > бестМаксимальныеПоказанияНП.Период
	       |			КОНЕЦ)
	       |			И (бестМаксимальныеПоказанияНП.Организация = &Организация)
	       |			И (бестМаксимальныеПоказанияНП.Район = &Район)
	       |			И РегМакПок.Договор = бестМаксимальныеПоказанияНП.Договор
	       |			И РегМакПок.ОбъектРасчета = бестМаксимальныеПоказанияНП.ОбъектРасчета
	       |			И (бестМаксимальныеПоказанияНП.Договор = &Договор)
	       |
	       |СГРУППИРОВАТЬ ПО
	       |	бестМаксимальныеПоказанияНП.Организация,
	       |	бестМаксимальныеПоказанияНП.Район,
	       |	бестМаксимальныеПоказанияНП.ПриборУчета,
	       |	бестМаксимальныеПоказанияНП.Шкала,
	       |	бестМаксимальныеПоказанияНП.ТарифнаяЗона,
	       |	РегМакПок.ПериодМаксПоказаний,
	       |	РегМакПок.РегистраторМаксПоказаний,
	       |	бестМаксимальныеПоказанияНП.ОбъектРасчета,
	       |	бестМаксимальныеПоказанияНП.Договор
	       |;
	       |
	       |////////////////////////////////////////////////////////////////////////////////
	       |ВЫБРАТЬ
	       |	РазделительМакПок.Организация КАК Организация,
	       |	РазделительМакПок.Район КАК Район,
	       |	РазделительМакПок.ПриборУчета КАК ПриборУчета,
	       |	РазделительМакПок.Шкала КАК Шкала,
	       |	РазделительМакПок.ТарифнаяЗона КАК ТарифнаяЗона,
	       |	РазделительМакПок.ПериодМаксПоказаний КАК ПериодМаксПоказаний,
	       |	РазделительМакПок.РегистраторМаксПоказаний КАК РегистраторМаксПоказаний,
	       |	бестМаксимальныеПоказанияНП.ДатаРегистратора КАК ДатаРегистратораМаксимальных,
	       |	бестМаксимальныеПоказанияНП.Показание КАК МаксПоказания,
	       |	РазделительМакПок.ОбъектРасчета КАК ОбъектРасчета,
	       |	РазделительМакПок.Договор КАК Договор
	       |ПОМЕСТИТЬ ДанныеМаксПоказаний
	       |ИЗ
	       |	РазделительМакПок КАК РазделительМакПок
	       |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бестМаксимальныеПоказанияНП КАК бестМаксимальныеПоказанияНП
	       |		ПО РазделительМакПок.Организация = бестМаксимальныеПоказанияНП.Организация
	       |			И РазделительМакПок.Район = бестМаксимальныеПоказанияНП.Район
	       |			И РазделительМакПок.ПриборУчета = бестМаксимальныеПоказанияНП.ПриборУчета
	       |			И РазделительМакПок.Шкала = бестМаксимальныеПоказанияНП.Шкала
	       |			И РазделительМакПок.ТарифнаяЗона = бестМаксимальныеПоказанияНП.ТарифнаяЗона
	       |			И РазделительМакПок.ПериодМаксПоказаний = бестМаксимальныеПоказанияНП.Период
	       |			И РазделительМакПок.РегистраторМаксПоказаний = бестМаксимальныеПоказанияНП.Регистратор
	       |			И РазделительМакПок.РазделительМаксПоказаний = бестМаксимальныеПоказанияНП.Разделитель
	       |			И (бестМаксимальныеПоказанияНП.Организация = &Организация)
	       |			И (бестМаксимальныеПоказанияНП.Район = &Район)
	       |			И РазделительМакПок.ОбъектРасчета = бестМаксимальныеПоказанияНП.ОбъектРасчета
	       |			И РазделительМакПок.Договор = бестМаксимальныеПоказанияНП.Договор
	       |			И (бестМаксимальныеПоказанияНП.Договор = &Договор)
	       |;
	       |
	       |////////////////////////////////////////////////////////////////////////////////
	       |ВЫБРАТЬ
	       |	бестПоказанияПУНППоследовательность.Организация КАК Организация,
	       |	бестПоказанияПУНППоследовательность.ПериодНачисления КАК ПериодНачисления,
	       |	бестПоказанияПУНППоследовательность.Район КАК Район,
	       |	бестПоказанияПУНППоследовательность.МКД КАК МКД,
	       |	бестПоказанияПУНППоследовательность.ПриборУчета КАК ПриборУчета,
	       |	бестПоказанияПУНППоследовательность.СостояниеПроведения КАК СостояниеПроведения,
	       |	бестПоказанияПУНППоследовательность.ПериодРегистрации КАК ПериодРегистрации,
	       |	бестПоказанияПУНППоследовательность.ДатаРегистратора КАК ДатаРегистратора,
	       |	бестПоказанияПУНППоследовательность.ДокРегистратор КАК ДокРегистратор,
	       |	бестПоказанияПУНППоследовательность.Разделитель КАК Разделитель,
	       |	бестПоказанияПУНППоследовательность.ВыводПрибораУчета КАК ВыводПрибораУчета,
	       |	бестПоказанияПУНППоследовательность.ИмяТабЧасти КАК ИмяТабЧасти,
	       |	бестПоказанияПУНППоследовательность.ОбъектРасчета КАК ОбъектРасчета,
	       |	бестПоказанияПУНППоследовательность.Договор КАК Договор
	       |ПОМЕСТИТЬ НаборДокументов
	       |ИЗ
	       |	Граница КАК Граница
	       |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бестПоказанияПУНППоследовательность КАК бестПоказанияПУНППоследовательность
	       |		ПО Граница.Организация = бестПоказанияПУНППоследовательность.Организация
	       |			И Граница.ПериодНачисления = бестПоказанияПУНППоследовательность.ПериодНачисления
	       |			И Граница.Район = бестПоказанияПУНППоследовательность.Район
	       |			И Граница.ПриборУчета = бестПоказанияПУНППоследовательность.ПриборУчета
	       |			И (ВЫБОР
	       |				КОГДА Граница.ПериодРегистрации = бестПоказанияПУНППоследовательность.ПериодРегистрации
	       |						И Граница.ДатаРегистратора = бестПоказанияПУНППоследовательность.ДатаРегистратора
	       |						И Граница.ДокРегистратор = бестПоказанияПУНППоследовательность.ДокРегистратор
	       |						И Граница.Разделитель <= бестПоказанияПУНППоследовательность.Разделитель
	       |					ТОГДА ИСТИНА
	       |				КОГДА Граница.ПериодРегистрации = бестПоказанияПУНППоследовательность.ПериодРегистрации
	       |						И Граница.ДатаРегистратора = бестПоказанияПУНППоследовательность.ДатаРегистратора
	       |						И Граница.ДокРегистратор < бестПоказанияПУНППоследовательность.ДокРегистратор
	       |					ТОГДА ИСТИНА
	       |				КОГДА Граница.ПериодРегистрации = бестПоказанияПУНППоследовательность.ПериодРегистрации
	       |						И Граница.ДатаРегистратора < бестПоказанияПУНППоследовательность.ДатаРегистратора
	       |					ТОГДА ИСТИНА
	       |				ИНАЧЕ Граница.ПериодРегистрации < бестПоказанияПУНППоследовательность.ПериодРегистрации
	       |			КОНЕЦ)
	       |			И (бестПоказанияПУНППоследовательность.Организация = &Организация)
	       |			И (бестПоказанияПУНППоследовательность.ПериодНачисления = &ПериодНачисления)
	       |			И (бестПоказанияПУНППоследовательность.Район = &Район)
	       |			И (бестПоказанияПУНППоследовательность.Договор = &Договор)
	       |;
	       |
	       |////////////////////////////////////////////////////////////////////////////////
	       |ВЫБРАТЬ
	       |	бестПоказанияПриборовУчетаНП.Организация КАК Организация,
	       |	бестПоказанияПриборовУчетаНП.Район КАК Район,
	       |	бестПоказанияПриборовУчетаНП.ПриборУчета КАК ПриборУчета,
	       |	бестПоказанияПриборовУчетаНП.Шкала КАК Шкала,
	       |	бестПоказанияПриборовУчетаНП.ТарифнаяЗона КАК ТарифнаяЗона,
	       |	МАКСИМУМ(ВЫБОР
	       |			КОГДА бестПоказанияПриборовУчетаНП.Переворот
	       |				ТОГДА 1
	       |			ИНАЧЕ 0
	       |		КОНЕЦ) КАК БылПереворот,
	       |	бестПоказанияПриборовУчетаНП.ОбъектРасчета КАК ОбъектРасчета,
	       |	бестПоказанияПриборовУчетаНП.Договор КАК Договор
	       |ПОМЕСТИТЬ ДанныеПоПереворотам
	       |ИЗ
	       |	НаборДокументов КАК НаборДокументов
	       |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бестПоказанияПриборовУчетаНП КАК бестПоказанияПриборовУчетаНП
	       |		ПО НаборДокументов.Организация = бестПоказанияПриборовУчетаНП.Организация
	       |			И НаборДокументов.Район = бестПоказанияПриборовУчетаНП.Район
	       |			И НаборДокументов.ПриборУчета = бестПоказанияПриборовУчетаНП.ПриборУчета
	       |			И (бестПоказанияПриборовУчетаНП.Период МЕЖДУ НаборДокументов.ДатаРегистратора И НаборДокументов.ПериодРегистрации)
	       |			И (бестПоказанияПриборовУчетаНП.СостояниеПоказаний = ЗНАЧЕНИЕ(Перечисление.энргСостояниеПоказаний.Приняты))
	       |			И НаборДокументов.ДокРегистратор <> бестПоказанияПриборовУчетаНП.Регистратор
	       |			И (бестПоказанияПриборовУчетаНП.Организация = &Организация)
	       |			И НаборДокументов.Договор = бестПоказанияПриборовУчетаНП.Договор
	       |			И НаборДокументов.ОбъектРасчета = бестПоказанияПриборовУчетаНП.ОбъектРасчета
	       |			И (бестПоказанияПриборовУчетаНП.Договор = &Договор)
	       |
	       |СГРУППИРОВАТЬ ПО
	       |	бестПоказанияПриборовУчетаНП.Организация,
	       |	бестПоказанияПриборовУчетаНП.Район,
	       |	бестПоказанияПриборовУчетаНП.ПриборУчета,
	       |	бестПоказанияПриборовУчетаНП.Шкала,
	       |	бестПоказанияПриборовУчетаНП.ТарифнаяЗона,
	       |	бестПоказанияПриборовУчетаНП.ОбъектРасчета,
	       |	бестПоказанияПриборовУчетаНП.Договор
	       |;
	       |
	       |////////////////////////////////////////////////////////////////////////////////
	       |ВЫБРАТЬ
	       |	НаборДокументов.Организация КАК Организация,
	       |	НаборДокументов.ПериодНачисления КАК ПериодНачисления,
	       |	НаборДокументов.Район КАК Район,
	       |	НаборДокументов.МКД КАК МКД,
	       |	НаборДокументов.ПриборУчета КАК ПриборУчета,
	       |	бестПоказанияПриборовУчетаНП.Шкала КАК Шкала,
	       |	бестПоказанияПриборовУчетаНП.ТарифнаяЗона КАК ТарифнаяЗона,
	       |	НаборДокументов.СостояниеПроведения КАК СостояниеПроведения,
	       |	НаборДокументов.ПериодРегистрации КАК ПериодРегистрации,
	       |	НаборДокументов.ДатаРегистратора КАК ДатаРегистратора,
	       |	НаборДокументов.ДокРегистратор КАК ДокРегистратор,
	       |	НаборДокументов.Разделитель КАК Разделитель,
	       |	НаборДокументов.ВыводПрибораУчета КАК ВыводПрибораУчета,
	       |	НаборДокументов.ИмяТабЧасти КАК ИмяТабЧасти,
	       |	бестПоказанияПриборовУчетаНП.Показание КАК Показание,
	       |	бестПоказанияПриборовУчетаНП.СостояниеПоказаний КАК СостояниеПоказаний,
	       |	бестПоказанияПриборовУчетаНП.Переворот КАК Переворот,
	       |	бестПоказанияПриборовУчетаНП.НомерСтрокиТЧ КАК НомерСтрокиТЧ,
	       |	бестПоказанияПриборовУчетаНП.КС КАК КС,
	       |	НаборДокументов.ОбъектРасчета КАК ОбъектРасчета,
	       |	НаборДокументов.Договор КАК Договор,
	       |	бестПоказанияПриборовУчетаНП.ТочкаУчета КАК ТочкаУчета
	       |ПОМЕСТИТЬ ДанныеДокументов
	       |ИЗ
	       |	НаборДокументов КАК НаборДокументов
	       |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бестПоказанияПриборовУчетаНП КАК бестПоказанияПриборовУчетаНП
	       |		ПО (НАЧАЛОПЕРИОДА(НаборДокументов.ПериодРегистрации, ДЕНЬ) = НАЧАЛОПЕРИОДА(бестПоказанияПриборовУчетаНП.Период, ДЕНЬ))
	       |			И НаборДокументов.ДокРегистратор = бестПоказанияПриборовУчетаНП.Регистратор
	       |			И НаборДокументов.Организация = бестПоказанияПриборовУчетаНП.Организация
	       |			И НаборДокументов.ПриборУчета = бестПоказанияПриборовУчетаНП.ПриборУчета
	       |			И НаборДокументов.Разделитель = бестПоказанияПриборовУчетаНП.Разделитель
	       |			И (НЕ НаборДокументов.СостояниеПроведения = ЗНАЧЕНИЕ(Перечисление.энргСостояниеДокументаВПоследовательности.ИсключенИзПоследовательности))
	       |			И (бестПоказанияПриборовУчетаНП.Организация = &Организация)
	       |			И (бестПоказанияПриборовУчетаНП.Район = &Район)
	       |			И (бестПоказанияПриборовУчетаНП.Договор = &Договор)
	       |			И НаборДокументов.Договор = бестПоказанияПриборовУчетаНП.Договор
	       |			И НаборДокументов.ОбъектРасчета = бестПоказанияПриборовУчетаНП.ОбъектРасчета
	       |
	       |ОБЪЕДИНИТЬ ВСЕ
	       |
	       |ВЫБРАТЬ
	       |	НаборДокументов.Организация,
	       |	НаборДокументов.ПериодНачисления,
	       |	НаборДокументов.Район,
	       |	НаборДокументов.МКД,
	       |	НаборДокументов.ПриборУчета,
	       |	ЗНАЧЕНИЕ(Справочник.энргШкалыПриборовУчета.ПустаяСсылка),
	       |	ЗНАЧЕНИЕ(Справочник.энргТарифныеЗоны.ПустаяСсылка),
	       |	НаборДокументов.СостояниеПроведения,
	       |	НаборДокументов.ПериодРегистрации,
	       |	НаборДокументов.ДатаРегистратора,
	       |	НаборДокументов.ДокРегистратор,
	       |	НаборДокументов.Разделитель,
	       |	НаборДокументов.ВыводПрибораУчета,
	       |	НаборДокументов.ИмяТабЧасти,
	       |	0,
	       |	ЗНАЧЕНИЕ(Перечисление.энргСостояниеПоказаний.Отклонены),
	       |	ЛОЖЬ,
	       |	0,
	       |	ЛОЖЬ,
	       |	НаборДокументов.ОбъектРасчета,
	       |	НаборДокументов.Договор,
	       |	ЗНАЧЕНИЕ(Справочник.энргТочкиУчета.ПустаяСсылка)
	       |ИЗ
	       |	НаборДокументов КАК НаборДокументов
	       |ГДЕ
	       |	НаборДокументов.СостояниеПроведения = ЗНАЧЕНИЕ(Перечисление.энргСостояниеДокументаВПоследовательности.ИсключенИзПоследовательности)
	       |;
	       |
	       |////////////////////////////////////////////////////////////////////////////////
	       |ВЫБРАТЬ
	       |	ДанныеДокументов.Организация КАК Организация,
	       |	ДанныеДокументов.ПериодНачисления КАК ПериодНачисления,
	       |	ДанныеДокументов.Район КАК Район,
	       |	ДанныеДокументов.МКД КАК МКД,
	       |	ДанныеДокументов.ПриборУчета КАК ПриборУчета,
	       |	ДанныеДокументов.Шкала КАК Шкала,
	       |	ДанныеДокументов.ТарифнаяЗона КАК ТарифнаяЗона,
	       |	ДанныеДокументов.СостояниеПроведения КАК СостояниеПроведения,
	       |	ДанныеДокументов.ПериодРегистрации КАК ПериодРегистрации,
	       |	ДанныеДокументов.ДатаРегистратора КАК ДатаРегистратора,
	       |	ДанныеДокументов.ДокРегистратор КАК ДокРегистратор,
	       |	ДанныеДокументов.Разделитель КАК Разделитель,
	       |	ДанныеДокументов.ВыводПрибораУчета КАК ВыводПрибораУчета,
	       |	ДанныеДокументов.ИмяТабЧасти КАК ИмяТабЧасти,
	       |	ДанныеДокументов.Показание КАК Показание,
	       |	ДанныеДокументов.СостояниеПоказаний КАК СостояниеПоказаний,
	       |	ДанныеДокументов.Переворот КАК Переворот,
	       |	ДанныеДокументов.НомерСтрокиТЧ КАК НомерСтрокиТЧ,
	       |	ДанныеДокументов.КС КАК КС,
	       |	ДанныеДокументов.ТочкаУчета КАК ТочкаУчета,
	       |	ЕСТЬNULL(энргПриборыУчетаАбонента.МаксимальноВозможныеПоказания, 0) КАК МаксимальноВозможныеПоказания,
	       |	1 КАК коэффициентПУ,
	       |	ЕСТЬNULL(ПоследниеНомераПозиции.НомерПозиции, -1) КАК НомерПозици,
	       |	ЕСТЬNULL(ДанныеПоПереворотам.БылПереворот, 0) КАК БылПереворот,
	       |	ЕСТЬNULL(ДанныеМаксПоказаний.ПериодМаксПоказаний, ДАТАВРЕМЯ(1, 1, 1)) КАК ПериодМаксПоказаний,
	       |	ЕСТЬNULL(ДанныеМаксПоказаний.МаксПоказания, -1) КАК МаксПоказания,
	       |	ЕСТЬNULL(ДанныеМаксПоказаний.РегистраторМаксПоказаний, ЗНАЧЕНИЕ(Документ.энргРегистрацияПоказанийАбонента.ПустаяСсылка)) КАК РегистраторМаксПоказаний,
	       |	ЕСТЬNULL(ДанныеМаксПоказаний.ДатаРегистратораМаксимальных, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаРегистратораМаксимальных,
	       |	ДанныеДокументов.ОбъектРасчета КАК ОбъектРасчета,
	       |	ДанныеДокументов.Договор КАК Договор
	       |ИЗ
	       |	ДанныеДокументов КАК ДанныеДокументов
	       |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргПриборыУчетаАбонента КАК энргПриборыУчетаАбонента
	       |		ПО ДанныеДокументов.ПриборУчета = энргПриборыУчетаАбонента.Ссылка
	       |		ЛЕВОЕ СОЕДИНЕНИЕ ПоследниеНомераПозиции КАК ПоследниеНомераПозиции
	       |		ПО ДанныеДокументов.Организация = ПоследниеНомераПозиции.Организация
	       |			И ДанныеДокументов.ПериодНачисления = ПоследниеНомераПозиции.ПериодНачисления
	       |			И ДанныеДокументов.Район = ПоследниеНомераПозиции.Район
	       |			И ДанныеДокументов.МКД = ПоследниеНомераПозиции.МКД
	       |			И ДанныеДокументов.ПриборУчета = ПоследниеНомераПозиции.ПриборУчета
	       |			И ДанныеДокументов.Шкала = ПоследниеНомераПозиции.Шкала
	       |			И ДанныеДокументов.ТарифнаяЗона = ПоследниеНомераПозиции.ТарифнаяЗона
	       |		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеПоПереворотам КАК ДанныеПоПереворотам
	       |		ПО ДанныеДокументов.Организация = ДанныеПоПереворотам.Организация
	       |			И ДанныеДокументов.Район = ДанныеПоПереворотам.Район
	       |			И ДанныеДокументов.ПриборУчета = ДанныеПоПереворотам.ПриборУчета
	       |			И ДанныеДокументов.Шкала = ДанныеПоПереворотам.Шкала
	       |			И ДанныеДокументов.ТарифнаяЗона = ДанныеПоПереворотам.ТарифнаяЗона
	       |		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеМаксПоказаний КАК ДанныеМаксПоказаний
	       |		ПО ДанныеДокументов.Организация = ДанныеМаксПоказаний.Организация
	       |			И ДанныеДокументов.Район = ДанныеМаксПоказаний.Район
	       |			И ДанныеДокументов.ПриборУчета = ДанныеМаксПоказаний.ПриборУчета
	       |			И ДанныеДокументов.Шкала = ДанныеМаксПоказаний.Шкала
	       |			И ДанныеДокументов.ТарифнаяЗона = ДанныеМаксПоказаний.ТарифнаяЗона
	       |
	       |УПОРЯДОЧИТЬ ПО
	       |	Организация,
	       |	ПериодНачисления,
	       |	Район,
	       |	МКД,
	       |	ПриборУчета,
	       |	Шкала,
	       |	ТарифнаяЗона,
	       |	ПериодРегистрации,
	       |	ДатаРегистратора,
	       |	ДокРегистратор,
	       |	Разделитель";
		
	Если не Отбор.свойство("Договор") тогда
		Текст = СтрЗаменить(Текст,"И бестПоказанияПУНППоследовательность.Договор = &Договор","");
		Текст = СтрЗаменить(Текст,"И (бестПоказанияПУНППоследовательность.Договор = &Договор)","");
		Текст = СтрЗаменить(Текст,"И (бестПредоставленныеПоказанияНП.Договор = &Договор)","");
		Текст = СтрЗаменить(Текст,"И (бестМаксимальныеПоказанияНП.Договор = &Договор)","");
		Текст = СтрЗаменить(Текст,"И (бестПоказанияПриборовУчетаНП.Договор = &Договор)","");
	КонецЕсли;
	
	Запрос.Текст = Текст;
	Запрос.УстановитьПараметр("Организация",		Отбор.Организация);
	Запрос.УстановитьПараметр("Район",				Отбор.район);
	Запрос.УстановитьПараметр("ПериодНачисления",	Отбор.ПериодНачисления);
	Запрос.УстановитьПараметр("НачалоПериодаРасчета",НачалоПериодаРасчета);	
	
	Если Отбор.свойство("Договор") тогда
		Запрос.УстановитьПараметр("Договор",		Отбор.Договор);
	КонецЕсли; 
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ПровестиПоказанияПриборовУчетаНП(ПараметрыПроведений,МассивДокументов,ДанныеСреднегоОбъема,ДанныеМаксимальногоПотребления)
	
	ПериодНачисления 								= ПараметрыПроведений.ПериодНачисления;
	Организация 									= ПараметрыПроведений.Организация;
	Район 											= ПараметрыПроведений.Район;
	Договор 										= ПараметрыПроведений.Договор;
	ОбъектРасчета 									= ПараметрыПроведений.ОбъектРасчета;
	ПриборУчета 									= ПараметрыПроведений.ПриборУчета;
	Шкала		 									= ПараметрыПроведений.Шкала;
	ТарифнаяЗона 									= ПараметрыПроведений.ТарифнаяЗона;
	НомерПозиции 									= ПараметрыПроведений.НомерПозиции;
	ПоказанияС 										= ПараметрыПроведений.ПоказанияС;
	ПоказанияПО 									= ПараметрыПроведений.ПоказанияПО;
	НачалоПериодаРасчета 							= ПараметрыПроведений.НачалоПериодаРасчета;
	
	Попытка
		Исключен  									= Перечисления.энргСостояниеДокументаВПоследовательности.ИсключенИзПоследовательности;
		ПроведенВПоследоватености  					= Перечисления.энргСостояниеДокументаВПоследовательности.ПроведенВПоследовательности;
		
		ПоказанияОтклонены 							= Перечисления.энргСостояниеПоказаний.Отклонены;
		ПоказанияПриняты 							= Перечисления.энргСостояниеПоказаний.Приняты;
		ПустоеСостояниеПоказаний					= Перечисления.энргСостояниеПоказаний.ПустаяСсылка();
		ТекНомерПозиции 							= НомерПозиции;
		
		ПредыдущиеМакс 								= Макс(МассивДокументов[0].МаксПоказания,0);
		ПериодПредыдущихМаксПок 					= МассивДокументов[0].ПериодМаксПоказаний;
		РегистраторМаксимальных 					= МассивДокументов[0].РегистраторМаксПоказаний;
		ДатаРегистратораМаксимальных 				= МассивДокументов[0].ДатаРегистратораМаксимальных;
		
		МаксимальныеПоказания  						= Новый Соответствие; 		
		
		для Каждого Выборка из МассивДокументов цикл
			
			Если Выборка.состояниепроведения  = Исключен тогда 			
				// Очищаем данные.
				НаборПоследовательности 			= РегистрыСведений.бестПоказанияПУНППоследовательность.СоздатьНаборЗаписей();
				НаборПоследовательности.Отбор.ДокРегистратор.установить(Выборка.ДокРегистратор);
				НаборПоследовательности.Отбор.ПериодНачисления.установить(ПериодНачисления);
				НаборПоследовательности.Отбор.Организация.установить(Организация);
				НаборПоследовательности.Отбор.Район.установить(Район);
				НаборПоследовательности.Отбор.СостояниеПроведения.установить(Выборка.СостояниеПроведения);
				НаборПоследовательности.Отбор.Договор.установить(Договор);
				НаборПоследовательности.Отбор.ОбъектРасчета.установить(ОбъектРасчета);
				НаборПоследовательности.Отбор.ПриборУчета.установить(ПриборУчета);
				НаборПоследовательности.Отбор.ТарифнаяЗона.установить(ТарифнаяЗона);
				НаборПоследовательности.Отбор.ПериодРегистрации.установить(Выборка.ПериодРегистрации);
				НаборПоследовательности.Отбор.ДатаРегистратора.установить(Выборка.ДатаРегистратора);
				НаборПоследовательности.Записать();
				
				// Получаем таблицу максимальных показаний по регистратору.
				НаборМаксПоказаний  				= РегистрыСведений.бестМаксимальныеПоказанияНП.СоздатьНаборЗаписей();
				НаборМаксПоказаний.Отбор.регистратор.установить(Выборка.ДокРегистратор);
				НаборМаксПоказаний.Записать();
				
				НаборПредоставленных 				= РегистрыСведений.бестПредоставленныеПоказанияНП.СоздатьНаборЗаписей();
				НаборПредоставленных.Отбор.Докрегистратор.установить(Выборка.ДокРегистратор);
				НаборПредоставленных.Записать();
				
				Продолжить;
			КонецЕсли;
			
			СостояниеПоказаний  					= Выборка.состояниеПоказаний;
			Переворот  								= Выборка.Переворот;
			
			ОбновлятьДанные 						= Истина;
			ЭтоОткрытие 							= Ложь;
			// Обновляем показания в документа.
			Если ТипЗнч(Выборка.ДокРегистратор) = Тип("ДокументСсылка.бестЗаключениеДоговоровСЮридическимиЛицами") тогда
				Если  Выборка.ДокРегистратор.Видоперации  = Перечисления.бестВидыОпераций.ОперацияСДоговором_ОткрытиеДоговора тогда
					ОбновлятьДанные 				= Ложь;
					ЭтоОткрытие 					= Истина;
				КонецЕсли;
			ИначеЕсли ТипЗнч(Выборка.ДокРегистратор) = Тип("ДокументСсылка.бестОперацияСУслугамиНП")	тогда
				Если Выборка.ДокРегистратор.Видоперации  = Перечисления.бестВидыОпераций.ОперацияСУслугами_ПодключениеУслуги тогда
					ОбновлятьДанные 				= Ложь;
				КонецЕсли;
			//ИначеЕсли ТипЗнч(Выборка.ДокРегистратор) = Тип("ДокументСсылка.энргПерерасчет")	тогда
			//	Если Выборка.ДокРегистратор.Видоперации  = Перечисления.энргВидыОпераций.энргПерерасчет_КорректировкаПоказаний тогда
			//		ОбновлятьДанные 				= Ложь;
			//	КонецЕсли;
			ИначеЕсли ТипЗнч(Выборка.ДокРегистратор) = Тип("ДокументСсылка.бестОперацияСПриборомУчетаНП")	тогда
				Если Выборка.ДокРегистратор.Видоперации  = Перечисления.бестВидыОпераций.ОперацияСПриборомУчета_ВводПУ тогда
					ОбновлятьДанные 				= Ложь;
				ИначеЕсли Выборка.ДокРегистратор.Видоперации  = Перечисления.бестВидыОпераций.ОперацияСПриборомУчета_ЗаменаПУ тогда
					ТабЧасть  						= Выборка.ДокРегистратор["ПриборыУчетаЗамена"];
					СтрокиПрибора 					= ТабЧасть.найтиСтроки(Новый Структура("ПриборУчета",ПриборУчета));
					Если СтрокиПрибора.количество() = 0 тогда
						ОбновлятьДанные 			= Ложь;
					КонецЕсли;
				КонецЕсли; 				 
			КонецЕсли;
			
			Если ОбновлятьДанные тогда
				ПараметрыОперации  					= Новый Структура("
				|Договор,ОбъектРасчета,ПриборУчета,Шкала,ТарифнаяЗона,ПредыдущиеМакс,ПериодПредыдущихМаксПок,СостояниеПоказаний,ДанныеМаксимальногоПотребления,
				|Переворот,НомерСтрокиТЧ,Разделитель,ДанныеСреднегоОбъема,МаксимальноВозможныеПоказания,КоэффициентПУ,ИмяТабЧасти,КС",
				Договор,ОбъектРасчета,ПриборУчета,Шкала,ТарифнаяЗона,ПредыдущиеМакс,ПериодПредыдущихМаксПок,СостояниеПоказаний,ДанныеМаксимальногоПотребления,
				Переворот,Выборка.НомерСтрокиТЧ,Выборка.разделитель,ДанныеСреднегоОбъема,Выборка.МаксимальноВозможныеПоказания,Выборка.КоэффициентПУ,Выборка.ИмяТабЧасти,Выборка.КС);
				
				ОбновитьДанныеВДокументеНП(ПериодНачисления,Выборка.ДокРегистратор,ПараметрыОперации);
				
				СостояниеПоказаний 					= ПараметрыОперации.СостояниеПоказаний;
				Переворот 							= ПараметрыОперации.Переворот;
			КонецЕсли;	
			
			// Получаем таблицу максимальных показаний по регистратору.
			НаборМаксПоказаний  					= РегистрыСведений.бестМаксимальныеПоказанияНП.СоздатьНаборЗаписей();
			НаборМаксПоказаний.Отбор.регистратор.установить(Выборка.ДокРегистратор);
			НаборМаксПоказаний.Прочитать();
			ТаблицаМаксимальных 					= НаборМаксПоказаний.Выгрузить();
			для Каждого стр из ТаблицаМаксимальных цикл
				стр.активность  = истина;
			КонецЦикла;
			
			НаборМаксПоказаний.Очистить(); 
			НаборМаксПоказаний.Записать(); 
			
			Текущие  								= Выборка.Показание;
			
			ЭтоМаксимальные 						= ПредыдущиеМакс <=  Текущие или Переворот;
			
			Если Выборка.ДатаРегистратора < Выборка.ПериодРегистрации тогда
				// Может быть либо у потерянной квитанции или у контрольного съема который НЕ с 23-26.
				Если Выборка.БылПереворот = 1 тогда
					ЭтоМаксимальные 					= Ложь;			 
				КонецЕсли; 			 
			КонецЕсли;
			
			Если СостояниеПоказаний<> ПоказанияПриняты тогда
				ЭтоМаксимальные 						= ложь;
			КонецЕсли;
			
			ПараметрыСтрокиМаксимальных  				= Новый Структура("Период,Активность,Организация,Район,Договор,ОбъектРасчета,ПриборУчета,Шкала,ТарифнаяЗона,Разделитель",Выборка.ПериодРегистрации,истина,Организация,Район,Договор,ОбъектРасчета,ПриборУчета,Шкала,ТарифнаяЗона,Выборка.Разделитель);
			СтрокиТаблицыМаксимальных					= ТаблицаМаксимальных.НайтиСтроки(ПараметрыСтрокиМаксимальных);
			ПоказанияТекущегоПериода 					= Выборка.ПериодРегистрации >= НачалоПериодаРасчета;
			ВСрок 										= Выборка.ПериодРегистрации >= НачалоПериодаРасчета и День(Выборка.ПериодРегистрации)>=ПоказанияС и День(Выборка.ПериодРегистрации)<=ПоказанияПО;
			
			Если СостояниеПоказаний = ПоказанияПриняты и Не ЭтоОткрытие Тогда
				НаборРасчетСреднего 					= РегистрыСведений.бестРасчетСреднегоОбъемаНП.СоздатьНаборЗаписей();
				НаборРасчетСреднего.ДополнительныеСвойства.Вставить("НеПроверятьДатуЗапретаРедактирования",истина);
				СтрокаНабор  							= НаборРасчетСреднего.Добавить();
				СтрокаНабор.Организация 	 			= Организация;
				СтрокаНабор.Район						= Район;
				СтрокаНабор.Договор						= Договор;
				СтрокаНабор.ОбъектРасчета				= ОбъектРасчета;
				СтрокаНабор.МКД							= ОбъектРасчета.МКД;
				СтрокаНабор.ТочкаУчета					= Выборка.ТочкаУчета;
				СтрокаНабор.Шкала						= Шкала;
				СтрокаНабор.ТарифнаяЗона				= ТарифнаяЗона;
				СтрокаНабор.ПериодНачисления			= ПериодНачисления;
				СтрокаНабор.ДокРегистратор  			= Выборка.ДокРегистратор;
				СтрокаНабор.Разделитель 				= Выборка.Разделитель;
				СтрокаНабор.ОбъемУслуги 				= Текущие - ПредыдущиеМакс;
				НаборРасчетСреднего.Записать(Ложь);
			КонецЕсли;
			
			Если ЭтоМаксимальные или ВСрок тогда 				
				Если ЭтоМаксимальные тогда
					ПериодПредыдущихМаксПок 			= Выборка.ПериодРегистрации;
					ПредыдущиеМакс 						= Текущие;				
					РегистраторМаксимальных 			= Выборка.ДокРегистратор;
					ДатаРегистратораМаксимальных 		= Выборка.ДатаРегистратора
				КонецЕсли;
				
				Если СтрокиТаблицыМаксимальных.Количество() = 0 и ЭтоМаксимальные тогда
					// Строки такой нет значит добавляем.
					СтрокаМаксимальных  				= ТаблицаМаксимальных.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаМаксимальных,ПараметрыСтрокиМаксимальных);
					СтрокаМаксимальных.Показание 		= Выборка.Показание;
					СтрокаМаксимальных.ДатаРегистратора = Выборка.ДатаРегистратора;
				ИначеЕсли СтрокиТаблицыМаксимальных.Количество() = 1 и ЭтоМаксимальные тогда
					// Меняем показания.
					СтрокаМаксимальных  				= СтрокиТаблицыМаксимальных[0];
					СтрокаМаксимальных.Показание 		= Выборка.Показание;
					СтрокаМаксимальных.ДатаРегистратора = Выборка.ДатаРегистратора;
				ИначеЕсли ЭтоМаксимальные тогда
					// Удаляем строки по прибору учета.
					для Каждого СтрокаТаблицыМаксимальных из СтрокиТаблицыМаксимальных цикл
						ТаблицаМаксимальных.Удалить(СтрокаТаблицыМаксимальных)
					КонецЦикла;
					// Добавляем новую.
					СтрокаМаксимальных  				= ТаблицаМаксимальных.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаМаксимальных,ПараметрыСтрокиМаксимальных);
					СтрокаМаксимальных.Показание 		= Выборка.Показание;
					СтрокаМаксимальных.ДатаРегистратора = Выборка.ДатаРегистратора;
				иначе
					Если СтрокиТаблицыМаксимальных.Количество() > 0 тогда
						// Удаляем строку из максимальных показаний.
						ТаблицаМаксимальных.Удалить(СтрокиТаблицыМаксимальных[0]);
					КонецЕсли;  // Иначе ничего не деляем там и так не никаких данных.
				КонецЕсли; // Иначе ничего не делаем оставляем строку так как она уже есть.
			иначе
				Если СтрокиТаблицыМаксимальных.Количество() > 0 тогда
					// Удаляем строку из максимальных показаний.
					ТаблицаМаксимальных.Удалить(СтрокиТаблицыМаксимальных[0]);
				КонецЕсли;  // Иначе ничего не деляем там и так не никаких данных.
			КонецЕсли; 			
			
			Если  СостояниеПоказаний = ПоказанияПриняты или ВСрок тогда
				// Записываем набор.
				НаборПредоставленных 					= РегистрыСведений.бестПредоставленныеПоказанияНП.СоздатьНаборЗаписей();
				НаборПредоставленных.ДополнительныеСвойства.Вставить("НеПроверятьДатуЗапретаРедактирования",истина);
				СтрокаНабор  							= НаборПредоставленных.Добавить();
				СтрокаНабор.ПериодНачисления 			= ПериодНачисления;
				СтрокаНабор.Организация					= Организация;
				СтрокаНабор.Район						= Район;
				СтрокаНабор.Договор						= Договор;
				СтрокаНабор.ОбъектРасчета				= ОбъектРасчета;
				СтрокаНабор.ПриборУчета					= ПриборУчета;
				СтрокаНабор.Шкала						= Шкала;
				СтрокаНабор.ТарифнаяЗона				= ТарифнаяЗона;
				СтрокаНабор.НомерПозиции  				= ТекНомерПозиции;
				СтрокаНабор.ДатаРегистратора  			= Выборка.ПериодРегистрации;
				СтрокаНабор.ДокРегистратор  			= Выборка.ДокРегистратор;
				СтрокаНабор.Разделитель		  			= Выборка.Разделитель;
				СтрокаНабор.Показания  					= ?(ПредыдущиеМакс<0,0,ПредыдущиеМакс);
				СтрокаНабор.ВСрок  						= ВСрок;
				СтрокаНабор.ПоказанияТекущегоПериода	= ПоказанияТекущегоПериода;
				СтрокаНабор.МКД							= ОбъектРасчета.МКД;
				НаборПредоставленных.Записать(Ложь); 				     			
				
				ТекНомерПозиции 						= ТекНомерПозиции +1;			
			КонецЕсли;   
			
			// Записываем максимальные показаний.
			НаборМаксПоказаний.Загрузить(ТаблицаМаксимальных);
			НаборМаксПоказаний.Записать(Ложь);			
		КонецЦикла;
		
		Возврат Ложь;
	Исключение
		Представление  								= ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Представление);
		Возврат Истина;
	КонецПопытки;
КонецФункции

Функция ИмяТабличнойЧастиПоказанийНП(Регистратор)
	
    Если ТипЗнч(Регистратор) = Тип("ДокументСсылка.бестЗаключениеДоговоровСЮридическимиЛицами")	тогда
		Если Регистратор.ВидОперации  = Перечисления.энргВидыОпераций.энргОперацияСДоговором_ОткрытиеДоговора тогда
			Возврат "ПоказанияПриборовУчета";
		ИначеЕсли Регистратор.ВидОперации  = Перечисления.энргВидыОпераций.энргОперацияСДоговором_ЗакрытиеДоговора тогда
			Возврат "ТочкиУчетаЗакрытие";
		иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не определен вид операции");	
		КонецЕсли;
	ИначеЕсли  ТипЗнч(Регистратор) = Тип("ДокументСсылка.бестОперацияСПриборомУчетаНП")	тогда
		Если Регистратор.ВидОперации  = Перечисления.энргВидыОпераций.энргОперацияСПриборомУчета_ВводПУ тогда
			Возврат "ПоказанияПриборовУчета";
		ИначеЕсли Регистратор.ВидОперации  = Перечисления.энргВидыОпераций.энргОперацияСПриборомУчета_ЗаменаПУ тогда
			Возврат "ПоказанияПриборовУчета";
		ИначеЕсли Регистратор.ВидОперации  = Перечисления.энргВидыОпераций.энргОперацияСПриборомУчета_ВыводПУ тогда
			Возврат "ПоказанияПриборовУчета";	
		иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не определен вид операции");	
		КонецЕсли;
	ИначеЕсли ТипЗнч(Регистратор) = Тип("ДокументСсылка.бестОперацияСУслугамиНП")	тогда	
		Если Регистратор.ВидОперации  = Перечисления.энргВидыОпераций.энргОперацияСУслугами_ПодключениеУслуги тогда
			Возврат "ПоказанияПриборовУчета";
		ИначеЕсли Регистратор.ВидОперации  = Перечисления.энргВидыОпераций.энргОперацияСУслугами_ОтключениеУслуги тогда
			Возврат "ПоказанияПриборовУчета";
		иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не определен вид операции");
		КонецЕсли;
	ИначеЕсли ТипЗнч(Регистратор) = Тип("ДокументСсылка.бестРегистрацияПоказанийНП")	тогда	
		Возврат "ПоказанияПриборовУчета";			
	иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не определен вид операции");
	КонецЕсли; 	
КонецФункции

Функция ИмяТабличнойЧастиТочкиУчетаНП(Регистратор)
	
	Если ТипЗнч(Регистратор) = Тип("ДокументСсылка.бестЗаключениеДоговоровСЮридическимиЛицами")	тогда
		Если Регистратор.ВидОперации  = Перечисления.бестВидыОпераций.ОперацияСДоговором_ОткрытиеДоговора тогда
			Возврат "ТочкиУчета";
		ИначеЕсли Регистратор.ВидОперации  = Перечисления.бестВидыОпераций.ОперацияСДоговором_ЗакрытиеДоговора тогда
			Возврат "ТочкиУчетаЗакрытие";
		иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не определен вид операции");	
		КонецЕсли;
	ИначеЕсли  ТипЗнч(Регистратор) = Тип("ДокументСсылка.бестОперацияСПриборомУчетаНП")	тогда
		Если Регистратор.ВидОперации  = Перечисления.бестВидыОпераций.ОперацияСПриборомУчета_ВводПУ тогда
			Возврат "ПриборыУчетаВВод";
		ИначеЕсли Регистратор.ВидОперации  = Перечисления.бестВидыОпераций.ОперацияСПриборомУчета_ЗаменаПУ тогда
			Возврат "ПриборыУчетаЗамена";
		ИначеЕсли Регистратор.ВидОперации  = Перечисления.бестВидыОпераций.ОперацияСПриборомУчета_ВыводПУ тогда
			Возврат "ПриборыУчетаВывод";	
		иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не определен вид операции");	
		КонецЕсли;
	ИначеЕсли ТипЗнч(Регистратор) = Тип("ДокументСсылка.бестОперацияСУслугамиНП")	тогда	
		Если Регистратор.ВидОперации  = Перечисления.бестВидыОпераций.ОперацияСУслугами_ПодключениеУслуги тогда
			Возврат "ТочкиУчета";
		ИначеЕсли Регистратор.ВидОперации  = Перечисления.бестВидыОпераций.ОперацияСУслугами_ОтключениеУслуги тогда
			Возврат "ТочкиУчета";
		иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не определен вид операции");
		КонецЕсли;
	ИначеЕсли ТипЗнч(Регистратор) = Тип("ДокументСсылка.бестРегистрацияПоказанийНП")	тогда	
		Возврат "ТочкиУчета";
	иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не определен вид операции");
	КонецЕсли; 	
КонецФункции


#КонецОбласти

#Область ОтложенныеДвиженияДокументовНачисления

Процедура ОчиститьНаборыЗаписейНП(ПериодНачисления,Район,МКД,ДокРегистратор,ВводНачальныхОстатков)
	
	НаборСтабильныеПериоды					= РегистрыСведений.энргСтабильныеПериоды.СоздатьНаборЗаписей();
	НаборСтабильныеПериоды.ДополнительныеСвойства.Вставить("НеПроверятьДатуЗапретаРедактирования",Истина);
	НаборСтабильныеПериоды.Отбор.ПериодНачисления.установить(ПериодНачисления);
	НаборСтабильныеПериоды.Отбор.Район.установить(Район);
	НаборСтабильныеПериоды.Отбор.МКД.установить(МКД);
	НаборСтабильныеПериоды.записать();
	
	НаборНомерСтрокСтабПериода 				= РегистрыСведений.энргНомераСтрокСтабильногоПериода.СоздатьНаборЗаписей();
	НаборНомерСтрокСтабПериода.Отбор.ПериодНачисления.установить(ПериодНачисления);
	НаборНомерСтрокСтабПериода.Отбор.Район.установить(Район);
	НаборНомерСтрокСтабПериода.Отбор.МКД.установить(МКД);
	НаборНомерСтрокСтабПериода.Записать();
	
	НаборМаксимальныеПоказания 				= РегистрыСведений.бестМаксимальныеПоказанияСрез.СоздатьНаборЗаписей();
	НаборМаксимальныеПоказания.Отбор.ПериодНачисления.установить(ПериодНачисления);
	НаборМаксимальныеПоказания.Отбор.Район.установить(Район);
	НаборМаксимальныеПоказания.Отбор.МКД.установить(МКД);
	НаборМаксимальныеПоказания.Записать();
	
	Если ВводНачальныхОстатков тогда
		НаборМаксимальныеПоказания 			= РегистрыСведений.бестМаксимальныеПоказанияСрез.СоздатьНаборЗаписей();
		НаборМаксимальныеПоказания.Отбор.ПериодНачисления.установить(НачалоМесяца(ПериодНачисления-1));
		НаборМаксимальныеПоказания.Отбор.Район.установить(Район);
		НаборМаксимальныеПоказания.Отбор.МКД.установить(МКД);
		НаборМаксимальныеПоказания.Записать(); 		
	КонецЕсли; 
	
	НаборОтложенныхДвижений  				= РегистрыСведений.энргОтложенныеДвиженияДокументов.СоздатьНаборЗаписей();
	НаборОтложенныхДвижений.Отбор.ДокРегистратор.установить(ДокРегистратор);
	НаборОтложенныхДвижений.Записать();
КонецПроцедуры

Функция РезультатНачальныеОстаткиСтабильногоПериодаНП(ПериодНачисления,Организация,Район,ПериодРегистрации,Договор = Неопределено)
	
	Разделить = "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";  
	
	Текст 	=
	"ВЫБРАТЬ
	|	бестОтложенныеДвиженияДокументовНП.ПериодНачисления КАК ПериодНачисления,
	|	бестОтложенныеДвиженияДокументовНП.Район КАК Район,
	|	бестОтложенныеДвиженияДокументовНП.ДокРегистратор КАК ДокРегистратор,
	|	бестОтложенныеДвиженияДокументовНП.ДатаРегистратора КАК ДатаРегистратора,
	|	бестОтложенныеДвиженияДокументовНП.Организация КАК Организация,
	|	бестОтложенныеДвиженияДокументовНП.Договор КАК Договор
	|ПОМЕСТИТЬ ДокументыДляПроведенияНП
	|ИЗ
	|	РегистрСведений.бестОтложенныеДвиженияДокументовНП КАК бестОтложенныеДвиженияДокументовНП
	|ГДЕ
	|	бестОтложенныеДвиженияДокументовНП.ПериодНачисления = &Периодначисления
	|	И бестОтложенныеДвиженияДокументовНП.Район = &Район
	|	И бестОтложенныеДвиженияДокументовНП.РазделЗаписи = ЗНАЧЕНИЕ(Перечисление.бестРазделыЗаписиНП.СтабильныеПериодыНП)
	|	И бестОтложенныеДвиженияДокументовНП.Организация = &Организация
	|";
	
	Текст 	= Текст + Разделить;	
	
	Текст 	= Текст + СтабильныеПериодыДокументыНачисления(Договор);
	
	//Если Договор = Неопределено тогда
	//	Текст 				= СтрЗаменить(Текст,"И бестОтложенныеДвиженияДокументовНП.Договор = &Договор","");
	//КонецЕсли;

	МВТ 							= Новый МенеджерВременныхТаблиц;
	Запрос  						= Новый Запрос(Текст);
	Запрос.МенеджерВременныхТаблиц 	= МВТ;
	Запрос.УстановитьПараметр("ПериодРегистрации",		ПериодРегистрации);
	Запрос.УстановитьПараметр("ПредыдущийПериод",		НачалоМесяца(ПериодНачисления-1));
	Запрос.УстановитьПараметр("Организация",			Организация);
	Запрос.УстановитьПараметр("Периодначисления",		ПериодНачисления);
	Запрос.УстановитьПараметр("Район",					Район);
	Запрос.УстановитьПараметр("Период",					КонецМесяца(ПериодНачисления));
	
	Если Договор <> Неопределено Тогда
		Запрос.УстановитьПараметр("Договор",					Договор);
	КонецЕсли;
	
	Запрос.Выполнить();

	Текст 	= МаксимальныеПоказанияНПСрез();

	Текст 	= Текст + Разделить;
	
	Текст 	= Текст +  "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыНачальныхОстатков.Организация КАК Организация,
	|	ДокументыНачальныхОстатков.ПериодНачисления КАК ПериодНачисления,
	|	ДокументыНачальныхОстатков.Район КАК Район,
	|	ДокументыНачальныхОстатков.Договор КАК Договор,
	|	ДокументыНачальныхОстатков.МКД КАК МКД,
	|	ДокументыНачальныхОстатков.ОбъектРасчета КАК ОбъектРасчета,
	|	ДокументыНачальныхОстатков.Услуга КАК Услуга,
	|	ДокументыНачальныхОстатков.ТочкаУчета КАК ТочкаУчета,
	|	ДокументыНачальныхОстатков.ПериодРегистрации КАК ПериодРегистрации,
	|	ДокументыНачальныхОстатков.ДатаРегистратора КАК ДатаРегистратора,
	|	ДокументыНачальныхОстатков.ДокРегистратор КАК ДокРегистратор,
	|	ДокументыНачальныхОстатков.ДоговорЗаключен КАК ДоговорЗаключен,
	|	ДокументыНачальныхОстатков.ОбъектРасчетаПодключен КАК ОбъектРасчетаПодключен,
	|	ДокументыНачальныхОстатков.УслугаПодключена КАК УслугаПодключена,
	|	ДокументыНачальныхОстатков.ПриборВведен КАК ПриборВведен,
	|	ДокументыНачальныхОстатков.ПриборУчета КАК ПриборУчета,
	|	ДокументыНачальныхОстатков.ЗначениеНагрузки КАК ЗначениеНагрузки,
	|	ДокументыНачальныхОстатков.ЗначениеПлощади КАК ЗначениеПлощади,
	|	ДокументыНачальныхОстатков.ТарифнаяГруппа КАК ТарифнаяГруппа,
	|	ДокументыНачальныхОстатков.ДатаПоверки КАК ДатаПоверки,
	|	ДокументыНачальныхОстатков.ЗависимаяТочкаУчета КАК ЗависимаяТочкаУчета,
	|	ДокументыНачальныхОстатков.КоэффициентРасчета КАК КоэффициентРасчета,
	|	ДокументыНачальныхОстатков.ДатаСостоянияПрибора КАК ДатаСостоянияПрибора,
	|	ДокументыНачальныхОстатков.ЗначениеНормативаЗаДень КАК ЗначениеНормативаЗаДень,
	|	ДокументыНачальныхОстатков.ОбъектУчаствуетВРаспределенииМКД КАК ОбъектУчаствуетВРаспределенииМКД,
	|	ДокументыНачальныхОстатков.РасчетПоФормуле КАК РасчетПоФормуле,
	|	ДокументыНачальныхОстатков.ТепловаяСоставляющая КАК ТепловаяСоставляющая,
	|	ДокументыНачальныхОстатков.СпособРасчетаНорматива КАК СпособРасчетаНорматива,
	|	ДокументыНачальныхОстатков.КлючНорматива КАК КлючНорматива,
	|	ДокументыНачальныхОстатков.Поставщик КАК Поставщик,
	|	ДокументыНачальныхОстатков.Шкала КАК Шкала,
	|	ДокументыНачальныхОстатков.НетВозможностьУстановкиПУ КАК НетВозможностьУстановкиПУ,
	|	ДокументыНачальныхОстатков.СоставнаяУслуга КАК СоставнаяУслуга,
	|	ВЫРАЗИТЬ(ДокументыНачальныхОстатков.ФормулаРасчета КАК СТРОКА(500)) КАК ФормулаРасчета,
	|	ДокументыНачальныхОстатков.ТипСхемыГВС КАК ТипСхемыГВС,
	|	ДокументыНачальныхОстатков.ВидТепловогоПункта КАК ВидТепловогоПункта,
	|	ДокументыНачальныхОстатков.ЗначениеМесячнойНагрузки КАК ЗначениеМесячнойНагрузки,
	|	ДокументыНачальныхОстатков.УчаствуетВДолевойСхеме КАК УчаствуетВДолевойСхеме,
	|	ДокументыНачальныхОстатков.СпособРаспределенияОбъемаДолевойТУ КАК СпособРаспределенияОбъемаДолевойТУ,
	|	ДокументыНачальныхОстатков.СпособРаспределенияОстаткаДолевыеСхемы КАК СпособРаспределенияОстаткаДолевыеСхемы,
	|	ДокументыНачальныхОстатков.РасчетИндивидуальногоПотребления КАК РасчетИндивидуальногоПотребления,
	|	ДокументыНачальныхОстатков.КоличествоЧасовРаботы КАК КоличествоЧасовРаботы,
	|	ДокументыНачальныхОстатков.КоэффициентДолевогоРаспределения КАК КоэффициентДолевогоРаспределения,
	|	ДокументыНачальныхОстатков.СпособРасчетаПриВыходеПУ КАК СпособРасчетаПриВыходеПУ,
	|	0 КАК НомерПозиции,
	|	ЛОЖЬ КАК МенялосьСостояниеПУ,
	|	ЛОЖЬ КАК МенялосьСостояниеФормулы,
	|	ЛОЖЬ КАК ВводНачальныхОстатков
	|ИЗ
	|	ДокументыНачальныхОстатков КАК ДокументыНачальныхОстатков
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ДокументыНачальныхОстатков.ДокНачислениеДоговор <> ЗНАЧЕНИЕ(Справочник.бестДоговорыКонтрагентов.ПустаяСсылка)
	|				ТОГДА ДокументыНачальныхОстатков.ДокНачислениеДоговор = ДокументыНачальныхОстатков.Договор
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	ПериодНачисления,
	|	Район,
	|	Договор,
	|	ДокРегистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыНачальныхОстатков.Организация КАК Организация,
	|	&ПериодНачисления КАК ПериодНачисления,
	|	ДокументыНачальныхОстатков.Район КАК Район,
	|	ДокументыНачальныхОстатков.МКД КАК МКД,
	|	ДокументыНачальныхОстатков.Договор КАК Договор,
	|	ДокументыНачальныхОстатков.ОбъектРасчета КАК ОбъектРасчета,
	|	бестМаксимальныеПоказанияСрез.ПриборУчета КАК ПриборУчета,
	|	бестМаксимальныеПоказанияСрез.Шкала КАК Шкала,
	|	бестМаксимальныеПоказанияСрез.ТарифнаяЗона КАК ТарифнаяЗона,
	|	бестМаксимальныеПоказанияСрез.Показания КАК Показания,
	|	бестМаксимальныеПоказанияСрез.ДокРегистратор КАК ДокРегистратор,
	|	бестМаксимальныеПоказанияСрез.ДатаРегистратора КАК ДатаРегистратора
	|ИЗ
	|	ДокументыНачальныхОстатков КАК ДокументыНачальныхОстатков
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ бестМаксимальныеПоказанияСрез КАК бестМаксимальныеПоказанияСрез
	|		ПО ДокументыНачальныхОстатков.Организация = бестМаксимальныеПоказанияСрез.Организация
	|			И (ДокументыНачальныхОстатков.ПериодНачисления = ДОБАВИТЬКДАТЕ(бестМаксимальныеПоказанияСрез.ПериодНачисления, МЕСЯЦ, 1))
	|			И ДокументыНачальныхОстатков.Район = бестМаксимальныеПоказанияСрез.Район
	|			И ДокументыНачальныхОстатков.МКД = бестМаксимальныеПоказанияСрез.МКД
	|			И ВЫБОР
	|			КОГДА ДокументыНачальныхОстатков.ДокНачислениеДоговор <> ЗНАЧЕНИЕ(Справочник.бестДоговорыКонтрагентов.ПустаяСсылка)
	|				ТОГДА ДокументыНачальныхОстатков.ДокНачислениеДоговор = бестМаксимальныеПоказанияСрез.Договор
	|			ИНАЧЕ ДокументыНачальныхОстатков.Договор = бестМаксимальныеПоказанияСрез.Договор
	|			КОНЕЦ
	|			И ДокументыНачальныхОстатков.ОбъектРасчета = бестМаксимальныеПоказанияСрез.ОбъектРасчета
	|			И ДокументыНачальныхОстатков.ПриборУчета = бестМаксимальныеПоказанияСрез.ПриборУчета
	|			И (ДокументыНачальныхОстатков.ПриборВведен)
	|			И (бестМаксимальныеПоказанияСрез.Организация = &Организация)
	|			И (бестМаксимальныеПоказанияСрез.ПериодНачисления = &ПредыдущийПериод)
	|			И (бестМаксимальныеПоказанияСрез.Район = &Район)
	|			И (бестМаксимальныеПоказанияСрез.Договор = &Договор)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	ПериодНачисления,
	|	Район,
	|	Договор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыНачальныхОстатков.Организация КАК Организация,
	|	ДокументыНачальныхОстатков.ПериодНачисления КАК ПериодНачисления,
	|	ДокументыНачальныхОстатков.ДатаРегистратора КАК ДатаРегистратора,
	|	ДокументыНачальныхОстатков.ДокРегистратор КАК ДокРегистратор,
	|	0 КАК НомерПозиции,
	|	ПараметрыШкалСтаблиногоПериода.Район КАК Район,
	|	ПараметрыШкалСтаблиногоПериода.МКД КАК МКД,
	|	ПараметрыШкалСтаблиногоПериода.Договор КАК Договор,
	|	ПараметрыШкалСтаблиногоПериода.ОбъектРасчета КАК ОбъектРасчета,
	|	ПараметрыШкалСтаблиногоПериода.ТочкаУчета КАК ТочкаУчета,
	|	ПараметрыШкалСтаблиногоПериода.Шкала КАК Шкала,
	|	ПараметрыШкалСтаблиногоПериода.ВидДифференцированности КАК ВидДифференцированности
	|ИЗ
	|	ДокументыНачальныхОстатков КАК ДокументыНачальныхОстатков
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПараметрыШкалСтаблиногоПериода КАК ПараметрыШкалСтаблиногоПериода
	|		ПО ДокументыНачальныхОстатков.Организация = ПараметрыШкалСтаблиногоПериода.Организация
	|			И ДокументыНачальныхОстатков.ПериодНачисления = ПараметрыШкалСтаблиногоПериода.ПериодНачисления
	|			И ДокументыНачальныхОстатков.Район = ПараметрыШкалСтаблиногоПериода.Район
	|			И ДокументыНачальныхОстатков.ОбъектРасчета = ПараметрыШкалСтаблиногоПериода.ОбъектРасчета
	|			И ДокументыНачальныхОстатков.ТочкаУчета = ПараметрыШкалСтаблиногоПериода.ТочкаУчета
	|			И ВЫБОР
	|			КОГДА ДокументыНачальныхОстатков.ДокНачислениеДоговор <> ЗНАЧЕНИЕ(Справочник.бестДоговорыКонтрагентов.ПустаяСсылка)
	|				ТОГДА ДокументыНачальныхОстатков.ДокНачислениеДоговор = ПараметрыШкалСтаблиногоПериода.Договор
	|			ИНАЧЕ ДокументыНачальныхОстатков.Договор = ПараметрыШкалСтаблиногоПериода.Договор
	|			КОНЕЦ
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	ПериодНачисления,
	|	Район,
	|	Договор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыНачальныхОстатков.Организация КАК Организация,
	|	ДокументыНачальныхОстатков.ПериодНачисления КАК ПериодНачисления,
	|	ДокументыНачальныхОстатков.ДатаРегистратора КАК ДатаРегистратора,
	|	ДокументыНачальныхОстатков.ДокРегистратор КАК ДокРегистратор,
	|	0 КАК НомерПозиции,	
	|" + энргНачисления.СформироватьСтрокуДляЗапроса("бестСтабильныеПериодыПриборыУзловУчета","СтабильныеПериодыПриборыУзлаУчета","Организация,ПериодНачисления,ДатаРегистратора,ДокРегистратор,НомерПозиции") + "
	|ИЗ
	|	ДокументыНачальныхОстатков КАК ДокументыНачальныхОстатков
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СтабильныеПериодыПриборыУзлаУчета КАК СтабильныеПериодыПриборыУзлаУчета
	|		ПО ДокументыНачальныхОстатков.Организация = СтабильныеПериодыПриборыУзлаУчета.Организация
	|			И ДокументыНачальныхОстатков.ПериодНачисления = СтабильныеПериодыПриборыУзлаУчета.ПериодНачисления
	|			И ДокументыНачальныхОстатков.Район = СтабильныеПериодыПриборыУзлаУчета.Район
	|			И ДокументыНачальныхОстатков.ОбъектРасчета = СтабильныеПериодыПриборыУзлаУчета.ОбъектРасчета
	|			И ДокументыНачальныхОстатков.ТочкаУчета = СтабильныеПериодыПриборыУзлаУчета.ТочкаУчета"; 
	
	Если Договор = Неопределено тогда
		Текст 				= СтрЗаменить(Текст,"И бестОтложенныеДвиженияДокументовНП.Договор = &Договор","");
		Текст 				= СтрЗаменить(Текст,"И (бестМаксимальныеПоказанияСрез.Договор = &Договор)","");
		Текст 				= СтрЗаменить(Текст,"И бестПредоставленныеПоказанияНП.Договор = &Договор","");
	КонецЕсли;
		
	Запрос.Текст 			= Текст;
		
	Возврат Запрос.ВыполнитьПакет();

			
КонецФункции

Функция СтабильныеПериодыВводНачальныхОстатков()
	Текст 	=  
	"ВЫБРАТЬ
	|	энргВводНачальныхОстатковДанныеТочекУчета.Ссылка КАК Регистратор,
	|	ДокументыДляПроведенияНП.ДатаРегистратора КАК Дата,
	|	энргВводНачальныхОстатков.Район КАК Район,
	|	энргВводНачальныхОстатков.МКД КАК МКД,
	|	ДокументыДляПроведенияНП.ПериодНачисления,
	|	энргВводНачальныхОстатковДанныеТочекУчета.Абонент,
	|	энргВводНачальныхОстатковДанныеТочекУчета.Услуга,
	|	энргВводНачальныхОстатковДанныеТочекУчета.ТочкаУчета,
	|	энргВводНачальныхОстатковДанныеТочекУчета.ВидДифференцированности,
	|	энргВводНачальныхОстатковДанныеТочекУчета.ДатаПодключенияПУ,
	|	энргВводНачальныхОстатковДанныеТочекУчета.ПриборУчета,
	|	ВЫБОР
	|		КОГДА энргВводНачальныхОстатковДанныеТочекУчета.КоэффициентПУ = 0
	|			ТОГДА 1
	|		ИНАЧЕ энргВводНачальныхОстатковДанныеТочекУчета.КоэффициентПУ
	|	КОНЕЦ КАК КоэффициентПУ,
	|	энргВводНачальныхОстатковДанныеТочекУчета.ДатаПоверки,
	|	энргВводНачальныхОстатковДанныеТочекУчета.РасчетПоФормуле,
	|	энргВводНачальныхОстатков.ГруппаПотребителей,
	|	энргВводНачальныхОстатковДанныеТочекУчета.Поставщик,
	|	энргВводНачальныхОстатковДанныеТочекУчета.ЭтоСоставнаяУслуга,
	|	энргВводНачальныхОстатковДанныеТочекУчета.IDСтроки,
	|	энргВводНачальныхОстатковДанныеТочекУчета.ЗависимаяТочка КАК ЗависимаяТочкаУчета,
	|	энргВводНачальныхОстатковДанныеТочекУчета.КоэффициентФормулы КАК КоэффициентРасчета
	|ПОМЕСТИТЬ ДанныеТочекУчета
	|ИЗ
	|	Документ.энргВводНачальныхОстатков.ТочкиУчета КАК энргВводНачальныхОстатковДанныеТочекУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыДляПроведенияНП КАК ДокументыДляПроведения
	|		ПО энргВводНачальныхОстатковДанныеТочекУчета.Ссылка = ДокументыДляПроведения.ДокРегистратор
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргВводНачальныхОстатков КАК энргВводНачальныхОстатков
	|		ПО энргВводНачальныхОстатковДанныеТочекУчета.Ссылка = энргВводНачальныхОстатков.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеТочекУчета.Регистратор,
	|	ДанныеТочекУчета.ПериодНачисления,
	|	ДанныеТочекУчета.Абонент,
	|	ДанныеТочекУчета.Район,
	|	ДанныеТочекУчета.МКД,
	|	ВЫБОР
	|		КОГДА энргВводНачальныхОстатковПоставщикиСоставныхУслуг.Ссылка ЕСТЬ NULL 
	|			ТОГДА ДанныеТочекУчета.Услуга
	|		ИНАЧЕ энргВводНачальныхОстатковПоставщикиСоставныхУслуг.ЧастьСоставнойУслуги
	|	КОНЕЦ КАК Услуга,
	|	ДанныеТочекУчета.ТочкаУчета,
	|	ДанныеТочекУчета.ВидДифференцированности,
	|	ДанныеТочекУчета.ДатаПодключенияПУ,
	|	ДанныеТочекУчета.ПриборУчета,
	|	ДанныеТочекУчета.КоэффициентПУ,
	|	ДанныеТочекУчета.ДатаПоверки,
	|	ДанныеТочекУчета.РасчетПоФормуле,
	|	ДанныеТочекУчета.ГруппаПотребителей,
	|	ДанныеТочекУчета.Дата,
	|	ВЫБОР
	|		КОГДА энргВводНачальныхОстатковПоставщикиСоставныхУслуг.Ссылка ЕСТЬ NULL 
	|			ТОГДА ДанныеТочекУчета.Поставщик
	|		ИНАЧЕ энргВводНачальныхОстатковПоставщикиСоставныхУслуг.Поставщик
	|	КОНЕЦ КАК Поставщик,
	|	ДанныеТочекУчета.ЗависимаяТочкаУчета,
	|	ДанныеТочекУчета.КоэффициентРасчета
	|ПОМЕСТИТЬ ДанныеУслуг
	|ИЗ
	|	ДанныеТочекУчета КАК ДанныеТочекУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.энргВводНачальныхОстатков.ПоставщикиСоставныхУслуг КАК энргВводНачальныхОстатковПоставщикиСоставныхУслуг
	|		ПО ДанныеТочекУчета.Регистратор = энргВводНачальныхОстатковПоставщикиСоставныхУслуг.Ссылка
	|			И (ДанныеТочекУчета.ЭтоСоставнаяУслуга)
	|			И ДанныеТочекУчета.IDСтроки = энргВводНачальныхОстатковПоставщикиСоставныхУслуг.IDСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеУслуг.Регистратор,
	|	ДанныеУслуг.ПериодНачисления,
	|	ДанныеУслуг.Абонент,
	|	ДанныеУслуг.Район,
	|	ДанныеУслуг.МКД,
	|	ДанныеУслуг.Услуга КАК Услуга,
	|	ДанныеУслуг.ТочкаУчета,
	|	ДанныеУслуг.ВидДифференцированности,
	|	ДанныеУслуг.ДатаПодключенияПУ,
	|	ДанныеУслуг.ПриборУчета,
	|	ДанныеУслуг.КоэффициентПУ,
	|	ДанныеУслуг.ДатаПоверки,
	|	ДанныеУслуг.РасчетПоФормуле,
	|	ДанныеУслуг.ГруппаПотребителей,
	|	ДанныеУслуг.Дата,
	|	ДанныеУслуг.Поставщик КАК Поставщик,
	|	ВЫБОР
	|		КОГДА энргВидыУслуг.ВидПлощади ЕСТЬ NULL 
	|			ТОГДА ЗНАЧЕНИЕ(перечисление.энргВидыПлощадей.ОбщаяПлощадь)
	|		КОГДА энргВидыУслуг.ВидПлощади = ЗНАЧЕНИЕ(Перечисление.энргВидыПлощадей.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(перечисление.энргВидыПлощадей.ОбщаяПлощадь)
	|		ИНАЧЕ энргВидыУслуг.ВидПлощади
	|	КОНЕЦ КАК ВидПлощади,
	|	ЗНАЧЕНИЕ(Перечисление.энргСпособыОпределенияНормы.ПустаяСсылка) КАК СпособОпределенияНормы,
	|	ДанныеУслуг.ЗависимаяТочкаУчета,
	|	ДанныеУслуг.КоэффициентРасчета
	|ПОМЕСТИТЬ ДанныеВидаПлощадейУслуг
	|ИЗ
	|	ДанныеУслуг КАК ДанныеУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг КАК энргВидыУслуг
	|		ПО ДанныеУслуг.Услуга = энргВидыУслуг.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеВидаПлощадейУслуг.Регистратор,
	|	ДанныеВидаПлощадейУслуг.ПериодНачисления,
	|	ДанныеВидаПлощадейУслуг.Абонент,
	|	ДанныеВидаПлощадейУслуг.Район,
	|	ДанныеВидаПлощадейУслуг.МКД,
	|	ДанныеВидаПлощадейУслуг.Услуга,
	|	ДанныеВидаПлощадейУслуг.ТочкаУчета,
	|	ДанныеВидаПлощадейУслуг.ВидДифференцированности,
	|	ДанныеВидаПлощадейУслуг.ДатаПодключенияПУ,
	|	ДанныеВидаПлощадейУслуг.ПриборУчета,
	|	ДанныеВидаПлощадейУслуг.КоэффициентПУ,
	|	ДанныеВидаПлощадейУслуг.ДатаПоверки,
	|	ДанныеВидаПлощадейУслуг.РасчетПоФормуле,
	|	ЕСТЬNULL(энргВводНачальныхОстатковПоказанияПриборовУчета.ТарифнаяЗона, ЗНАЧЕНИЕ(Справочник.энргТарифныеЗоны.ПустаяСсылка)) КАК ТарифнаяЗона,
	|	МАКСИМУМ(ЕСТЬNULL(энргВводНачальныхОстатковПоказанияПриборовУчета.ДатаПоказаний, ДАТАВРЕМЯ(1, 1, 1))) КАК МаксДатаПоказаний,
	|	МАКСИМУМ(ЕСТЬNULL(энргВводНачальныхОстатковКоличествоПрописанных.Период, ДАТАВРЕМЯ(1, 1, 1))) КАК ПериодКоличествоПрописанных,
	|	МАКСИМУМ(ЕСТЬNULL(энргВводНачальныхОстатковЗначениеПлощадей.Период, ДАТАВРЕМЯ(1, 1, 1))) КАК ПериодЗначПлощадей,
	|	МАКСИМУМ(ЕСТЬNULL(энргВводНачальныхОстатковКоличествоКомнат.Период, ДАТАВРЕМЯ(1, 1, 1))) КАК ПериодКоличествоКомнат,
	|	ЕСТЬNULL(энргВводНачальныхОстатковВидыБлагоустройств.ВидБлагоустройств, ЗНАЧЕНИЕ(Справочник.энргВидыБлагоустройств.ПустаяСсылка)) КАК ВидБлагоустройства,
	|	ДанныеВидаПлощадейУслуг.ГруппаПотребителей,
	|	ДанныеВидаПлощадейУслуг.Дата,
	|	ДанныеВидаПлощадейУслуг.Поставщик,
	|	ДанныеВидаПлощадейУслуг.ВидПлощади,
	|	ДанныеВидаПлощадейУслуг.СпособОпределенияНормы,
	|	ДанныеВидаПлощадейУслуг.ЗависимаяТочкаУчета,
	|	ДанныеВидаПлощадейУслуг.КоэффициентРасчета
	|ПОМЕСТИТЬ МаксимальныеДаты
	|ИЗ
	|	ДанныеВидаПлощадейУслуг КАК ДанныеВидаПлощадейУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.энргВводНачальныхОстатков.ПоказанияПриборовУчета КАК энргВводНачальныхОстатковПоказанияПриборовУчета
	|		ПО ДанныеВидаПлощадейУслуг.Регистратор = энргВводНачальныхОстатковПоказанияПриборовУчета.Ссылка
	|			И ДанныеВидаПлощадейУслуг.Абонент = энргВводНачальныхОстатковПоказанияПриборовУчета.Абонент
	|			И ДанныеВидаПлощадейУслуг.ПриборУчета = энргВводНачальныхОстатковПоказанияПриборовУчета.ПриборУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.энргВводНачальныхОстатков.КоличествоПрописанных КАК энргВводНачальныхОстатковКоличествоПрописанных
	|		ПО ДанныеВидаПлощадейУслуг.Абонент = энргВводНачальныхОстатковКоличествоПрописанных.Абонент
	|			И ДанныеВидаПлощадейУслуг.Регистратор = энргВводНачальныхОстатковКоличествоПрописанных.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.энргВводНачальныхОстатков.ЗначениеПлощадей КАК энргВводНачальныхОстатковЗначениеПлощадей
	|		ПО ДанныеВидаПлощадейУслуг.Абонент = энргВводНачальныхОстатковЗначениеПлощадей.Абонент
	|			И ДанныеВидаПлощадейУслуг.Регистратор = энргВводНачальныхОстатковЗначениеПлощадей.Ссылка
	|			И ДанныеВидаПлощадейУслуг.ВидПлощади = энргВводНачальныхОстатковЗначениеПлощадей.ВидПлощади
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.энргВводНачальныхОстатков.ВидыБлагоустройств КАК энргВводНачальныхОстатковВидыБлагоустройств
	|		ПО ДанныеВидаПлощадейУслуг.Абонент = энргВводНачальныхОстатковВидыБлагоустройств.Абонент
	|			И ДанныеВидаПлощадейУслуг.Регистратор = энргВводНачальныхОстатковВидыБлагоустройств.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.энргВводНачальныхОстатков.КоличествоКомнат КАК энргВводНачальныхОстатковКоличествоКомнат
	|		ПО ДанныеВидаПлощадейУслуг.Абонент = энргВводНачальныхОстатковКоличествоКомнат.Абонент
	|			И ДанныеВидаПлощадейУслуг.Регистратор = энргВводНачальныхОстатковКоличествоКомнат.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеВидаПлощадейУслуг.Регистратор,
	|	ДанныеВидаПлощадейУслуг.ПериодНачисления,
	|	ДанныеВидаПлощадейУслуг.Абонент,
	|	ДанныеВидаПлощадейУслуг.Район,
	|	ДанныеВидаПлощадейУслуг.ВидПлощади,
	|	ДанныеВидаПлощадейУслуг.СпособОпределенияНормы,
	|	ДанныеВидаПлощадейУслуг.МКД,
	|	ДанныеВидаПлощадейУслуг.Услуга,
	|	ДанныеВидаПлощадейУслуг.ТочкаУчета,
	|	ДанныеВидаПлощадейУслуг.ВидДифференцированности,
	|	ДанныеВидаПлощадейУслуг.ДатаПодключенияПУ,
	|	ДанныеВидаПлощадейУслуг.ПриборУчета,
	|	ДанныеВидаПлощадейУслуг.КоэффициентПУ,
	|	ДанныеВидаПлощадейУслуг.ДатаПоверки,
	|	ДанныеВидаПлощадейУслуг.РасчетПоФормуле,
	|	ЕСТЬNULL(энргВводНачальныхОстатковПоказанияПриборовУчета.ТарифнаяЗона, ЗНАЧЕНИЕ(Справочник.энргТарифныеЗоны.ПустаяСсылка)),
	|	ЕСТЬNULL(энргВводНачальныхОстатковВидыБлагоустройств.ВидБлагоустройств, ЗНАЧЕНИЕ(Справочник.энргВидыБлагоустройств.ПустаяСсылка)),
	|	ДанныеВидаПлощадейУслуг.ГруппаПотребителей,
	|	ДанныеВидаПлощадейУслуг.Дата,
	|	ДанныеВидаПлощадейУслуг.Поставщик,
	|	ДанныеВидаПлощадейУслуг.ЗависимаяТочкаУчета,
	|	ДанныеВидаПлощадейУслуг.КоэффициентРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеДаты.Регистратор,
	|	МаксимальныеДаты.ПериодНачисления,
	|	МаксимальныеДаты.Абонент,
	|	МаксимальныеДаты.Район,
	|	МаксимальныеДаты.МКД,
	|	МаксимальныеДаты.Услуга,
	|	МаксимальныеДаты.ТочкаУчета,
	|	МаксимальныеДаты.ВидДифференцированности,
	|	МаксимальныеДаты.ДатаПодключенияПУ,
	|	МаксимальныеДаты.ПриборУчета,
	|	МаксимальныеДаты.КоэффициентПУ,
	|	МаксимальныеДаты.ДатаПоверки,
	|	МаксимальныеДаты.ТарифнаяЗона,
	|	МаксимальныеДаты.РасчетПоФормуле,
	|	МаксимальныеДаты.МаксДатаПоказаний,
	|	МаксимальныеДаты.ПериодКоличествоПрописанных,
	|	МаксимальныеДаты.ПериодКоличествоКомнат,
	|	МаксимальныеДаты.ПериодЗначПлощадей,
	|	МаксимальныеДаты.ВидБлагоустройства,
	|	МАКСИМУМ(ЕСТЬNULL(энргВводНачальныхОстатковПоказанияПриборовУчета.НомерСтроки, 0)) КАК ПоказанияНомерСтроки,
	|	МАКСИМУМ(ЕСТЬNULL(энргВводНачальныхОстатковКоличествоПрописанных.НомерСтроки, 0)) КАК КоличествоПрописанныхНомерСтроки,
	|	МАКСИМУМ(ЕСТЬNULL(энргВводНачальныхОстатковЗначениеПлощадей.НомерСтроки, 0)) КАК ПериодЗначПлощадейНомерСтроки,
	|	МАКСИМУМ(ЕСТЬNULL(энргВводНачальныхОстатковКоличествоКомнат.НомерСтроки, 0)) КАК КоличествоКомнатНомерСтроки,
	|	МаксимальныеДаты.ГруппаПотребителей,
	|	МаксимальныеДаты.Дата,
	|	МаксимальныеДаты.Поставщик,
	|	МаксимальныеДаты.ВидПлощади,
	|	МаксимальныеДаты.СпособОпределенияНормы,
	|	МаксимальныеДаты.ЗависимаяТочкаУчета,
	|	МаксимальныеДаты.КоэффициентРасчета
	|ПОМЕСТИТЬ МаксимальныеНомераСтрок
	|ИЗ
	|	МаксимальныеДаты КАК МаксимальныеДаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.энргВводНачальныхОстатков.ПоказанияПриборовУчета КАК энргВводНачальныхОстатковПоказанияПриборовУчета
	|		ПО МаксимальныеДаты.Регистратор = энргВводНачальныхОстатковПоказанияПриборовУчета.Ссылка
	|			И МаксимальныеДаты.Абонент = энргВводНачальныхОстатковПоказанияПриборовУчета.Абонент
	|			И МаксимальныеДаты.ПриборУчета = энргВводНачальныхОстатковПоказанияПриборовУчета.ПриборУчета
	|			И МаксимальныеДаты.ТарифнаяЗона = энргВводНачальныхОстатковПоказанияПриборовУчета.ТарифнаяЗона
	|			И МаксимальныеДаты.МаксДатаПоказаний = энргВводНачальныхОстатковПоказанияПриборовУчета.ДатаПоказаний
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.энргВводНачальныхОстатков.КоличествоПрописанных КАК энргВводНачальныхОстатковКоличествоПрописанных
	|		ПО МаксимальныеДаты.Абонент = энргВводНачальныхОстатковКоличествоПрописанных.Абонент
	|			И МаксимальныеДаты.Регистратор = энргВводНачальныхОстатковКоличествоПрописанных.Ссылка
	|			И МаксимальныеДаты.ПериодКоличествоПрописанных = энргВводНачальныхОстатковКоличествоПрописанных.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.энргВводНачальныхОстатков.ЗначениеПлощадей КАК энргВводНачальныхОстатковЗначениеПлощадей
	|		ПО МаксимальныеДаты.Абонент = энргВводНачальныхОстатковЗначениеПлощадей.Абонент
	|			И МаксимальныеДаты.Регистратор = энргВводНачальныхОстатковЗначениеПлощадей.Ссылка
	|			И МаксимальныеДаты.ВидПлощади = энргВводНачальныхОстатковЗначениеПлощадей.ВидПлощади
	|			И МаксимальныеДаты.ПериодЗначПлощадей = энргВводНачальныхОстатковЗначениеПлощадей.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.энргВводНачальныхОстатков.КоличествоКомнат КАК энргВводНачальныхОстатковКоличествоКомнат
	|		ПО МаксимальныеДаты.Абонент = энргВводНачальныхОстатковКоличествоКомнат.Абонент
	|			И МаксимальныеДаты.Регистратор = энргВводНачальныхОстатковКоличествоКомнат.Ссылка
	|			И МаксимальныеДаты.ПериодКоличествоКомнат = энргВводНачальныхОстатковКоличествоКомнат.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	МаксимальныеДаты.Регистратор,
	|	МаксимальныеДаты.ПериодНачисления,
	|	МаксимальныеДаты.Абонент,
	|	МаксимальныеДаты.Район,
	|	МаксимальныеДаты.МКД,
	|	МаксимальныеДаты.Услуга,
	|	МаксимальныеДаты.ТочкаУчета,
	|	МаксимальныеДаты.ВидДифференцированности,
	|	МаксимальныеДаты.ДатаПодключенияПУ,
	|	МаксимальныеДаты.ПриборУчета,
	|	МаксимальныеДаты.КоэффициентПУ,
	|	МаксимальныеДаты.ДатаПоверки,
	|	МаксимальныеДаты.РасчетПоФормуле,
	|	МаксимальныеДаты.ТарифнаяЗона,
	|	МаксимальныеДаты.МаксДатаПоказаний,
	|	МаксимальныеДаты.ПериодКоличествоПрописанных,
	|	МаксимальныеДаты.ПериодКоличествоКомнат,
	|	МаксимальныеДаты.ПериодЗначПлощадей,
	|	МаксимальныеДаты.ВидБлагоустройства,
	|	МаксимальныеДаты.ГруппаПотребителей,
	|	МаксимальныеДаты.Дата,
	|	МаксимальныеДаты.Поставщик,
	|	МаксимальныеДаты.ВидПлощади,
	|	МаксимальныеДаты.СпособОпределенияНормы,
	|	МаксимальныеДаты.ЗависимаяТочкаУчета,
	|	МаксимальныеДаты.КоэффициентРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеНомераСтрок.Регистратор,
	|	МаксимальныеНомераСтрок.ПериодНачисления,
	|	МаксимальныеНомераСтрок.Абонент,
	|	МаксимальныеНомераСтрок.Район,
	|	МаксимальныеНомераСтрок.МКД,
	|	МаксимальныеНомераСтрок.Услуга,
	|	МаксимальныеНомераСтрок.ТочкаУчета,
	|	МаксимальныеНомераСтрок.ВидДифференцированности,
	|	МаксимальныеНомераСтрок.ДатаПодключенияПУ,
	|	МаксимальныеНомераСтрок.ПриборУчета,
	|	МаксимальныеНомераСтрок.КоэффициентПУ,
	|	МаксимальныеНомераСтрок.ДатаПоверки,
	|	МаксимальныеНомераСтрок.РасчетПоФормуле,
	|	МаксимальныеНомераСтрок.ТарифнаяЗона,
	|	ЕСТЬNULL(энргВводНачальныхОстатковЗначениеПлощадей.ЗначениеПлощади, 0) КАК Площадь,
	|	ЕСТЬNULL(энргВводНачальныхОстатковКоличествоПрописанных.Прописанных, 0) КАК КоличествоПрописанных,
	|	ЕСТЬNULL(энргВводНачальныхОстатковКоличествоКомнат.Количество, 0) КАК КоличествоКомнат,
	|	ЕСТЬNULL(энргВводНачальныхОстатковПоказанияПриборовУчета.Показание, 0) КАК Показания,
	|	ЕСТЬNULL(энргВводНачальныхОстатковПоказанияПриборовУчета.ДатаПоказаний, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПоказаний,
	|	МаксимальныеНомераСтрок.ГруппаПотребителей,
	|	МаксимальныеНомераСтрок.ВидБлагоустройства,
	|	МаксимальныеНомераСтрок.Дата,
	|	ЕСТЬNULL(энргВводНачальныхОстатковОтключаемыеВНеполивнойСезон.ОтключатьВНеполивнойСезон, ЛОЖЬ) КАК ОтключатьВНеполивнойСезон,
	|	МаксимальныеНомераСтрок.Поставщик,
	|	МаксимальныеНомераСтрок.ЗависимаяТочкаУчета,
	|	МаксимальныеНомераСтрок.КоэффициентРасчета,
	|	МаксимальныеНомераСтрок.СпособОпределенияНормы
	|ПОМЕСТИТЬ РасчетныеДанные
	|ИЗ
	|	МаксимальныеНомераСтрок КАК МаксимальныеНомераСтрок
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.энргВводНачальныхОстатков.ПоказанияПриборовУчета КАК энргВводНачальныхОстатковПоказанияПриборовУчета
	|		ПО МаксимальныеНомераСтрок.Регистратор = энргВводНачальныхОстатковПоказанияПриборовУчета.Ссылка
	|			И МаксимальныеНомераСтрок.Абонент = энргВводНачальныхОстатковПоказанияПриборовУчета.Абонент
	|			И МаксимальныеНомераСтрок.ПриборУчета = энргВводНачальныхОстатковПоказанияПриборовУчета.ПриборУчета
	|			И МаксимальныеНомераСтрок.ТарифнаяЗона = энргВводНачальныхОстатковПоказанияПриборовУчета.ТарифнаяЗона
	|			И МаксимальныеНомераСтрок.МаксДатаПоказаний = энргВводНачальныхОстатковПоказанияПриборовУчета.ДатаПоказаний
	|			И МаксимальныеНомераСтрок.ПоказанияНомерСтроки = энргВводНачальныхОстатковПоказанияПриборовУчета.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.энргВводНачальныхОстатков.КоличествоПрописанных КАК энргВводНачальныхОстатковКоличествоПрописанных
	|		ПО МаксимальныеНомераСтрок.Абонент = энргВводНачальныхОстатковКоличествоПрописанных.Абонент
	|			И МаксимальныеНомераСтрок.Регистратор = энргВводНачальныхОстатковКоличествоПрописанных.Ссылка
	|			И МаксимальныеНомераСтрок.ПериодКоличествоПрописанных = энргВводНачальныхОстатковКоличествоПрописанных.Период
	|			И МаксимальныеНомераСтрок.КоличествоПрописанныхНомерСтроки = энргВводНачальныхОстатковКоличествоПрописанных.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.энргВводНачальныхОстатков.ЗначениеПлощадей КАК энргВводНачальныхОстатковЗначениеПлощадей
	|		ПО МаксимальныеНомераСтрок.Абонент = энргВводНачальныхОстатковЗначениеПлощадей.Абонент
	|			И МаксимальныеНомераСтрок.Регистратор = энргВводНачальныхОстатковЗначениеПлощадей.Ссылка
	|			И МаксимальныеНомераСтрок.ВидПлощади = энргВводНачальныхОстатковЗначениеПлощадей.ВидПлощади
	|			И МаксимальныеНомераСтрок.ПериодЗначПлощадей = энргВводНачальныхОстатковЗначениеПлощадей.Период
	|			И МаксимальныеНомераСтрок.ПериодЗначПлощадейНомерСтроки = энргВводНачальныхОстатковЗначениеПлощадей.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.энргВводНачальныхОстатков.ОтключаемыеВНеполивнойСезон КАК энргВводНачальныхОстатковОтключаемыеВНеполивнойСезон
	|		ПО МаксимальныеНомераСтрок.Абонент = энргВводНачальныхОстатковОтключаемыеВНеполивнойСезон.Абонент
	|			И МаксимальныеНомераСтрок.Регистратор = энргВводНачальныхОстатковОтключаемыеВНеполивнойСезон.Ссылка
	|			И МаксимальныеНомераСтрок.Услуга = энргВводНачальныхОстатковОтключаемыеВНеполивнойСезон.Услуга
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.энргВводНачальныхОстатков.КоличествоКомнат КАК энргВводНачальныхОстатковКоличествоКомнат
	|		ПО МаксимальныеНомераСтрок.Абонент = энргВводНачальныхОстатковКоличествоКомнат.Абонент
	|			И МаксимальныеНомераСтрок.Регистратор = энргВводНачальныхОстатковКоличествоКомнат.Ссылка
	|			И МаксимальныеНомераСтрок.ПериодКоличествоКомнат = энргВводНачальныхОстатковКоличествоКомнат.Период
	|			И МаксимальныеНомераСтрок.КоличествоКомнатНомерСтроки = энргВводНачальныхОстатковКоличествоКомнат.НомерСтроки";
	
	Возврат Текст;
	
КонецФункции 

Функция СтабильныеПериодыДокументыНачисления(Договор)
	
	Текст 	=  
	"ВЫБРАТЬ
	|	бестНомераСтрокСтабильногоПериодаНП.ПериодНачисления КАК ПериодНачисления,
	|	бестНомераСтрокСтабильногоПериодаНП.Район КАК Район,
	|	бестНомераСтрокСтабильногоПериодаНП.МКД КАК МКД,
	|	бестНомераСтрокСтабильногоПериодаНП.Услуга КАК Услуга,
	|	бестНомераСтрокСтабильногоПериодаНП.ТочкаУчета КАК ТочкаУчета,
	|	МАКСИМУМ(бестНомераСтрокСтабильногоПериодаНП.НомерПозиции) КАК НомерПозиции,
	|	бестНомераСтрокСтабильногоПериодаНП.Организация КАК Организация,
	|	бестНомераСтрокСтабильногоПериодаНП.Договор КАК Договор,
	|	бестНомераСтрокСтабильногоПериодаНП.ОбъектРасчета КАК ОбъектРасчета
	|ПОМЕСТИТЬ НомерСтрок
	|ИЗ
	|	РегистрСведений.бестНомераСтрокСтабильногоПериодаНП КАК бестНомераСтрокСтабильногоПериодаНП
	|ГДЕ
	|	бестНомераСтрокСтабильногоПериодаНП.ПериодНачисления = &ПредыдущийПериод
	|	И бестНомераСтрокСтабильногоПериодаНП.Район = &Район
	|	И бестНомераСтрокСтабильногоПериодаНП.Организация = &Организация
	|	И бестНомераСтрокСтабильногоПериодаНП.Договор = &Договор
	|
	|СГРУППИРОВАТЬ ПО
	|	бестНомераСтрокСтабильногоПериодаНП.ПериодНачисления,
	|	бестНомераСтрокСтабильногоПериодаНП.Район,
	|	бестНомераСтрокСтабильногоПериодаНП.МКД,
	|	бестНомераСтрокСтабильногоПериодаНП.Услуга,
	|	бестНомераСтрокСтабильногоПериодаНП.ТочкаУчета,
	|	бестНомераСтрокСтабильногоПериодаНП.Организация,
	|	бестНомераСтрокСтабильногоПериодаНП.Договор,
	|	бестНомераСтрокСтабильногоПериодаНП.ОбъектРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	&ПериодНачисления КАК ПериодНачисления,
	|	0 КАК НомерПозиции,
	| "+ бестНачисленияНП.СформироватьСтрокуДляЗапроса("бестСтабильныеПериодыНП","СтабильныеПериоды","Организация,ПериодНачисления,НомерПозиции") + "
	|ПОМЕСТИТЬ ПараметрыСтаблиногоПериода
	|ИЗ
	|	НомерСтрок КАК НомерСтрок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бестСтабильныеПериодыНП КАК СтабильныеПериоды
	|		ПО НомерСтрок.ПериодНачисления = СтабильныеПериоды.ПериодНачисления
	|			И НомерСтрок.Организация = СтабильныеПериоды.Организация
	|			И НомерСтрок.Район = СтабильныеПериоды.Район
	|			И НомерСтрок.Договор = СтабильныеПериоды.Договор
	|			И НомерСтрок.ОбъектРасчета = СтабильныеПериоды.ОбъектРасчета
	|			И НомерСтрок.МКД = СтабильныеПериоды.МКД
	|			И НомерСтрок.Услуга = СтабильныеПериоды.Услуга
	|			И НомерСтрок.ТочкаУчета = СтабильныеПериоды.ТочкаУчета
	|			И НомерСтрок.НомерПозиции = СтабильныеПериоды.НомерПозиции
	|			И (СтабильныеПериоды.ПериодНачисления = &ПредыдущийПериод)
	|			И (СтабильныеПериоды.Район = &Район)
	|			И (СтабильныеПериоды.Организация = &Организация)
	|			И (СтабильныеПериоды.Договор = &Договор)
	|ГДЕ
	|	СтабильныеПериоды.ДоговорЗаключен
	|;
	|ВЫБРАТЬ
	| "+ энргНачисления.СформироватьСтрокуДляЗапроса("бестСтабильныеПериодыНП","ПараметрыСтаблиногоПериода","ПериодРегистрации,ДатаРегистратора,ДокРегистратор",Истина,Ложь) + "
	|	&ПериодРегистрации КАК ПериодРегистрации,
	|	ДокументыДляПроведенияНП.ДатаРегистратора КАК ДатаРегистратора,
	|	ДокументыДляПроведенияНП.ДокРегистратор КАК ДокРегистратор,
	|	ВЫБОР
	|	КОГДА ДокументыДляПроведенияНП.ДокРегистратор ССЫЛКА Документ.бестНачислениеНП
	|		ТОГДА ДокументыДляПроведенияНП.ДокРегистратор.Договор
	|	КОНЕЦ КАК ДокНачислениеДоговор
	|ПОМЕСТИТЬ ДокументыНачальныхОстатков
	|ИЗ
	|	ПараметрыСтаблиногоПериода КАК ПараметрыСтаблиногоПериода
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыДляПроведенияНП КАК ДокументыДляПроведенияНП
	|		ПО ПараметрыСтаблиногоПериода.Организация = ДокументыДляПроведенияНП.Организация
	|			И ПараметрыСтаблиногоПериода.ПериодНачисления = ДокументыДляПроведенияНП.ПериодНачисления
	|			И ПараметрыСтаблиногоПериода.Район = ДокументыДляПроведенияНП.Район
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////	
	|ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	&ПериодНачисления КАК ПериодНачисления,
	|" + энргНачисления.СформироватьСтрокуДляЗапроса("бестСтабильныеПериодыШкалыНП","СтабильныеПериодыШкалы","Организация,ПериодНачисления,НомерПозиции,ДатаРегистратора,ДокРегистратор") + "		
	|ПОМЕСТИТЬ ПараметрыШкалСтаблиногоПериода
	|ИЗ
	|	НомерСтрок КАК НомерСтрок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бестСтабильныеПериодыШкалыНП КАК СтабильныеПериодыШкалы
	|		ПО НомерСтрок.Организация = СтабильныеПериодыШкалы.Организация
	|			И НомерСтрок.ПериодНачисления = СтабильныеПериодыШкалы.ПериодНачисления
	|			И НомерСтрок.Район = СтабильныеПериодыШкалы.Район
	|			И НомерСтрок.Договор = СтабильныеПериодыШкалы.Договор
	|			И НомерСтрок.ОбъектРасчета = СтабильныеПериодыШкалы.ОбъектРасчета
	|			И НомерСтрок.МКД = СтабильныеПериодыШкалы.МКД
	|			И НомерСтрок.ТочкаУчета = СтабильныеПериодыШкалы.ТочкаУчета	
	|			И НомерСтрок.НомерПозиции = СтабильныеПериодыШкалы.НомерПозиции
	|			И (СтабильныеПериодыШкалы.Организация = &Организация)
	|			И (СтабильныеПериодыШкалы.ПериодНачисления = &ПредыдущийПериод)
	|			И (СтабильныеПериодыШкалы.Район = &Район) 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////	
	|ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	&ПериодНачисления КАК ПериодНачисления,
	|" + энргНачисления.СформироватьСтрокуДляЗапроса("бестСтабильныеПериодыПриборыУзловУчета","бестСтабильныеПериодыПриборыУзловУчета","Организация,ПериодНачисления,НомерПозиции,ДокРегистратор") + "
	|ПОМЕСТИТЬ СтабильныеПериодыПриборыУзлаУчета
	|ИЗ
	|	НомерСтрок КАК НомерСтрок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бестСтабильныеПериодыПриборыУзловУчета КАК бестСтабильныеПериодыПриборыУзловУчета
	|		ПО НомерСтрок.Организация = бестСтабильныеПериодыПриборыУзловУчета.Организация
	|			И НомерСтрок.ПериодНачисления = бестСтабильныеПериодыПриборыУзловУчета.ПериодНачисления
	|			И НомерСтрок.Район = бестСтабильныеПериодыПриборыУзловУчета.Район
	|			И НомерСтрок.Договор = бестСтабильныеПериодыПриборыУзловУчета.Договор
	|			И НомерСтрок.ОбъектРасчета = бестСтабильныеПериодыПриборыУзловУчета.ОбъектРасчета
	|			И НомерСтрок.ТочкаУчета = бестСтабильныеПериодыПриборыУзловУчета.ТочкаУчета	
	|			И НомерСтрок.НомерПозиции = бестСтабильныеПериодыПриборыУзловУчета.НомерПозиции
	|			И (бестСтабильныеПериодыПриборыУзловУчета.Организация = &Организация)
	|			И (бестСтабильныеПериодыПриборыУзловУчета.ПериодНачисления = &ПредыдущийПериод)
	|			И (бестСтабильныеПериодыПриборыУзловУчета.Район = &Район)";

	
	Если Договор = Неопределено Тогда
		Текст = СтрЗаменить(Текст,"И бестНомераСтрокСтабильногоПериодаНП.Договор = &Договор","");
		Текст = СтрЗаменить(Текст,"И (СтабильныеПериоды.Договор = &Договор)","");
		Текст = СтрЗаменить(Текст,"И (СтабильныеПериодыШкалы.Договор = &Договор)","");
	КонецЕсли;

	Возврат Текст;
КонецФункции  

Функция МаксимальныеПоказанияНПСрез()
	
	Текст 	=  
	"ВЫБРАТЬ
	|	бестПредоставленныеПоказанияНП.Организация КАК Организация,
	|	бестПредоставленныеПоказанияНП.ПериодНачисления КАК ПериодНачисления,
	|	бестПредоставленныеПоказанияНП.Договор КАК Договор,
	|	бестПредоставленныеПоказанияНП.ОбъектРасчета КАК ОбъектРасчета,
	|	бестПредоставленныеПоказанияНП.Район КАК Район,
	|	бестПредоставленныеПоказанияНП.ПриборУчета КАК ПриборУчета,
	|	бестПредоставленныеПоказанияНП.ТарифнаяЗона КАК ТарифнаяЗона,
	|	бестПредоставленныеПоказанияНП.НомерПозиции КАК НомерПозиции,
	|	бестПредоставленныеПоказанияНП.Разделитель КАК Разделитель,
	|	бестПредоставленныеПоказанияНП.ДатаРегистратора КАК ДатаРегистратора,
	|	бестПредоставленныеПоказанияНП.ДокРегистратор КАК ДокРегистратор,
	|	бестПредоставленныеПоказанияНП.Показания КАК Показания,
	|	бестПредоставленныеПоказанияНП.Шкала КАК Шкала
	|ПОМЕСТИТЬ НаборПредоставленныхПоказаний
	|ИЗ
	|	РегистрСведений.бестПредоставленныеПоказанияНП КАК бестПредоставленныеПоказанияНП
	|ГДЕ
	|	бестПредоставленныеПоказанияНП.Организация = &Организация
	|	И бестПредоставленныеПоказанияНП.ПериодНачисления = &ПредыдущийПериод
	|	И бестПредоставленныеПоказанияНП.Район = &Район
	|	И бестПредоставленныеПоказанияНП.Договор = &Договор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НаборПредоставленныхПоказаний.Организация КАК Организация,
	|	НаборПредоставленныхПоказаний.ПериодНачисления КАК ПериодНачисления,
	|	НаборПредоставленныхПоказаний.Договор КАК Договор,
	|	НаборПредоставленныхПоказаний.ОбъектРасчета КАК ОбъектРасчета,
	|	НаборПредоставленныхПоказаний.Район КАК Район,
	|	НаборПредоставленныхПоказаний.ПриборУчета КАК ПриборУчета,
	|	НаборПредоставленныхПоказаний.ТарифнаяЗона КАК ТарифнаяЗона,
	|	МАКСИМУМ(НаборПредоставленныхПоказаний.НомерПозиции) КАК НомерПозиции,
	|	НаборПредоставленныхПоказаний.Шкала КАК Шкала
	|ПОМЕСТИТЬ МаксНомерПозиции
	|ИЗ
	|	НаборПредоставленныхПоказаний КАК НаборПредоставленныхПоказаний
	|
	|СГРУППИРОВАТЬ ПО
	|	НаборПредоставленныхПоказаний.Организация,
	|	НаборПредоставленныхПоказаний.ПериодНачисления,
	|	НаборПредоставленныхПоказаний.Договор,
	|	НаборПредоставленныхПоказаний.ОбъектРасчета,
	|	НаборПредоставленныхПоказаний.Район,
	|	НаборПредоставленныхПоказаний.ПриборУчета,
	|	НаборПредоставленныхПоказаний.ТарифнаяЗона,
	|	НаборПредоставленныхПоказаний.Шкала
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НаборПредоставленныхПоказаний.Организация КАК Организация,
	|	НаборПредоставленныхПоказаний.ПериодНачисления КАК ПериодНачисления,
	|	НаборПредоставленныхПоказаний.Договор КАК Договор,
	|	НаборПредоставленныхПоказаний.ОбъектРасчета КАК ОбъектРасчета,
	|	НаборПредоставленныхПоказаний.Район КАК Район,
	|	НаборПредоставленныхПоказаний.ПриборУчета КАК ПриборУчета,
	|	НаборПредоставленныхПоказаний.ТарифнаяЗона КАК ТарифнаяЗона,
	|	МАКСИМУМ(НаборПредоставленныхПоказаний.ДатаРегистратора) КАК ДатаРегистратора,
	|	НаборПредоставленныхПоказаний.НомерПозиции КАК НомерПозиции,
	|	НаборПредоставленныхПоказаний.Шкала КАК Шкала
	|ПОМЕСТИТЬ МаксДатаРегистратора
	|ИЗ
	|	НаборПредоставленныхПоказаний КАК НаборПредоставленныхПоказаний
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаксНомерПозиции КАК МаксНомерПозиции
	|		ПО НаборПредоставленныхПоказаний.Организация = МаксНомерПозиции.Организация
	|			И НаборПредоставленныхПоказаний.Район = МаксНомерПозиции.Район
	|			И НаборПредоставленныхПоказаний.Договор = МаксНомерПозиции.Договор
	|			И НаборПредоставленныхПоказаний.ОбъектРасчета = МаксНомерПозиции.ОбъектРасчета
	|			И НаборПредоставленныхПоказаний.ПериодНачисления = МаксНомерПозиции.ПериодНачисления
	|			И НаборПредоставленныхПоказаний.ПриборУчета = МаксНомерПозиции.ПриборУчета
	|			И НаборПредоставленныхПоказаний.ТарифнаяЗона = МаксНомерПозиции.ТарифнаяЗона
	|			И НаборПредоставленныхПоказаний.НомерПозиции = МаксНомерПозиции.НомерПозиции
	|			И НаборПредоставленныхПоказаний.Шкала = МаксНомерПозиции.Шкала
	|
	|СГРУППИРОВАТЬ ПО
	|	НаборПредоставленныхПоказаний.Организация,
	|	НаборПредоставленныхПоказаний.ПериодНачисления,
	|	НаборПредоставленныхПоказаний.Договор,
	|	НаборПредоставленныхПоказаний.ОбъектРасчета,
	|	НаборПредоставленныхПоказаний.Район,
	|	НаборПредоставленныхПоказаний.ПриборУчета,
	|	НаборПредоставленныхПоказаний.ТарифнаяЗона,
	|	НаборПредоставленныхПоказаний.НомерПозиции,
	|	НаборПредоставленныхПоказаний.Шкала
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НаборПредоставленныхПоказаний.Организация КАК Организация,
	|	НаборПредоставленныхПоказаний.ПериодНачисления КАК ПериодНачисления,
	|	НаборПредоставленныхПоказаний.Договор КАК Договор,
	|	НаборПредоставленныхПоказаний.ОбъектРасчета КАК ОбъектРасчета,
	|	НаборПредоставленныхПоказаний.Район КАК Район,
	|	НаборПредоставленныхПоказаний.ПриборУчета КАК ПриборУчета,
	|	НаборПредоставленныхПоказаний.ТарифнаяЗона КАК ТарифнаяЗона,
	|	НаборПредоставленныхПоказаний.ДатаРегистратора КАК ДатаРегистратора,
	|	МАКСИМУМ(НаборПредоставленныхПоказаний.ДокРегистратор) КАК ДокРегистратор,
	|	НаборПредоставленныхПоказаний.НомерПозиции КАК НомерПозиции,
	|	НаборПредоставленныхПоказаний.Шкала КАК Шкала
	|ПОМЕСТИТЬ МаксРегистратор
	|ИЗ
	|	НаборПредоставленныхПоказаний КАК НаборПредоставленныхПоказаний
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаксДатаРегистратора КАК МаксДатаРегистратора
	|		ПО НаборПредоставленныхПоказаний.Организация = МаксДатаРегистратора.Организация
	|			И НаборПредоставленныхПоказаний.ПериодНачисления = МаксДатаРегистратора.ПериодНачисления
	|			И НаборПредоставленныхПоказаний.Район = МаксДатаРегистратора.Район
	|			И НаборПредоставленныхПоказаний.Договор = МаксДатаРегистратора.Договор
	|			И НаборПредоставленныхПоказаний.ОбъектРасчета = МаксДатаРегистратора.ОбъектРасчета
	|			И НаборПредоставленныхПоказаний.ПриборУчета = МаксДатаРегистратора.ПриборУчета
	|			И НаборПредоставленныхПоказаний.ТарифнаяЗона = МаксДатаРегистратора.ТарифнаяЗона
	|			И НаборПредоставленныхПоказаний.ДатаРегистратора = МаксДатаРегистратора.ДатаРегистратора
	|			И НаборПредоставленныхПоказаний.НомерПозиции = МаксДатаРегистратора.НомерПозиции
	|			И НаборПредоставленныхПоказаний.Шкала = МаксДатаРегистратора.Шкала
	|
	|СГРУППИРОВАТЬ ПО
	|	НаборПредоставленныхПоказаний.Организация,
	|	НаборПредоставленныхПоказаний.ПериодНачисления,
	|	НаборПредоставленныхПоказаний.Договор,
	|	НаборПредоставленныхПоказаний.ОбъектРасчета,
	|	НаборПредоставленныхПоказаний.Район,
	|	НаборПредоставленныхПоказаний.ПриборУчета,
	|	НаборПредоставленныхПоказаний.ТарифнаяЗона,
	|	НаборПредоставленныхПоказаний.ДатаРегистратора,
	|	НаборПредоставленныхПоказаний.НомерПозиции,
	|	НаборПредоставленныхПоказаний.Шкала
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НаборПредоставленныхПоказаний.Организация КАК Организация,
	|	НаборПредоставленныхПоказаний.ПериодНачисления КАК ПериодНачисления,
	|	НаборПредоставленныхПоказаний.Договор КАК Договор,
	|	НаборПредоставленныхПоказаний.ОбъектРасчета КАК ОбъектРасчета,
	|	НаборПредоставленныхПоказаний.ПриборУчета КАК ПриборУчета,
	|	НаборПредоставленныхПоказаний.ТарифнаяЗона КАК ТарифнаяЗона,
	|	МАКСИМУМ(НаборПредоставленныхПоказаний.Разделитель) КАК Разделитель,
	|	НаборПредоставленныхПоказаний.ДатаРегистратора КАК ДатаРегистратора,
	|	НаборПредоставленныхПоказаний.ДокРегистратор КАК ДокРегистратор,
	|	НаборПредоставленныхПоказаний.Район КАК Район,
	|	НаборПредоставленныхПоказаний.НомерПозиции КАК НомерПозиции,
	|	НаборПредоставленныхПоказаний.Шкала КАК Шкала
	|ПОМЕСТИТЬ МаксРазделитель
	|ИЗ
	|	НаборПредоставленныхПоказаний КАК НаборПредоставленныхПоказаний
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаксРегистратор КАК МаксРегистратор
	|		ПО НаборПредоставленныхПоказаний.Организация = МаксРегистратор.Организация
	|			И НаборПредоставленныхПоказаний.ПериодНачисления = МаксРегистратор.ПериодНачисления
	|			И НаборПредоставленныхПоказаний.Район = МаксРегистратор.Район
	|			И НаборПредоставленныхПоказаний.Договор = МаксРегистратор.Договор
	|			И НаборПредоставленныхПоказаний.ОбъектРасчета = МаксРегистратор.ОбъектРасчета
	|			И НаборПредоставленныхПоказаний.ПриборУчета = МаксРегистратор.ПриборУчета
	|			И НаборПредоставленныхПоказаний.ТарифнаяЗона = МаксРегистратор.ТарифнаяЗона
	|			И НаборПредоставленныхПоказаний.ДатаРегистратора = МаксРегистратор.ДатаРегистратора
	|			И НаборПредоставленныхПоказаний.ДокРегистратор = МаксРегистратор.ДокРегистратор
	|			И НаборПредоставленныхПоказаний.НомерПозиции = МаксРегистратор.НомерПозиции
	|			И НаборПредоставленныхПоказаний.Шкала = МаксРегистратор.Шкала
	|
	|СГРУППИРОВАТЬ ПО
	|	НаборПредоставленныхПоказаний.Организация,
	|	НаборПредоставленныхПоказаний.ПериодНачисления,
	|	НаборПредоставленныхПоказаний.Договор,
	|	НаборПредоставленныхПоказаний.ОбъектРасчета,
	|	НаборПредоставленныхПоказаний.ПриборУчета,
	|	НаборПредоставленныхПоказаний.ТарифнаяЗона,
	|	НаборПредоставленныхПоказаний.ДатаРегистратора,
	|	НаборПредоставленныхПоказаний.ДокРегистратор,
	|	НаборПредоставленныхПоказаний.Район,
	|	НаборПредоставленныхПоказаний.НомерПозиции,
	|	НаборПредоставленныхПоказаний.Шкала
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НаборПредоставленныхПоказаний.Организация КАК Организация,
	|	НаборПредоставленныхПоказаний.ПериодНачисления КАК ПериодНачисления,
	|	НаборПредоставленныхПоказаний.Договор КАК Договор,
	|	НаборПредоставленныхПоказаний.ОбъектРасчета КАК ОбъектРасчета,
	|	НаборПредоставленныхПоказаний.ПриборУчета КАК ПриборУчета,
	|	НаборПредоставленныхПоказаний.ТарифнаяЗона КАК ТарифнаяЗона,
	|	НаборПредоставленныхПоказаний.Разделитель КАК Разделитель,
	|	НаборПредоставленныхПоказаний.ДатаРегистратора КАК ДатаРегистратора,
	|	НаборПредоставленныхПоказаний.ДокРегистратор КАК ДокРегистратор,
	|	НаборПредоставленныхПоказаний.НомерПозиции КАК НомерПозиции,
	|	НаборПредоставленныхПоказаний.Район КАК Район,
	|	НаборПредоставленныхПоказаний.Показания КАК Показания,
	|	НаборПредоставленныхПоказаний.ОбъектРасчета.МКД КАК МКД,
	|	НаборПредоставленныхПоказаний.Шкала КАК Шкала
	|ПОМЕСТИТЬ бестМаксимальныеПоказанияСрез
	|ИЗ
	|	НаборПредоставленныхПоказаний КАК НаборПредоставленныхПоказаний
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаксРазделитель КАК МаксРазделитель
	|		ПО НаборПредоставленныхПоказаний.Организация = МаксРазделитель.Организация
	|			И НаборПредоставленныхПоказаний.ПериодНачисления = МаксРазделитель.ПериодНачисления
	|			И НаборПредоставленныхПоказаний.Договор = МаксРазделитель.Договор
	|			И НаборПредоставленныхПоказаний.ОбъектРасчета = МаксРазделитель.ОбъектРасчета
	|			И НаборПредоставленныхПоказаний.ПриборУчета = МаксРазделитель.ПриборУчета
	|			И НаборПредоставленныхПоказаний.ТарифнаяЗона = МаксРазделитель.ТарифнаяЗона
	|			И НаборПредоставленныхПоказаний.ДатаРегистратора = МаксРазделитель.ДатаРегистратора
	|			И НаборПредоставленныхПоказаний.ДокРегистратор = МаксРазделитель.ДокРегистратор
	|			И НаборПредоставленныхПоказаний.Разделитель = МаксРазделитель.Разделитель
	|			И НаборПредоставленныхПоказаний.НомерПозиции = МаксРазделитель.НомерПозиции
	|			И НаборПредоставленныхПоказаний.ПриборУчета = МаксРазделитель.ПриборУчета
	|			И НаборПредоставленныхПоказаний.Шкала = МаксРазделитель.Шкала";
	
	Возврат Текст;
КонецФункции  

#КонецОбласти

#Область СреднийОбъемПотребленияНП

Функция РезультатаЗапросаСреднегоПотребленияНП(Организация, ПериодНачисления,Район,ОтборПоДому,Договор)
	
	ГраницыПериода  								= энргРаботаСПериодомДействия.ГраницыРасчетногоПериода(Организация, ПериодНачисления);
	НачалоПериодаРасчета							= ГраницыПериода.НачалоОП;
	
	Запрос  		= Новый Запрос;
	Запрос.УстановитьПараметр("Район",				Район);
	Запрос.УстановитьПараметр("Период",				НачалоПериодаРасчета);
	Запрос.УстановитьПараметр("Организация",		Организация);
	Запрос.УстановитьПараметр("ПериодНачисления",	ПериодНачисления);
	Запрос.УстановитьПараметр("ПериодВвода",		ДобавитьМесяц(ПериодНачисления,-2));
	Запрос.УстановитьПараметр("НачалоПериода",		ДобавитьМесяц(НачалоМесяца(ПериодНачисления),-6));
	Запрос.УстановитьПараметр("КонецПериода",		НачалоМесяца(ПериодНачисления)-1);
	Текст 			= ТекстЗапросаСреднийОбъемНП();
	
	Если Договор<>Неопределено тогда
		Запрос.УстановитьПараметр("Договор",Договор);
	иначе
		Текст 		= СтрЗаменить(Текст,"И (бестСтабильныеПериодыНП.Договор = &Договор)","");
		Текст 		= СтрЗаменить(Текст,"И (бестРасчетСреднегоОбъемаНП.Договор = &Договор)","");		
	КонецЕсли; 	
	
	Запрос.Текст 	= Текст;
	Результат  		= Запрос.Выполнить();
	Возврат результат;
КонецФункции

Функция ТекстЗапросаСреднийОбъемНП()
	
	текст  = "ВЫБРАТЬ
	         |	энргНастройкиРасчетаСреднегоПотребленияСрезПоследних.Организация КАК Организация,
	         |	энргНастройкиРасчетаСреднегоПотребленияСрезПоследних.Услуга КАК Услуга,
	         |	энргНастройкиРасчетаСреднегоПотребленияСрезПоследних.КоличествоПоказаний КАК КоличествоПоказаний,
	         |	энргНастройкиРасчетаСреднегоПотребленияСрезПоследних.КоличествоПериодов КАК КоличествоПериодов,
	         |	энргНастройкиРасчетаСреднегоПотребленияСрезПоследних.ЗаПрошлыйГод КАК ЗаПрошлыйГод,
	         |	энргНастройкиРасчетаСреднегоПотребленияСрезПоследних.ПоВсемНачислениям КАК ПоВсемНачислениям
	         |ПОМЕСТИТЬ НастройкиРасчетаСреднегоПотребления
	         |ИЗ
	         |	РегистрСведений.энргНастройкиРасчетаСреднегоПотребления.СрезПоследних(&ПериодНачисления, Организация = &Организация) КАК энргНастройкиРасчетаСреднегоПотребленияСрезПоследних
	         |;
	         |
	         |////////////////////////////////////////////////////////////////////////////////
	         |ВЫБРАТЬ
	         |	бестРасчетСреднегоОбъемаНП.Район КАК Район,
	         |	бестРасчетСреднегоОбъемаНП.МКД КАК МКД,
	         |	бестРасчетСреднегоОбъемаНП.ТочкаУчета КАК ТочкаУчета,
	         |	СтабильныеПериоды.Услуга КАК Услуга,
	         |	бестРасчетСреднегоОбъемаНП.Шкала КАК Шкала,
	         |	бестРасчетСреднегоОбъемаНП.ТарифнаяЗона КАК ТарифнаяЗона,
	         |	МАКСИМУМ(бестРасчетСреднегоОбъемаНП.ПериодНачисления) КАК КонецПериода,
	         |	МАКСИМУМ(СтабильныеПериоды.КоличествоПериодов) КАК КоличествоПериодов,
	         |	МАКСИМУМ(СтабильныеПериоды.ЗаПрошлыйГод) КАК ЗаПрошлыйГод,
	         |	МАКСИМУМ(СтабильныеПериоды.ПоВсемНачислениям) КАК ПоВсемНачислениям,
	         |	бестРасчетСреднегоОбъемаНП.Договор КАК Договор,
	         |	бестРасчетСреднегоОбъемаНП.ОбъектРасчета КАК ОбъектРасчета
	         |ПОМЕСТИТЬ ТочкиДляРасчета
	         |ИЗ
	         |	(ВЫБРАТЬ
	         |		бестСтабильныеПериодыНП.Район КАК Район,
	         |		бестСтабильныеПериодыНП.МКД КАК МКД,
	         |		бестСтабильныеПериодыНП.ТочкаУчета КАК ТочкаУчета,
	         |		бестСтабильныеПериодыНП.Услуга КАК Услуга,
	         |		НастройкиРасчетаСреднегоПотребления.КоличествоПериодов КАК КоличествоПериодов,
	         |		НастройкиРасчетаСреднегоПотребления.ЗаПрошлыйГод КАК ЗаПрошлыйГод,
	         |		НастройкиРасчетаСреднегоПотребления.ПоВсемНачислениям КАК ПоВсемНачислениям,
	         |		бестСтабильныеПериодыНП.ОбъектРасчета КАК ОбъектРасчета,
	         |		бестСтабильныеПериодыНП.Договор КАК Договор
	         |	ИЗ
	         |		РегистрСведений.бестСтабильныеПериодыНП КАК бестСтабильныеПериодыНП
	         |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ НастройкиРасчетаСреднегоПотребления КАК НастройкиРасчетаСреднегоПотребления
	         |			ПО бестСтабильныеПериодыНП.Услуга = НастройкиРасчетаСреднегоПотребления.Услуга
	         |				И (бестСтабильныеПериодыНП.Организация = &Организация)
	         |				И (бестСтабильныеПериодыНП.ПериодНачисления = &ПериодНачисления)
	         |				И (бестСтабильныеПериодыНП.Район = &Район)
	         |				И (бестСтабильныеПериодыНП.Договор = &Договор)
			 |				И (бестСтабильныеПериодыНП.НомерПозиции = 0)
	         |				И (бестСтабильныеПериодыНП.ДоговорЗаключен)
	         |				И (бестСтабильныеПериодыНП.УслугаПодключена)) КАК СтабильныеПериоды
	         |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бестРасчетСреднегоОбъемаНП КАК бестРасчетСреднегоОбъемаНП
	         |		ПО СтабильныеПериоды.Район = бестРасчетСреднегоОбъемаНП.Район
	         |			И СтабильныеПериоды.МКД = бестРасчетСреднегоОбъемаНП.МКД
	         |			И СтабильныеПериоды.ТочкаУчета = бестРасчетСреднегоОбъемаНП.ТочкаУчета
	         |			И (бестРасчетСреднегоОбъемаНП.ПериодНачисления < &ПериодНачисления)
	         |			И СтабильныеПериоды.Договор = бестРасчетСреднегоОбъемаНП.Договор
	         |			И СтабильныеПериоды.ОбъектРасчета = бестРасчетСреднегоОбъемаНП.ОбъектРасчета
	         |
	         |СГРУППИРОВАТЬ ПО
	         |	бестРасчетСреднегоОбъемаНП.Район,
	         |	бестРасчетСреднегоОбъемаНП.МКД,
	         |	бестРасчетСреднегоОбъемаНП.ТочкаУчета,
	         |	СтабильныеПериоды.Услуга,
	         |	бестРасчетСреднегоОбъемаНП.Шкала,
	         |	бестРасчетСреднегоОбъемаНП.ТарифнаяЗона,
	         |	бестРасчетСреднегоОбъемаНП.Договор,
	         |	бестРасчетСреднегоОбъемаНП.ОбъектРасчета
	         |
	         |ИМЕЮЩИЕ
	         |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НАЧАЛОПЕРИОДА(бестРасчетСреднегоОбъемаНП.ПериодНачисления, МЕСЯЦ)) >= МАКСИМУМ(СтабильныеПериоды.КоличествоПериодов)
	         |;
	         |
	         |////////////////////////////////////////////////////////////////////////////////
	         |ВЫБРАТЬ
	         |	ВложенныйЗапрос.Район КАК Район,
	         |	ВложенныйЗапрос.МКД КАК МКД,
	         |	ВложенныйЗапрос.Услуга КАК Услуга,
	         |	ВложенныйЗапрос.ТочкаУчета КАК ТочкаУчета,
	         |	ВложенныйЗапрос.Шкала КАК Шкала,
	         |	ВложенныйЗапрос.ТарифнаяЗона КАК ТарифнаяЗона,
	         |	ВложенныйЗапрос.КонецПериода КАК КонецПериода,
	         |	МИНИМУМ(ВложенныйЗапрос.НачалоПериода) КАК НачалоПериода,
	         |	ВложенныйЗапрос.Договор КАК Договор,
	         |	ВложенныйЗапрос.ОбъектРасчета КАК ОбъектРасчета
	         |ПОМЕСТИТЬ ПериодыРасчетаСреднего
	         |ИЗ
	         |	(ВЫБРАТЬ
	         |		ТочкиДляРасчета.Район КАК Район,
	         |		ТочкиДляРасчета.МКД КАК МКД,
	         |		ТочкиДляРасчета.Договор КАК Договор,
	         |		ТочкиДляРасчета.ОбъектРасчета КАК ОбъектРасчета,
	         |		ТочкиДляРасчета.Услуга КАК Услуга,
	         |		ТочкиДляРасчета.ТочкаУчета КАК ТочкаУчета,
	         |		ТочкиДляРасчета.Шкала КАК Шкала,
	         |		ТочкиДляРасчета.ТарифнаяЗона КАК ТарифнаяЗона,
	         |		ТочкиДляРасчета.КонецПериода КАК КонецПериода,
	         |		МАКСИМУМ(бестРасчетСреднегоОбъемаНП.ПериодНачисления) КАК НачалоПериода
	         |	ИЗ
	         |		ТочкиДляРасчета КАК ТочкиДляРасчета
	         |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бестРасчетСреднегоОбъемаНП КАК бестРасчетСреднегоОбъемаНП
	         |			ПО ТочкиДляРасчета.Район = бестРасчетСреднегоОбъемаНП.Район
	         |				И ТочкиДляРасчета.Договор = бестРасчетСреднегоОбъемаНП.Договор
	         |				И ТочкиДляРасчета.ОбъектРасчета = бестРасчетСреднегоОбъемаНП.ОбъектРасчета
	         |				И ТочкиДляРасчета.ТочкаУчета = бестРасчетСреднегоОбъемаНП.ТочкаУчета
	         |				И ТочкиДляРасчета.Шкала = бестРасчетСреднегоОбъемаНП.Шкала
	         |				И ТочкиДляРасчета.ТарифнаяЗона = бестРасчетСреднегоОбъемаНП.ТарифнаяЗона
	         |				И (бестРасчетСреднегоОбъемаНП.ПериодНачисления <= ДОБАВИТЬКДАТЕ(ТочкиДляРасчета.КонецПериода, МЕСЯЦ, -6 + 1))
	         |				И (бестРасчетСреднегоОбъемаНП.Организация = &Организация)
	         |				И (бестРасчетСреднегоОбъемаНП.Район = &Район)
	         |				И (бестРасчетСреднегоОбъемаНП.Договор = &Договор)
	         |				И (НЕ ТочкиДляРасчета.ЗаПрошлыйГод)
	         |	
	         |	СГРУППИРОВАТЬ ПО
	         |		ТочкиДляРасчета.Район,
	         |		ТочкиДляРасчета.МКД,
	         |		ТочкиДляРасчета.Договор,
	         |		ТочкиДляРасчета.ОбъектРасчета,
	         |		ТочкиДляРасчета.Услуга,
	         |		ТочкиДляРасчета.ТочкаУчета,
	         |		ТочкиДляРасчета.Шкала,
	         |		ТочкиДляРасчета.ТарифнаяЗона,
	         |		ТочкиДляРасчета.КонецПериода
	         |	
	         |	ОБЪЕДИНИТЬ ВСЕ
	         |	
	         |	ВЫБРАТЬ
	         |		ТочкиДляРасчета.Район,
	         |		ТочкиДляРасчета.МКД,
	         |		ТочкиДляРасчета.Договор,
	         |		ТочкиДляРасчета.ОбъектРасчета,
	         |		ТочкиДляРасчета.Услуга,
	         |		ТочкиДляРасчета.ТочкаУчета,
	         |		ТочкиДляРасчета.Шкала,
	         |		ТочкиДляРасчета.ТарифнаяЗона,
	         |		ТочкиДляРасчета.КонецПериода,
	         |		МИНИМУМ(бестРасчетСреднегоОбъемаНП.ПериодНачисления)
	         |	ИЗ
	         |		ТочкиДляРасчета КАК ТочкиДляРасчета
	         |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бестРасчетСреднегоОбъемаНП КАК бестРасчетСреднегоОбъемаНП
	         |			ПО ТочкиДляРасчета.Район = бестРасчетСреднегоОбъемаНП.Район
	         |				И ТочкиДляРасчета.Договор = бестРасчетСреднегоОбъемаНП.Договор
	         |				И ТочкиДляРасчета.ОбъектРасчета = бестРасчетСреднегоОбъемаНП.ОбъектРасчета
	         |				И ТочкиДляРасчета.ТочкаУчета = бестРасчетСреднегоОбъемаНП.ТочкаУчета
	         |				И ТочкиДляРасчета.Шкала = бестРасчетСреднегоОбъемаНП.Шкала
	         |				И ТочкиДляРасчета.ТарифнаяЗона = бестРасчетСреднегоОбъемаНП.ТарифнаяЗона
	         |				И (бестРасчетСреднегоОбъемаНП.ПериодНачисления <= ДОБАВИТЬКДАТЕ(ТочкиДляРасчета.КонецПериода, МЕСЯЦ, -3 + 1))
	         |				И (бестРасчетСреднегоОбъемаНП.ПериодНачисления >= ДОБАВИТЬКДАТЕ(ТочкиДляРасчета.КонецПериода, МЕСЯЦ, -5 + 1))
	         |				И (бестРасчетСреднегоОбъемаНП.Организация = &Организация)
	         |				И (бестРасчетСреднегоОбъемаНП.Район = &Район)
	         |				И (бестРасчетСреднегоОбъемаНП.Договор = &Договор)
	         |				И (НЕ ТочкиДляРасчета.ЗаПрошлыйГод)
	         |	
	         |	СГРУППИРОВАТЬ ПО
	         |		ТочкиДляРасчета.Район,
	         |		ТочкиДляРасчета.МКД,
	         |		ТочкиДляРасчета.Договор,
	         |		ТочкиДляРасчета.ОбъектРасчета,
	         |		ТочкиДляРасчета.Услуга,
	         |		ТочкиДляРасчета.ТочкаУчета,
	         |		ТочкиДляРасчета.Шкала,
	         |		ТочкиДляРасчета.ТарифнаяЗона,
	         |		ТочкиДляРасчета.КонецПериода
	         |	
	         |	ОБЪЕДИНИТЬ ВСЕ
	         |	
	         |	ВЫБРАТЬ
	         |		ТочкиДляРасчета.Район,
	         |		ТочкиДляРасчета.МКД,
	         |		ТочкиДляРасчета.Договор,
	         |		ТочкиДляРасчета.ОбъектРасчета,
	         |		ТочкиДляРасчета.Услуга,
	         |		ТочкиДляРасчета.ТочкаУчета,
	         |		ТочкиДляРасчета.Шкала,
	         |		ТочкиДляРасчета.ТарифнаяЗона,
	         |		ТочкиДляРасчета.КонецПериода,
	         |		МИНИМУМ(бестРасчетСреднегоОбъемаНП.ПериодНачисления)
	         |	ИЗ
	         |		ТочкиДляРасчета КАК ТочкиДляРасчета
	         |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бестРасчетСреднегоОбъемаНП КАК бестРасчетСреднегоОбъемаНП
	         |			ПО ТочкиДляРасчета.Район = бестРасчетСреднегоОбъемаНП.Район
	         |				И ТочкиДляРасчета.Договор = бестРасчетСреднегоОбъемаНП.Договор
	         |				И ТочкиДляРасчета.ОбъектРасчета = бестРасчетСреднегоОбъемаНП.ОбъектРасчета
	         |				И ТочкиДляРасчета.ТочкаУчета = бестРасчетСреднегоОбъемаНП.ТочкаУчета
	         |				И ТочкиДляРасчета.Шкала = бестРасчетСреднегоОбъемаНП.Шкала
	         |				И ТочкиДляРасчета.ТарифнаяЗона = бестРасчетСреднегоОбъемаНП.ТарифнаяЗона
	         |				И (бестРасчетСреднегоОбъемаНП.ПериодНачисления < НАЧАЛОПЕРИОДА(&ПериодНачисления, ГОД))
	         |				И (бестРасчетСреднегоОбъемаНП.ПериодНачисления >= ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&ПериодНачисления, ГОД), ГОД, -1))
	         |				И (бестРасчетСреднегоОбъемаНП.Организация = &Организация)
	         |				И (бестРасчетСреднегоОбъемаНП.Район = &Район)
	         |				И (бестРасчетСреднегоОбъемаНП.Договор = &Договор)
	         |				И (ТочкиДляРасчета.ЗаПрошлыйГод)
	         |	
	         |	СГРУППИРОВАТЬ ПО
	         |		ТочкиДляРасчета.Район,
	         |		ТочкиДляРасчета.МКД,
	         |		ТочкиДляРасчета.Договор,
	         |		ТочкиДляРасчета.ОбъектРасчета,
	         |		ТочкиДляРасчета.Услуга,
	         |		ТочкиДляРасчета.ТочкаУчета,
	         |		ТочкиДляРасчета.Шкала,
	         |		ТочкиДляРасчета.ТарифнаяЗона,
	         |		ТочкиДляРасчета.КонецПериода) КАК ВложенныйЗапрос
	         |
	         |СГРУППИРОВАТЬ ПО
	         |	ВложенныйЗапрос.Район,
	         |	ВложенныйЗапрос.МКД,
	         |	ВложенныйЗапрос.Услуга,
	         |	ВложенныйЗапрос.ТочкаУчета,
	         |	ВложенныйЗапрос.Шкала,
	         |	ВложенныйЗапрос.ТарифнаяЗона,
	         |	ВложенныйЗапрос.КонецПериода,
	         |	ВложенныйЗапрос.Договор,
	         |	ВложенныйЗапрос.ОбъектРасчета
	         |;
	         |
	         |////////////////////////////////////////////////////////////////////////////////
	         |ВЫБРАТЬ
	         |	&Организация КАК Организация,
	         |	&ПериодНачисления КАК ПериодНачисления,
	         |	ВложенныйЗапрос.Район КАК Район,
	         |	ВложенныйЗапрос.МКД КАК МКД,
	         |	ВложенныйЗапрос.Услуга КАК Услуга,
	         |	ВложенныйЗапрос.ТочкаУчета КАК ТочкаУчета,
	         |	ВложенныйЗапрос.Шкала КАК Шкала,
	         |	ВложенныйЗапрос.ТарифнаяЗона КАК ТарифнаяЗона,
	         |	ВложенныйЗапрос.КонецПериода КАК КонецПериода,
	         |	ВложенныйЗапрос.НачалоПериода КАК НачалоПериода,
	         |	ВложенныйЗапрос.ОбъемУслуги КАК ОбъемУслуги,
	         |	ВЫРАЗИТЬ(ВЫБОР
	         |			КОГДА ВложенныйЗапрос.КолВоМесяцев = 0
	         |				ТОГДА 0
	         |			ИНАЧЕ ВложенныйЗапрос.ОбъемУслуги / ВложенныйЗапрос.КолВоМесяцев
	         |		КОНЕЦ КАК ЧИСЛО(15, 6)) КАК Объем,
	         |	ВложенныйЗапрос.Договор КАК Договор,
	         |	ВложенныйЗапрос.ОбъектРасчета КАК ОбъектРасчета
	         |ИЗ
	         |	(ВЫБРАТЬ
	         |		ПериодыРасчетаСреднего.Район КАК Район,
	         |		ПериодыРасчетаСреднего.МКД КАК МКД,
	         |		ПериодыРасчетаСреднего.Услуга КАК Услуга,
	         |		ПериодыРасчетаСреднего.ТочкаУчета КАК ТочкаУчета,
	         |		ПериодыРасчетаСреднего.Шкала КАК Шкала,
	         |		ПериодыРасчетаСреднего.ТарифнаяЗона КАК ТарифнаяЗона,
	         |		ПериодыРасчетаСреднего.КонецПериода КАК КонецПериода,
	         |		ПериодыРасчетаСреднего.НачалоПериода КАК НачалоПериода,
	         |		СУММА(бестРасчетСреднегоОбъемаНП.ОбъемУслуги) КАК ОбъемУслуги,
	         |		РАЗНОСТЬДАТ(ПериодыРасчетаСреднего.НачалоПериода, ПериодыРасчетаСреднего.КонецПериода, МЕСЯЦ) + 1 КАК КолВоМесяцев,
	         |		ПериодыРасчетаСреднего.Договор КАК Договор,
	         |		ПериодыРасчетаСреднего.ОбъектРасчета КАК ОбъектРасчета
	         |	ИЗ
	         |		ПериодыРасчетаСреднего КАК ПериодыРасчетаСреднего
	         |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бестРасчетСреднегоОбъемаНП КАК бестРасчетСреднегоОбъемаНП
	         |			ПО ПериодыРасчетаСреднего.Район = бестРасчетСреднегоОбъемаНП.Район
	         |				И ПериодыРасчетаСреднего.Договор = бестРасчетСреднегоОбъемаНП.Договор
	         |				И ПериодыРасчетаСреднего.ТочкаУчета = бестРасчетСреднегоОбъемаНП.ТочкаУчета
	         |				И ПериодыРасчетаСреднего.Шкала = бестРасчетСреднегоОбъемаНП.Шкала
	         |				И ПериодыРасчетаСреднего.ТарифнаяЗона = бестРасчетСреднегоОбъемаНП.ТарифнаяЗона
	         |				И (бестРасчетСреднегоОбъемаНП.ПериодНачисления МЕЖДУ ПериодыРасчетаСреднего.НачалоПериода И ПериодыРасчетаСреднего.КонецПериода)
	         |				И (бестРасчетСреднегоОбъемаНП.Организация = &Организация)
	         |				И (бестРасчетСреднегоОбъемаНП.Район = &Район)
	         |				И (бестРасчетСреднегоОбъемаНП.Договор = &Договор)
	         |				И ПериодыРасчетаСреднего.ОбъектРасчета = бестРасчетСреднегоОбъемаНП.ОбъектРасчета
	         |	
	         |	СГРУППИРОВАТЬ ПО
	         |		ПериодыРасчетаСреднего.Район,
	         |		ПериодыРасчетаСреднего.МКД,
	         |		ПериодыРасчетаСреднего.Услуга,
	         |		ПериодыРасчетаСреднего.ТочкаУчета,
	         |		ПериодыРасчетаСреднего.Шкала,
	         |		ПериодыРасчетаСреднего.ТарифнаяЗона,
	         |		ПериодыРасчетаСреднего.КонецПериода,
	         |		ПериодыРасчетаСреднего.НачалоПериода,
	         |		ПериодыРасчетаСреднего.Договор,
	         |		ПериодыРасчетаСреднего.ОбъектРасчета) КАК ВложенныйЗапрос"; 

		Возврат Текст;
КонецФункции

#КонецОбласти

#Область ВспомогательныеПроцедурыИФункции

Процедура УстановитьБлокировкуНабораЗаписейПоследовательностиПоРегистратору(ЗначенияБлокировки,ИмяПоследовательности, Отказ = Ложь, Заголовок = "") Экспорт
	
	ПараметрыБлокировки = Новый Структура();
	ПараметрыБлокировки.Вставить("ТипТаблицы", "РегистрСведений." + ИмяПоследовательности);
	ПараметрыБлокировки.Вставить("ИмяТаблицы", "");
	
	энргОбщегоНазначения.УстановитьУправляемуюБлокировку(ПараметрыБлокировки, ЗначенияБлокировки, , Отказ, Заголовок);
КонецПроцедуры

Функция ПараметрыЗаписиЖурнала(ИмяОперации,ПериодНачисления,Район)
	ПараметрыЗаписиЖурнала  = Новый Структура();
	
	СоотвествиеОпераций  	= Новый Структура;	
	СоотвествиеОпераций.Вставить("ОтложенныеДвиженияДокументовНачисленияМКД",			"Работа с последовательностями (биллинг). Чтение данных на начало периода расчета");
	СоотвествиеОпераций.Вставить("ВосстановитьПоследовательностьСтабильныеПериодыМКД",	"Работа с последовательностями (биллинг). События мкд");
	СоотвествиеОпераций.Вставить("ВосстановитьПоследовательностьПоказанияПУМКД",		"Работа с последовательностями (биллинг). Показания мкд");
	СоотвествиеОпераций.Вставить("ОтложенныеДвиженияДокументовНачисления",				"Работа с последовательностями (биллинг). Чтение данных на начало периода расчета (мкд)");
	СоотвествиеОпераций.Вставить("ВосстановитьПоследовательностьСтабильныеПериоды",		"Работа с последовательностями (биллинг). События абонентов");
	СоотвествиеОпераций.Вставить("ВосстановитьПоследовательностьПоказанияПУ",			"Работа с последовательностями (биллинг). Показания абонентов");
	СоотвествиеОпераций.Вставить("ВосстановитьПоследовательностиВзаиморасчетов",		"Работа с последовательностями (биллинг). Взаиморасчеты с абонентами");
	СоотвествиеОпераций.Вставить("ПерерасчетСреднихНачислений",							"Работа с начислениями (биллинг). Перерасчет средних начислений");
	
	ПараметрыЗаписиЖурнала.Вставить("ИмяОперации",СоотвествиеОпераций[ИмяОперации]);
	ПараметрыЗаписиЖурнала.Вставить("Уровень",УровеньЖурналаРегистрации.Информация);
	ПараметрыЗаписиЖурнала.Вставить("Метаданные",РегистрыСведений.энргСтабильныеПериодыМКД);
	ПараметрыЗаписиЖурнала.Вставить("КомментарийСтарт","Запуск по району " 		+ Район + " за период" + Формат(ПериодНачисления,"ДФ='ММММ гггг'"));
	ПараметрыЗаписиЖурнала.Вставить("КомментарийСтоп","Завершение по району " 	+ Район + " за период" + Формат(ПериодНачисления,"ДФ='ММММ гггг'"));
	Возврат ПараметрыЗаписиЖурнала;
КонецФункции

#КонецОбласти




