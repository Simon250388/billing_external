#Область ЭкспортныеПроцедуры

Функция ОпределитьПериодНачисления(Организация, ДатаДокумента) Экспорт
	Дата						= ?(Не ЗначениеЗаполнено(ДатаДокумента),ТекущаяДата(),ДатаДокумента);
	ДатаКонстанта 				= РегистрыСведений.энргДатыОтчетногоПериодыОбщиеНастройки.Получить(Новый Структура("Организация")).Завершение;
	ЧислоЗавершенияПоРегистру 	= РегистрыСведений.энргДатыОтчетногоПериоды.Получить(Новый Структура("ПериодНачисления",НачалоМесяца(ДатаДокумента))).Завершение;
	Если ЗначениеЗаполнено(ЧислоЗавершенияПоРегистру) Тогда
		ЧислоЗавОП				= Дата(Год(Дата),Месяц(Дата),ЧислоЗавершенияПоРегистру);
	ИначеЕсли ЗначениеЗаполнено(ДатаКонстанта) Тогда
		ЧислоЗавОП				= Дата(Год(Дата),Месяц(Дата),ДатаКонстанта);
	Иначе
		ЧислоЗавОП				= Дата(Год(Дата),Месяц(Дата),27);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнена константа 'День завершения расчетного периода'");
	КонецЕсли;
	Если День(Дата) <= День(ЧислоЗавОП) Тогда
		ВозвратнаяДата	= НачалоМесяца(Дата);
	Иначе
		ВозвратнаяДата	= НачалоМесяца(ДобавитьМесяц(Дата,1));
	КонецЕсли;
	
	Возврат ВозвратнаяДата;
КонецФункции

Функция ГраницыРасчетногоПериода(Организация, ПериодНачисления,УчитыватьНачалоВеденияУчета = ложь) Экспорт 
	Текст  			= энргНачисления.ТекстГраницОтчетногоПериода(ПериодНачисления,ПериодНачисления,УчитыватьНачалоВеденияУчета);
	Запрос  		= Новый запрос;
	Запрос.Текст 	= СтрЗаменить(Текст,"ПОМЕСТИТЬ ГраницыОтчетногоПериода","");
	Результат  		= Запрос.Выполнить();
	Выборка  		= Результат.Выбрать();
	Выборка.Следующий();
	Возврат Выборка;	
КонецФункции

Процедура ПровестиПоСтабильнымПериодам(ссылка,Параметры) Экспорт 
	
	Если ТипЗнч(ссылка) =Тип("ДокументСсылка.энргОперацияСПриборомУчета") и ссылка.ВидОперации = Перечисления.энргВидыОпераций.энргОперацияСПриборомУчета_ВводПУ тогда
		СтабПериодыАктВводаПрибораУчета(Ссылка,Параметры);
		
	ИначеЕсли ТипЗнч(ссылка) =Тип("ДокументСсылка.энргОперацияСПриборомУчета") и ссылка.ВидОперации = Перечисления.энргВидыОпераций.энргОперацияСПриборомУчета_ВыводПУ тогда
		СтабПериодыАктВыводаПрибораУчета(Ссылка,Параметры);
		
	ИначеЕсли ТипЗнч(ссылка) =Тип("ДокументСсылка.энргОперацияСПриборомУчета") и ссылка.ВидОперации = Перечисления.энргВидыОпераций.энргОперацияСПриборомУчета_ЗаменаПУ тогда
		СтабПериодыЗаменаПрибораУчета(Ссылка,Параметры);		 
		
	иначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.энргОперацияСУслугами") и ссылка.ВидОперации = Перечисления.энргВидыОпераций.энргОперацияСУслугами_ПодключениеУслуги  тогда
		СтабПериодыПодключениеУслуги(Ссылка,Параметры);
		
	иначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.энргОперацияСУслугами") и ссылка.ВидОперации = Перечисления.энргВидыОпераций.энргОперацияСУслугами_ОтключениеУслуги  тогда	
		СтабПериодыОтключениеУслуги(Ссылка,Параметры);
		
	иначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.энргОперацияСЛицевымСчетом") и ссылка.ВидОперации = Перечисления.энргВидыОпераций.энргОперацияСЛС_ОткрытиеЛС тогда
		
		
		СтабПериодыОткрытиеЛС(Ссылка,Параметры);
		//Параметры.ПараметрыЗапроса.Помещение =	Параметры.ПараметрыЗапроса.Помещение.Родитель;
		//СтабПериодыОткрытиеЛСКоммунальнаяКвартира(Ссылка,Параметры);
		
	иначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.энргОперацияСЛицевымСчетом") и ссылка.ВидОперации = Перечисления.энргВидыОпераций.энргОперацияСЛС_ЗакрытиеЛС тогда	
		
		СтабПериодыЗакрытиеЛС(Ссылка,Параметры);		
		
	иначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.энргУстановитьКоличествоПрописанных") тогда
		Параметры.РазрешенПустойНабор = истина;
		
		//Если Параметры.РазделенныйЛС Тогда
		//	СтабПериодыУстановитьКоличествоПрописанныхРазделенныеЛС(Ссылка,Параметры);
		//Иначе
			СтабПериодыУстановитьКоличествоПрописанных(Ссылка,Параметры);
		//КонецЕсли;
		
	иначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.энргУстановитьКоличествоКомнат") тогда
		Параметры.РазрешенПустойНабор = истина;
		СтабПериодыУстановитьКоличествоКомнат(Ссылка,Параметры);
		
	иначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.энргУстановитьЗначениеПлощади") тогда
		Параметры.РазрешенПустойНабор = истина;
		СтабПериодыУстановитьЗначениеПлощади(Ссылка,Параметры); 
		
	иначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.энргУстановитьВидБлагоустройстваАбонента") тогда
		Параметры.РазрешенПустойНабор = истина;
		СтабПериодыУстановитьВидБлагоустройства(Ссылка,Параметры); 
		
	иначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.энргУстановитьТехническийСтатусТочкиУчета") тогда
		Параметры.РазрешенПустойНабор = истина;
		СтабПериодыУстановитьТехническийСтатусТочкиУчета(Ссылка,Параметры); 		
		
	иначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.энргУстановитьГруппуПотребителейАбонента") тогда
		Параметры.РазрешенПустойНабор = истина;
		СтабПериодыУстановитьГруппуПотребителей(Ссылка,Параметры);		
		
	ИначеЕсли ТипЗнч(ссылка)  =Тип("ДокументСсылка.энргУстановитьФормулуРасчетаТочекУчета") тогда
		СтабПериодыУстановитьФормулуРасчетаТочекУчета(Ссылка,Параметры);
		
	ИначеЕсли ТипЗнч(ссылка)  =Тип("ДокументСсылка.энргУстановитьДатуПоверкиПУ") тогда
		СтабПериодыУстановитьДатуПоверкиПУ(Ссылка,Параметры);
		
	иначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.энргСменаПоставщика") тогда
		СтабПериодыСменаПоставщика(Ссылка,Параметры);
		
	ИначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.энргУстановитьВидДифференцированностиПриборУчета") тогда
		СтабПериодыВидДифференцированностиПриборУчета(Ссылка,Параметры);	
		
	ИначеЕсли ТипЗнч(ссылка)  =Тип("ДокументСсылка.энргУстановитьКоличествоПроживающих") тогда
		
		//СтабПериодыУстановитьКоличествоПроживающих(ссылка,Параметры);
		
		//Если Параметры.Свойство("ПомещениеСРазделеннымиЛС") И Параметры.ПомещениеСРазделеннымиЛС Тогда
		//	СтабПериодыУстановитьКоличествоПроживающихРазделенныеЛС(Ссылка,Параметры);
		//Иначе
			СтабПериодыУстановитьКоличествоПроживающих(Ссылка,Параметры);
		//КонецЕсли;
	
	ИначеЕсли ТипЗнч(ссылка)  =Тип("ДокументСсылка.энргУстановитьКоличествоСобственников") тогда
		
		//Если Параметры.Свойство("ПомещениеСРазделеннымиЛС") И Параметры.ПомещениеСРазделеннымиЛС Тогда
		//	СтабПериодыУстановитьКоличествоСобственниковРазделенныеЛС(Ссылка,Параметры);
		//Иначе
			СтабПериодыУстановитьКоличествоСобственников(Ссылка,Параметры);
		//КонецЕсли;

		//СтабПериодыУстановитьКоличествоСобственников(ссылка,Параметры);
		
	ИначеЕсли ТипЗнч(ссылка)  =Тип("ДокументСсылка.энргУстановитьСпособРаспределенияОбъемаМКДНаАбонентов") тогда	
		СтабПериодыУстановитььСпособРаспределенияОбъемаМКД(ссылка,Параметры);
		
	ИначеЕсли ТипЗнч(ссылка)  =Тип("ДокументСсылка.энргСоглашениеОПотребленииВПомещении") тогда	
		СтабПериодыУстановитьСпособРаспределенияОбъемаПомещения(ссылка,Параметры);
		
	ИначеЕсли ТипЗнч(ссылка) = Тип("ДокументСсылка.энргУстановитьТехническуюВозможностьУстановкиПУ") Тогда 
		СтабПериодыИзменитьТехническуюВозможностьУстановкиПУ(Ссылка, Параметры);
		
	ИначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.энргПерерасчет") и ссылка.ВидОперации = Перечисления.энргВидыОпераций.энргПерерасчет_БлокировочныйАкт  тогда	
		СтабПериодыБлокировочныйАкт(Ссылка,Параметры);
		
	ИначеЕсли ТипЗнч(ссылка) = Тип("ДокументСсылка.энргИзменитьДиаметрСеченияТочекУчета") Тогда 
		СтабПериодыИзменениеДиаметраСечения(Ссылка, Параметры);
		
	ИначеЕсли ТипЗнч(ссылка) = Тип("ДокументСсылка.энргУстановитьСхемуПодчиненностиТочекУчета") Тогда 
		СтабПериодыИзменениеСхемыПодчиненностиТочекУчета(Ссылка, Параметры);
		
	ИначеЕсли ТипЗнч(ссылка)  =Тип("ДокументСсылка.энргОперацияСРазделеннымиЛС") тогда	
		Параметры.РазрешенПустойНабор = истина;
		
	ИначеЕсли ТипЗнч(ссылка)  =Тип("ДокументСсылка.энргПереводПомещенияВПомещениеСРазделеннымиЛС") тогда
		
		Параметры.РазрешенПустойНабор = истина;
		//
		//Если Параметры.Свойство("ПомещениеСРазделеннымиЛС") И Параметры.ПомещениеСРазделеннымиЛС Тогда
		//	//СтабПериодыДобавитьСтрокуОтключенияУслугПоСтаромуПомещению(Ссылка,Параметры);
		//	СтабПериодыПереводПомещенияВПомещениеСРазделеннымиЛС(Ссылка,Параметры);
		//Иначе
		//	СтабПериодыДобавитьСтрокуПоНовомуПомещению(Ссылка,Параметры);
		//КонецЕсли; 	
		
	иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не определен тип документа в менеджере стабильных периодов!!!");		
	КонецЕсли; 	 
	
КонецПроцедуры

Процедура ПровестиПоСтабильнымПериодамМКД(ссылка,Параметры) Экспорт 
	
	Если ТипЗнч(ссылка) =Тип("ДокументСсылка.энргОперацияСПриборомУчетаМКД") и ссылка.ВидОперации = Перечисления.энргВидыОпераций.энргОперацияСПриборомУчетаМКД_ВводПУ тогда
		СтабПериодыАктВводаПрибораУчетаМКД(Ссылка,Параметры);
		
	ИначеЕсли ТипЗнч(ссылка) =Тип("ДокументСсылка.энргОперацияСПриборомУчетаМКД") и ссылка.ВидОперации = Перечисления.энргВидыОпераций.энргОперацияСПриборомУчетаМКД_ВыводПУ тогда
		СтабПериодыАктВыводаПрибораУчетаМКД(Ссылка,Параметры);
		
	ИначеЕсли ТипЗнч(ссылка) =Тип("ДокументСсылка.энргОперацияСПриборомУчетаМКД") и ссылка.ВидОперации = Перечисления.энргВидыОпераций.энргОперацияСПриборомУчетаМКД_ЗаменаПУ тогда
		СтабПериодыЗаменаПрибораУчетаМКД(Ссылка,Параметры);		 
		
	иначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.энргОперацияСУслугамиМКД") и ссылка.ВидОперации = Перечисления.энргВидыОпераций.энргОперацияСУслугамиМКД_ПодключениеУслуги  тогда
		СтабПериодыПодключениеУслугиМКД(Ссылка,Параметры);
		
	иначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.энргОперацияСУслугамиМКД") и ссылка.ВидОперации = Перечисления.энргВидыОпераций.энргОперацияСУслугамиМКД_ОтключениеУслуги  тогда	
		СтабПериодыОтключениеУслугиМКД(Ссылка,Параметры);
		
	иначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.энргОткрытиеМКД") и ссылка.ВидОперации = Перечисления.энргВидыОпераций.энргОткрытиеМКД_Открытие тогда
		СтабПериодыОткрытиеМКД(Ссылка,Параметры);
		
	иначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.энргОткрытиеМКД") и ссылка.ВидОперации = Перечисления.энргВидыОпераций.энргОткрытиеМКД_Закрытие тогда	
		СтабПериодыЗакрытиеМКД(Ссылка,Параметры);
	
	иначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.энргУстановитьЗначениеПлощадиМКД") тогда
		Параметры.РазрешенПустойНабор = истина;
		СтабПериодыУстановитьЗначениеПлощадиМКД(Ссылка,Параметры); 
	иначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.энргУстановитьВидБлагоустройстваМКД") тогда
		Параметры.РазрешенПустойНабор = истина;
		СтабПериодыУстановитьВидБлагоустройстваМКД(Ссылка,Параметры); 
	//ИначеЕсли ТипЗнч(ссылка)  =Тип("ДокументСсылка.энргУстановитьДатуПоверкиПУ") тогда
	//	СтабПериодыУстановитьДатуПоверкиПУ(Ссылка,Параметры);
	иначеЕсли  ТипЗнч(ссылка)  =Тип("ДокументСсылка.энргСменаПоставщикаМКД") тогда
		СтабПериодыСменаПоставщикаМКД(Ссылка,Параметры); 		
	иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не определен тип документа в менеджере стабильных периодов многоквартирного дома!!!");
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЗаполнитьДанныеДляПерерасчета(Объект) Экспорт 
	
	Если не ЗначениеЗаполнено(Объект.ДатаФактическогоСобытия) тогда
		Возврат;
	КонецЕсли;
	
	ДокументыПоОснованию 			= КритерииОтбора.СвязанныеДокументы.Найти(Объект.ссылка);
	
	ПерерасчетыПоОснованию 			= Новый Массив;
	
	Для Каждого документ из  ДокументыПоОснованию цикл
		Если ТипЗнч(документ) = Тип("ДокументСсылка.энргПерерасчет") тогда
			ПерерасчетыПоОснованию.Добавить(документ);
		КонецЕсли;		
	КонецЦикла;
		
	ДанныеПерерасчет 				= Новый Структура;
	ДанныеЗаполнения  				= Новый Структура("Абонент,Район,МКД,ЛицевойСчет,АдресОбъекта,ВидОперации,Дата");
	энргПользовательскийВводСервер.УстановитьЗависимыеРеквизитыАбонента(Объект.Абонент,ДанныеЗаполнения);
	ДанныеЗаполнения.Абонент 		= Объект.Абонент;
	ДанныеЗаполнения.Дата 			= Объект.Дата + 1;
	ДанныеЗаполнения.ВидОперации 	= Перечисления.энргВидыОпераций.энргПерерасчет_ИзменениеПараметраРассчета;
	ДанныеЗаполнения.Вставить("ДокументОснование",Объект.ссылка);
	
	НачалоПериода 					= НачалоМесяца(Объект.ссылка.ДатаФактическогоСобытия); 	

	Если ПерерасчетыПоОснованию.Количество() > 1 тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Найдено более одного документа перерасчет");
	ИначеЕсли ПерерасчетыПоОснованию.Количество() = 0 тогда
		ДокументПерерасчета  = ПерерасчетВПериоде(Объект.ПериодНачисления,Объект.Абонент);
		Если ЗначениеЗаполнено(ДокументПерерасчета) тогда
			ДанныеПерерасчет.Вставить("Ключ",ДокументПерерасчета);
		КонецЕсли; 		
		ДанныеПерерасчет.Вставить("ДанныеЗаполнения",ДанныеЗаполнения);		
	иначе
		ДанныеПерерасчет.Вставить("Ключ",ПерерасчетыПоОснованию[0]);
		ДанныеПерерасчет.Вставить("ДанныеЗаполнения",ДанныеЗаполнения);
	КонецЕсли; 
	
	Объект.ДополнительныеСвойства.вставить("ДанныеДляПерерасчета",ДанныеПерерасчет);
	
КонецПроцедуры

Процедура ЗаполнитьДанныеУстановкиФормулы(Объект) Экспорт
	ДанныеДляФормулы 				= Новый Структура;
	ДанныеЗаполнения  				= Новый Структура("Абонент,Район,МКД,ЛицевойСчет,АдресОбъекта,Дата,ДатаФактическогоСобытия");
	энргПользовательскийВводСервер.УстановитьЗависимыеРеквизитыАбонента(Объект.Абонент,ДанныеЗаполнения);
	ДанныеЗаполнения.Абонент 		= Объект.Абонент;
	ДанныеЗаполнения.Дата 			= Объект.Дата + 1;
	ДанныеЗаполнения.ДатаФактическогоСобытия 			= Объект.ДатаФактическогоСобытия;
	ДанныеЗаполнения.Вставить("ДокументОснование",Объект.ссылка);

	ДанныеДляФормулы.Вставить("ДанныеЗаполнения",ДанныеЗаполнения);	
	
	Объект.ДополнительныеСвойства.вставить("ДанныеДляФормулы",ДанныеДляФормулы);	
КонецПроцедуры

Функция ПоследовательностьНарушена(ПериодНачисления,Район) Экспорт  
	Запрос  		= Новый Запрос;
	Запрос.УстановитьПараметр("ПериодНачисления",	ПериодНачисления);
	Запрос.УстановитьПараметр("Район",				Район);
	Запрос.Текст 	="ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаПоследовательности.ПериодНачисления,
	|	""Последовательность документов"" КАК ВидОперации
	|ИЗ
	|	РегистрСведений.энргСтабильныеПериодыПоследовательность КАК ТаблицаПоследовательности
	|ГДЕ
	|	ТаблицаПоследовательности.ПериодНачисления = &ПериодНачисления
	|	И ТаблицаПоследовательности.Район = &Район
	|	И НЕ ТаблицаПоследовательности.СостояниеПроведения = ЗНАЧЕНИЕ(Перечисление.энргСостояниеДокументаВПоследовательности.ПроведенВПоследовательности)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаПоследовательности.ПериодНачисления,
	|	""Последовательность показаний приборов учета"" КАК ВидОперации
	|ИЗ
	|	РегистрСведений.энргПоказанияПУПоследовательность КАК ТаблицаПоследовательности
	|ГДЕ
	|	ТаблицаПоследовательности.ПериодНачисления = &ПериодНачисления
	|	И ТаблицаПоследовательности.Район = &Район
	|	И НЕ ТаблицаПоследовательности.СостояниеПроведения = ЗНАЧЕНИЕ(Перечисление.энргСостояниеДокументаВПоследовательности.ПроведенВПоследовательности)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаПоследовательности.ПериодНачисления,
	|	""Последовательность взаиморасчетов"" КАК ВидОперации
	|ИЗ
	|	РегистрСведений.энргВзаиморасчетыПоследовательность КАК ТаблицаПоследовательности
	|ГДЕ
	|	ТаблицаПоследовательности.ПериодНачисления = &ПериодНачисления
	|	И ТаблицаПоследовательности.Район = &Район
	|	И НЕ ТаблицаПоследовательности.СостояниеПроведения = ЗНАЧЕНИЕ(Перечисление.энргСостояниеДокументаВПоследовательности.ПроведенВПоследовательности)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаПоследовательности.ПериодНачисления,
	|	""Последовательность документов многоквартирных домов"" КАК ВидОперации
	|ИЗ
	|	РегистрСведений.энргСтабильныеПериодыМКДПоследовательность КАК ТаблицаПоследовательности
	|ГДЕ
	|	ТаблицаПоследовательности.ПериодНачисления = &ПериодНачисления
	|	И ТаблицаПоследовательности.Район = &Район
	|	И НЕ ТаблицаПоследовательности.СостояниеПроведения = ЗНАЧЕНИЕ(Перечисление.энргСостояниеДокументаВПоследовательности.ПроведенВПоследовательности)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаПоследовательности.ПериодНачисления,
	|	""Последовательность показаний приборов учета многоквартирных домов"" КАК ВидОперации
	|ИЗ
	|	РегистрСведений.энргПоказанияПУПоследовательностьМКД КАК ТаблицаПоследовательности
	|ГДЕ
	|	ТаблицаПоследовательности.ПериодНачисления = &ПериодНачисления
	|	И ТаблицаПоследовательности.Район = &Район
	|	И НЕ ТаблицаПоследовательности.СостояниеПроведения = ЗНАЧЕНИЕ(Перечисление.энргСостояниеДокументаВПоследовательности.ПроведенВПоследовательности)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаПоследовательности.ПериодНачисления,
	|	""Выполнение отложенных движений документов"" КАК ВидОперации
	|ИЗ
	|	РегистрСведений.энргОтложенныеДвиженияДокументов КАК ТаблицаПоследовательности
	|ГДЕ
	|	ТаблицаПоследовательности.ПериодНачисления = &ПериодНачисления
	|	И ТаблицаПоследовательности.Район = &Район";
	Возврат Запрос.Выполнить();
	
КонецФункции 

Функция ВыполненыВсеНачисления(ПериодНачисления,Район) Экспорт
	
	Запрос  		= Новый Запрос;
	Запрос.УстановитьПараметр("ПериодНачисления",	ПериодНачисления);
	Запрос.УстановитьПараметр("Район",				Район);
	Запрос.Текст 	="ВЫБРАТЬ
	|	энргВыполненныеНачисления.ВидОперацииНачисления
	|ПОМЕСТИТЬ НачисленияПериода
	|ИЗ
	|	РегистрСведений.энргВыполненныеНачисления КАК энргВыполненныеНачисления
	|ГДЕ
	|	энргВыполненныеНачисления.ПериодНачисления = &ПериодНачисления
	|	И энргВыполненныеНачисления.Район = &Район
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	НачисленияПериода.ВидОперацииНачисления
	|ИЗ
	|	Перечисление.энргВидыОперацийНачисления КАК энргВидыОперацийНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ НачисленияПериода КАК НачисленияПериода
	|		ПО (НачисленияПериода.ВидОперацииНачисления = энргВидыОперацийНачисления.Ссылка)
	|ГДЕ
	|	НачисленияПериода.ВидОперацииНачисления ЕСТЬ NULL ";
	Результат  = Запрос.Выполнить();
	Возврат Результат.Пустой(); 	
	
КонецФункции

Функция ДанныеПоследовательности(ТипИсточника) Экспорт 
	
	ДанныеПоследовательности 							= Новый Структура("Регистрируется,Взаиморасчеты",Ложь,Ложь);
	 
	ИменаПоследовательностей 							= Новый Массив;
	ИменаПоследовательностей.Добавить("энргВзаиморасчетыПоследовательность");
	ИменаПоследовательностей.Добавить("энргПоказанияПУПоследовательность");
	ИменаПоследовательностей.Добавить("энргПоказанияПУПоследовательностьМКД");
	ИменаПоследовательностей.Добавить("энргСтабильныеПериодыПоследовательность");
	ИменаПоследовательностей.Добавить("энргСтабильныеПериодыМКДПоследовательность");
	ИменаПоследовательностей.Добавить("бестСтабильныеПериодыПоследовательностьНП");

	МетаданныеСобытия  									= Метаданные.ПодпискиНаСобытия; 	
		
	для Каждого ИмяПоследовательности из ИменаПоследовательностей цикл
		Событие 				 						= МетаданныеСобытия[ИмяПоследовательности + "ПриЗаписи"];
		ТипыДокументов  								= Событие.Источник.Типы();
		Если ТипыДокументов.Найти(ТипИсточника) <> Неопределено тогда
			ДанныеПоследовательности.Регистрируется 	= Истина;
			Если ИмяПоследовательности = "энргВзаиморасчетыПоследовательность" тогда
				ДанныеПоследовательности.Взаиморасчеты 	= Истина
			КонецЕсли;
		КонецЕсли;		
	КонецЦикла; 	
	Возврат ДанныеПоследовательности; 	
КонецФункции

Процедура ПараметрыРасчета(ПараметрыРасчета) Экспорт 
	
	Ресурсы  			= Метаданные.РегистрыСведений.энргСтабильныеПериоды.Ресурсы;
	для Каждого Ресурс из Ресурсы цикл
		ПараметрыРасчета.Добавить(Ресурс.имя,Ресурс.Синоним);
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ИндивидуальныеНачисления 

Процедура СтабПериодыОткрытиеЛС(ссылка,Параметры)
	
	Запрос  			= Новый запрос;
	Запрос.УстановитьПараметр("ПериодНачисления",параметры.ПериодНачисления);
	ПараметрыЗапроса  	= Параметры.ПараметрыЗапроса;
	для Каждого стр из ПараметрыЗапроса цикл
		Запрос.УстановитьПараметр(стр.ключ,стр.Значение);
	КонецЦикла; 
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	энргНомераСтрокСтабильногоПериода.Организация КАК Организация,
	|	энргНомераСтрокСтабильногоПериода.ПериодНачисления КАК ПериодНачисления,
	|	энргНомераСтрокСтабильногоПериода.Район КАК Район,
	|	энргНомераСтрокСтабильногоПериода.ЧастныйСектор КАК ЧастныйСектор,
	|	энргНомераСтрокСтабильногоПериода.Строение КАК Строение,
	|	энргНомераСтрокСтабильногоПериода.Помещение КАК Помещение,
	|	МАКСИМУМ(энргНомераСтрокСтабильногоПериода.НомерПозиции) КАК НомерПозиции
	|ИЗ
	|	РегистрСведений.энргНомераСтрокСтабильногоПериода КАК энргНомераСтрокСтабильногоПериода
	|ГДЕ
	|	энргНомераСтрокСтабильногоПериода.Организация = &Организация
	|	И энргНомераСтрокСтабильногоПериода.ПериодНачисления = &ПериодНачисления
	|	И энргНомераСтрокСтабильногоПериода.Район = &Район
	|	И энргНомераСтрокСтабильногоПериода.ЧастныйСектор = &ЧастныйСектор
	|	И энргНомераСтрокСтабильногоПериода.Строение = &Строение
	|	И энргНомераСтрокСтабильногоПериода.Помещение = &Помещение
	|
	|СГРУППИРОВАТЬ ПО
	|	энргНомераСтрокСтабильногоПериода.Организация,
	|	энргНомераСтрокСтабильногоПериода.ПериодНачисления,
	|	энргНомераСтрокСтабильногоПериода.Район,
	|	энргНомераСтрокСтабильногоПериода.ЧастныйСектор,
	|	энргНомераСтрокСтабильногоПериода.Строение,
	|	энргНомераСтрокСтабильногоПериода.Помещение";
	
	МаксимальныйНомер = -1;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		МаксимальныйНомер = Выборка.НомерПозиции;
	КонецЕсли;
	
	Если Параметры.ПараметрыЗапроса.Помещение = ссылка.КлючПомещения.Помещение Тогда
		//Запись без колва жильцов для неразделенных квартир и ком комнат
		СтабПериодыОткрытиеЛСНеразделенный(ссылка,Параметры,МаксимальныйНомер);
	ИначеЕсли НЕ ЗначениеЗаполнено(Параметры.ПараметрыЗапроса.Помещение.Родитель) и Параметры.Свойство("ПомещениеСРазделеннымиЛС") И Параметры.ПомещениеСРазделеннымиЛС Тогда
		//Запись колва жильцов ТОЛЬКО разделенных квартир 
		СтабПериодыОткрытиеЛСРазделенныйЛС(ссылка,Параметры,Ложь);
	Иначе
		//Запись ТОЛЬКО для ком комнат сделанная при изменении параллельной комнаты
		Если МаксимальныйНомер = -1 Тогда
			СтабПериодыОткрытиеЛСНеразделенный(ссылка,Параметры,МаксимальныйНомер, Истина);
		Иначе
			СтабПериодыОткрытиеЛСРазделенныйЛС(ссылка,Параметры, Истина);
		КонецЕсли;
	КонецЕсли;	
		
КонецПроцедуры

Процедура СтабПериодыОткрытиеЛСНеразделенный(ссылка,Параметры,МаксимальныйНомер, ПараллельнаяКомнатаПерваяСтрока = Ложь)	
	
	Если МаксимальныйНомер <> -1 или ПараллельнаяКомнатаПерваяСтрока Тогда
		СтрокаСтабПериоды										= Параметры.НаборСтабильныеПериоды.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСтабПериоды,Параметры.ПараметрыЗапроса);
		СтрокаСтабПериоды.ДокРегистратор = ссылка;
		СтрокаСтабПериоды.ПериодНачисления = ссылка.ПериодНачисления;
		СтрокаСтабПериоды.ДатаРегистратора = ссылка.дата;
		Если НЕ ПараллельнаяКомнатаПерваяСтрока Тогда 
			СтрокаСтабПериоды.НомерПозиции = МаксимальныйНомер + 1;
		КонецЕсли;
		
		СтрокаПоследнихНомеров  								= Параметры.НаборПоследнихНомеров.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаПоследнихНомеров,СтрокаСтабПериоды);
		СтрокаПоследнихНомеров.период 							= параметры.ПараметрыЗапроса.ПериодРегистрации;
	Иначе
		
		МВТ  														= Новый МенеджерВременныхТаблиц;
		ПараметрыЗапроса 											= Параметры.ПараметрыЗапроса;
		Запрос  													= Новый Запрос;
		Запрос.УстановитьПараметр("ссылка",			ссылка);
		Запрос.УстановитьПараметр("МоментВремени",	Параметры.МоментВремени);
		Запрос.УстановитьПараметр("Организация",	ПараметрыЗапроса.Организация);
		Запрос.УстановитьПараметр("Помещение",		ПараметрыЗапроса.Помещение);
		Запрос.УстановитьПараметр("Строение",		ПараметрыЗапроса.Строение);
		Запрос.УстановитьПараметр("ТипНачисления",	Перечисления.энргТипыНачислений.ИндивидуальныеНачисления);
		
		для Каждого стр из ПараметрыЗапроса цикл
			Запрос.УстановитьПараметр(стр.ключ,стр.значение); 
		КонецЦикла;
		
		Запрос.МенеджерВременныхТаблиц 								= МВТ;
		Запрос.Текст 												= ТекстЗапросаОткрытиеЛС(); 	
		Результат 													= Запрос.Выполнить();
		Выборка														= Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			СтрокаСтабПериоды										= Параметры.НаборСтабильныеПериоды.добавить();
			ЗаполнитьЗначенияСвойств(СтрокаСтабПериоды,Выборка);
			
			СтрокаПоследнихНомеров  								= Параметры.НаборПоследнихНомеров.добавить();
			ЗаполнитьЗначенияСвойств(СтрокаПоследнихНомеров,Выборка);
			СтрокаПоследнихНомеров.период 							= параметры.ПараметрыЗапроса.ПериодРегистрации;		
		КонецЦикла;
		
		Запрос.Текст 												= ТекстЗапросаШкалыПриборовУчета();
		Запрос.УстановитьПараметр("ПериодНачисления",	Параметры.ПериодНачисления);
		Запрос.УстановитьПараметр("ДатаДокумента", 	  	Параметры.ДатаДок);
		Запрос.УстановитьПараметр("ЧастныйСектор", 		ПараметрыЗапроса.ЧастныйСектор);
		Результат 													= Запрос.Выполнить();
		Выборка														= Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			СтрокаСтабПериоды										= Параметры.НаборСтабильныеПериодыШкалы.добавить();
			ЗаполнитьЗначенияСвойств(СтрокаСтабПериоды,Выборка);		
		КонецЦикла;	
		
		Запрос.Текст 												= ТекстЗапросаЗначениеИзмеретелейСКлючомНорматива();
		Результат 													= Запрос.Выполнить();
		Выборка														= Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			СтрокаСтабПериоды										= Параметры.НаборСтабильныеПериодыИзмерителиНаправлений.добавить();
			ЗаполнитьЗначенияСвойств(СтрокаСтабПериоды,Выборка);		
		КонецЦикла;	
	КонецЕсли;	
КонецПроцедуры

Процедура СтабПериодыЗакрытиеЛС(ссылка,Параметры)
	ПарметрыЗапроса  	= Параметры.ПараметрыЗапроса;		
	МВТ 				= Новый МенеджерВременныхТаблиц;
	Запрос  			= Новый Запрос;
	Запрос.УстановитьПараметр("ссылка",				ссылка);
	Запрос.УстановитьПараметр("ЧастныйСектор",		ПарметрыЗапроса.ЧастныйСектор);
	Запрос.УстановитьПараметр("Строение",			ПарметрыЗапроса.Строение);
	Запрос.УстановитьПараметр("Помещение",			ПарметрыЗапроса.Помещение);
	Запрос.МенеджерВременныхТаблиц = МВТ;	
	Запрос.Текст 	=
	"ВЫБРАТЬ
	|	энргОперацияСЛицевымСчетом.Ссылка КАК Ссылка,
	|	энргОперацияСЛицевымСчетом.Дата КАК Дата,
	|	энргОперацияСЛицевымСчетом.Организация КАК Организация,
	|	энргОперацияСЛицевымСчетом.ПериодНачисления КАК ПериодНачисления,
	|	энргОперацияСЛицевымСчетом.Район КАК Район,
	|	&ЧастныйСектор КАК ЧастныйСектор,
	|	&Строение КАК Строение,
	|	&Помещение КАК Помещение,
	|	ЛОЖЬ КАК ЛСОткрыт,
	|	ЛОЖЬ КАК УслугаПодключена,
	|	ИСТИНА КАК МенялосьСостояниеПУ,
	|	ИСТИНА КАК МенялосьСостояниеФормулы
	|ПОМЕСТИТЬ ЗакрытиеЛС
	|ИЗ
	|	Документ.энргОперацияСЛицевымСчетом КАК энргОперацияСЛицевымСчетом
	|ГДЕ
	|	энргОперацияСЛицевымСчетом.Ссылка = &Ссылка";
	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("Организация");
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Район");
	Измерения.Добавить("ЧастныйСектор");
	Измерения.Добавить("Строение");
	Измерения.Добавить("Помещение");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("ЛСОткрыт");
	Ресурсы.Добавить("УслугаПодключена");
	Ресурсы.Добавить("МенялосьСостояниеПУ");
	Ресурсы.Добавить("МенялосьСостояниеФормулы");
	
	Параметры.вставить("Измерения",				Измерения);
	Параметры.вставить("Ресурсы",				Ресурсы);
	Параметры.вставить("ИзменяетСостояниеПУ",	Истина);
	
	ЗаполнитьНомераПозиций(МВТ,Параметры,"ЗакрытиеЛС");
	
КонецПроцедуры

Процедура СтабПериодыПодключениеУслуги(ссылка,параметры)
	
	ПараметрыЗапроса  					= Параметры.ПараметрыЗапроса;		
		
	МВТ  								= Новый МенеджерВременныхТаблиц;
	
	Запрос  							= Новый Запрос;
	Запрос.МенеджерВременныхТаблиц 		= МВТ;
	Запрос.УстановитьПараметр("ссылка",					ссылка);
	Запрос.УстановитьПараметр("Организация",			ПараметрыЗапроса.Организация);
	Запрос.УстановитьПараметр("Район",					ПараметрыЗапроса.Район);
	Запрос.УстановитьПараметр("Строение",				ПараметрыЗапроса.Строение);
	Запрос.УстановитьПараметр("Помещение",				ПараметрыЗапроса.Помещение);
	Запрос.УстановитьПараметр("ЧастныйСектор",			ПараметрыЗапроса.ЧастныйСектор);
		
	Запрос.УстановитьПараметр("МоментВремени",			Параметры.МоментВремени);
	Запрос.УстановитьПараметр("ПериодРегистрации",		Параметры.ПараметрыЗапроса.ПериодРегистрации);
	Запрос.УстановитьПараметр("ТипНачисления",	Перечисления.энргТипыНачислений.ИндивидуальныеНачисления);

	ПолучаемыеСвойства  = Новый Структура("КоличествоКомнат, КоличествоПроживающих, КоличествоПрописанных, КоличествоСобственников");
	энргРаботаСЛицевымСчетомСервер.ПараметрыРасчетаПомещения(ПараметрыЗапроса.Организация,ПараметрыЗапроса.Район, Новый Структура("Строение, Помещение",ПараметрыЗапроса.Строение,ПараметрыЗапроса.Помещение),Параметры.МоментВремени,ПолучаемыеСвойства);
	Запрос.УстановитьПараметр("КоличествоПроживающих",	ПолучаемыеСвойства.КоличествоПроживающих);
	Запрос.УстановитьПараметр("КоличествоПрописанных",	ПолучаемыеСвойства.КоличествоПрописанных);
	Запрос.УстановитьПараметр("КоличествоСобственников",ПолучаемыеСвойства.КоличествоСобственников);
	Запрос.УстановитьПараметр("КоличествоКомнат",		ПолучаемыеСвойства.КоличествоКомнат);
	
	
	Если Параметры.Свойство("ПомещениеСРазделеннымиЛС") И Параметры.ПомещениеСРазделеннымиЛС Тогда
		Запрос.Текст 						=  ТекстЗапросаПодключениеУслугиПомещениеСРазделеннымиЛС();
	Иначе
		Запрос.Текст 						=  ТекстЗапросаПодключениеУслуги();
	КонецЕсли;
	
	Результат							= Запрос.Выполнить();
	Выборка								= Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаСтабПериоды				= Параметры.НаборСтабильныеПериоды.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСтабПериоды,Выборка);
		СтрокаПоследнихНомеров  		= Параметры.НаборПоследнихНомеров.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаПоследнихНомеров,Выборка);
		СтрокаПоследнихНомеров.период 	= параметры.ПараметрыЗапроса.ПериодРегистрации;		
	КонецЦикла;
	
	Запрос.Текст 						= ТекстЗапросаШкалыПриборовУчета();
	Запрос.УстановитьПараметр("ПериодНачисления", 	Параметры.ПериодНачисления);
	Запрос.УстановитьПараметр("ДатаДокумента", 		Параметры.ДатаДок);
	Запрос.УстановитьПараметр("ЧастныйСектор", 		ПараметрыЗапроса.ЧастныйСектор);
	Результат 							= Запрос.Выполнить();
	Выборка								= Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаСтабПериоды				= Параметры.НаборСтабильныеПериодыШкалы.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСтабПериоды,Выборка);		
	КонецЦикла;
	
	Запрос.Текст 												= ТекстЗапросаЗначениеИзмеретелейСКлючомНорматива();
	Результат 													= Запрос.Выполнить();
	Выборка														= Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаСтабПериоды										= Параметры.НаборСтабильныеПериодыИзмерителиНаправлений.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСтабПериоды,Выборка);		
	КонецЦикла;
	
КонецПроцедуры

Процедура СтабПериодыОтключениеУслуги(ссылка,параметры)
	
	ПараметрыЗапроса= Параметры.ПараметрыЗапроса;
	МВТ 			= Новый МенеджерВременныхТаблиц;
	Запрос  		= Новый Запрос;
	Запрос.УстановитьПараметр("ссылка",				ссылка);
	Запрос.УстановитьПараметр("ПериодНачисления",	Параметры.ПериодНачисления);
	Запрос.УстановитьПараметр("МоментВремени",		Параметры.МоментВремени);
	Запрос.УстановитьПараметр("ГраницаИсключая",	Новый Граница(Параметры.МоментВремени,ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("ПериодРегистрации",	Параметры.ПараметрыЗапроса.ПериодРегистрации);
	Запрос.УстановитьПараметр("Период",				Параметры.ДатаДок);
	
	для Каждого стр из ПараметрыЗапроса цикл
		Запрос.УстановитьПараметр(стр.ключ,стр.значение); 
	КонецЦикла;	   	
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.Текст 	=
	"ВЫБРАТЬ
	|	энргОперацияСУслугами.Ссылка КАК Ссылка,
	|	энргОперацияСУслугами.Дата КАК Дата,
	|	энргОперацияСУслугами.ПериодНачисления КАК ПериодНачисления,
	|	энргОперацияСУслугами.Район КАК Район,
	|	&ЧастныйСектор КАК ЧастныйСектор,
	|	&Строение КАК Строение,
	|	&Помещение КАК Помещение
	|ПОМЕСТИТЬ Шапка
	|ИЗ
	|	Документ.энргОперацияСУслугами КАК энргОперацияСУслугами ГДЕ  энргОперацияСУслугами.Ссылка =&Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Шапка.ПериодНачисления КАК ПериодНачисления,
	|	Шапка.Район КАК Район,
	|	Шапка.ЧастныйСектор КАК ЧастныйСектор,
	|	Шапка.Строение КАК Строение,
	|	Шапка.Помещение КАК Помещение,
	|	энргОперацияСУслугамиТочкиУчета.Услуга КАК Услуга,
	|	энргОперацияСУслугамиТочкиУчета.ТочкаУчета КАК ТочкаУчета,
	|	ЛОЖЬ КАК УслугаПодключена,
	|	ЛОЖЬ КАК ПриборВведен
	|ПОМЕСТИТЬ ДанныеУслуг
	|ИЗ
	|	Шапка КАК Шапка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргОперацияСУслугами.ТочкиУчета КАК энргОперацияСУслугамиТочкиУчета
	|		ПО Шапка.Ссылка = энргОперацияСУслугамиТочкиУчета.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеУслуг.ПериодНачисления КАК ПериодНачисления,
	|	ДанныеУслуг.Район КАК Район,
	|	ДанныеУслуг.ЧастныйСектор КАК ЧастныйСектор,
	|	ДанныеУслуг.Строение КАК Строение,
	|	ДанныеУслуг.Помещение КАК Помещение,
	|	ВЫБОР
	|		КОГДА энргВидыУслугСоставляющиеУслуг.Ссылка ЕСТЬ NULL
	|			ТОГДА ДанныеУслуг.Услуга
	|		ИНАЧЕ энргВидыУслугСоставляющиеУслуг.Услуга
	|	КОНЕЦ КАК Услуга,
	|	ДанныеУслуг.ТочкаУчета КАК ТочкаУчета,
	|	ДанныеУслуг.УслугаПодключена КАК УслугаПодключена,
	|	ДанныеУслуг.ПриборВведен КАК ПриборВведен,
	|	ЛОЖЬ КАК РасчетПоФормуле,
	|	ЗНАЧЕНИЕ(Справочник.энргТочкиУчета.ПустаяСсылка) КАК ЗависимаяТочкаУчета,
	|	0 КАК КоэффициентРасчета,
	|	ИСТИНА КАК МенялосьСостояниеПУ,
	|	ИСТИНА КАК МенялосьСостояниеФормулы
	|ПОМЕСТИТЬ ОтключениеУслуги
	|ИЗ
	|	ДанныеУслуг КАК ДанныеУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг.СоставляющиеУслуг КАК энргВидыУслугСоставляющиеУслуг
	|		ПО ДанныеУслуг.Услуга = энргВидыУслугСоставляющиеУслуг.Ссылка";
	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Район");
	Измерения.Добавить("ЧастныйСектор");
	Измерения.Добавить("Строение");
	Измерения.Добавить("Помещение");
	Измерения.Добавить("Услуга");
	Измерения.Добавить("ТочкаУчета");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("УслугаПодключена");
	Ресурсы.Добавить("ПриборВведен");
	Ресурсы.Добавить("РасчетПоФормуле");
	Ресурсы.Добавить("ЗависимаяТочкаУчета");
	Ресурсы.Добавить("КоэффициентРасчета");
	Ресурсы.Добавить("МенялосьСостояниеПУ");
	Ресурсы.Добавить("МенялосьСостояниеФормулы");
	
	Параметры.вставить("Измерения",				Измерения);
	Параметры.вставить("Ресурсы",				Ресурсы);
	Параметры.вставить("ИзменяетСостояниеПУ",	Истина);
	
	ЗаполнитьНомераПозиций(МВТ,Параметры,"ОтключениеУслуги"); 	
			
КонецПроцедуры

Процедура СтабПериодыАктВводаПрибораУчета(Ссылка,Параметры)  
			
	ПараметрыЗапроса  	= параметры.ПараметрыЗапроса;	
	МВТ 				= Новый МенеджерВременныхТаблиц;
	Запрос  			= Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",				Ссылка);
	Запрос.УстановитьПараметр("ПериодНачисления",	Параметры.ПериодНачисления);
	Запрос.УстановитьПараметр("МоментВремени",		Параметры.МоментВремени);
	Запрос.УстановитьПараметр("ГраницаИсключая",	Новый Граница(Параметры.МоментВремени,ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("МассивТочек",		Ссылка["ТочкиУчета"].выгрузитьКолонку("ТочкаУчета"));
	для Каждого стр из ПараметрыЗапроса цикл
		Запрос.УстановитьПараметр(стр.ключ,стр.значение); 
	КонецЦикла;		
	Запрос.МенеджерВременныхТаблиц = МВТ;	
	Запрос.Текст 	=
	"ВЫБРАТЬ
	|	энргОперацияСПриборомУчета.Организация КАК Организация,
	|	энргОперацияСПриборомУчета.ПериодНачисления КАК ПериодНачисления,
	|	энргОперацияСПриборомУчета.Район КАК Район,
	|	&ЧастныйСектор КАК ЧастныйСектор,
	|	&Строение КАК Строение,
	|	&Помещение КАК Помещение,
	|	энргОперацияСПриборомУчета.Ссылка КАК ДокРегистратор,
	|	энргОперацияСПриборомУчета.КлючПомещения КАК КлючПомещения
	|ПОМЕСТИТЬ Шапка
	|ИЗ
	|	Документ.энргОперацияСПриборомУчета КАК энргОперацияСПриборомУчета
	|ГДЕ
	|	энргОперацияСПриборомУчета.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ПериодНачисления КАК ПериодНачисления,
	|	ВложенныйЗапрос.Район КАК Район,
	|	ВложенныйЗапрос.ЧастныйСектор КАК ЧастныйСектор,
	|	ВложенныйЗапрос.Строение КАК Строение,
	|	ВложенныйЗапрос.Помещение КАК Помещение,
	|	ВложенныйЗапрос.ТочкаУчета КАК ТочкаУчета,
	|	ВЫБОР
	|		КОГДА энргВидыУслугСоставляющиеУслуг.Ссылка ЕСТЬ NULL
	|			ТОГДА ВложенныйЗапрос.Услуга
	|		ИНАЧЕ энргВидыУслугСоставляющиеУслуг.Услуга
	|	КОНЕЦ КАК Услуга,
	|	ВложенныйЗапрос.ПриборВведен КАК ПриборВведен,
	|	ВложенныйЗапрос.ПриборУчета КАК ПриборУчета,
	|	ВложенныйЗапрос.ДатаСостоянияПрибора КАК ДатаСостоянияПрибора,
	|	ВложенныйЗапрос.КоэффициентПУ КАК КоэффициентПУ,
	|	ВложенныйЗапрос.МенялосьСостояниеПУ КАК МенялосьСостояниеПУ,
	|	ВложенныйЗапрос.IDСтроки КАК IDСтроки
	|ПОМЕСТИТЬ ТочкиВводаПрибора
	|ИЗ
	|	(ВЫБРАТЬ
	|		Шапка.Организация КАК Организация,
	|		Шапка.ПериодНачисления КАК ПериодНачисления,
	|		Шапка.Район КАК Район,
	|		Шапка.ЧастныйСектор КАК ЧастныйСектор,
	|		Шапка.Строение КАК Строение,
	|		Шапка.Помещение КАК Помещение,
	|		ТочкиУчета.ТочкаУчета КАК ТочкаУчета,
	|		ТочкиУчета.Услуга КАК Услуга,
	|		ИСТИНА КАК ПриборВведен,
	|		ТочкиУчета.ПриборУчета КАК ПриборУчета,
	|		&ПериодРегистрации КАК ДатаСостоянияПрибора,
	|		ТочкиУчета.КоэффициентПУ КАК КоэффициентПУ,
	|		ИСТИНА КАК МенялосьСостояниеПУ,
	|		ТочкиУчета.IDСтроки КАК IDСтроки
	|	ИЗ
	|		Шапка КАК Шапка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргОперацияСПриборомУчета.ТочкиУчета КАК ТочкиУчета
	|			ПО Шапка.ДокРегистратор = ТочкиУчета.Ссылка
	|				И (ТочкиУчета.Ссылка = &Ссылка)) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг.СоставляющиеУслуг КАК энргВидыУслугСоставляющиеУслуг
	|		ПО ВложенныйЗапрос.Услуга = энргВидыУслугСоставляющиеУслуг.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТочкиВводаПрибора.Организация КАК Организация,
	|	ТочкиВводаПрибора.ПериодНачисления КАК ПериодНачисления,
	|	ТочкиВводаПрибора.Район КАК Район,
	|	ТочкиВводаПрибора.ЧастныйСектор КАК ЧастныйСектор,
	|	ТочкиВводаПрибора.Строение КАК Строение,
	|	ТочкиВводаПрибора.Помещение КАК Помещение,
	|	ТочкиВводаПрибора.ТочкаУчета КАК ТочкаУчета,
	|	энргОперацияСПриборомУчетаШкалыПриборовУчета.Шкала КАК Шкала,
	|	энргОперацияСПриборомУчетаШкалыПриборовУчета.ВидДифференцированности КАК ВидДифференцированности
	|ПОМЕСТИТЬ ШкалыПриборовУчета
	|ИЗ
	|	ТочкиВводаПрибора КАК ТочкиВводаПрибора
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргОперацияСПриборомУчета.ШкалыПриборовУчета КАК энргОперацияСПриборомУчетаШкалыПриборовУчета
	|		ПО ТочкиВводаПрибора.IDСтроки = энргОперацияСПриборомУчетаШкалыПриборовУчета.IDСтрокиТочкиУчета
	|			И (энргОперацияСПриборомУчетаШкалыПриборовУчета.Ссылка = &Ссылка)";
		
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("Организация");
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Район");
	Измерения.Добавить("ЧастныйСектор");
	Измерения.Добавить("Строение");
	Измерения.Добавить("Помещение");
	Измерения.Добавить("Услуга");
	Измерения.Добавить("ТочкаУчета");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("ПриборВведен");
	Ресурсы.Добавить("ПриборУчета");
	Ресурсы.Добавить("КоэффициентПУ");
	Ресурсы.Добавить("ДатаСостоянияПрибора");
	Ресурсы.Добавить("МенялосьСостояниеПУ");
	
	Параметры.вставить("ШкалыОтдельно",			Истина);
	Параметры.вставить("Измерения",				Измерения);
	Параметры.вставить("Ресурсы",				Ресурсы);
	Параметры.вставить("ИзменяетСостояниеПУ",	Истина);
	
	ЗаполнитьНомераПозиций(МВТ,Параметры,"ТочкиВводаПрибора"); 
		
	// Добавляем записи по шкалам
	Запрос.УстановитьПараметр("ДатаРегистратора", Параметры.ДатаДок);
	Запрос.Текст 		=
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НомераПозиций.Организация КАК Организация,
	|	НомераПозиций.ПериодНачисления КАК ПериодНачисления,
	|	НомераПозиций.Район КАК Район,
	|	НомераПозиций.ЧастныйСектор КАК ЧастныйСектор,
	|	НомераПозиций.Строение КАК Строение,
	|	НомераПозиций.Помещение КАК Помещение,
	|	НомераПозиций.ТочкаУчета КАК ТочкаУчета,
	|	НомераПозиций.НомерПозиции + 1 КАК НомерПозиции,
	|	ЕСТЬNULL(ШкалыПриборовУчета.Шкала, ЗНАЧЕНИЕ(Справочник.энргШкалыПриборовУчета.ПустаяСсылка)) КАК Шкала,
	|	&ДатаРегистратора КАК ДатаРегистратора,
	|	&Ссылка КАК ДокРегистратор,
	|	ЕСТЬNULL(ШкалыПриборовУчета.ВидДифференцированности, ЗНАЧЕНИЕ(Справочник.энргВидыДифференцированности.ПустаяСсылка)) КАК ВидДифференцированности	
	|ИЗ
	|	НомераПозицийТочкиВводаПрибора КАК НомераПозиций
	|		ЛЕВОЕ СОЕДИНЕНИЕ ШкалыПриборовУчета КАК ШкалыПриборовУчета
	|		ПО НомераПозиций.ТочкаУчета = ШкалыПриборовУчета.ТочкаУчета";
	
	// Добавляем записи по шкалам
	Результат  						= Запрос.Выполнить();
	ВыборкаШкалы 					= Результат.Выбрать();
	Пока ВыборкаШкалы.Следующий() цикл		
		СтрокаСтабПериодыШкалы		= Параметры.НаборСтабильныеПериодыШкалы.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСтабПериодыШкалы,ВыборкаШкалы);				
	КонецЦикла;
	
КонецПроцедуры

Процедура СтабПериодыАктВыводаПрибораУчета(Ссылка,Параметры)  
	ПарметрыЗапроса  				= параметры.ПараметрыЗапроса;	
	МВТ 							= Новый МенеджерВременныхТаблиц;
	Запрос  						= Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",			Ссылка);
	Запрос.УстановитьПараметр("Район",			ПарметрыЗапроса.Район);
	Запрос.УстановитьПараметр("МоментВремени",	Параметры.МоментВремени);
	Запрос.УстановитьПараметр("ЧастныйСектор",	ПарметрыЗапроса.ЧастныйСектор);
	Запрос.УстановитьПараметр("Строение",		ПарметрыЗапроса.Строение);
	Запрос.УстановитьПараметр("Помещение",		ПарметрыЗапроса.Помещение);
	Запрос.МенеджерВременныхТаблиц 	= МВТ;
	Запрос.Текст 					=
	"ВЫБРАТЬ
	|	энргОперацияСПриборомУчета.Организация КАК Организация,
	|	энргОперацияСПриборомУчета.ПериодНачисления КАК ПериодНачисления,
	|	энргОперацияСПриборомУчета.Район КАК Район,
	|	&ЧастныйСектор КАК ЧастныйСектор,
	|	&Строение КАК Строение,
	|	&Помещение КАК Помещение,
	|	энргОперацияСПриборомУчета.Ссылка КАК ДокРегистратор,
	|	энргОперацияСПриборомУчета.Дата КАК ДатаРегистратора
	|ПОМЕСТИТЬ Шапка
	|ИЗ
	|	Документ.энргОперацияСПриборомУчета КАК энргОперацияСПриборомУчета
	|ГДЕ
	|	энргОперацияСПриборомУчета.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Шапка.Организация КАК Организация,
	|	Шапка.ПериодНачисления КАК ПериодНачисления,
	|	Шапка.Район КАК Район,
	|	Шапка.ЧастныйСектор КАК ЧастныйСектор,
	|	Шапка.Строение КАК Строение,
	|	Шапка.Помещение КАК Помещение,
	|	энргОперацияСПриборомУчетаТочкиУчета.Услуга КАК Услуга,
	|	энргОперацияСПриборомУчетаТочкиУчета.ТочкаУчета КАК ТочкаУчета,
	|	Шапка.ДокРегистратор КАК ДокРегистратор,
	|	Шапка.ДатаРегистратора КАК ДатаРегистратора,
	|	ЛОЖЬ КАК ПриборВведен
	|ПОМЕСТИТЬ УслугиВывода
	|ИЗ
	|	Шапка КАК Шапка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргОперацияСПриборомУчета.ТочкиУчета КАК энргОперацияСПриборомУчетаТочкиУчета
	|		ПО Шапка.ДокРегистратор = энргОперацияСПриборомУчетаТочкиУчета.Ссылка
	|			И (НЕ энргОперацияСПриборомУчетаТочкиУчета.ПриборУчетаВывод = ЗНАЧЕНИЕ(Справочник.энргПриборыУчетаАбонента.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УслугиВывода.Организация КАК Организация,
	|	УслугиВывода.ПериодНачисления КАК ПериодНачисления,
	|	УслугиВывода.Район КАК Район,
	|	УслугиВывода.ЧастныйСектор КАК ЧастныйСектор,
	|	УслугиВывода.Строение КАК Строение,
	|	УслугиВывода.Помещение КАК Помещение,
	|	ВЫБОР
	|		КОГДА энргВидыУслугСоставляющиеУслуг.Ссылка ЕСТЬ NULL
	|			ТОГДА УслугиВывода.Услуга
	|		ИНАЧЕ энргВидыУслугСоставляющиеУслуг.Услуга
	|	КОНЕЦ КАК Услуга,
	|	УслугиВывода.ТочкаУчета КАК ТочкаУчета,
	|	УслугиВывода.ДокРегистратор КАК ДокРегистратор,
	|	УслугиВывода.ДатаРегистратора КАК ДатаРегистратора,
	|	УслугиВывода.ПриборВведен КАК ПриборВведен
	|ПОМЕСТИТЬ ВыводПрибораУчета
	|ИЗ
	|	УслугиВывода КАК УслугиВывода
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг.СоставляющиеУслуг КАК энргВидыУслугСоставляющиеУслуг
	|		ПО УслугиВывода.Услуга = энргВидыУслугСоставляющиеУслуг.Ссылка";
	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("Организация");
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Район");
	Измерения.Добавить("ЧастныйСектор");
	Измерения.Добавить("Строение");
	Измерения.Добавить("Помещение");
	Измерения.Добавить("Услуга");
	Измерения.Добавить("ТочкаУчета");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("ПриборВведен");
	
	Параметры.вставить("Измерения",				Измерения);
	Параметры.вставить("Ресурсы",				Ресурсы);
	Параметры.вставить("ИзменяетСостояниеПУ",	Истина);
	
	ЗаполнитьНомераПозиций(МВТ,Параметры,"ВыводПрибораУчета"); 
	
КонецПроцедуры

Процедура СтабПериодыЗаменаПрибораУчета(Ссылка,Параметры)  
	ПарметрыЗапроса = Параметры.ПараметрыЗапроса;
	МВТ 			= Новый МенеджерВременныхТаблиц;
	Запрос  		= Новый Запрос;
	Запрос.УстановитьПараметр("ссылка",			ссылка);
	Запрос.УстановитьПараметр("ЧастныйСектор",	ПарметрыЗапроса.ЧастныйСектор);
	Запрос.УстановитьПараметр("Строение",		ПарметрыЗапроса.Строение);
	Запрос.УстановитьПараметр("Помещение",		ПарметрыЗапроса.Помещение);
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.Текст 	=
	"ВЫБРАТЬ
	|	энргОперацияСПриборомУчета.Организация КАК Организация,
	|	энргОперацияСПриборомУчета.ПериодНачисления КАК ПериодНачисления,
	|	энргОперацияСПриборомУчета.Район КАК Район,
	|	&ЧастныйСектор КАК ЧастныйСектор,
	|	&Строение КАК Строение,
	|	&Помещение КАК Помещение,
	|	энргОперацияСПриборомУчета.Ссылка КАК ДокРегистратор,
	|	энргОперацияСПриборомУчета.Дата КАК ДатаРегистратора
	|ПОМЕСТИТЬ Шапка
	|ИЗ
	|	Документ.энргОперацияСПриборомУчета КАК энргОперацияСПриборомУчета
	|ГДЕ
	|	энргОперацияСПриборомУчета.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Шапка.Организация КАК Организация,
	|	Шапка.ПериодНачисления КАК ПериодНачисления,
	|	Шапка.Район КАК Район,
	|	Шапка.ЧастныйСектор КАК ЧастныйСектор,
	|	Шапка.Строение КАК Строение,
	|	Шапка.Помещение КАК Помещение,
	|	ТочкиУчета.Услуга КАК Услуга,
	|	ТочкиУчета.ТочкаУчета КАК ТочкаУчета,
	|	ЛОЖЬ КАК ПриборВведен,
	|	ИСТИНА КАК МенялосьСостояниеПУ,
	|	ИСТИНА КАК МенялосьСостояниеФормулы
	|ПОМЕСТИТЬ УслугиВывода
	|ИЗ
	|	Шапка КАК Шапка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргОперацияСПриборомУчета.ТочкиУчета КАК ТочкиУчета
	|		ПО Шапка.ДокРегистратор = ТочкиУчета.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Шапка.Организация КАК Организация,
	|	Шапка.ПериодНачисления КАК ПериодНачисления,
	|	Шапка.Район КАК Район,
	|	Шапка.ЧастныйСектор КАК ЧастныйСектор,
	|	Шапка.Строение КАК Строение,
	|	Шапка.Помещение КАК Помещение,
	|	ТочкиУчета.Услуга КАК Услуга,
	|	ТочкиУчета.ТочкаУчета КАК ТочкаУчета,
	|	ТочкиУчета.ПриборУчета КАК ПриборУчета,
	|	ТочкиУчета.КоэффициентПУ КАК КоэффициентПУ,
	|	ИСТИНА КАК ПриборВведен,
	|	ИСТИНА КАК МенялосьСостояниеПУ,
	|	ИСТИНА КАК МенялосьСостояниеФормулы,
	|	ТочкиУчета.IDСтроки КАК IDСтроки
	|ПОМЕСТИТЬ УслугиВвода
	|ИЗ
	|	Шапка КАК Шапка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргОперацияСПриборомУчета.ТочкиУчета КАК ТочкиУчета
	|		ПО Шапка.ДокРегистратор = ТочкиУчета.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УслугиВывода.Организация КАК Организация,
	|	УслугиВывода.ПериодНачисления КАК ПериодНачисления,
	|	УслугиВывода.Район КАК Район,
	|	УслугиВывода.ЧастныйСектор КАК ЧастныйСектор,
	|	УслугиВывода.Строение КАК Строение,
	|	УслугиВывода.Помещение КАК Помещение,
	|	ВЫБОР
	|		КОГДА энргВидыУслугСоставляющиеУслуг.Ссылка ЕСТЬ NULL
	|			ТОГДА УслугиВывода.Услуга
	|		ИНАЧЕ энргВидыУслугСоставляющиеУслуг.Услуга
	|	КОНЕЦ КАК Услуга,
	|	УслугиВывода.ТочкаУчета КАК ТочкаУчета,
	|	УслугиВывода.ПриборВведен КАК ПриборВведен,
	|	ИСТИНА КАК МенялосьСостояниеПУ
	|ПОМЕСТИТЬ ВыводПрибораУчета
	|ИЗ
	|	УслугиВывода КАК УслугиВывода
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг.СоставляющиеУслуг КАК энргВидыУслугСоставляющиеУслуг
	|		ПО УслугиВывода.Услуга = энргВидыУслугСоставляющиеУслуг.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УслугиВвода.Организация КАК Организация,
	|	УслугиВвода.ПериодНачисления КАК ПериодНачисления,
	|	УслугиВвода.Район КАК Район,
	|	УслугиВвода.ЧастныйСектор КАК ЧастныйСектор,
	|	УслугиВвода.Строение КАК Строение,
	|	УслугиВвода.Помещение КАК Помещение,
	|	ВЫБОР
	|		КОГДА энргВидыУслугСоставляющиеУслуг.Ссылка ЕСТЬ NULL
	|			ТОГДА УслугиВвода.Услуга
	|		ИНАЧЕ энргВидыУслугСоставляющиеУслуг.Услуга
	|	КОНЕЦ КАК Услуга,
	|	УслугиВвода.ТочкаУчета КАК ТочкаУчета,
	|	УслугиВвода.ПриборУчета КАК ПриборУчета,
	|	УслугиВвода.КоэффициентПУ КАК КоэффициентПУ,
	|	УслугиВвода.ПриборВведен КАК ПриборВведен,
	|	ИСТИНА КАК МенялосьСостояниеПУ
	|ПОМЕСТИТЬ ВводПрибораУчета
	|ИЗ
	|	УслугиВвода КАК УслугиВвода
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг.СоставляющиеУслуг КАК энргВидыУслугСоставляющиеУслуг
	|		ПО УслугиВвода.Услуга = энргВидыУслугСоставляющиеУслуг.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УслугиВвода.ТочкаУчета КАК ТочкаУчета,
	|	энргОперацияСПриборомУчетаШкалыПриборовУчета.Шкала КАК Шкала,
	|	энргОперацияСПриборомУчетаШкалыПриборовУчета.ВидДифференцированности КАК ВидДифференцированности
	|ПОМЕСТИТЬ ШкалыПриборовУчета
	|ИЗ
	|	УслугиВвода КАК УслугиВвода
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргОперацияСПриборомУчета.ШкалыПриборовУчета КАК энргОперацияСПриборомУчетаШкалыПриборовУчета
	|		ПО УслугиВвода.IDСтроки = энргОперацияСПриборомУчетаШкалыПриборовУчета.IDСтрокиТочкиУчета
	|			И (энргОперацияСПриборомУчетаШкалыПриборовУчета.Ссылка = &Ссылка)";
	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("Организация");
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Район");
	Измерения.Добавить("ЧастныйСектор");
	Измерения.Добавить("Строение");
	Измерения.Добавить("Помещение");
	Измерения.Добавить("Услуга");
	Измерения.Добавить("ТочкаУчета");
	
	Ресурсы 			= Новый Массив;
	Ресурсы.Добавить("ПриборВведен");
	Ресурсы.Добавить("МенялосьСостояниеПУ");
		
	Параметры.вставить("Измерения",				Измерения);
	Параметры.вставить("Ресурсы",				Ресурсы);
	Параметры.вставить("ИзменяетСостояниеПУ",	Истина);

	ЗаполнитьНомераПозиций(МВТ,Параметры,"ВыводПрибораУчета");  	
	
	Ресурсы 			= Новый Массив;
	Ресурсы.Добавить("ПриборВведен");
	Ресурсы.Добавить("ПриборУчета");
	Ресурсы.Добавить("КоэффициентПУ");
	Ресурсы.Добавить("МенялосьСостояниеПУ");
		
	Параметры.Ресурсы 	= Ресурсы;
	Параметры.вставить("ШкалыОтдельно",			Истина);
	
	ЗаполнитьНомераПозиций(МВТ,Параметры,"ВводПрибораУчета",истина); 	
	
	// Добавляем записи по шкалам
	Запрос.УстановитьПараметр("ДатаРегистратора", Параметры.ДатаДок);
	Запрос.Текст 		=
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НомераПозиций.Организация КАК Организация,
	|	НомераПозиций.ПериодНачисления КАК ПериодНачисления,
	|	НомераПозиций.Район КАК Район,
	|	НомераПозиций.ЧастныйСектор КАК ЧастныйСектор,
	|	НомераПозиций.Строение КАК Строение,
	|	НомераПозиций.Помещение КАК Помещение,
	|	НомераПозиций.ТочкаУчета КАК ТочкаУчета,
	|	НомераПозиций.НомерПозиции + 2 КАК НомерПозиции,
	|	ЕСТЬNULL(ШкалыПриборовУчета.Шкала, ЗНАЧЕНИЕ(Справочник.энргШкалыПриборовУчета.ПустаяСсылка)) КАК Шкала,
	|	&ДатаРегистратора КАК ДатаРегистратора,
	|	&Ссылка КАК ДокРегистратор,
	|	ЕСТЬNULL(ШкалыПриборовУчета.ВидДифференцированности, ЗНАЧЕНИЕ(Справочник.энргВидыДифференцированности.ПустаяСсылка)) КАК ВидДифференцированности	
	|ИЗ
	|	НомераПозицийВводПрибораУчета КАК НомераПозиций
	|		ЛЕВОЕ СОЕДИНЕНИЕ ШкалыПриборовУчета КАК ШкалыПриборовУчета
	|		ПО НомераПозиций.ТочкаУчета = ШкалыПриборовУчета.ТочкаУчета";
	
	// Добавляем записи по шкалам
	Результат  						= Запрос.Выполнить();
	ВыборкаШкалы 					= Результат.Выбрать();
	Пока ВыборкаШкалы.Следующий() цикл		
		СтрокаСтабПериодыШкалы		= Параметры.НаборСтабильныеПериодыШкалы.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСтабПериодыШкалы,ВыборкаШкалы);				
	КонецЦикла;
	
КонецПроцедуры

Процедура СтабПериодыУстановитьКоличествоКомнат(ссылка,Параметры) 
	
	ПараметрыЗапроса  				= Параметры.ПараметрыЗапроса;		
	МВТ 							= Новый МенеджерВременныхТаблиц;
		  	
	Запрос  						= Новый Запрос;
	Запрос.УстановитьПараметр("ссылка",			ссылка);
	Запрос.УстановитьПараметр("МоментВремени",	Параметры.МоментВремени);    	
	для Каждого стр из ПараметрыЗапроса цикл
		Запрос.УстановитьПараметр(стр.ключ,стр.значение); 
	КонецЦикла;   
	
	Запрос.МенеджерВременныхТаблиц 	= МВТ;	
	Запрос.Текст 					=
	"ВЫБРАТЬ
	|	энргУстановитьКоличествоКомнат.ПериодНачисления КАК ПериодНачисления,
	|	энргУстановитьКоличествоКомнат.Район КАК Район,
	|	&ЧастныйСектор КАК ЧастныйСектор,
	|	&Строение КАК Строение,
	|	&Помещение КАК Помещение,
	|	энргУстановитьКоличествоКомнат.Количество КАК КоличествоКомнат,
	|	ЗНАЧЕНИЕ(Справочник.энргКлючиНормативов.ПустаяСсылка) КАК КлючНорматива,
	|	ЗНАЧЕНИЕ(Справочник.энргКлючиНормативов.ПустаяСсылка) КАК КлючСоцНорматива
	|ПОМЕСТИТЬ ДанныеДокумента
	|ИЗ
	|	Документ.энргУстановитьКоличествоКомнат КАК энргУстановитьКоличествоКомнат
	|ГДЕ
	|	энргУстановитьКоличествоКомнат.Ссылка = &Ссылка";	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Район");
	Измерения.Добавить("ЧастныйСектор");
	Измерения.Добавить("Строение");
	Измерения.Добавить("Помещение");
		
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("КоличествоКомнат");
	Ресурсы.Добавить("КлючНорматива");
	Ресурсы.Добавить("КлючСоцНорматива");
		
	Параметры.вставить("Измерения",Измерения);
	Параметры.вставить("Ресурсы",Ресурсы);
	
	ЗаполнитьНомераПозиций(МВТ,Параметры,"ДанныеДокумента"); 	
	
КонецПроцедуры

Процедура СтабПериодыУстановитьКоличествоПрописанных(ссылка,Параметры) 
				
	МВТ 							= Новый МенеджерВременныхТаблиц;
	ПараметрыЗапроса 				= Параметры.ПараметрыЗапроса;
	
	Запрос  						= Новый Запрос;
	Запрос.УстановитьПараметр("ссылка",				ссылка);
	Запрос.УстановитьПараметр("МоментВремени",		Параметры.МоментВремени);
	Запрос.МенеджерВременныхТаблиц 	= МВТ;	
	
	ПараметрыЗапроса  				= Параметры.ПараметрыЗапроса;	  	
	для Каждого стр из ПараметрыЗапроса цикл
		Запрос.УстановитьПараметр(стр.ключ,стр.значение); 
	КонецЦикла;  
	
	Запрос.Текст 					=
	"ВЫБРАТЬ
	|	энргУстановитьКоличествоПрописанных.Организация КАК Организация,
	|	энргУстановитьКоличествоПрописанных.ПериодНачисления КАК ПериодНачисления,
	|	энргУстановитьКоличествоПрописанных.Район КАК Район,
	|	&ЧастныйСектор КАК ЧастныйСектор,
	|	&Строение КАК Строение,
	|	&Помещение КАК Помещение,
	|	&КоличествоЖильцов КАК КоличествоЖильцов,
	|	энргУстановитьКоличествоПрописанных.Количество КАК КоличествоПрописанных,
	|	ЗНАЧЕНИЕ(Справочник.энргКлючиНормативов.ПустаяСсылка) КАК КлючНорматива,
	|	ЗНАЧЕНИЕ(Справочник.энргКлючиНормативов.ПустаяСсылка) КАК КлючСоцНорматива
	|ПОМЕСТИТЬ ДанныеДокумента
	|ИЗ
	|	Документ.энргУстановитьКоличествоПрописанных КАК энргУстановитьКоличествоПрописанных
	|ГДЕ
	|	энргУстановитьКоличествоПрописанных.Ссылка = &Ссылка";	
	
	
	Ресурсы = Новый Массив;
	Если ЗначениеЗаполнено(Параметры.ПараметрыЗапроса.Помещение.Родитель) И Параметры.ПараметрыЗапроса.Помещение = ссылка.КлючПомещения.Помещение Тогда
		Ресурсы.Добавить("КоличествоПрописанных");
		Запрос.УстановитьПараметр("КоличествоЖильцов",			0);
	ИначеЕсли НЕ ЗначениеЗаполнено(Параметры.ПараметрыЗапроса.Помещение.Родитель) и Параметры.Свойство("ПомещениеСРазделеннымиЛС") И Параметры.ПомещениеСРазделеннымиЛС Тогда
		Запрос.УстановитьПараметр("КоличествоЖильцов",			ПолучитьКоличествоЖильцов(Ссылка.Организация, Ссылка.Район,Параметры.МоментВремени, ПараметрыЗапроса.Помещение));
		Ресурсы.Добавить("КоличествоЖильцов");
	Иначе
		Запрос.УстановитьПараметр("КоличествоЖильцов",			0);
	КонецЕсли;
	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("Организация");
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Район");
	Измерения.Добавить("ЧастныйСектор");
	Измерения.Добавить("Строение");
	Измерения.Добавить("Помещение");
		
	Ресурсы.Добавить("КлючНорматива");
	Ресурсы.Добавить("КлючСоцНорматива");
	        	
	Параметры.вставить("Измерения",Измерения);
	Параметры.вставить("Ресурсы",Ресурсы);
	
	ЗаполнитьНомераПозиций(МВТ,Параметры,"ДанныеДокумента");	
	
КонецПроцедуры

Процедура СтабПериодыУстановитьЗначениеПлощади(ссылка,Параметры) 
	МВТ  		= Новый МенеджерВременныхТаблиц;
	ПараметрыЗапроса 	= Параметры.ПараметрыЗапроса;
	Запрос  	= Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.УстановитьПараметр("ссылка",			ссылка);
	Запрос.УстановитьПараметр("ЧастныйСектор",	ПараметрыЗапроса.ЧастныйСектор);
	Запрос.УстановитьПараметр("Строение",		ПараметрыЗапроса.Строение);
	Запрос.УстановитьПараметр("Помещение",		ПараметрыЗапроса.Помещение);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	энргУстановитьЗначениеПлощади.Организация КАК Организация,
	|	энргУстановитьЗначениеПлощади.ПериодНачисления КАК ПериодНачисления,
	|	энргУстановитьЗначениеПлощади.Район КАК Район,
	|	&ЧастныйСектор КАК ЧастныйСектор,
	|	&Строение КАК Строение,
	|	&Помещение КАК Помещение,
	|	энргУстановитьЗначениеПлощади.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ Шапка
	|ИЗ
	|	Документ.энргУстановитьЗначениеПлощади КАК энргУстановитьЗначениеПлощади
	|ГДЕ
	|	энргУстановитьЗначениеПлощади.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Шапка.Организация КАК Организация,
	|	Шапка.ПериодНачисления КАК ПериодНачисления,
	|	Шапка.Район КАК Район,
	|	Шапка.ЧастныйСектор КАК ЧастныйСектор,
	|	Шапка.Строение КАК Строение,
	|	Шапка.Помещение КАК Помещение,
	|	энргУстановитьЗначениеПлощадиПлощади.ВидПлощади КАК ВидПлощади,
	|	энргУстановитьЗначениеПлощадиПлощади.Значение КАК Значение
	|ПОМЕСТИТЬ ВидыПлощадей
	|ИЗ
	|	Шапка КАК Шапка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргУстановитьЗначениеПлощади.Площади КАК энргУстановитьЗначениеПлощадиПлощади
	|		ПО Шапка.Ссылка = энргУстановитьЗначениеПлощадиПлощади.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыПлощадей.Организация КАК Организация,
	|	ВидыПлощадей.ПериодНачисления КАК ПериодНачисления,
	|	ВидыПлощадей.Район КАК Район,
	|	ВидыПлощадей.ЧастныйСектор КАК ЧастныйСектор,
	|	ВидыПлощадей.Строение КАК Строение,
	|	ВидыПлощадей.Помещение КАК Помещение,
	|	энргВидыУслуг.Ссылка КАК Услуга,
	|	ВидыПлощадей.Значение КАК ЗначениеПлощади
	|ПОМЕСТИТЬ ДанныеПлощадей
	|ИЗ
	|	ВидыПлощадей КАК ВидыПлощадей
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг КАК энргВидыУслуг
	|		ПО (ВЫБОР
	|				КОГДА ВидыПлощадей.ВидПлощади = ЗНАЧЕНИЕ(Перечисление.энргВидыПлощадей.ОбщаяПлощадь)
	|					ТОГДА ВидыПлощадей.ВидПлощади = энргВидыУслуг.ВидПлощади
	|							ИЛИ энргВидыУслуг.ВидПлощади = ЗНАЧЕНИЕ(Перечисление.энргВидыПлощадей.ПустаяСсылка)
	|				ИНАЧЕ ВидыПлощадей.ВидПлощади = энргВидыУслуг.ВидПлощади
	|			КОНЕЦ)
	|			И (НЕ энргВидыУслуг.СоставнаяУслуга)";	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("Организация");
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Район");
	Измерения.Добавить("ЧастныйСектор");
	Измерения.Добавить("Строение");
	Измерения.Добавить("Помещение");
	Измерения.Добавить("Услуга");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("ЗначениеПлощади");
	
	Параметры.вставить("Измерения",Измерения);
	Параметры.вставить("Ресурсы",Ресурсы);
	
	ЗаполнитьНомераПозиций(МВТ,Параметры,"ДанныеПлощадей");
			
КонецПроцедуры

Процедура СтабПериодыУстановитьВидБлагоустройства(Ссылка,Параметры) 
	
	МВТ 							= Новый МенеджерВременныхТаблиц;
	ПараметрыЗапроса 				= Параметры.ПараметрыЗапроса;	
			 	
	Запрос  						= Новый Запрос;
	Запрос.МенеджерВременныхТаблиц  = МВТ;
	Запрос.УстановитьПараметр("ссылка",				Ссылка);
	Запрос.УстановитьПараметр("МоментВремени",		Параметры.МоментВремени);
		
	Для Каждого СтрокаПараметра из ПараметрыЗапроса цикл
		Запрос.УстановитьПараметр(СтрокаПараметра.ключ,СтрокаПараметра.Значение);
	КонецЦикла; 	
	
	Запрос.Текст 					=
	"ВЫБРАТЬ
	|	энргУстановитьВидБлагоустройстваАбонента.Организация КАК Организация,
	|	энргУстановитьВидБлагоустройстваАбонента.ПериодНачисления КАК ПериодНачисления,
	|	энргУстановитьВидБлагоустройстваАбонента.Район КАК Район,
	|	&ЧастныйСектор КАК ЧастныйСектор,
	|	&Строение КАК Строение,
	|	&Помещение КАК Помещение
	|ПОМЕСТИТЬ ДанныеДокумента
	|ИЗ
	|	Документ.энргУстановитьВидБлагоустройстваАбонента КАК энргУстановитьВидБлагоустройстваАбонента
	|ГДЕ
	|	энргУстановитьВидБлагоустройстваАбонента.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.ПериодНачисления КАК ПериодНачисления,
	|	ДанныеДокумента.Район КАК Район,
	|	ДанныеДокумента.ЧастныйСектор КАК ЧастныйСектор,
	|	ДанныеДокумента.Строение КАК Строение,
	|	ДанныеДокумента.Помещение КАК Помещение,
	|	энргУстановитьВидБлагоустройстваАбонентаВидыБлагоустройств.Услуга КАК Услуга,
	|	энргУстановитьВидБлагоустройстваАбонентаВидыБлагоустройств.ВидБлагоустройства КАК ВидБлагоустройства,
	|	ЗНАЧЕНИЕ(Справочник.энргКлючиНормативов.ПустаяСсылка) КАК КлючНорматива,
	|	ЗНАЧЕНИЕ(Справочник.энргКлючиНормативов.ПустаяСсылка) КАК КлючСоцНорматива
	|ПОМЕСТИТЬ ДанныеБлагоустройство
	|ИЗ
	|	ДанныеДокумента КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргУстановитьВидБлагоустройстваАбонента.ВидыБлагоустройств КАК энргУстановитьВидБлагоустройстваАбонентаВидыБлагоустройств
	|		ПО (энргУстановитьВидБлагоустройстваАбонентаВидыБлагоустройств.Ссылка = &Ссылка)";
	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("Организация");
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Район");
	Измерения.Добавить("ЧастныйСектор");
	Измерения.Добавить("Строение");
	Измерения.Добавить("Помещение");
	Измерения.Добавить("Услуга");   
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("ВидБлагоустройства");
	Ресурсы.Добавить("КлючНорматива");
	Ресурсы.Добавить("КлючСоцНорматива");
		
	Параметры.вставить("Измерения",Измерения);
	Параметры.вставить("Ресурсы",Ресурсы);
	
	ЗаполнитьНомераПозиций(МВТ,Параметры,"ДанныеБлагоустройство");
	
КонецПроцедуры

Процедура СтабПериодыУстановитьТехническийСтатусТочкиУчета(Ссылка,Параметры) 
	
	МВТ 							= Новый МенеджерВременныхТаблиц;
	ПараметрыЗапроса 				= Параметры.ПараметрыЗапроса;	
			 	
	Запрос  						= Новый Запрос;
	Запрос.МенеджерВременныхТаблиц  = МВТ;
	Запрос.УстановитьПараметр("ссылка",				Ссылка);
	Запрос.УстановитьПараметр("МоментВремени",		Параметры.МоментВремени);
		
	Для Каждого СтрокаПараметра из ПараметрыЗапроса цикл
		Запрос.УстановитьПараметр(СтрокаПараметра.ключ,СтрокаПараметра.Значение);
	КонецЦикла; 	
	
	Запрос.Текст 					=
	"ВЫБРАТЬ
	|	энргУстановитьТехническийСтатусТочкиУчета.Организация КАК Организация,
	|	энргУстановитьТехническийСтатусТочкиУчета.ПериодНачисления КАК ПериодНачисления,
	|	энргУстановитьТехническийСтатусТочкиУчета.Район КАК Район,
	|	&ЧастныйСектор КАК ЧастныйСектор,
	|	&Строение КАК Строение,
	|	&Помещение КАК Помещение
	|ПОМЕСТИТЬ ДанныеДокумента
	|ИЗ
	|	Документ.энргУстановитьТехническийСтатусТочкиУчета КАК энргУстановитьТехническийСтатусТочкиУчета
	|ГДЕ
	|	энргУстановитьТехническийСтатусТочкиУчета.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.ПериодНачисления КАК ПериодНачисления,
	|	ДанныеДокумента.Район КАК Район,
	|	ДанныеДокумента.ЧастныйСектор КАК ЧастныйСектор,
	|	ДанныеДокумента.Строение КАК Строение,
	|	ДанныеДокумента.Помещение КАК Помещение,
	|	энргУстановитьТехническийСтатусТочкиУчетаСтатусыТочекУчета.Услуга КАК Услуга,
	|	ЗНАЧЕНИЕ(Справочник.энргКлючиНормативов.ПустаяСсылка) КАК КлючНорматива,
	|	ЗНАЧЕНИЕ(Справочник.энргКлючиНормативов.ПустаяСсылка) КАК КлючСоцНорматива,
	|	энргУстановитьТехническийСтатусТочкиУчетаСтатусыТочекУчета.ТекущееСостояние КАК Техническая,
	|	энргУстановитьТехническийСтатусТочкиУчетаСтатусыТочекУчета.ТочкаУчета КАК ТочкаУчета
	|ПОМЕСТИТЬ ДанныеТехническийСтатус
	|ИЗ
	|	ДанныеДокумента КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргУстановитьТехническийСтатусТочкиУчета.СтатусыТочекУчета КАК энргУстановитьТехническийСтатусТочкиУчетаСтатусыТочекУчета
	|		ПО (энргУстановитьТехническийСтатусТочкиУчетаСтатусыТочекУчета.Ссылка = &Ссылка)";
	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("Организация");
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Район");
	Измерения.Добавить("ЧастныйСектор");
	Измерения.Добавить("Строение");
	Измерения.Добавить("Помещение");
	Измерения.Добавить("Услуга");   
	Измерения.Добавить("ТочкаУчета");   
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("Техническая");
	Ресурсы.Добавить("КлючНорматива");
	Ресурсы.Добавить("КлючСоцНорматива");
		
	Параметры.вставить("Измерения",Измерения);
	Параметры.вставить("Ресурсы",Ресурсы);
	
	ЗаполнитьНомераПозиций(МВТ,Параметры,"ДанныеТехническийСтатус");
	
КонецПроцедуры

Процедура СтабПериодыУстановитьГруппуПотребителей(ссылка,Параметры) 
	МВТ  							= Новый МенеджерВременныхТаблиц;
	ПараметрыЗапроса 				= Параметры.ПараметрыЗапроса;
	Запрос  						= Новый Запрос;
	Запрос.МенеджерВременныхТаблиц 	= МВТ;
	Запрос.УстановитьПараметр("ссылка",				Ссылка);
	Для Каждого СтрокаПараметра из ПараметрыЗапроса цикл
		Запрос.УстановитьПараметр(СтрокаПараметра.ключ,СтрокаПараметра.Значение);
	КонецЦикла;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	энргУстановитьГруппуПотребителейАбонента.Организация КАК Организация,
	|	энргУстановитьГруппуПотребителейАбонента.ПериодНачисления КАК ПериодНачисления,
	|	энргУстановитьГруппуПотребителейАбонента.Район КАК Район,
	|	&ЧастныйСектор КАК ЧастныйСектор,
	|	&Строение КАК Строение,
	|	&Помещение КАК Помещение,
	|	энргУстановитьГруппуПотребителейАбонентаВидыБлагоустройстваТарифныеКатегории.Услуга КАК Услуга,
	|	энргУстановитьГруппуПотребителейАбонента.ГруппаПотребителей КАК ТарифнаяГруппа
	|ПОМЕСТИТЬ Шапка
	|ИЗ
	|	Документ.энргУстановитьГруппуПотребителейАбонента КАК энргУстановитьГруппуПотребителейАбонента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргУстановитьГруппуПотребителейАбонента.ВидыБлагоустройстваТарифныеКатегории КАК энргУстановитьГруппуПотребителейАбонентаВидыБлагоустройстваТарифныеКатегории
	|		ПО энргУстановитьГруппуПотребителейАбонента.Ссылка = энргУстановитьГруппуПотребителейАбонентаВидыБлагоустройстваТарифныеКатегории.Ссылка
	|			И (энргУстановитьГруппуПотребителейАбонента.Ссылка = &Ссылка)
	|			И (энргУстановитьГруппуПотребителейАбонентаВидыБлагоустройстваТарифныеКатегории.Ссылка = &Ссылка)";
	
	Запрос.Выполнить();
	
	Измерения 						= Новый Массив;
	Измерения.Добавить("Организация");
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Район");
	Измерения.Добавить("ЧастныйСектор");
	Измерения.Добавить("Строение");
	Измерения.Добавить("Помещение");
	Измерения.Добавить("Услуга");
	
	Ресурсы 						= Новый Массив;
	Ресурсы.Добавить("ТарифнаяГруппа");
	
	Параметры.вставить("Измерения",Измерения);
	Параметры.вставить("Ресурсы",Ресурсы);
	
	ЗаполнитьНомераПозиций(МВТ,Параметры,"Шапка");
	
КонецПроцедуры

Процедура СтабПериодыУстановитьФормулуРасчетаТочекУчета(ссылка,Параметры) 
	МассивТочек 								= ссылка.ТочкиУчета.выгрузитьКолонку("ТочкаУчета");	
	МассивТочек.добавить(ссылка.РассчитываемаяТочкаУчета);
	ПараметрыЗапроса  							= Параметры.ПараметрыЗапроса;	
	МВТ 										= Новый МенеджерВременныхТаблиц;
	Запрос  									= Новый Запрос;
	Запрос.УстановитьПараметр("ссылка",					ссылка);
	Запрос.УстановитьПараметр("Район",					ПараметрыЗапроса.Район);
	Запрос.УстановитьПараметр("ПериодНачисления",		Параметры.ПериодНачисления);
	
	Запрос.МенеджерВременныхТаблиц 				= МВТ;     	
	
	ПараметрыЗапроса 	= Параметры.ПараметрыЗапроса;
	для каждого ПараметрЗапроса из ПараметрыЗапроса цикл
		Запрос.УстановитьПараметр(ПараметрЗапроса.ключ,ПараметрЗапроса.Значение);
	КонецЦикла;
	 	
	Запрос.Текст 					=
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ПериодНачисления КАК ПериодНачисления,
	|	ВложенныйЗапрос.Район КАК Район,
	|	ВложенныйЗапрос.ЧастныйСектор КАК ЧастныйСектор,
	|	ВложенныйЗапрос.Строение КАК Строение,
	|	ВложенныйЗапрос.Помещение КАК Помещение,
	|	ВложенныйЗапрос.ТочкаУчета КАК ТочкаУчета,
	|	ВЫБОР
	|		КОГДА энргВидУслугСоставляющиеУслуг.Ссылка ЕСТЬ NULL
	|			ТОГДА ВложенныйЗапрос.Услуга
	|		ИНАЧЕ энргВидУслугСоставляющиеУслуг.Услуга
	|	КОНЕЦ КАК Услуга,
	|	ВложенныйЗапрос.РасчетПоФормуле КАК РасчетПоФормуле
	|ПОМЕСТИТЬ Шапка
	|ИЗ
	|	(ВЫБРАТЬ
	|		энргУстановитьФормулуРасчетаТочекУчета.Организация КАК Организация,
	|		энргУстановитьФормулуРасчетаТочекУчета.ПериодНачисления КАК ПериодНачисления,
	|		энргУстановитьФормулуРасчетаТочекУчета.Район КАК Район,
	|		&ЧастныйСектор КАК ЧастныйСектор,
	|		&Строение КАК Строение,
	|		&Помещение КАК Помещение,
	|		энргУстановитьФормулуРасчетаТочекУчета.РассчитываемаяТочкаУчета КАК ТочкаУчета,
	|		энргУстановитьФормулуРасчетаТочекУчета.Услуга КАК Услуга,
	|		ИСТИНА КАК РасчетПоФормуле
	|	ИЗ
	|		Документ.энргУстановитьФормулуРасчетаТочекУчета КАК энргУстановитьФормулуРасчетаТочекУчета
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.энргКлючиПомещений КАК энргКлючиПомещений
	|			ПО энргУстановитьФормулуРасчетаТочекУчета.КлючПомещения = энргКлючиПомещений.КлючПомещения
	|				И (энргКлючиПомещений.Строение = &Строение)
	|				И (энргКлючиПомещений.Помещение = &Помещение)
	|				И (энргУстановитьФормулуРасчетаТочекУчета.Ссылка = &Ссылка)) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг.СоставляющиеУслуг КАК энргВидУслугСоставляющиеУслуг
	|		ПО ВложенныйЗапрос.Услуга = энргВидУслугСоставляющиеУслуг.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ПериодНачисления КАК ПериодНачисления,
	|	ВложенныйЗапрос.Район КАК Район,
	|	ВложенныйЗапрос.ЧастныйСектор КАК ЧастныйСектор,
	|	ВложенныйЗапрос.Строение КАК Строение,
	|	ВложенныйЗапрос.Помещение КАК Помещение,
	|	ВложенныйЗапрос.ТочкаУчета КАК ТочкаУчета,
	|	ВЫБОР
	|		КОГДА энргВидУслугСоставляющиеУслуг.Ссылка ЕСТЬ NULL
	|			ТОГДА ВложенныйЗапрос.Услуга
	|		ИНАЧЕ энргВидУслугСоставляющиеУслуг.Услуга
	|	КОНЕЦ КАК Услуга,
	|	ВложенныйЗапрос.ЗависимаяТочкаУчета КАК ЗависимаяТочкаУчета,
	|	ВложенныйЗапрос.КоэффициентФормула КАК КоэффициентФормула
	|ПОМЕСТИТЬ ТочкиВФормуле
	|ИЗ
	|	(ВЫБРАТЬ
	|		Шапка.Организация КАК Организация,
	|		Шапка.ПериодНачисления КАК ПериодНачисления,
	|		Шапка.Район КАК Район,
	|		энргКлючиПомещений.ЧастныйСектор КАК ЧастныйСектор,
	|		энргКлючиПомещений.Строение КАК Строение,
	|		энргКлючиПомещений.Помещение КАК Помещение,
	|		энргУстановитьФормулуРасчетаТочекУчетаТочкиУчета.ТочкаУчета КАК ТочкаУчета,
	|		энргУстановитьФормулуРасчетаТочекУчетаТочкиУчета.Услуга КАК Услуга,
	|		Шапка.РассчитываемаяТочкаУчета КАК ЗависимаяТочкаУчета,
	|		энргУстановитьФормулуРасчетаТочекУчетаТочкиУчета.Коэффициент КАК КоэффициентФормула
	|	ИЗ
	|		Документ.энргУстановитьФормулуРасчетаТочекУчета.ТочкиУчета КАК энргУстановитьФормулуРасчетаТочекУчетаТочкиУчета
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.энргКлючиПомещений КАК энргКлючиПомещений
	|			ПО энргУстановитьФормулуРасчетаТочекУчетаТочкиУчета.КлючПомещения = энргКлючиПомещений.КлючПомещения
	|				И (энргУстановитьФормулуРасчетаТочекУчетаТочкиУчета.Ссылка = &Ссылка)
	|				И (энргКлючиПомещений.Строение = &Строение)
	|				И (энргКлючиПомещений.Помещение = &Помещение)
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргУстановитьФормулуРасчетаТочекУчета КАК Шапка
	|			ПО энргУстановитьФормулуРасчетаТочекУчетаТочкиУчета.Ссылка = Шапка.Ссылка
	|				И (Шапка.Ссылка = &Ссылка)) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг.СоставляющиеУслуг КАК энргВидУслугСоставляющиеУслуг
	|		ПО ВложенныйЗапрос.Услуга = энргВидУслугСоставляющиеУслуг.Ссылка";
	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("Организация");
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Район");
	Измерения.Добавить("ЧастныйСектор");
	Измерения.Добавить("Строение");
	Измерения.Добавить("Помещение");
	Измерения.Добавить("Услуга");
	Измерения.Добавить("ТочкаУчета");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("РасчетПоФормуле");

	Параметры.вставить("Измерения",Измерения);
	Параметры.вставить("Ресурсы",Ресурсы);
	
	ЗаполнитьНомераПозиций(МВТ,Параметры,"Шапка");
		
	Измерения = Новый Массив;
	Измерения.Добавить("Организация");
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Район");
	Измерения.Добавить("ЧастныйСектор");
	Измерения.Добавить("Строение");
	Измерения.Добавить("Помещение");
	Измерения.Добавить("Услуга");
	Измерения.Добавить("ТочкаУчета");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("ЗависимаяТочкаУчета");
	Ресурсы.Добавить("КоэффициентФормула");
	
	Параметры.вставить("Измерения",Измерения);
	Параметры.вставить("Ресурсы",Ресурсы);
	
	ЗаполнитьНомераПозиций(МВТ,Параметры,"ТочкиВФормуле");
	
КонецПроцедуры

Процедура СтабПериодыУстановитьДатуПоверкиПУ(ссылка,Параметры)
		
	ПараметрыЗапроса  	= параметры.ПараметрыЗапроса;	
	МВТ 			= Новый МенеджерВременныхТаблиц;
	Запрос  		= Новый Запрос;
	Запрос.УстановитьПараметр("ссылка",			ссылка);
	Запрос.УстановитьПараметр("ЧастныйСектор",	ПараметрыЗапроса.ЧастныйСектор);
	Запрос.УстановитьПараметр("Строение",		ПараметрыЗапроса.Строение);
	Запрос.УстановитьПараметр("Помещение",		ПараметрыЗапроса.Помещение);
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.Текст 	=
	"ВЫБРАТЬ
	|	энргУстановитьДатуПоверкиПУ.Организация,
	|	энргУстановитьДатуПоверкиПУ.ПериодНачисления,
	|	энргУстановитьДатуПоверкиПУ.Район,
	|	&ЧастныйСектор КАК ЧастныйСектор,
	|	&Строение КАК Строение,
	|	&Помещение КАК Помещение,
	|	энргУстановитьДатуПоверкиПУ.Ссылка
	|ПОМЕСТИТЬ Шапка
	|ИЗ
	|	Документ.энргУстановитьДатуПоверкиПУ КАК энргУстановитьДатуПоверкиПУ
	|ГДЕ
	|	энргУстановитьДатуПоверкиПУ.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Шапка.Организация,
	|	Шапка.ПериодНачисления,
	|	Шапка.Район,
	|	Шапка.ЧастныйСектор,
	|	Шапка.Строение,
	|	Шапка.Помещение,
	|	энргУстановитьДатуПоверкиПУТочкиУчета.Услуга,
	|	энргУстановитьДатуПоверкиПУТочкиУчета.ТочкаУчета,
	|	энргУстановитьДатуПоверкиПУТочкиУчета.ДатаПоверкиСчетчика  КАК ДатаПоверки
	|ПОМЕСТИТЬ ВозможноСоставные
	|ИЗ
	|	Шапка КАК Шапка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргУстановитьДатуПоверкиПУ.ТочкиУчета КАК энргУстановитьДатуПоверкиПУТочкиУчета
	|		ПО Шапка.Ссылка = энргУстановитьДатуПоверкиПУТочкиУчета.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВозможноСоставные.Организация,
	|	ВозможноСоставные.ПериодНачисления,
	|	ВозможноСоставные.Район,
	|	ВозможноСоставные.ЧастныйСектор,
	|	ВозможноСоставные.Строение,
	|	ВозможноСоставные.Помещение,
	|	ВЫБОР
	|		КОГДА энргВидыУслугСоставляющиеУслуг.Ссылка ЕСТЬ NULL 
	|			ТОГДА ВозможноСоставные.Услуга
	|		ИНАЧЕ энргВидыУслугСоставляющиеУслуг.Услуга
	|	КОНЕЦ КАК Услуга,
	|	ВозможноСоставные.ТочкаУчета,
	|	ВозможноСоставные.ДатаПоверки
	|ПОМЕСТИТЬ ДанныеПоверки
	|ИЗ
	|	ВозможноСоставные КАК ВозможноСоставные
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг.СоставляющиеУслуг КАК энргВидыУслугСоставляющиеУслуг
	|		ПО ВозможноСоставные.Услуга = энргВидыУслугСоставляющиеУслуг.Ссылка";	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("Организация");
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Район");
	Измерения.Добавить("ЧастныйСектор");
	Измерения.Добавить("Строение");
	Измерения.Добавить("Помещение");
	Измерения.Добавить("Услуга");
	Измерения.Добавить("ТочкаУчета");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("ДатаПоверки");
	
	Параметры.вставить("Измерения",Измерения);
	Параметры.вставить("Ресурсы",Ресурсы);
	
	ЗаполнитьНомераПозиций(МВТ,Параметры,"ДанныеПоверки"); 
	
КонецПроцедуры

Процедура СтабПериодыСменаПоставщика(ссылка,Параметры)
	
	ВызватьИсключение "Ой ой ой";
	
	//
	//ПарметрыЗапроса  	= параметры.ПараметрыЗапроса;	
	//МВТ 			= Новый МенеджерВременныхТаблиц;
	//Запрос  		= Новый Запрос;
	//Запрос.УстановитьПараметр("ссылка",			ссылка);
	//Запрос.МенеджерВременныхТаблиц = МВТ;
	//Запрос.Текст 	="ВЫБРАТЬ
	//|	энргСменаПоставщика.Организация,
	//|	энргСменаПоставщика.ПериодНачисления,
	//|	энргСменаПоставщика.Район,
	//|	энргСменаПоставщика.МКД,
	//|	энргСменаПоставщика.Абонент,
	//|	энргСменаПоставщика.Ссылка,
	//|	энргСменаПоставщикаТочкиУчета.Услуга,
	//|	энргСменаПоставщикаТочкиУчета.ТочкаУчета,
	//|	энргСменаПоставщикаТочкиУчета.Поставщик,
	//|	энргСменаПоставщикаТочкиУчета.ЭтоСоставнаяУслуга,
	//|	энргСменаПоставщикаТочкиУчета.IDСтроки
	//|ПОМЕСТИТЬ Шапка
	//|ИЗ
	//|	Документ.энргСменаПоставщика.ТочкиУчета КАК энргСменаПоставщикаТочкиУчета
	//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргСменаПоставщика КАК энргСменаПоставщика
	//|		ПО энргСменаПоставщикаТочкиУчета.Ссылка = энргСменаПоставщика.Ссылка
	//|			И (энргСменаПоставщика.Ссылка = &Ссылка)
	//|			И (энргСменаПоставщикаТочкиУчета.Ссылка = &Ссылка)
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	Шапка.Организация,
	//|	Шапка.ПериодНачисления,
	//|	Шапка.Район,
	//|	Шапка.МКД,
	//|	Шапка.Абонент,
	//|	ВЫБОР
	//|		КОГДА Шапка.ЭтоСоставнаяУслуга
	//|			ТОГДА энргСменаПоставщикаПоставщикиСоставныхУслуг.ЧастьСоставнойУслуги
	//|		ИНАЧЕ Шапка.Услуга
	//|	КОНЕЦ КАК Услуга,
	//|	Шапка.ТочкаУчета,
	//|	ВЫБОР
	//|		КОГДА Шапка.ЭтоСоставнаяУслуга
	//|			ТОГДА энргСменаПоставщикаПоставщикиСоставныхУслуг.Поставщик
	//|		ИНАЧЕ энргСменаПоставщикаПоставщикиСоставныхУслуг.Поставщик
	//|	КОНЕЦ КАК Поставщик
	//|ПОМЕСТИТЬ ДанныеПоставщика
	//|ИЗ
	//|	Шапка КАК Шапка
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.энргСменаПоставщика.ПоставщикиСоставныхУслуг КАК энргСменаПоставщикаПоставщикиСоставныхУслуг
	//|		ПО Шапка.Ссылка = энргСменаПоставщикаПоставщикиСоставныхУслуг.Ссылка
	//|			И (Шапка.ЭтоСоставнаяУслуга)
	//|			И Шапка.IDСтроки = энргСменаПоставщикаПоставщикиСоставныхУслуг.IDСтроки";	
	//Запрос.Выполнить();
	//
	//Измерения = Новый Массив;
	//Измерения.Добавить("Организация");
	//Измерения.Добавить("ПериодНачисления");
	//Измерения.Добавить("Район");
	//Измерения.Добавить("МКД");
	//Измерения.Добавить("Абонент");
	//Измерения.Добавить("Услуга");
	//Измерения.Добавить("ТочкаУчета");
	//
	//Ресурсы = Новый Массив;
	//Ресурсы.Добавить("Поставщик");
	//
	//Параметры.вставить("Измерения",Измерения);
	//Параметры.вставить("Ресурсы",Ресурсы);
	//
	//ЗаполнитьНомераПозиций(МВТ,Параметры,"ДанныеПоставщика"); 
	
КонецПроцедуры

Процедура СтабПериодыВидДифференцированностиПриборУчета(ссылка,Параметры)
	
	ВызватьИсключение "Ой ой ой";
	
	//ПарметрыЗапроса = Параметры.ПараметрыЗапроса;	
	//МВТ 			= Новый МенеджерВременныхТаблиц;
	//Запрос  		= Новый Запрос;
	//Запрос.УстановитьПараметр("ссылка",			ссылка);
	//Запрос.МенеджерВременныхТаблиц = МВТ;
	//Запрос.Текст 	=
	//"ВЫБРАТЬ * ИЗ (ВЫБРАТЬ
	//|	энргУстановитьВидДифференцированностиПриборУчетаТочкиУчета.Услуга,
	//|	энргУстановитьВидДифференцированностиПриборУчетаТочкиУчета.Услуга,
	//|	энргУстановитьВидДифференцированностиПриборУчетаТочкиУчета.ТочкаУчета,
	//|	энргУстановитьВидДифференцированностиПриборУчетаШкалы.ВидДифференцированностиПосле КАК ВидДифференцированности
	//|
	//|ИЗ
	//|	Документ.энргУстановитьВидДифференцированностиПриборУчета.ТочкиУчета КАК энргУстановитьВидДифференцированностиПриборУчетаТочкиУчета
	//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргУстановитьВидДифференцированностиПриборУчета.Шкалы КАК энргУстановитьВидДифференцированностиПриборУчетаШкалы
	//|		ПО энргУстановитьВидДифференцированностиПриборУчетаТочкиУчета.Ссылка = энргУстановитьВидДифференцированностиПриборУчетаШкалы.Ссылка
	//|			И (энргУстановитьВидДифференцированностиПриборУчетаТочкиУчета.Ссылка = &Ссылка)
	//|			И (энргУстановитьВидДифференцированностиПриборУчетаШкалы.Ссылка = &Ссылка)) КАК ВложенныйЗапрос";	
	//Запрос.Выполнить();
	//
	//Измерения = Новый Массив;
	//Измерения.Добавить("Организация");
	//Измерения.Добавить("ПериодНачисления");
	//Измерения.Добавить("Район");
	//Измерения.Добавить("МКД");
	//Измерения.Добавить("Абонент");
	//Измерения.Добавить("Услуга");
	//Измерения.Добавить("ТочкаУчета");
	//
	//Ресурсы = Новый Массив;
	//Ресурсы.Добавить("ВидДифференцированности");
	//
	//Параметры.вставить("Измерения",Измерения);
	//Параметры.вставить("Ресурсы",Ресурсы);
	//
	//ЗаполнитьНомераПозиций(МВТ,Параметры,"ДанныеВидДифференцированности"); 
	
КонецПроцедуры

Процедура СтабПериодыУстановитьКоличествоСобственников(Ссылка, Параметры)
	
	МВТ 							= Новый МенеджерВременныхТаблиц;
	ПараметрыЗапроса 				= Параметры.ПараметрыЗапроса;
		
	Запрос  						= Новый Запрос;
	Запрос.УстановитьПараметр("ссылка",			ссылка);
	Запрос.УстановитьПараметр("МоментВремени",	Параметры.МоментВремени);  
	Запрос.МенеджерВременныхТаблиц 	= МВТ;	
	
	ПараметрыЗапроса  				= параметры.ПараметрыЗапроса;	  	
	для Каждого стр из ПараметрыЗапроса цикл
		Запрос.УстановитьПараметр(стр.ключ,стр.значение); 
	КонецЦикла;  
	
	Запрос.Текст 					=
	"ВЫБРАТЬ
	|	энргУстановитьКоличествоСобственников.Организация КАК Организация,
	|	энргУстановитьКоличествоСобственников.ПериодНачисления КАК ПериодНачисления,
	|	энргУстановитьКоличествоСобственников.Район КАК Район,
	|	&ЧастныйСектор КАК ЧастныйСектор,
	|	&Строение КАК Строение,
	|	&Помещение КАК Помещение,
	|	&КоличествоЖильцов КАК КоличествоЖильцов,
	|	энргУстановитьКоличествоСобственников.Количество КАК КоличествоСобственников,
	|	ЗНАЧЕНИЕ(Справочник.энргКлючиНормативов.ПустаяСсылка) КАК КлючНорматива,
	|	ЗНАЧЕНИЕ(Справочник.энргКлючиНормативов.ПустаяСсылка) КАК КлючСоцНорматива
	|ПОМЕСТИТЬ ДанныеДокумента
	|ИЗ
	|	Документ.энргУстановитьКоличествоСобственников КАК энргУстановитьКоличествоСобственников
	|ГДЕ
	|	энргУстановитьКоличествоСобственников.Ссылка = &Ссылка";
	
	
	Ресурсы = Новый Массив;
	Если ЗначениеЗаполнено(Параметры.ПараметрыЗапроса.Помещение.Родитель) И Параметры.ПараметрыЗапроса.Помещение = ссылка.КлючПомещения.Помещение Тогда
		Ресурсы.Добавить("КоличествоСобственников");
		Запрос.УстановитьПараметр("КоличествоЖильцов",			0);
	ИначеЕсли НЕ ЗначениеЗаполнено(Параметры.ПараметрыЗапроса.Помещение.Родитель) и Параметры.Свойство("ПомещениеСРазделеннымиЛС") И Параметры.ПомещениеСРазделеннымиЛС Тогда
		Запрос.УстановитьПараметр("КоличествоЖильцов",			ПолучитьКоличествоЖильцов(Ссылка.Организация, Ссылка.Район,Параметры.МоментВремени, ПараметрыЗапроса.Помещение));
		Ресурсы.Добавить("КоличествоЖильцов");
	Иначе
		Запрос.УстановитьПараметр("КоличествоЖильцов",			0);
	КонецЕсли;
	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("Организация");
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Район");
	Измерения.Добавить("ЧастныйСектор");
	Измерения.Добавить("Строение");
	Измерения.Добавить("Помещение");
		
	
	Ресурсы.Добавить("КлючНорматива");
	Ресурсы.Добавить("КлючСоцНорматива");
		
	Параметры.вставить("Измерения",Измерения);
	Параметры.вставить("Ресурсы",Ресурсы);
	
	ЗаполнитьНомераПозиций(МВТ,Параметры,"ДанныеДокумента");
	
КонецПроцедуры

Процедура СтабПериодыУстановитьКоличествоПроживающих(Ссылка, Параметры)
	
	МВТ 							= Новый МенеджерВременныхТаблиц;
	ПараметрыЗапроса 				= Параметры.ПараметрыЗапроса;
		
	Запрос  						= Новый Запрос;
	Запрос.МенеджерВременныхТаблиц 	= МВТ;
	Запрос.УстановитьПараметр("ссылка",			ссылка);
	Запрос.УстановитьПараметр("МоментВремени",	Параметры.МоментВремени);
			
	ПараметрыЗапроса  				= Параметры.ПараметрыЗапроса;	  	
	для Каждого стр из ПараметрыЗапроса цикл
		Запрос.УстановитьПараметр(стр.ключ,стр.значение); 
	КонецЦикла;  
	
	Запрос.Текст 					=
	"ВЫБРАТЬ
	|	энргУстановитьКоличествоПроживающих.Организация КАК Организация,
	|	энргУстановитьКоличествоПроживающих.ПериодНачисления КАК ПериодНачисления,
	|	энргУстановитьКоличествоПроживающих.Район КАК Район,
	|	&ЧастныйСектор КАК ЧастныйСектор,
	|	&Строение КАК Строение,
	|	&Помещение КАК Помещение,
	|	&КоличествоЖильцов КАК КоличествоЖильцов,
	|	энргУстановитьКоличествоПроживающих.Количество КАК КоличествоПроживающих,
	|	ЗНАЧЕНИЕ(Справочник.энргКлючиНормативов.ПустаяСсылка) КАК КлючНорматива,
	|	ЗНАЧЕНИЕ(Справочник.энргКлючиНормативов.ПустаяСсылка) КАК КлючСоцНорматива
	|ПОМЕСТИТЬ ДанныеДокумента
	|ИЗ
	|	Документ.энргУстановитьКоличествоПроживающих КАК энргУстановитьКоличествоПроживающих
	|ГДЕ
	|	энргУстановитьКоличествоПроживающих.Ссылка = &Ссылка";
	
	Ресурсы = Новый Массив;
	Если ЗначениеЗаполнено(Параметры.ПараметрыЗапроса.Помещение.Родитель) И Параметры.ПараметрыЗапроса.Помещение = ссылка.КлючПомещения.Помещение Тогда
		Ресурсы.Добавить("КоличествоПроживающих");
		Запрос.УстановитьПараметр("КоличествоЖильцов",			0);
	ИначеЕсли НЕ ЗначениеЗаполнено(Параметры.ПараметрыЗапроса.Помещение.Родитель) и Параметры.Свойство("ПомещениеСРазделеннымиЛС") И Параметры.ПомещениеСРазделеннымиЛС Тогда
		Запрос.УстановитьПараметр("КоличествоЖильцов",			ПолучитьКоличествоЖильцов(Ссылка.Организация, Ссылка.Район,Параметры.МоментВремени, ПараметрыЗапроса.Помещение));
		Ресурсы.Добавить("КоличествоЖильцов");
	Иначе
		Запрос.УстановитьПараметр("КоличествоЖильцов",			0);
	КонецЕсли;
	
	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("Организация");
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Район");
	Измерения.Добавить("ЧастныйСектор");
	Измерения.Добавить("Строение");
	Измерения.Добавить("Помещение");
		
	
	Ресурсы.Добавить("КлючНорматива");
	Ресурсы.Добавить("КлючСоцНорматива");
	
	Параметры.вставить("Измерения",Измерения);
	Параметры.вставить("Ресурсы",Ресурсы);
	
	ЗаполнитьНомераПозиций(МВТ,Параметры,"ДанныеДокумента");
	
КонецПроцедуры

Процедура СтабПериодыУстановитьСпособРаспределенияОбъемаПомещения(ссылка,Параметры)
	
	ПараметрыЗапроса  	= параметры.ПараметрыЗапроса;	
	МВТ 			= Новый МенеджерВременныхТаблиц;
	Запрос  		= Новый Запрос;
	
	для Каждого стр из ПараметрыЗапроса цикл
		Запрос.УстановитьПараметр(стр.ключ,стр.значение); 
	КонецЦикла;		
	
	Запрос.УстановитьПараметр("ссылка",			ссылка);
	
	Запрос.МенеджерВременныхТаблиц = МВТ;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	энргСоглашениеОПотребленииВПомещении.Организация КАК Организация,
	|	энргСоглашениеОПотребленииВПомещении.Район КАК Район,
	|	энргСоглашениеОПотребленииВПомещении.КлючПомещения КАК КлючПомещения,
	|	&ЧастныйСектор КАК ЧастныйСектор,
	|	&Строение КАК Строение,
	|	&Помещение КАК Помещение,
	|	энргСоглашениеОПотребленииВПомещении.ПериодНачисления КАК ПериодНачисления,
	|	энргСоглашениеОПотребленииВПомещении.Ссылка КАК Ссылка,
	|	энргСоглашениеОПотребленииВПомещении.Услуга КАК Услуга,
	|	энргВидыУслуг.СоставнаяУслуга КАК СоставнаяУслуга
	|ПОМЕСТИТЬ ДанныеШапки
	|ИЗ
	|	Документ.энргСоглашениеОПотребленииВПомещении КАК энргСоглашениеОПотребленииВПомещении
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг КАК энргВидыУслуг
	|		ПО энргСоглашениеОПотребленииВПомещении.Услуга = энргВидыУслуг.Ссылка
	|ГДЕ
	|	энргСоглашениеОПотребленииВПомещении.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.Район КАК Район,
	|	ВложенныйЗапрос.КлючПомещения КАК КлючПомещения,
	|	ВложенныйЗапрос.ПериодНачисления КАК ПериодНачисления,
	|	ВложенныйЗапрос.Услуга КАК Услуга,
	|	ВложенныйЗапрос.Абонент КАК Абонент,
	|	ВложенныйЗапрос.СпособРаспределенияОбъемаПомещения КАК СпособРаспределенияОбъемаПомещения,
	|	ВложенныйЗапрос.ТочкаУчета КАК ТочкаУчета,
	|	ВложенныйЗапрос.КоэффициентРаспределенияОстатка КАК КоэффициентРаспределенияОстатка,
	|	ВложенныйЗапрос.Ссылка КАК Ссылка,
	|	ВложенныйЗапрос.IDСтроки КАК IDСтроки,
	|	ВложенныйЗапрос.ЧастныйСектор КАК ЧастныйСектор,
	|	ВложенныйЗапрос.Строение КАК Строение,
	|	ВложенныйЗапрос.Помещение КАК Помещение
	|ПОМЕСТИТЬ ДанныеАбонентов
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеШапки.Организация КАК Организация,
	|		ДанныеШапки.Район КАК Район,
	|		ДанныеШапки.ПериодНачисления КАК ПериодНачисления,
	|		ЕСТЬNULL(энргВидыУслугСоставляющиеУслуг.Услуга, ТЧАбоненты.Услуга) КАК Услуга,
	|		ТЧАбоненты.Абонент КАК Абонент,
	|		ТЧАбоненты.КлючПомещения КАК КлючПомещения,
	|		ТЧАбоненты.СпособРаспределения КАК СпособРаспределенияОбъемаПомещения,
	|		ТЧАбоненты.ТочкаУчета КАК ТочкаУчета,
	|		ТЧАбоненты.КоэффициентРаспределенияОстатка КАК КоэффициентРаспределенияОстатка,
	|		ДанныеШапки.Ссылка КАК Ссылка,
	|		ТЧАбоненты.IDСтроки КАК IDСтроки,
	|		ДанныеШапки.ЧастныйСектор КАК ЧастныйСектор,
	|		ДанныеШапки.Строение КАК Строение,
	|		ДанныеШапки.Помещение КАК Помещение
	|	ИЗ
	|		Документ.энргСоглашениеОПотребленииВПомещении.Абоненты КАК ТЧАбоненты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеШапки КАК ДанныеШапки
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг.СоставляющиеУслуг КАК энргВидыУслугСоставляющиеУслуг
	|				ПО ДанныеШапки.Услуга = энргВидыУслугСоставляющиеУслуг.Ссылка
	|			ПО (ТЧАбоненты.Ссылка = &Ссылка)) КАК ВложенныйЗапрос
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.энргКлючиПомещений КАК энргКлючиПомещений
	|		ПО ВложенныйЗапрос.КлючПомещения = энргКлючиПомещений.КлючПомещения
	|			И (энргКлючиПомещений.Строение = &Строение)
	|			И (энргКлючиПомещений.Помещение = &Помещение)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеАбонентов.Ссылка КАК Ссылка,
	|	ДанныеАбонентов.Абонент КАК Абонент,
	|	ДанныеАбонентов.ТочкаУчета КАК ТочкаУчета,
	|	энргСоглашениеОПотребленииВПомещенииФиксированныеОбъемы.ФиксированныйОбъемПотребления КАК ФиксированныйОбъемПотребления,
	|	ДанныеАбонентов.Услуга КАК Услуга
	|ПОМЕСТИТЬ ФиксОбъемы
	|ИЗ
	|	ДанныеАбонентов КАК ДанныеАбонентов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргСоглашениеОПотребленииВПомещении.ФиксированныеОбъемы КАК энргСоглашениеОПотребленииВПомещенииФиксированныеОбъемы
	|		ПО ДанныеАбонентов.Ссылка = энргСоглашениеОПотребленииВПомещенииФиксированныеОбъемы.Ссылка
	|			И ДанныеАбонентов.IDСтроки = энргСоглашениеОПотребленииВПомещенииФиксированныеОбъемы.IDСтроки
	|			И (энргСоглашениеОПотребленииВПомещенииФиксированныеОбъемы.Ссылка = &Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеАбонентов.Ссылка КАК Ссылка,
	|	ДанныеАбонентов.Абонент КАК Абонент,
	|	ДанныеАбонентов.ТочкаУчета КАК ТочкаУчета,
	|	ДанныеАбонентов.Услуга КАК Услуга,
	|	энргСоглашениеОПотребленииВПомещенииДолиРаспределенияОбъемаПомещения.ДоляПотребленияЧислитель КАК ДоляПотребленияЧислитель,
	|	энргСоглашениеОПотребленииВПомещенииДолиРаспределенияОбъемаПомещения.ДоляПотребленияЗнаменатель КАК ДоляПотребленияЗнаменатель
	|ПОМЕСТИТЬ ДолиПотребления
	|ИЗ
	|	ДанныеАбонентов КАК ДанныеАбонентов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргСоглашениеОПотребленииВПомещении.ДолиРаспределенияОбъемаПомещения КАК энргСоглашениеОПотребленииВПомещенииДолиРаспределенияОбъемаПомещения
	|		ПО ДанныеАбонентов.Ссылка = энргСоглашениеОПотребленииВПомещенииДолиРаспределенияОбъемаПомещения.Ссылка
	|			И ДанныеАбонентов.IDСтроки = энргСоглашениеОПотребленииВПомещенииДолиРаспределенияОбъемаПомещения.IDСтроки
	|			И (энргСоглашениеОПотребленииВПомещенииДолиРаспределенияОбъемаПомещения.Ссылка = &Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеАбонентов.Организация КАК Организация,
	|	ДанныеАбонентов.ПериодНачисления КАК ПериодНачисления,
	|	ДанныеАбонентов.Район КАК Район,
	|	ДанныеАбонентов.ЧастныйСектор КАК ЧастныйСектор,
	|	ДанныеАбонентов.Строение КАК Строение,
	|	ДанныеАбонентов.Помещение КАК Помещение,
	|	ДанныеАбонентов.Услуга КАК Услуга,
	|	ДанныеАбонентов.ТочкаУчета КАК ТочкаУчета,
	|	ДанныеАбонентов.СпособРаспределенияОбъемаПомещения КАК СпособРаспределенияОбъемаПомещения,
	|	ДанныеАбонентов.КоэффициентРаспределенияОстатка КАК КоэффициентРаспределенияОстатка,
	|	ЕСТЬNULL(ДолиПотребления.ДоляПотребленияЧислитель, 0) КАК ДоляПотребленияЧислитель,
	|	ЕСТЬNULL(ДолиПотребления.ДоляПотребленияЗнаменатель, 0) КАК ДоляПотребленияЗнаменатель,
	|	ЕСТЬNULL(ФиксОбъемы.ФиксированныйОбъемПотребления, 0) КАК ФиксированныйОбъемПотребления
	|ПОМЕСТИТЬ ДанныеДокумента
	|ИЗ
	|	ДанныеАбонентов КАК ДанныеАбонентов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ФиксОбъемы КАК ФиксОбъемы
	|		ПО ДанныеАбонентов.Абонент = ФиксОбъемы.Абонент
	|			И ДанныеАбонентов.ТочкаУчета = ФиксОбъемы.ТочкаУчета
	|			И ДанныеАбонентов.Услуга = ФиксОбъемы.Услуга
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДолиПотребления КАК ДолиПотребления
	|		ПО ДанныеАбонентов.Абонент = ДолиПотребления.Абонент
	|			И ДанныеАбонентов.ТочкаУчета = ДолиПотребления.ТочкаУчета
	|			И ДанныеАбонентов.Услуга = ДолиПотребления.Услуга";
	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("Организация");
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Район");
	Измерения.Добавить("ЧастныйСектор"); 
	Измерения.Добавить("Строение"); 
	Измерения.Добавить("Помещение");
	Измерения.Добавить("ТочкаУчета");
	Измерения.Добавить("Услуга");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("СпособРаспределенияОбъемаПомещения");
	Ресурсы.Добавить("КоэффициентРаспределенияОстатка");
	Ресурсы.Добавить("ФиксированныйОбъемПотребления");
	Ресурсы.Добавить("ДоляПотребленияЧислитель");
	Ресурсы.Добавить("ДоляПотребленияЗнаменатель");
	
	Параметры.вставить("Измерения",Измерения);
	Параметры.вставить("Ресурсы",Ресурсы);
	
	ЗаполнитьНомераПозиций(МВТ,Параметры,"ДанныеДокумента");
	
КонецПроцедуры

Процедура СтабПериодыПереводПомещенияВПомещениеСРазделеннымиЛС(ссылка,Параметры)
	
	ПараметрыЗапроса  	= параметры.ПараметрыЗапроса;	
	МВТ 			= Новый МенеджерВременныхТаблиц;
	Запрос  		= Новый Запрос;
	
	для Каждого стр из ПараметрыЗапроса цикл
		Запрос.УстановитьПараметр(стр.ключ,стр.значение); 
	КонецЦикла;	
	
	Запрос.УстановитьПараметр("ссылка",			ссылка);
	
	Запрос.МенеджерВременныхТаблиц = МВТ;
	
	Запрос.Текст =  ТекстЗапросаПереводПомещенияВПомещениеСРазделеннымиЛС();
	
	//Результат 													= Запрос.Выполнить();
	//Выборка														= Результат.Выбрать();
	//Пока Выборка.Следующий() Цикл
	//	СтрокаСтабПериоды										= Параметры.НаборСтабильныеПериоды.добавить();
	//	ЗаполнитьЗначенияСвойств(СтрокаСтабПериоды,Выборка);
	//	
	//	СтрокаПоследнихНомеров  								= Параметры.НаборПоследнихНомеров.добавить();
	//	ЗаполнитьЗначенияСвойств(СтрокаПоследнихНомеров,Выборка);
	//	СтрокаПоследнихНомеров.период 							= параметры.ПараметрыЗапроса.ПериодРегистрации;		
	//КонецЦикла;
	//
	//Запрос.Текст 												= ТекстЗапросаШкалыПереводПомещенияВПомещениеСРазделеннымиЛС();
	//Запрос.УстановитьПараметр("ПериодНачисления",	Параметры.ПериодНачисления);
	//Запрос.УстановитьПараметр("ДатаДокумента", 	  	Параметры.ДатаДок);
	//Запрос.УстановитьПараметр("ЧастныйСектор", 		ПараметрыЗапроса.ЧастныйСектор);
	//Результат 													= Запрос.Выполнить();
	//Выборка														= Результат.Выбрать();
	//Пока Выборка.Следующий() Цикл
	//	СтрокаСтабПериоды										= Параметры.НаборСтабильныеПериодыШкалы.добавить();
	//	ЗаполнитьЗначенияСвойств(СтрокаСтабПериоды,Выборка);		
	//КонецЦикла;	

	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Организация");
	Измерения.Добавить("Район");
	Измерения.Добавить("ЧастныйСектор");
	Измерения.Добавить("Строение");
	Измерения.Добавить("Помещение");
	Измерения.Добавить("Услуга");
	Измерения.Добавить("ТочкаУчета");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("Абонент");
	Ресурсы.Добавить("КоличествоЖильцов");
	Ресурсы.Добавить("ЯвляетсяПомещениемСРазделеннымиЛС");
	
	Параметры.вставить("Измерения",				Измерения);
	Параметры.вставить("Ресурсы",				Ресурсы);
	Параметры.вставить("ИзменяетСостояниеПУ",	Истина);
	
	ЗаполнитьНомераПозиций(МВТ,Параметры,"ДанныеПоПомещению"); 	
	
	
КонецПроцедуры

Процедура СтабПериодыДобавитьСтрокуОтключенияУслугПоСтаромуПомещению(ссылка,Параметры)
	
	ПараметрыЗапроса= Параметры.ПараметрыЗапроса;
	МВТ 			= Новый МенеджерВременныхТаблиц;
	Запрос  		= Новый Запрос;
	Запрос.УстановитьПараметр("ссылка",				ссылка);
	Запрос.УстановитьПараметр("ПериодНачисления",	Параметры.ПериодНачисления);
	Запрос.УстановитьПараметр("МоментВремени",		Параметры.МоментВремени);
	Запрос.УстановитьПараметр("ГраницаИсключая",	Новый Граница(Параметры.МоментВремени,ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("ПериодРегистрации",	Параметры.ПараметрыЗапроса.ПериодРегистрации);
	Запрос.УстановитьПараметр("Период",				Параметры.ДатаДок);
	
	для Каждого стр из ПараметрыЗапроса цикл
		Запрос.УстановитьПараметр(стр.ключ,стр.значение); 
	КонецЦикла;	   	
	
//	Запрос.УстановитьПараметр("Помещение",		ПараметрыЗапроса.Помещение.Родитель);

	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.Текст 	=
	"ВЫБРАТЬ
	|	энргПереводПомещенияВПомещениеСРазделеннымиЛС.Ссылка КАК Ссылка,
	|	энргПереводПомещенияВПомещениеСРазделеннымиЛС.Дата КАК Дата,
	|	энргПереводПомещенияВПомещениеСРазделеннымиЛС.ПериодНачисления КАК ПериодНачисления,
	|	энргПереводПомещенияВПомещениеСРазделеннымиЛС.Район КАК Район,
	|	&ЧастныйСектор КАК ЧастныйСектор,
	|	&Строение КАК Строение,
	|	&Помещение КАК Помещение,
	|	энргКлючиПомещений.КлючПомещения КАК КлючПомещения,
	|	энргПереводПомещенияВПомещениеСРазделеннымиЛС.Организация КАК Организация
	|ПОМЕСТИТЬ Шапка
	|ИЗ
	|	Документ.энргПереводПомещенияВПомещениеСРазделеннымиЛС КАК энргПереводПомещенияВПомещениеСРазделеннымиЛС,
	|	РегистрСведений.энргКлючиПомещений КАК энргКлючиПомещений
	|ГДЕ
	|	энргПереводПомещенияВПомещениеСРазделеннымиЛС.Ссылка = &Ссылка
	|	И энргКлючиПомещений.Строение = &Строение
	|	И энргКлючиПомещений.Помещение = &Помещение
	|	И энргКлючиПомещений.ЧастныйСектор = &ЧастныйСектор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	энргВладельцыТочекУчетаСрезПоследних.Организация КАК Организация,
	|	энргВладельцыТочекУчетаСрезПоследних.Район КАК Район,
	|	энргВладельцыТочекУчетаСрезПоследних.ТочкаУчета КАК ТочкаУчета,
	|	энргВладельцыТочекУчетаСрезПоследних.АбонентВладелец КАК АбонентВладелец,
	|	Шапка.ЧастныйСектор КАК ЧастныйСектор,
	|	Шапка.Строение КАК Строение,
	|	Шапка.Помещение КАК Помещение,
	|	Шапка.ПериодНачисления КАК ПериодНачисления
	|ПОМЕСТИТЬ ТочкиУчетаПомещения
	|ИЗ
	|	РегистрСведений.энргВладельцыТочекУчета.СрезПоследних(
	|			&МоментВремени,
	|			Организация = &Организация
	|				И Район = &Район) КАК энргВладельцыТочекУчетаСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Шапка КАК Шапка
	|		ПО энргВладельцыТочекУчетаСрезПоследних.Организация = Шапка.Организация
	|			И энргВладельцыТочекУчетаСрезПоследних.Район = Шапка.Район
	|			И энргВладельцыТочекУчетаСрезПоследних.АбонентВладелец = Шапка.КлючПомещения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	энргАктивностьТочекУчетаСрезПоследних.Организация КАК Организация,
	|	энргАктивностьТочекУчетаСрезПоследних.Район КАК Район,
	|	энргАктивностьТочекУчетаСрезПоследних.КлючПомещения КАК КлючПомещения,
	|	энргАктивностьТочекУчетаСрезПоследних.ТочкаУчета КАК ТочкаУчета,
	|	ТочкиУчетаПомещения.ЧастныйСектор КАК ЧастныйСектор,
	|	ТочкиУчетаПомещения.Строение КАК Строение,
	|	ТочкиУчетаПомещения.Помещение КАК Помещение,
	|	ТочкиУчетаПомещения.ПериодНачисления КАК ПериодНачисления
	|ПОМЕСТИТЬ АктивныеТочкиУчетаПомещения
	|ИЗ
	|	ТочкиУчетаПомещения КАК ТочкиУчетаПомещения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.энргАктивностьТочекУчета.СрезПоследних(
	|				&МоментВремени,
	|				Организация = &Организация
	|					И Район = &Район
	|					И КлючПомещения В
	|						(ВЫБРАТЬ
	|							ТочкиУчетаПомещения.АбонентВладелец
	|						ИЗ
	|							ТочкиУчетаПомещения)) КАК энргАктивностьТочекУчетаСрезПоследних
	|		ПО ТочкиУчетаПомещения.Организация = энргАктивностьТочекУчетаСрезПоследних.Организация
	|			И ТочкиУчетаПомещения.Район = энргАктивностьТочекУчетаСрезПоследних.Район
	|			И ТочкиУчетаПомещения.АбонентВладелец = энргАктивностьТочекУчетаСрезПоследних.КлючПомещения
	|			И ТочкиУчетаПомещения.ТочкаУчета = энргАктивностьТочекУчетаСрезПоследних.ТочкаУчета
	|ГДЕ
	|	энргАктивностьТочекУчетаСрезПоследних.Состояние = ЗНАЧЕНИЕ(Перечисление.энргСостояниеТочекУчета.Включена)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	энргУслугиТочекУчетаСрезПоследних.Организация КАК Организация,
	|	энргУслугиТочекУчетаСрезПоследних.Район КАК Район,
	|	энргУслугиТочекУчетаСрезПоследних.КлючПомещения КАК КлючПомещения,
	|	энргУслугиТочекУчетаСрезПоследних.ТочкаУчета КАК ТочкаУчета,
	|	энргУслугиТочекУчетаСрезПоследних.Услуга КАК Услуга,
	|	АктивныеТочкиУчетаПомещения.ЧастныйСектор КАК ЧастныйСектор,
	|	АктивныеТочкиУчетаПомещения.Строение КАК Строение,
	|	АктивныеТочкиУчетаПомещения.Помещение КАК Помещение,
	|	АктивныеТочкиУчетаПомещения.ПериодНачисления КАК ПериодНачисления
	|ПОМЕСТИТЬ УслугиТочекУчета
	|ИЗ
	|	АктивныеТочкиУчетаПомещения КАК АктивныеТочкиУчетаПомещения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.энргУслугиТочекУчета.СрезПоследних(
	|				&МоментВремени,
	|				Организация = &Организация
	|					И Район = &Район
	|					И КлючПомещения В
	|						(ВЫБРАТЬ
	|							ТочкиУчетаПомещения.АбонентВладелец
	|						ИЗ
	|							ТочкиУчетаПомещения)) КАК энргУслугиТочекУчетаСрезПоследних
	|		ПО АктивныеТочкиУчетаПомещения.Организация = энргУслугиТочекУчетаСрезПоследних.Организация
	|			И АктивныеТочкиУчетаПомещения.Район = энргУслугиТочекУчетаСрезПоследних.Район
	|			И АктивныеТочкиУчетаПомещения.КлючПомещения = энргУслугиТочекУчетаСрезПоследних.КлючПомещения
	|			И АктивныеТочкиУчетаПомещения.ТочкаУчета = энргУслугиТочекУчетаСрезПоследних.ТочкаУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УслугиТочекУчета.ПериодНачисления КАК ПериодНачисления,
	|	УслугиТочекУчета.Район КАК Район,
	|	УслугиТочекУчета.ЧастныйСектор КАК ЧастныйСектор,
	|	УслугиТочекУчета.Строение КАК Строение,
	|	УслугиТочекУчета.Помещение КАК Помещение,
	|	ВЫБОР
	|		КОГДА энргВидыУслугСоставляющиеУслуг.Ссылка ЕСТЬ NULL
	|			ТОГДА УслугиТочекУчета.Услуга
	|		ИНАЧЕ энргВидыУслугСоставляющиеУслуг.Услуга
	|	КОНЕЦ КАК Услуга,
	|	УслугиТочекУчета.ТочкаУчета КАК ТочкаУчета,
	|	ЛОЖЬ КАК УслугаПодключена,
	|	ЛОЖЬ КАК ПриборВведен,
	|	ЛОЖЬ КАК РасчетПоФормуле,
	|	ЗНАЧЕНИЕ(Справочник.энргТочкиУчета.ПустаяСсылка) КАК ЗависимаяТочкаУчета,
	|	0 КАК КоэффициентРасчета,
	|	ИСТИНА КАК МенялосьСостояниеПУ,
	|	ИСТИНА КАК МенялосьСостояниеФормулы
	|ПОМЕСТИТЬ ОтключениеУслуги
	|ИЗ
	|	УслугиТочекУчета КАК УслугиТочекУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг.СоставляющиеУслуг КАК энргВидыУслугСоставляющиеУслуг
	|		ПО УслугиТочекУчета.Услуга = энргВидыУслугСоставляющиеУслуг.Ссылка";
	
	Запрос.Выполнить();
	
	
	Измерения = Новый Массив;
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Район");
	Измерения.Добавить("ЧастныйСектор");
	Измерения.Добавить("Строение");
	Измерения.Добавить("Помещение");
	Измерения.Добавить("Услуга");
	Измерения.Добавить("ТочкаУчета");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("УслугаПодключена");
	Ресурсы.Добавить("ПриборВведен");
	Ресурсы.Добавить("РасчетПоФормуле");
	Ресурсы.Добавить("ЗависимаяТочкаУчета");
	Ресурсы.Добавить("КоэффициентРасчета");
	Ресурсы.Добавить("МенялосьСостояниеПУ");
	Ресурсы.Добавить("МенялосьСостояниеФормулы");
	
	Параметры.вставить("Измерения",				Измерения);
	Параметры.вставить("Ресурсы",				Ресурсы);
	Параметры.вставить("ИзменяетСостояниеПУ",	Истина);
	
	ЗаполнитьНомераПозиций(МВТ,Параметры,"ОтключениеУслуги"); 	

	
КонецПроцедуры

Процедура СтабПериодыДобавитьСтрокуПоНовомуПомещению(ссылка,Параметры)
	
	ПараметрыЗапроса  	= параметры.ПараметрыЗапроса;	
	МВТ 			= Новый МенеджерВременныхТаблиц;
	Запрос  		= Новый Запрос;
	
	для Каждого стр из ПараметрыЗапроса цикл
		Запрос.УстановитьПараметр(стр.ключ,стр.значение); 
	КонецЦикла;	
	
	Запрос.УстановитьПараметр("ЧастьПомещения",	ПараметрыЗапроса.Помещение);
	Запрос.УстановитьПараметр("Помещение",		ПараметрыЗапроса.Помещение.Родитель);
	Запрос.УстановитьПараметр("ссылка",			ссылка);
	
	Запрос.МенеджерВременныхТаблиц = МВТ;
	
	Запрос.Текст =  ТекстЗапросаСтабПериодыПоНовомуПомещению();
	
	Результат 													= Запрос.Выполнить();
	Выборка														= Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаСтабПериоды										= Параметры.НаборСтабильныеПериоды.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСтабПериоды,Выборка);
		
		СтрокаПоследнихНомеров  								= Параметры.НаборПоследнихНомеров.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаПоследнихНомеров,Выборка);
		СтрокаПоследнихНомеров.период 							= параметры.ПараметрыЗапроса.ПериодРегистрации;		
	КонецЦикла;
	
	Запрос.Текст 												= ТекстЗапросаШкалыСтабПериодыПоНовомуПомещению();
	Запрос.УстановитьПараметр("ПериодНачисления",	Параметры.ПериодНачисления);
	Запрос.УстановитьПараметр("ДатаДокумента", 	  	Параметры.ДатаДок);
	Запрос.УстановитьПараметр("ЧастныйСектор", 		ПараметрыЗапроса.ЧастныйСектор);
	Результат 													= Запрос.Выполнить();
	Выборка														= Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаСтабПериоды										= Параметры.НаборСтабильныеПериодыШкалы.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСтабПериоды,Выборка);		
	КонецЦикла;	

	
КонецПроцедуры

Процедура СтабПериодыБлокировочныйАкт(ссылка,параметры)
	
	ПараметрыЗапроса= Параметры.ПараметрыЗапроса;
	МВТ 			= Новый МенеджерВременныхТаблиц;
	Запрос  		= Новый Запрос;
	Запрос.УстановитьПараметр("ссылка",				ссылка);
	Запрос.УстановитьПараметр("ПериодНачисления",	Параметры.ПериодНачисления);
	Запрос.УстановитьПараметр("МоментВремени",		Параметры.МоментВремени);
	Запрос.УстановитьПараметр("ГраницаИсключая",	Новый Граница(Параметры.МоментВремени,ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("ПериодРегистрации",	Параметры.ПараметрыЗапроса.ПериодРегистрации);
	Запрос.УстановитьПараметр("Период",				Параметры.ДатаДок);
	
	для Каждого стр из ПараметрыЗапроса цикл
		Запрос.УстановитьПараметр(стр.ключ,стр.значение); 
	КонецЦикла;	   	
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.Текст 	=
	"ВЫБРАТЬ
	|	энргПерерасчет.Ссылка КАК Ссылка,
	|	энргПерерасчет.Дата КАК Дата,
	|	энргПерерасчет.ПериодНачисления КАК ПериодНачисления,
	|	энргПерерасчет.Район КАК Район,
	|	&ЧастныйСектор КАК ЧастныйСектор,
	|	&Строение КАК Строение,
	|	&Помещение КАК Помещение
	|ПОМЕСТИТЬ Шапка
	|ИЗ
	|	Документ.энргПерерасчет КАК энргПерерасчет
	|ГДЕ
	|	энргПерерасчет.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Шапка.ПериодНачисления КАК ПериодНачисления,
	|	Шапка.Район КАК Район,
	|	Шапка.ЧастныйСектор КАК ЧастныйСектор,
	|	Шапка.Строение КАК Строение,
	|	Шапка.Помещение КАК Помещение,
	|	энргОбъемНачислений.Услуга КАК Услуга,
	|	энргОбъемНачислений.ТочкаУчета КАК ТочкаУчета,
	|	ИСТИНА КАК БлокировочныйАкт
	|ПОМЕСТИТЬ ДанныеНачислений
	|ИЗ
	|	Шапка КАК Шапка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.энргОбъемНачислений КАК энргОбъемНачислений
	|		ПО Шапка.Ссылка = энргОбъемНачислений.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеНачислений.ПериодНачисления КАК ПериодНачисления,
	|	ДанныеНачислений.Район КАК Район,
	|	ДанныеНачислений.ЧастныйСектор КАК ЧастныйСектор,
	|	ДанныеНачислений.Строение КАК Строение,
	|	ДанныеНачислений.Помещение КАК Помещение,
	|	ВЫБОР
	|		КОГДА энргВидыУслугСоставляющиеУслуг.Ссылка ЕСТЬ NULL
	|			ТОГДА ДанныеНачислений.Услуга
	|		ИНАЧЕ энргВидыУслугСоставляющиеУслуг.Услуга
	|	КОНЕЦ КАК Услуга,
	|	ДанныеНачислений.ТочкаУчета КАК ТочкаУчета,
	|	ДанныеНачислений.БлокировочныйАкт КАК БлокировочныйАкт
	|ПОМЕСТИТЬ УслугиБлокировочногоАкта
	|ИЗ
	|	ДанныеНачислений КАК ДанныеНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг.СоставляющиеУслуг КАК энргВидыУслугСоставляющиеУслуг
	|		ПО ДанныеНачислений.Услуга = энргВидыУслугСоставляющиеУслуг.Ссылка";
	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Район");
	Измерения.Добавить("ЧастныйСектор");
	Измерения.Добавить("Строение");
	Измерения.Добавить("Помещение");
	Измерения.Добавить("Услуга");
	Измерения.Добавить("ТочкаУчета");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("БлокировочныйАкт");
	
	Параметры.вставить("Измерения",				Измерения);
	Параметры.вставить("Ресурсы",				Ресурсы);
	Параметры.вставить("ИзменяетСостояниеПУ",	Истина);
	
	ЗаполнитьНомераПозиций(МВТ,Параметры,"УслугиБлокировочногоАкта"); 	
			
КонецПроцедуры

Процедура СтабПериодыИзменениеДиаметраСечения(ссылка,параметры)
	
	ПараметрыЗапроса  					= Параметры.ПараметрыЗапроса;		
	// TODO FIX ME
	
	МВТ  								= Новый МенеджерВременныхТаблиц;
	
	Запрос  							= Новый Запрос;
	Запрос.МенеджерВременныхТаблиц 		= МВТ;
	Запрос.УстановитьПараметр("ссылка",					ссылка);
	Запрос.УстановитьПараметр("Организация",			ПараметрыЗапроса.Организация);
	Запрос.УстановитьПараметр("Район",					ПараметрыЗапроса.Район);
	Запрос.УстановитьПараметр("Строение",				ПараметрыЗапроса.Строение);
	Запрос.УстановитьПараметр("Помещение",				ПараметрыЗапроса.Помещение);
	Запрос.УстановитьПараметр("ЧастныйСектор",			ПараметрыЗапроса.ЧастныйСектор);
		
	Запрос.УстановитьПараметр("МоментВремени",			Параметры.МоментВремени);
	Запрос.УстановитьПараметр("ПериодРегистрации",		Параметры.ПараметрыЗапроса.ПериодРегистрации);
	Запрос.УстановитьПараметр("ТипНачисления",	Перечисления.энргТипыНачислений.ИндивидуальныеНачисления);

	
	ПолучаемыеСвойства  = Новый Структура("КоличествоКомнат, КоличествоПрописанных");
	энргРаботаСЛицевымСчетомСервер.ПараметрыРасчетаПомещения(ПараметрыЗапроса.Организация,ПараметрыЗапроса.Район, Новый Структура("Строение, Помещение",ПараметрыЗапроса.Строение,ПараметрыЗапроса.Помещение),Параметры.МоментВремени,ПолучаемыеСвойства);
	Запрос.УстановитьПараметр("КоличествоПрописанных",	ПолучаемыеСвойства.КоличествоПрописанных);
	Запрос.УстановитьПараметр("КоличествоКомнат",		ПолучаемыеСвойства.КоличествоКомнат);
	
	Запрос.Текст 						=  ТекстЗапросаИзменениеДиаметраСечения();
	
	Результат							= Запрос.Выполнить();
	Выборка								= Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаСтабПериоды				= Параметры.НаборСтабильныеПериоды.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСтабПериоды,Выборка);
		СтрокаПоследнихНомеров  		= Параметры.НаборПоследнихНомеров.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаПоследнихНомеров,Выборка);
		СтрокаПоследнихНомеров.период 	= параметры.ПараметрыЗапроса.ПериодРегистрации;		
	КонецЦикла;
	
	//Запрос.Текст 						= ТекстЗапросаШкалыДиаметрСечения();
	//Запрос.УстановитьПараметр("ПериодНачисления", 	Параметры.ПериодНачисления);
	//Запрос.УстановитьПараметр("ДатаДокумента", 		Параметры.ДатаДок);
	//Запрос.УстановитьПараметр("ЧастныйСектор", 		ПараметрыЗапроса.ЧастныйСектор);
	//Результат 							= Запрос.Выполнить();
	//Выборка								= Результат.Выбрать();
	//Пока Выборка.Следующий() Цикл
	//	СтрокаСтабПериоды				= Параметры.НаборСтабильныеПериодыШкалы.добавить();
	//	ЗаполнитьЗначенияСвойств(СтрокаСтабПериоды,Выборка);		
	//КонецЦикла;
	
КонецПроцедуры

Процедура СтабПериодыИзменениеСхемыПодчиненностиТочекУчета(Ссылка, Параметры)
	
	МВТ  							= Новый МенеджерВременныхТаблиц;
	ПараметрыЗапроса 				= Параметры.ПараметрыЗапроса;
	
	Запрос  						= Новый Запрос;
	Запрос.МенеджерВременныхТаблиц 	= МВТ;
	Запрос.УстановитьПараметр("ссылка"			, ссылка);
	Запрос.УстановитьПараметр("Организация"		, ПараметрыЗапроса.Организация);
	Запрос.УстановитьПараметр("ПериодНачисления", Параметры.ПериодНачисления);
	Запрос.УстановитьПараметр("Район"			, ПараметрыЗапроса.Район);
	Запрос.УстановитьПараметр("ЧастныйСектор"	, ПараметрыЗапроса.ЧастныйСектор);
	Запрос.УстановитьПараметр("Строение"		, ПараметрыЗапроса.Строение);
	Запрос.УстановитьПараметр("Помещение"		, ПараметрыЗапроса.Помещение);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	энргУстановитьСхемуПодчиненностиТочекУчета.Организация КАК Организация,
	|	энргУстановитьСхемуПодчиненностиТочекУчета.ПериодНачисления КАК ПериодНачисления,
	|	энргУстановитьСхемуПодчиненностиТочекУчета.Район КАК Район,
	|	&ЧастныйСектор КАК ЧастныйСектор,
	|	&Строение КАК Строение,
	|	&Помещение КАК Помещение,
	|	энргУстановитьСхемуПодчиненностиТочекУчета.Ссылка КАК Ссылка,
	|	энргУстановитьСхемуПодчиненностиТочекУчета.Дата КАК Дата
	|ПОМЕСТИТЬ Шапка
	|ИЗ
	|	Документ.энргУстановитьСхемуПодчиненностиТочекУчета КАК энргУстановитьСхемуПодчиненностиТочекУчета
	|ГДЕ
	|	энргУстановитьСхемуПодчиненностиТочекУчета.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Шапка.Организация КАК Организация,
	|	Шапка.ПериодНачисления КАК ПериодНачисления,
	|	Шапка.Район КАК Район,
	|	Шапка.ЧастныйСектор КАК ЧастныйСектор,
	|	Шапка.Строение КАК Строение,
	|	Шапка.Помещение КАК Помещение,
	|	энргУстановитьСхемуПодчиненностиТочекУчетаСхемаПодчиненности.ТочкаУчета КАК ТочкаУчета,
	|	энргУстановитьСхемуПодчиненностиТочекУчетаСхемаПодчиненности.РодительТочкиУчета КАК ТочкаУчетаРодитель,
	|	Шапка.Ссылка КАК Ссылка,
	|	Шапка.Дата КАК Дата
	|ПОМЕСТИТЬ ДанныеСхемыПодчиненности
	|ИЗ
	|	Шапка КАК Шапка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргУстановитьСхемуПодчиненностиТочекУчета.СхемаПодчиненности КАК энргУстановитьСхемуПодчиненностиТочекУчетаСхемаПодчиненности
	|		ПО Шапка.Ссылка = энргУстановитьСхемуПодчиненностиТочекУчетаСхемаПодчиненности.Ссылка
	|			И (энргУстановитьСхемуПодчиненностиТочекУчетаСхемаПодчиненности.Ссылка = &Ссылка)";	
	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("Организация");
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Район");
	Измерения.Добавить("ЧастныйСектор");
	Измерения.Добавить("Строение");
	Измерения.Добавить("Помещение");	
	Измерения.Добавить("ТочкаУчета");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("ТочкаУчетаРодитель");
	
	Параметры.вставить("Измерения"		, Измерения);
	Параметры.вставить("Ресурсы"		, Ресурсы);
	Параметры.вставить("ШкалыОтдельно"	, Истина);
	
	ЗаполнитьНомераПозиций(МВТ,Параметры,"ДанныеСхемыПодчиненности");
	
	// Добавляем записи по шкалам 
	Запрос.Текст 	= ПолучитьПоследниеСтабильныеПериодыШкалы("ДанныеСхемыПодчиненности");	
	Результат  		= Запрос.Выполнить();
	ВыборкаШкалы 	= Результат.Выбрать();
	Пока ВыборкаШкалы.Следующий() цикл		
		СтрокаСтабПериодыШкалы = Параметры.НаборСтабильныеПериодыШкалы.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСтабПериодыШкалы,ВыборкаШкалы);				
	КонецЦикла;
	
	// Добавляем записи по измерителям направлений 
	Запрос.Текст 	= ПолучитьПоследниеСтабильныеПериодыИзмерителиНаправлений("ДанныеСхемыПодчиненности");	
	Результат 		= Запрос.Выполнить();
	Выборка			= Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаСтабПериоды = Параметры.НаборСтабильныеПериодыИзмерителиНаправлений.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСтабПериоды,Выборка);		
	КонецЦикла;
	
КонецПроцедуры

Процедура СтабПериодыИзменитьТехническуюВозможностьУстановкиПУ(Ссылка, Параметры)
	
	МВТ  							= Новый МенеджерВременныхТаблиц;
	ПараметрыЗапроса 				= Параметры.ПараметрыЗапроса;
	
	Запрос  						= Новый Запрос;
	Запрос.МенеджерВременныхТаблиц 	= МВТ;
	Запрос.УстановитьПараметр("ссылка"			, ссылка);
	Запрос.УстановитьПараметр("Организация"		, ПараметрыЗапроса.Организация);
	Запрос.УстановитьПараметр("ПериодНачисления", Параметры.ПериодНачисления);
	Запрос.УстановитьПараметр("Район"			, ПараметрыЗапроса.Район);
	Запрос.УстановитьПараметр("ЧастныйСектор"	, ПараметрыЗапроса.ЧастныйСектор);
	Запрос.УстановитьПараметр("Строение"		, ПараметрыЗапроса.Строение);
	Запрос.УстановитьПараметр("Помещение"		, ПараметрыЗапроса.Помещение);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	энргУстановитьТехническуюВозможностьУстановкиПУ.Организация КАК Организация,
	|	энргУстановитьТехническуюВозможностьУстановкиПУ.ПериодНачисления КАК ПериодНачисления,
	|	энргУстановитьТехническуюВозможностьУстановкиПУ.Район КАК Район,
	|	&ЧастныйСектор КАК ЧастныйСектор,
	|	&Строение КАК Строение,
	|	&Помещение КАК Помещение,
	|	энргУстановитьТехническуюВозможностьУстановкиПУ.Ссылка КАК Ссылка,
	|	энргУстановитьТехническуюВозможностьУстановкиПУ.Дата КАК Дата
	|ПОМЕСТИТЬ Шапка
	|ИЗ
	|	Документ.энргУстановитьТехническуюВозможностьУстановкиПУ КАК энргУстановитьТехническуюВозможностьУстановкиПУ
	|ГДЕ
	|	энргУстановитьТехническуюВозможностьУстановкиПУ.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Шапка.Организация КАК Организация,
	|	Шапка.ПериодНачисления КАК ПериодНачисления,
	|	Шапка.Район КАК Район,
	|	Шапка.ЧастныйСектор КАК ЧастныйСектор,
	|	Шапка.Строение КАК Строение,
	|	Шапка.Помещение КАК Помещение,
	|	энргУстановитьТехническуюВозможностьУстановкиПУХарактеристикиТочекУчета.Услуга КАК Услуга,
	|	энргУстановитьТехническуюВозможностьУстановкиПУХарактеристикиТочекУчета.ТочкаУчета КАК ТочкаУчета,
	|	энргУстановитьТехническуюВозможностьУстановкиПУХарактеристикиТочекУчета.ТекущееСостояние КАК НетВозможностьУстановкиПУ,
	|	Шапка.Ссылка КАК Ссылка,
	|	Шапка.Дата КАК Дата
	|ПОМЕСТИТЬ ХарактеристикиТочекУчета
	|ИЗ
	|	Шапка КАК Шапка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргУстановитьТехническуюВозможностьУстановкиПУ.ХарактеристикиТочекУчета КАК энргУстановитьТехническуюВозможностьУстановкиПУХарактеристикиТочекУчета
	|		ПО Шапка.Ссылка = энргУстановитьТехническуюВозможностьУстановкиПУХарактеристикиТочекУчета.Ссылка
	|			И (энргУстановитьТехническуюВозможностьУстановкиПУХарактеристикиТочекУчета.Ссылка = &Ссылка)";
		
	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("Организация");
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Район");
	Измерения.Добавить("ЧастныйСектор");
	Измерения.Добавить("Строение");
	Измерения.Добавить("Помещение");	
	Измерения.Добавить("ТочкаУчета");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("НетВозможностьУстановкиПУ");
	
	Параметры.вставить("Измерения"		, Измерения);
	Параметры.вставить("Ресурсы"		, Ресурсы);
	Параметры.вставить("ШкалыОтдельно"	, Истина);
	
	ЗаполнитьНомераПозиций(МВТ,Параметры,"ХарактеристикиТочекУчета");
	
	// Добавляем записи по шкалам 	
	Запрос.Текст 	= ПолучитьПоследниеСтабильныеПериодыШкалы("ХарактеристикиТочекУчета");
	Результат  		= Запрос.Выполнить();
	ВыборкаШкалы 	= Результат.Выбрать();
	Пока ВыборкаШкалы.Следующий() цикл		
		СтрокаСтабПериодыШкалы = Параметры.НаборСтабильныеПериодыШкалы.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСтабПериодыШкалы,ВыборкаШкалы);				
	КонецЦикла;	
	
	// Добавляем записи по измерителям направлений
	Запрос.Текст 	= ПолучитьПоследниеСтабильныеПериодыИзмерителиНаправлений("ХарактеристикиТочекУчета");	
	Результат 		= Запрос.Выполнить();
	Выборка			= Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаСтабПериоды = Параметры.НаборСтабильныеПериодыИзмерителиНаправлений.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСтабПериоды,Выборка);		
	КонецЦикла; 
	
КонецПроцедуры

#КонецОбласти


#Область НачисленияМКД 

Процедура СтабПериодыОткрытиеМКД(ссылка,Параметры) 
	
	МВТ  								= Новый МенеджерВременныхТаблиц;
	ПараметрыЗапроса 					= Параметры.ПараметрыЗапроса;
	Запрос  							= Новый Запрос;
	Запрос.УстановитьПараметр("ссылка",ссылка);
	Запрос.УстановитьПараметр("МоментВремени",Параметры.МоментВремени);
	Запрос.УстановитьПараметр("ТипНачисления",Перечисления.энргТипыНачислений.ОбщедомовыеНачисления);
	для Каждого стр из ПараметрыЗапроса цикл
		Запрос.УстановитьПараметр(стр.ключ,стр.значение); 
	КонецЦикла;
	
	Запрос.МенеджерВременныхТаблиц 		= МВТ;
	Запрос.Текст 						= ТекстЗапросаОткрытиеМКД(); 	
	Результат 							= Запрос.Выполнить();
	Выборка								= Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаСтабПериоды				= Параметры.НаборСтабильныеПериоды.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСтабПериоды,Выборка);
		СтрокаПоследнихНомеров  		= Параметры.НаборПоследнихНомеров.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаПоследнихНомеров,Выборка);
		СтрокаПоследнихНомеров.период 	= параметры.ПараметрыЗапроса.ПериодРегистрации;		
	КонецЦикла;
	
	Запрос.Текст 						= ТекстЗапросаШкалыПриборовУчетаМКД();
	Запрос.УстановитьПараметр("ПериодНачисления", Параметры.ПериодНачисления);
	Результат 							= Запрос.Выполнить();
	Выборка								= Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаСтабПериоды				= Параметры.НаборСтабильныеПериодыШкалы.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСтабПериоды,Выборка);		
	КонецЦикла; 
	
	Запрос.Текст 						= ТекстЗапросаОткрытиеМКДСоставУзлаУчета();
	Запрос.УстановитьПараметр("ПериодНачисления", Параметры.ПериодНачисления);
	Результат 							= Запрос.Выполнить();
	Выборка								= Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаСоставУзла				= Параметры.НаборСтабильныеПериодыСоставУзла.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСоставУзла,Выборка);		
	КонецЦикла;	
	
КонецПроцедуры

Процедура СтабПериодыЗакрытиеМКД(ссылка,Параметры)
	ПарметрыЗапроса  	= параметры.ПараметрыЗапроса;		
	МВТ 				= Новый МенеджерВременныхТаблиц;
	Запрос  			= Новый Запрос;
	Запрос.УстановитьПараметр("ссылка",			ссылка);
	Запрос.МенеджерВременныхТаблиц = МВТ;	
	Запрос.Текст 	=
	"ВЫБРАТЬ
	|	энргОткрытиеМКД.Ссылка,
	|	энргОткрытиеМКД.Дата,
	|	энргОткрытиеМКД.Организация,
	|	энргОткрытиеМКД.ПериодНачисления,
	|	энргОткрытиеМКД.Район,
	|	энргОткрытиеМКД.МКД,
	|	ЛОЖЬ КАК МКДОткрыт,
	|	ИСТИНА КАК МенялосьСостояниеПУ,
	|	ИСТИНА КАК МенялосьСостояниеФормулы
	|ПОМЕСТИТЬ ЗакрытиеМКД
	|ИЗ
	|	Документ.энргОткрытиеМКД КАК энргОткрытиеМКД
	|ГДЕ
	|	энргОткрытиеМКД.Ссылка = &Ссылка";
	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("Организация");
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Район");
	Измерения.Добавить("МКД");
		
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("МКДОткрыт");
	
	Параметры.вставить("Измерения",				Измерения);
	Параметры.вставить("Ресурсы",				Ресурсы);
	Параметры.вставить("ИзменяетСостояниеПУ",	Истина);
	
	ЗаполнитьНомераПозицийМКД(МВТ,Параметры,"ЗакрытиеМКД");
	
КонецПроцедуры

Процедура СтабПериодыПодключениеУслугиМКД(ссылка,параметры)
	
	МВТ  								= Новый МенеджерВременныхТаблиц;
	ПараметрыЗапроса 					= Параметры.ПараметрыЗапроса;
	Запрос  							= Новый Запрос;
	Запрос.УстановитьПараметр("ссылка",ссылка);
	Запрос.УстановитьПараметр("МоментВремени",Параметры.МоментВремени);
	Запрос.УстановитьПараметр("ТипНачисления",Перечисления.энргТипыНачислений.ОбщедомовыеНачисления);
	
	для Каждого стр из ПараметрыЗапроса цикл
		Запрос.УстановитьПараметр(стр.ключ,стр.значение); 
	КонецЦикла;
	
	Запрос.МенеджерВременныхТаблиц 		= МВТ;
	Запрос.Текст 						= ТекстЗапросаПодключениеУслугиМКД(); 	
	Результат 							= Запрос.Выполнить();
	Выборка								= Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаСтабПериоды				= Параметры.НаборСтабильныеПериоды.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСтабПериоды,Выборка);
		СтрокаПоследнихНомеров  		= Параметры.НаборПоследнихНомеров.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаПоследнихНомеров,Выборка);
		СтрокаПоследнихНомеров.период 	= параметры.ПараметрыЗапроса.ПериодРегистрации;		
	КонецЦикла;
	
	Запрос.Текст 						= ТекстЗапросаШкалыПриборовУчетаМКД();
	Запрос.УстановитьПараметр("ПериодНачисления", Параметры.ПериодНачисления);
	Результат 							= Запрос.Выполнить();
	Выборка								= Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаСтабПериоды				= Параметры.НаборСтабильныеПериодыШкалы.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСтабПериоды,Выборка);		
	КонецЦикла; 

	
КонецПроцедуры

Процедура СтабПериодыОтключениеУслугиМКД(ссылка,параметры)
	
	ПараметрыЗапроса= параметры.ПараметрыЗапроса;
	МВТ 			= Новый МенеджерВременныхТаблиц;
	Запрос  		= Новый Запрос;
	Запрос.УстановитьПараметр("ссылка",				ссылка);
	Запрос.УстановитьПараметр("ПериодНачисления",	Параметры.ПериодНачисления);
	Запрос.УстановитьПараметр("МоментВремени",		Параметры.МоментВремени);
	Запрос.УстановитьПараметр("ГраницаИсключая",	Новый Граница(Параметры.МоментВремени,ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Период",				Параметры.ДатаДок);
	для Каждого стр из ПараметрыЗапроса цикл
		Запрос.УстановитьПараметр(стр.ключ,стр.значение); 
	КонецЦикла;	   	
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.Текст 	=
	"ВЫБРАТЬ
	|	энргОперацияСУслугамиМКД.Ссылка,
	|	энргОперацияСУслугамиМКД.Дата,
	|	энргОперацияСУслугамиМКД.Организация,
	|	энргОперацияСУслугамиМКД.ПериодНачисления,
	|	энргОперацияСУслугамиМКД.Район,
	|	энргОперацияСУслугамиМКД.МКД
	|ПОМЕСТИТЬ Шапка
	|ИЗ
	|	Документ.энргОперацияСУслугамиМКД КАК энргОперацияСУслугамиМКД
	|ГДЕ
	|	энргОперацияСУслугамиМКД.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Шапка.Организация,
	|	Шапка.ПериодНачисления,
	|	Шапка.Район,
	|	Шапка.МКД,
	|	энргОперацияСУслугамиМКДТочкиУчета.Услуга,
	|	энргОперацияСУслугамиМКДТочкиУчета.ТочкаУчета,
	|	ЛОЖЬ КАК УслугаПодключена,
	|	ЛОЖЬ КАК ПриборВведен
	|ПОМЕСТИТЬ ДанныеУслуг
	|ИЗ
	|	Шапка КАК Шапка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргОперацияСУслугамиМКД.ТочкиУчета КАК энргОперацияСУслугамиМКДТочкиУчета
	|		ПО Шапка.Ссылка = энргОперацияСУслугамиМКДТочкиУчета.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеУслуг.Организация,
	|	ДанныеУслуг.ПериодНачисления,
	|	ДанныеУслуг.Район,
	|	ДанныеУслуг.МКД,
	|	ВЫБОР
	|		КОГДА энргВидыУслугСоставляющиеУслуг.Ссылка ЕСТЬ NULL 
	|			ТОГДА ДанныеУслуг.Услуга
	|		ИНАЧЕ энргВидыУслугСоставляющиеУслуг.Услуга
	|	КОНЕЦ КАК Услуга,
	|	ДанныеУслуг.ТочкаУчета,
	|	ДанныеУслуг.УслугаПодключена,
	|	ДанныеУслуг.ПриборВведен,
	|	ЛОЖЬ КАК РасчетПоФормуле,
	|	ЗНАЧЕНИЕ(Справочник.энргТочкиУчета.ПустаяСсылка) КАК ЗависимаяТочкаУчета,
	|	0 КАК КоэффициентРасчета,
	|	ИСТИНА КАК МенялосьСостояниеПУ,
	|	ИСТИНА КАК МенялосьСостояниеФормулы
	|ПОМЕСТИТЬ ОтключениеУслуги
	|ИЗ
	|	ДанныеУслуг КАК ДанныеУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг.СоставляющиеУслуг КАК энргВидыУслугСоставляющиеУслуг
	|		ПО ДанныеУслуг.Услуга = энргВидыУслугСоставляющиеУслуг.Ссылка";
	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("Организация");
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Район");
	Измерения.Добавить("МКД");
	Измерения.Добавить("Услуга");
	Измерения.Добавить("ТочкаУчета");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("УслугаПодключена");
	Ресурсы.Добавить("ПриборВведен");
				
	Параметры.вставить("Измерения",				Измерения);
	Параметры.вставить("Ресурсы",				Ресурсы);
	Параметры.вставить("ИзменяетСостояниеПУ",	Истина);
	
	ЗаполнитьНомераПозицийМКД(МВТ,Параметры,"ОтключениеУслуги"); 	
	 	
КонецПроцедуры

Процедура СтабПериодыАктВводаПрибораУчетаМКД(Ссылка,Параметры)  
			
	ПараметрыЗапроса  	= параметры.ПараметрыЗапроса;	
	МВТ 				= Новый МенеджерВременныхТаблиц;
	Запрос  			= Новый Запрос;
	Запрос.УстановитьПараметр("ссылка",				ссылка);
	Запрос.УстановитьПараметр("ПериодНачисления",	Параметры.ПериодНачисления);
	Запрос.УстановитьПараметр("МоментВремени",		Параметры.МоментВремени);
	Запрос.УстановитьПараметр("ГраницаИсключая",	Новый Граница(Параметры.МоментВремени,ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("МассивТочек",		Ссылка["ПриборыУчетаВВод"].выгрузитьКолонку("ТочкаУчета"));
	для Каждого стр из ПараметрыЗапроса цикл
		Запрос.УстановитьПараметр(стр.ключ,стр.значение); 
	КонецЦикла;		
	Запрос.МенеджерВременныхТаблиц = МВТ;	
	Запрос.Текст 		=
	"ВЫБРАТЬ
	|	энргОперацияСПриборомУчетаМКД.Организация КАК Организация,
	|	энргОперацияСПриборомУчетаМКД.ПериодНачисления КАК ПериодНачисления,
	|	энргОперацияСПриборомУчетаМКД.Район КАК Район,
	|	энргОперацияСПриборомУчетаМКД.МКД КАК МКД,
	|	энргОперацияСПриборомУчетаМКД.Ссылка КАК ДокРегистратор
	|ПОМЕСТИТЬ Шапка
	|ИЗ
	|	Документ.энргОперацияСПриборомУчетаМКД КАК энргОперацияСПриборомУчетаМКД
	|ГДЕ
	|	энргОперацияСПриборомУчетаМКД.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	энргУслугиТочекУчетаСрезПоследних.ТочкаУчета КАК ТочкаУчета,
	|	энргУслугиТочекУчетаСрезПоследних.Услуга КАК Услуга
	|ПОМЕСТИТЬ УслугиТочек
	|ИЗ
	|	РегистрСведений.энргУслугиТочекУчетаМКД.СрезПоследних(
	|			&МоментВремени,
	|			МКД = &МКД
	|				И Район = &Район) КАК энргУслугиТочекУчетаСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Шапка.Организация КАК Организация,
	|	Шапка.ПериодНачисления КАК ПериодНачисления,
	|	Шапка.Район КАК Район,
	|	Шапка.МКД КАК МКД,
	|	энргОперацияСПриборомУчетаМКДПриборыУчетаВВод.ТочкаУчета КАК ТочкаУчета,
	|	ИСТИНА КАК ПриборВведен,
	|	энргОперацияСПриборомУчетаМКДПриборыУчетаВВод.ПриборУчета КАК ПриборУчета,
	|	&ПериодРегистрации КАК ДатаСостоянияПрибора,
	|	энргОперацияСПриборомУчетаМКДПриборыУчетаВВод.ВидДифференцированности КАК ВидДифференцированности,
	|	энргОперацияСПриборомУчетаМКДПриборыУчетаВВод.КоэффициентПУ КАК КоэффициентПУ
	|ПОМЕСТИТЬ ТочкиВводаПрибора
	|ИЗ
	|	Шапка КАК Шапка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргОперацияСПриборомУчетаМКД.ПриборыУчетаВВод КАК энргОперацияСПриборомУчетаМКДПриборыУчетаВВод
	|		ПО Шапка.ДокРегистратор = энргОперацияСПриборомУчетаМКДПриборыУчетаВВод.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТочкиВводаПрибора.Организация КАК Организация,
	|	ТочкиВводаПрибора.ПериодНачисления КАК ПериодНачисления,
	|	ТочкиВводаПрибора.Район КАК Район,
	|	ТочкиВводаПрибора.МКД КАК МКД,
	|	УслугиТочек.Услуга КАК Услуга,
	|	ТочкиВводаПрибора.ТочкаУчета КАК ТочкаУчета,
	|	ТочкиВводаПрибора.ПриборВведен КАК ПриборВведен,
	|	ТочкиВводаПрибора.ПриборУчета КАК ПриборУчета,
	|	ТочкиВводаПрибора.ДатаСостоянияПрибора КАК ДатаСостоянияПрибора,
	|	ТочкиВводаПрибора.ВидДифференцированности КАК ВидДифференцированности,
	|	ТочкиВводаПрибора.КоэффициентПУ КАК КоэффициентПУ
	|ПОМЕСТИТЬ УслугиПриборов
	|ИЗ
	|	ТочкиВводаПрибора КАК ТочкиВводаПрибора
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ УслугиТочек КАК УслугиТочек
	|		ПО ТочкиВводаПрибора.ТочкаУчета = УслугиТочек.ТочкаУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УслугиПриборов.Организация КАК Организация,
	|	УслугиПриборов.ПериодНачисления КАК ПериодНачисления,
	|	УслугиПриборов.Район КАК Район,
	|	УслугиПриборов.МКД КАК МКД,
	|	ВЫБОР
	|		КОГДА энргВидыУслугСоставляющиеУслуг.Ссылка ЕСТЬ NULL
	|			ТОГДА УслугиПриборов.Услуга
	|		ИНАЧЕ энргВидыУслугСоставляющиеУслуг.Услуга
	|	КОНЕЦ КАК Услуга,
	|	УслугиПриборов.ТочкаУчета КАК ТочкаУчета,
	|	УслугиПриборов.ПриборВведен КАК ПриборВведен,
	|	УслугиПриборов.ПриборУчета КАК ПриборУчета,
	|	УслугиПриборов.ВидДифференцированности КАК ВидДифференцированности,
	|	УслугиПриборов.КоэффициентПУ КАК КоэффициентПУ,
	|	УслугиПриборов.ДатаСостоянияПрибора КАК ДатаСостоянияПрибора,
	|	ИСТИНА КАК МенялосьСостояниеПУ
	|ПОМЕСТИТЬ ВводПрибораУчета
	|ИЗ
	|	УслугиПриборов КАК УслугиПриборов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг.СоставляющиеУслуг КАК энргВидыУслугСоставляющиеУслуг
	|		ПО УслугиПриборов.Услуга = энргВидыУслугСоставляющиеУслуг.Ссылка";
	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("Организация");
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Район");
	Измерения.Добавить("МКД");
	Измерения.Добавить("Услуга");
	Измерения.Добавить("ТочкаУчета");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("ПриборВведен");
	Ресурсы.Добавить("ПриборУчета");
	Ресурсы.Добавить("ВидДифференцированности");
	Ресурсы.Добавить("КоэффициентПУ");
	Ресурсы.Добавить("ДатаСостоянияПрибора");
	Ресурсы.Добавить("МенялосьСостояниеПУ");
		
	Параметры.вставить("Измерения",Измерения);
	Параметры.вставить("Ресурсы",Ресурсы);
	Параметры.вставить("ИзменяетСостояниеПУ",Истина);
	
	ЗаполнитьНомераПозицийМКД(МВТ,Параметры,"ВводПрибораУчета"); 
	
КонецПроцедуры 

Процедура СтабПериодыАктВыводаПрибораУчетаМКД(Ссылка,Параметры)  
	ПарметрыЗапроса  	= Параметры.ПараметрыЗапроса;	
	МВТ 				= Новый МенеджерВременныхТаблиц;
	Запрос  			= Новый Запрос;
	Запрос.УстановитьПараметр("ссылка",			ссылка);
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.Текст 		=
	"ВЫБРАТЬ
	|	энргОперацияСПриборомУчетаМКД.Организация,
	|	энргОперацияСПриборомУчетаМКД.ПериодНачисления,
	|	энргОперацияСПриборомУчетаМКД.Район,
	|	энргОперацияСПриборомУчетаМКД.МКД,
	|	энргОперацияСПриборомУчетаМКД.Ссылка КАК ДокРегистратор,
	|	энргОперацияСПриборомУчетаМКД.Дата КАК ДатаРегистратора
	|ПОМЕСТИТЬ Шапка
	|ИЗ
	|	Документ.энргОперацияСПриборомУчетаМКД КАК энргОперацияСПриборомУчетаМКД
	|ГДЕ
	|	энргОперацияСПриборомУчетаМКД.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Шапка.Организация,
	|	Шапка.ПериодНачисления,
	|	Шапка.Район,
	|	Шапка.МКД,
	|	энргОперацияСПриборомУчетаМКДПриборыУчетаВывод.Услуга,
	|	энргОперацияСПриборомУчетаМКДПриборыУчетаВывод.ТочкаУчета,
	|	Шапка.ДокРегистратор,
	|	Шапка.ДатаРегистратора,
	|	ЛОЖЬ КАК ПриборВведен
	|ПОМЕСТИТЬ УслугиВывода
	|ИЗ
	|	Шапка КАК Шапка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргОперацияСПриборомУчетаМКД.ПриборыУчетаВывод КАК энргОперацияСПриборомУчетаМКДПриборыУчетаВывод
	|		ПО Шапка.ДокРегистратор = энргОперацияСПриборомУчетаМКДПриборыУчетаВывод.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УслугиВывода.Организация,
	|	УслугиВывода.ПериодНачисления,
	|	УслугиВывода.Район,
	|	УслугиВывода.МКД,
	|	ВЫБОР
	|		КОГДА энргВидыУслугСоставляющиеУслуг.Ссылка ЕСТЬ NULL 
	|			ТОГДА УслугиВывода.Услуга
	|		ИНАЧЕ энргВидыУслугСоставляющиеУслуг.Услуга
	|	КОНЕЦ КАК Услуга,
	|	УслугиВывода.ТочкаУчета,
	|	УслугиВывода.ДокРегистратор,
	|	УслугиВывода.ДатаРегистратора,
	|	УслугиВывода.ПриборВведен
	|ПОМЕСТИТЬ ВыводПрибораУчета
	|ИЗ
	|	УслугиВывода КАК УслугиВывода
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг.СоставляющиеУслуг КАК энргВидыУслугСоставляющиеУслуг
	|		ПО УслугиВывода.Услуга = энргВидыУслугСоставляющиеУслуг.Ссылка";
	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("Организация");
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Район");
	Измерения.Добавить("МКД");
	Измерения.Добавить("Услуга");
	Измерения.Добавить("ТочкаУчета");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("ПриборВведен");
	
	Параметры.вставить("Измерения",				Измерения);
	Параметры.вставить("Ресурсы",				Ресурсы);
	Параметры.вставить("ИзменяетСостояниеПУ",	Истина);
	
	ЗаполнитьНомераПозицийМКД(МВТ,Параметры,"ВыводПрибораУчета");	
КонецПроцедуры

Процедура СтабПериодыЗаменаПрибораУчетаМКД(Ссылка,Параметры)  
	ПарметрыЗапроса = Параметры.ПараметрыЗапроса;
	МВТ 			= Новый МенеджерВременныхТаблиц;
	Запрос  		= Новый Запрос;
	Запрос.УстановитьПараметр("ссылка",			ссылка);
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.Текст 	=
	"ВЫБРАТЬ
	|	энргОперацияСПриборомУчетаМКД.Организация КАК Организация,
	|	энргОперацияСПриборомУчетаМКД.ПериодНачисления КАК ПериодНачисления,
	|	энргОперацияСПриборомУчетаМКД.Район КАК Район,
	|	энргОперацияСПриборомУчетаМКД.МКД КАК МКД,
	|	энргОперацияСПриборомУчетаМКД.Ссылка КАК ДокРегистратор,
	|	энргОперацияСПриборомУчетаМКД.Дата КАК ДатаРегистратора
	|ПОМЕСТИТЬ Шапка
	|ИЗ
	|	Документ.энргОперацияСПриборомУчетаМКД КАК энргОперацияСПриборомУчетаМКД
	|ГДЕ
	|	энргОперацияСПриборомУчетаМКД.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Шапка.Организация КАК Организация,
	|	Шапка.ПериодНачисления КАК ПериодНачисления,
	|	Шапка.Район КАК Район,
	|	Шапка.МКД КАК МКД,
	|	энргОперацияСПриборомУчетаМКДПриборыУчетаЗамена.Услуга КАК Услуга,
	|	энргОперацияСПриборомУчетаМКДПриборыУчетаЗамена.ТочкаУчета КАК ТочкаУчета,
	|	ЛОЖЬ КАК ПриборВведен,
	|	ИСТИНА КАК МенялосьСостояниеПУ
	|ПОМЕСТИТЬ УслугиВывода
	|ИЗ
	|	Шапка КАК Шапка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргОперацияСПриборомУчетаМКД.ПриборыУчетаЗамена КАК энргОперацияСПриборомУчетаМКДПриборыУчетаЗамена
	|		ПО Шапка.ДокРегистратор = энргОперацияСПриборомУчетаМКДПриборыУчетаЗамена.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Шапка.Организация КАК Организация,
	|	Шапка.ПериодНачисления КАК ПериодНачисления,
	|	Шапка.Район КАК Район,
	|	Шапка.МКД КАК МКД,
	|	энргОперацияСПриборомУчетаМКДПриборыУчетаЗамена.Услуга КАК Услуга,
	|	энргОперацияСПриборомУчетаМКДПриборыУчетаЗамена.ТочкаУчета КАК ТочкаУчета,
	|	энргОперацияСПриборомУчетаМКДПриборыУчетаЗамена.ПриборУчетаВвод КАК ПриборУчета,
	|	энргОперацияСПриборомУчетаМКДПриборыУчетаЗамена.ВидДифференцированностиВвод КАК ВидДифференцированности,
	|	энргОперацияСПриборомУчетаМКДПриборыУчетаЗамена.КоэффициентПУВвод КАК КоэффициентПУ,
	|	ИСТИНА КАК ПриборВведен,
	|	ИСТИНА КАК МенялосьСостояниеПУ
	|ПОМЕСТИТЬ УслугиВвода
	|ИЗ
	|	Шапка КАК Шапка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргОперацияСПриборомУчетаМКД.ПриборыУчетаЗамена КАК энргОперацияСПриборомУчетаМКДПриборыУчетаЗамена
	|		ПО Шапка.ДокРегистратор = энргОперацияСПриборомУчетаМКДПриборыУчетаЗамена.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УслугиВывода.Организация КАК Организация,
	|	УслугиВывода.ПериодНачисления КАК ПериодНачисления,
	|	УслугиВывода.Район КАК Район,
	|	УслугиВывода.МКД КАК МКД,
	|	ВЫБОР
	|		КОГДА энргВидыУслугСоставляющиеУслуг.Ссылка ЕСТЬ NULL
	|			ТОГДА УслугиВывода.Услуга
	|		ИНАЧЕ энргВидыУслугСоставляющиеУслуг.Услуга
	|	КОНЕЦ КАК Услуга,
	|	УслугиВывода.ТочкаУчета КАК ТочкаУчета,
	|	УслугиВывода.ПриборВведен КАК ПриборВведен,
	|	ИСТИНА КАК МенялосьСостояниеПУ
	|ПОМЕСТИТЬ ВыводПрибораУчета
	|ИЗ
	|	УслугиВывода КАК УслугиВывода
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг.СоставляющиеУслуг КАК энргВидыУслугСоставляющиеУслуг
	|		ПО УслугиВывода.Услуга = энргВидыУслугСоставляющиеУслуг.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УслугиВвода.Организация КАК Организация,
	|	УслугиВвода.ПериодНачисления КАК ПериодНачисления,
	|	УслугиВвода.Район КАК Район,
	|	УслугиВвода.МКД КАК МКД,
	|	ВЫБОР
	|		КОГДА энргВидыУслугСоставляющиеУслуг.Ссылка ЕСТЬ NULL
	|			ТОГДА УслугиВвода.Услуга
	|		ИНАЧЕ энргВидыУслугСоставляющиеУслуг.Услуга
	|	КОНЕЦ КАК Услуга,
	|	УслугиВвода.ТочкаУчета КАК ТочкаУчета,
	|	УслугиВвода.ПриборУчета КАК ПриборУчета,
	|	УслугиВвода.ВидДифференцированности КАК ВидДифференцированности,
	|	УслугиВвода.КоэффициентПУ КАК КоэффициентПУ,
	|	УслугиВвода.ПриборВведен КАК ПриборВведен,
	|	ИСТИНА КАК МенялосьСостояниеПУ
	|ПОМЕСТИТЬ ВводПрибораУчета
	|ИЗ
	|	УслугиВвода КАК УслугиВвода
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг.СоставляющиеУслуг КАК энргВидыУслугСоставляющиеУслуг
	|		ПО УслугиВвода.Услуга = энргВидыУслугСоставляющиеУслуг.Ссылка";
	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("Организация");
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Район");
	Измерения.Добавить("МКД");
	Измерения.Добавить("Услуга");
	Измерения.Добавить("ТочкаУчета");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("ПриборВведен");
	Ресурсы.Добавить("МенялосьСостояниеПУ");
		
	Параметры.вставить("Измерения",				Измерения);
	Параметры.вставить("Ресурсы",				Ресурсы);
	Параметры.вставить("ИзменяетСостояниеПУ",	Истина);

	ЗаполнитьНомераПозицийМКД(МВТ,Параметры,"ВыводПрибораУчета");  	
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("ПриборВведен");
	Ресурсы.Добавить("ПриборУчета");
	Ресурсы.Добавить("ВидДифференцированности");
	Ресурсы.Добавить("КоэффициентПУ");
	Ресурсы.Добавить("МенялосьСостояниеПУ");
		
	Параметры.Ресурсы = Ресурсы;
	
	ЗаполнитьНомераПозицийМКД(МВТ,Параметры,"ВводПрибораУчета",истина);   	
КонецПроцедуры

Процедура СтабПериодыУстановитьЗначениеПлощадиМКД(ссылка,Параметры) 
	МВТ  		= Новый МенеджерВременныхТаблиц;
	ПараметрыЗапроса 	= Параметры.ПараметрыЗапроса;
	Запрос  	= Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.УстановитьПараметр("ссылка",ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	энргУстановитьЗначениеПлощадиМКД.Организация КАК Организация,
	|	энргУстановитьЗначениеПлощадиМКД.ПериодНачисления КАК ПериодНачисления,
	|	энргУстановитьЗначениеПлощадиМКД.Район КАК Район,
	|	энргУстановитьЗначениеПлощадиМКД.МКД КАК МКД,
	|	энргУстановитьЗначениеПлощадиМКД.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ Шапка
	|ИЗ
	|	Документ.энргУстановитьЗначениеПлощадиМКД КАК энргУстановитьЗначениеПлощадиМКД
	|ГДЕ
	|	энргУстановитьЗначениеПлощадиМКД.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Шапка.Организация КАК Организация,
	|	Шапка.ПериодНачисления КАК ПериодНачисления,
	|	Шапка.Район КАК Район,
	|	Шапка.МКД КАК МКД,
	|	энргУстановитьЗначениеПлощадиМКДЗначениеПлощадей.Услуга КАК Услуга,
	|	энргУстановитьЗначениеПлощадиМКДЗначениеПлощадей.ВидПлощади КАК ВидПлощади,
	|	энргУстановитьЗначениеПлощадиМКДЗначениеПлощадей.Площадь КАК ЗначениеПлощади
	|ПОМЕСТИТЬ ДанныеПлощадей
	|ИЗ
	|	Шапка КАК Шапка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргУстановитьЗначениеПлощадиМКД.ЗначениеПлощадей КАК энргУстановитьЗначениеПлощадиМКДЗначениеПлощадей
	|		ПО Шапка.Ссылка = энргУстановитьЗначениеПлощадиМКДЗначениеПлощадей.Ссылка";
	
	Запрос.Выполнить();
	
	Измерения 			= Новый Массив;
	Измерения.Добавить("Организация");
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Район");
	Измерения.Добавить("МКД");	
	Измерения.Добавить("Услуга");
	
	Ресурсы 						= Новый Массив;
	Ресурсы.Добавить("ЗначениеПлощади");
	
	Параметры.вставить("Измерения",Измерения);
	Параметры.вставить("Ресурсы",Ресурсы);
	
	ЗаполнитьНомераПозицийМКД(МВТ,Параметры,"ДанныеПлощадей");
			
КонецПроцедуры

Процедура СтабПериодыУстановитьВидБлагоустройстваМКД(ссылка,Параметры) 
	
	МВТ 							= Новый МенеджерВременныхТаблиц;
		
	ПараметрыЗапроса 				= Параметры.ПараметрыЗапроса;
	
	Запрос  						= Новый Запрос;
	Запрос.МенеджерВременныхТаблиц  = МВТ;
	Запрос.УстановитьПараметр("ссылка",			ссылка);
	Запрос.УстановитьПараметр("МоментВремени",	Параметры.МоментВремени);
	Запрос.Текст 					=
	"ВЫБРАТЬ
	|	энргУстановитьВидБлагоустройстваМКД.Организация КАК Организация,
	|	энргУстановитьВидБлагоустройстваМКД.ПериодНачисления КАК ПериодНачисления,
	|	энргУстановитьВидБлагоустройстваМКД.Район КАК Район,
	|	энргУстановитьВидБлагоустройстваМКД.МКД КАК МКД,
	|	энргУстановитьВидБлагоустройстваМКД.ВидБлагоустройства КАК ВидБлагоустройства
	|ПОМЕСТИТЬ Шапка
	|ИЗ
	|	Документ.энргУстановитьВидБлагоустройстваМКД КАК энргУстановитьВидБлагоустройстваМКД
	|ГДЕ
	|	энргУстановитьВидБлагоустройстваМКД.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Шапка.ПериодНачисления КАК ПериодНачисления,
	|	Шапка.Район КАК Район,
	|	Шапка.МКД КАК МКД,
	|	КлючНормативов.Услуга КАК Услуга,
	|	КлючНормативов.КлючНорматива КАК КлючНорматива,
	|	Шапка.ВидБлагоустройства КАК ВидБлагоустройства
	|ПОМЕСТИТЬ ДанныеНормыПотребления
	|ИЗ
	|	Шапка КАК Шапка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КлючНормативов КАК КлючНормативов
	|		ПО (1 = 1)";	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("Организация");
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Район");
	Измерения.Добавить("МКД");
	Измерения.Добавить("Услуга");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("КлючНорматива");
	Ресурсы.Добавить("ВидБлагоустройства");
	
	Параметры.вставить("Измерения",Измерения);
	Параметры.вставить("Ресурсы",Ресурсы);
	
	ЗаполнитьНомераПозицийМКД(МВТ,Параметры,"ДанныеНормыПотребления"); 
	
КонецПроцедуры

Процедура СтабПериодыСменаПоставщикаМКД(ссылка,Параметры)
	
	ПарметрыЗапроса  	= параметры.ПараметрыЗапроса;	
	МВТ 			= Новый МенеджерВременныхТаблиц;
	Запрос  		= Новый Запрос;
	Запрос.УстановитьПараметр("ссылка",			ссылка);
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.Текст 	="ВЫБРАТЬ
	|	энргСменаПоставщикаМКД.Организация,
	|	энргСменаПоставщикаМКД.ПериодНачисления,
	|	энргСменаПоставщикаМКД.Район,
	|	энргСменаПоставщикаМКД.МКД,
	|	энргСменаПоставщикаМКД.Ссылка,
	|	энргСменаПоставщикаМКДТочкиУчета.Услуга,
	|	энргСменаПоставщикаМКДТочкиУчета.ТочкаУчета,
	|	энргСменаПоставщикаМКДТочкиУчета.Поставщик,
	|	энргСменаПоставщикаМКДТочкиУчета.ЭтоСоставнаяУслуга,
	|	энргСменаПоставщикаМКДТочкиУчета.IDСтроки
	|ПОМЕСТИТЬ Шапка
	|ИЗ
	|	Документ.энргСменаПоставщикаМКД.ТочкиУчета КАК энргСменаПоставщикаМКДТочкиУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргСменаПоставщикаМКД КАК энргСменаПоставщикаМКД
	|		ПО энргСменаПоставщикаМКДТочкиУчета.Ссылка = энргСменаПоставщикаМКД.Ссылка
	|			И (энргСменаПоставщикаМКД.Ссылка = &Ссылка)
	|			И (энргСменаПоставщикаМКДТочкиУчета.Ссылка = &Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Шапка.Организация,
	|	Шапка.ПериодНачисления,
	|	Шапка.Район,
	|	Шапка.МКД,
	|	ВЫБОР
	|		КОГДА Шапка.ЭтоСоставнаяУслуга
	|			ТОГДА энргСменаПоставщикаМКДПоставщикиСоставныхУслуг.ЧастьСоставнойУслуги
	|		ИНАЧЕ Шапка.Услуга
	|	КОНЕЦ КАК Услуга,
	|	Шапка.ТочкаУчета,
	|	ВЫБОР
	|		КОГДА Шапка.ЭтоСоставнаяУслуга
	|			ТОГДА энргСменаПоставщикаМКДПоставщикиСоставныхУслуг.Поставщик
	|		ИНАЧЕ энргСменаПоставщикаМКДПоставщикиСоставныхУслуг.Поставщик
	|	КОНЕЦ КАК Поставщик
	|ПОМЕСТИТЬ ДанныеПоставщика
	|ИЗ
	|	Шапка КАК Шапка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.энргСменаПоставщикаМКД.ПоставщикиСоставныхУслуг КАК энргСменаПоставщикаМКДПоставщикиСоставныхУслуг
	|		ПО Шапка.Ссылка = энргСменаПоставщикаМКДПоставщикиСоставныхУслуг.Ссылка
	|			И (Шапка.ЭтоСоставнаяУслуга)
	|			И Шапка.IDСтроки = энргСменаПоставщикаМКДПоставщикиСоставныхУслуг.IDСтроки";	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("Организация");
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Район");
	Измерения.Добавить("МКД"); 	
	Измерения.Добавить("Услуга");
	Измерения.Добавить("ТочкаУчета");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("Поставщик");
	
	Параметры.вставить("Измерения",Измерения);
	Параметры.вставить("Ресурсы",Ресурсы);
	
	ЗаполнитьНомераПозицийМКД(МВТ,Параметры,"ДанныеПоставщика"); 
	
КонецПроцедуры

Процедура СтабПериодыУстановитььСпособРаспределенияОбъемаМКД(ссылка,Параметры)
	
	ПарметрыЗапроса  	= параметры.ПараметрыЗапроса;	
	МВТ 			= Новый МенеджерВременныхТаблиц;
	Запрос  		= Новый Запрос;
	Запрос.УстановитьПараметр("ссылка",			ссылка);
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.Текст 	="ВЫБРАТЬ
	|	Шапка.Организация,
	|	Шапка.ПериодНачисления,
	|	Шапка.Район,
	|	Шапка.МКД,
	|	Шапка.Ссылка,
	|	табТочкиУчета.Услуга,
	|	табТочкиУчета.ТочкаУчета,
	|	НЕ табТочкиУчета.Распределять КАК НеРаспределятьНаАбонентов
	|ПОМЕСТИТЬ ДанныеТочекУчета
	|ИЗ
	|	Документ.энргУстановитьСпособРаспределенияОбъемаМКДНаАбонентов.ТочкиУчета КАК табТочкиУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргУстановитьСпособРаспределенияОбъемаМКДНаАбонентов КАК Шапка
	|		ПО табТочкиУчета.Ссылка = Шапка.Ссылка
	|			И (Шапка.Ссылка = &Ссылка)
	|			И (табТочкиУчета.Ссылка = &Ссылка)";	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("Организация");
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Район");
	Измерения.Добавить("МКД"); 	
	Измерения.Добавить("Услуга");
	Измерения.Добавить("ТочкаУчета");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("НеРаспределятьНаАбонентов");
	
	Параметры.вставить("Измерения",Измерения);
	Параметры.вставить("Ресурсы",Ресурсы);
	
	ЗаполнитьНомераПозицийМКД(МВТ,Параметры,"ДанныеТочекУчета");
	
КонецПроцедуры

#КонецОбласти

#Область ТекстыЗапроса

Функция ТекстЗапросаОткрытиеЛС() 
	Текст  = 
	"ВЫБРАТЬ
	|	энргОперацияСЛицевымСчетом.Организация КАК Организация,
	|	энргОперацияСЛицевымСчетом.ПериодНачисления КАК ПериодНачисления,
	|	энргОперацияСЛицевымСчетом.Район КАК Район,
	|	&ЧастныйСектор КАК ЧастныйСектор,
	|	&Строение КАК Строение,
	|	&Помещение КАК Помещение,
	|	энргОперацияСЛицевымСчетом.Абонент КАК Абонент,
	|	энргОперацияСЛицевымСчетом.Дата КАК ДатаРегистратора,
	|	энргОперацияСЛицевымСчетом.Ссылка КАК ДокРегистратор,
	|	ИСТИНА КАК ЛСОткрыт,
	|	энргОперацияСЛицевымСчетом.КоличествоПрописанных КАК КоличествоПрописанных,
	|	энргОперацияСЛицевымСчетом.КоличествоКомнат КАК КоличествоКомнат,
	|	энргОперацияСЛицевымСчетом.КоличествоПроживающих КАК КоличествоПроживающих,
	|	энргОперацияСЛицевымСчетом.КоличествоСобственников КАК КоличествоСобственников
	|ПОМЕСТИТЬ Шапка
	|ИЗ
	|	Документ.энргОперацияСЛицевымСчетом КАК энргОперацияСЛицевымСчетом
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.энргКлючиПомещений КАК энргКлючиПомещений
	|		ПО энргОперацияСЛицевымСчетом.КлючПомещения = энргКлючиПомещений.КлючПомещения
	|			И (энргОперацияСЛицевымСчетом.Ссылка = &Ссылка)
	|			И (энргКлючиПомещений.Строение = &Строение)
	|			И (энргКлючиПомещений.Помещение = &Помещение)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	энргОперацияСЛицевымСчетомЗначениеПлощадей.ВидПлощади КАК ВидПлощади,
	|	энргОперацияСЛицевымСчетомЗначениеПлощадей.Значение КАК Значение
	|ПОМЕСТИТЬ ДанныеПлощади
	|ИЗ
	|	Документ.энргОперацияСЛицевымСчетом.ЗначениеПлощадей КАК энргОперацияСЛицевымСчетомЗначениеПлощадей
	|ГДЕ
	|	энргОперацияСЛицевымСчетомЗначениеПлощадей.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Шапка.Организация КАК Организация,
	|	Шапка.ПериодНачисления КАК ПериодНачисления,
	|	Шапка.Район КАК Район,
	|	Шапка.ЧастныйСектор КАК ЧастныйСектор,
	|	Шапка.Строение КАК Строение,
	|	Шапка.Помещение КАК Помещение,
	|	Шапка.Абонент КАК Абонент,
	|	ЕСТЬNULL(энргОперацияСЛицевымСчетомТочкиУчета.Услуга, ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)) КАК Услуга,
	|	ЕСТЬNULL(энргОперацияСЛицевымСчетомТочкиУчета.ТочкаУчета, ЗНАЧЕНИЕ(Справочник.энргТочкиУчета.Пустаяссылка)) КАК ТочкаУчета,
	|	0 КАК НомерПозиции,
	|	Шапка.ДатаРегистратора КАК ДатаРегистратора,
	|	Шапка.ДокРегистратор КАК ДокРегистратор,
	|	Шапка.ЛСОткрыт КАК ЛСОткрыт,
	|	ВЫБОР
	|		КОГДА энргОперацияСЛицевымСчетомТочкиУчета.Услуга ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК УслугаПодключена,
	|	ВЫБОР
	|		КОГДА энргОперацияСЛицевымСчетомТочкиУчета.ПриборУчета ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		КОГДА энргОперацияСЛицевымСчетомТочкиУчета.ПриборУчета = ЗНАЧЕНИЕ(Справочник.энргПриборыУчетаАбонента.ПУстаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПриборВведен,
	|	ЕСТЬNULL(энргОперацияСЛицевымСчетомТочкиУчета.ПриборУчета, ЗНАЧЕНИЕ(Справочник.энргПриборыУчетаАбонента.ПУстаяСсылка)) КАК ПриборУчета,
	|	ВЫБОР
	|		КОГДА энргОперацияСЛицевымСчетомТочкиУчета.ПриборУчета ЕСТЬ NULL
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		КОГДА энргОперацияСЛицевымСчетомТочкиУчета.ПриборУчета = ЗНАЧЕНИЕ(Справочник.энргПриборыУчетаАбонента.ПУстаяСсылка)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ &ПериодРегистрации
	|	КОНЕЦ КАК ДатаСостоянияПрибора,
	|	Шапка.КоличествоПрописанных КАК КоличествоПрописанных,
	|	Шапка.КоличествоПроживающих КАК КоличествоПроживающих,
	|	Шапка.КоличествоСобственников КАК КоличествоСобственников,
	|	Шапка.КоличествоКомнат КАК КоличествоКомнат,
	|	ЕСТЬNULL(энргОперацияСЛицевымСчетомТочкиУчета.КоэффициентПУ, 0) КАК КоэффициентПУ,
	|	энргОперацияСЛицевымСчетомТочкиУчета.Поставщик КАК Поставщик,
	|	энргОперацияСЛицевымСчетомТочкиУчета.ЭтоСоставнаяУслуга КАК ЭтоСоставнаяУслуга,
	|	энргОперацияСЛицевымСчетомТочкиУчета.IDСтроки КАК IDСтроки,
	|	энргОперацияСЛицевымСчетомТочкиУчета.IDСтрокиРодитель КАК IDСтрокиРодитель,
	|	энргОперацияСЛицевымСчетомТочкиУчета.НетВозможностьУстановкиПУ КАК НетВозможностьУстановкиПУ,
	|	энргОперацияСЛицевымСчетомТочкиУчета.НаправлениеИспользованияТУ КАК НаправлениеИспользованияТУ,
	|	энргОперацияСЛицевымСчетомТочкиУчета.Техническая КАК Техническая,
	|	энргОперацияСЛицевымСчетомТочкиУчета.РасчетТолькоПоПоказаниям КАК РасчетТолькоПоПоказаниям
	|ПОМЕСТИТЬ ДанныеТочекУчета
	|ИЗ
	|	Шапка КАК Шапка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.энргОперацияСЛицевымСчетом.ТочкиУчета КАК энргОперацияСЛицевымСчетомТочкиУчета
	|		ПО Шапка.ДокРегистратор = энргОперацияСЛицевымСчетомТочкиУчета.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеТочекУчета.Организация КАК Организация,
	|	ДанныеТочекУчета.ПериодНачисления КАК ПериодНачисления,
	|	ДанныеТочекУчета.Район КАК Район,
	|	ДанныеТочекУчета.ЧастныйСектор КАК ЧастныйСектор,
	|	ДанныеТочекУчета.Строение КАК Строение,
	|	ДанныеТочекУчета.Помещение КАК Помещение,
	|	ДанныеТочекУчета.Абонент КАК Абонент,
	|	ВЫБОР
	|		КОГДА энргОперацияСЛицевымСчетомПоставщикиСоставныхУслуг.Ссылка ЕСТЬ NULL
	|			ТОГДА ДанныеТочекУчета.Услуга
	|		ИНАЧЕ энргОперацияСЛицевымСчетомПоставщикиСоставныхУслуг.ЧастьСоставнойУслуги
	|	КОНЕЦ КАК Услуга,
	|	ВЫБОР
	|		КОГДА НЕ энргОперацияСЛицевымСчетомПоставщикиСоставныхУслуг.Ссылка ЕСТЬ NULL
	|			ТОГДА ДанныеТочекУчета.Услуга
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|	КОНЕЦ КАК СоставнаяУслуга,
	|	ДанныеТочекУчета.ТочкаУчета КАК ТочкаУчета,
	|	ДанныеТочекУчета.НомерПозиции КАК НомерПозиции,
	|	ДанныеТочекУчета.ДатаРегистратора КАК ДатаРегистратора,
	|	ДанныеТочекУчета.ДокРегистратор КАК ДокРегистратор,
	|	ДанныеТочекУчета.ЛСОткрыт КАК ЛСОткрыт,
	|	ДанныеТочекУчета.УслугаПодключена КАК УслугаПодключена,
	|	ДанныеТочекУчета.ПриборВведен КАК ПриборВведен,
	|	ДанныеТочекУчета.ПриборУчета КАК ПриборУчета,
	|	ДанныеТочекУчета.ДатаСостоянияПрибора КАК ДатаСостоянияПрибора,
	|	ДанныеТочекУчета.КоличествоПрописанных КАК КоличествоПрописанных,
	|	ДанныеТочекУчета.КоличествоПроживающих КАК КоличествоПроживающих,
	|	ДанныеТочекУчета.КоличествоСобственников КАК КоличествоСобственников,
	|	ДанныеТочекУчета.КоличествоКомнат КАК КоличествоКомнат,
	|	ДанныеТочекУчета.КоэффициентПУ КАК КоэффициентПУ,
	|	ВЫБОР
	|		КОГДА энргОперацияСЛицевымСчетомПоставщикиСоставныхУслуг.Ссылка ЕСТЬ NULL
	|			ТОГДА ДанныеТочекУчета.Поставщик
	|		ИНАЧЕ энргОперацияСЛицевымСчетомПоставщикиСоставныхУслуг.Поставщик
	|	КОНЕЦ КАК Поставщик,
	|	ДанныеТочекУчета.НетВозможностьУстановкиПУ КАК НетВозможностьУстановкиПУ,
	|	ДанныеТочекУчета.НаправлениеИспользованияТУ КАК НаправлениеИспользованияТУ,
	|	ДанныеТочекУчета.IDСтроки КАК IDСтроки,
	|	ДанныеТочекУчета.IDСтрокиРодитель КАК IDСтрокиРодитель,
	|	ДанныеТочекУчета.Техническая КАК Техническая,
	|	ДанныеТочекУчета.РасчетТолькоПоПоказаниям КАК РасчетТолькоПоПоказаниям
	|ПОМЕСТИТЬ Услуги
	|ИЗ
	|	ДанныеТочекУчета КАК ДанныеТочекУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.энргОперацияСЛицевымСчетом.ПоставщикиСоставныхУслуг КАК энргОперацияСЛицевымСчетомПоставщикиСоставныхУслуг
	|		ПО (ДанныеТочекУчета.ЭтоСоставнаяУслуга)
	|			И ДанныеТочекУчета.ДокРегистратор = энргОперацияСЛицевымСчетомПоставщикиСоставныхУслуг.Ссылка
	|			И ДанныеТочекУчета.IDСтроки = энргОперацияСЛицевымСчетомПоставщикиСоставныхУслуг.IDСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ПериодНачисления КАК ПериодНачисления,
	|	ВложенныйЗапрос.Район КАК Район,
	|	ВложенныйЗапрос.ЧастныйСектор КАК ЧастныйСектор,
	|	ВложенныйЗапрос.Строение КАК Строение,
	|	ВложенныйЗапрос.Помещение КАК Помещение,
	|	ВложенныйЗапрос.Абонент КАК Абонент,
	|	ВложенныйЗапрос.Услуга КАК Услуга,
	|	ВложенныйЗапрос.ТочкаУчета КАК ТочкаУчета,
	|	ВложенныйЗапрос.НомерПозиции КАК НомерПозиции,
	|	&ПериодРегистрации КАК ПериодРегистрации,
	|	ВложенныйЗапрос.ДатаРегистратора КАК ДатаРегистратора,
	|	ВложенныйЗапрос.ДокРегистратор КАК ДокРегистратор,
	|	ВложенныйЗапрос.ЛСОткрыт КАК ЛСОткрыт,
	|	ВложенныйЗапрос.УслугаПодключена КАК УслугаПодключена,
	|	ВложенныйЗапрос.ПриборВведен КАК ПриборВведен,
	|	ВложенныйЗапрос.ПриборУчета КАК ПриборУчета,
	|	ВложенныйЗапрос.ДатаСостоянияПрибора КАК ДатаСостоянияПрибора,
	|	ВложенныйЗапрос.КоличествоПрописанных КАК КоличествоПрописанных,
	|	ВложенныйЗапрос.КоличествоПроживающих КАК КоличествоПроживающих,
	|	ВложенныйЗапрос.КоличествоСобственников КАК КоличествоСобственников,
	|	ВложенныйЗапрос.КоличествоКомнат КАК КоличествоКомнат,
	|	ВложенныйЗапрос.КоэффициентПУ КАК КоэффициентПУ,
	|	ВложенныйЗапрос.ВидБлагоустройства КАК ВидБлагоустройства,
	|	ВложенныйЗапрос.ТарифнаяГруппа КАК ТарифнаяГруппа,
	|	ЕСТЬNULL(ДанныеПлощади.Значение, 0) КАК ЗначениеПлощади,
	|	ВложенныйЗапрос.Поставщик КАК Поставщик,
	|	ИСТИНА КАК МенялосьСостояниеПУ,
	|	ИСТИНА КАК МенялосьСостояниеФормулы,
	|	ВложенныйЗапрос.НетВозможностьУстановкиПУ КАК НетВозможностьУстановкиПУ,
	|	ВложенныйЗапрос.СоставнаяУслуга КАК СоставнаяУслуга,
	|	0 КАК КоличествоЭтажей,
	|	0 КАК ГодПостройки,
	|	ЗНАЧЕНИЕ(Перечисление.энргТипыСобственниковЖилья.ПустаяСсылка) КАК ВидСобственности,
	|	ВложенныйЗапрос.НаправлениеИспользованияТУ КАК НаправлениеИспользованияТУ,
	|	ВложенныйЗапрос.Техническая КАК Техническая,
	|	ВложенныйЗапрос.ТочкаУчетаРодитель КАК ТочкаУчетаРодитель,
	|	ВложенныйЗапрос.РасчетТолькоПоПоказаниям КАК РасчетТолькоПоПоказаниям
	|ПОМЕСТИТЬ ВсеПараметрыРасчета
	|ИЗ
	|	(ВЫБРАТЬ
	|		Услуги.Организация КАК Организация,
	|		Услуги.ПериодНачисления КАК ПериодНачисления,
	|		Услуги.Район КАК Район,
	|		Услуги.ЧастныйСектор КАК ЧастныйСектор,
	|		Услуги.Строение КАК Строение,
	|		Услуги.Помещение КАК Помещение,
	|		Услуги.Абонент КАК Абонент,
	|		Услуги.Услуга КАК Услуга,
	|		Услуги.ТочкаУчета КАК ТочкаУчета,
	|		Услуги.НомерПозиции КАК НомерПозиции,
	|		Услуги.ДатаРегистратора КАК ДатаРегистратора,
	|		Услуги.ДокРегистратор КАК ДокРегистратор,
	|		Услуги.ЛСОткрыт КАК ЛСОткрыт,
	|		Услуги.УслугаПодключена КАК УслугаПодключена,
	|		Услуги.ПриборВведен КАК ПриборВведен,
	|		Услуги.ПриборУчета КАК ПриборУчета,
	|		Услуги.ДатаСостоянияПрибора КАК ДатаСостоянияПрибора,
	|		Услуги.КоличествоПрописанных КАК КоличествоПрописанных,
	|		Услуги.КоличествоПроживающих КАК КоличествоПроживающих,
	|		Услуги.КоличествоСобственников КАК КоличествоСобственников,
	|		Услуги.КоличествоКомнат КАК КоличествоКомнат,
	|		Услуги.КоэффициентПУ КАК КоэффициентПУ,
	|		энргОперацияСЛицевымСчетомВидыБлагоустройстваТарифныеКатегории.ВидБлагоустройстваИндивидуальный КАК ВидБлагоустройства,
	|		энргОперацияСЛицевымСчетомВидыБлагоустройстваТарифныеКатегории.ТарифнаяКатегория КАК ТарифнаяГруппа,
	|		Услуги.Поставщик КАК Поставщик,
	|		ВЫБОР
	|			КОГДА энргВидыУслуг.Ссылка ЕСТЬ NULL
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.энргВидыПлощадей.ОбщаяПлощадь)
	|			КОГДА НЕ Услуги.НаправлениеИспользованияТУ = ЗНАЧЕНИЕ(Справочник.энргНаправлениеИспользованияТочекУчета.ОсновноеНаправление)
	|				ТОГДА ЕСТЬNULL(СпособыРасчетаПоНаправлениям.ВидПлощади, ЗНАЧЕНИЕ(Перечисление.энргВидыПлощадей.ОбщаяПлощадь))
	|			КОГДА энргВидыУслуг.ВидПлощади = ЗНАЧЕНИЕ(Перечисление.энргВидыПлощадей.ПустаяСсылка)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.энргВидыПлощадей.ОбщаяПлощадь)
	|			ИНАЧЕ энргВидыУслуг.ВидПлощади
	|		КОНЕЦ КАК ВидПлощади,
	|		Услуги.НетВозможностьУстановкиПУ КАК НетВозможностьУстановкиПУ,
	|		Услуги.СоставнаяУслуга КАК СоставнаяУслуга,
	|		Услуги.НаправлениеИспользованияТУ КАК НаправлениеИспользованияТУ,
	|		Услуги.Техническая КАК Техническая,
	|		ЕСТЬNULL(энргОперацияСЛицевымСчетомТочкиУчета.ТочкаУчета, ЗНАЧЕНИЕ(Справочник.энргТочкиУчета.ПустаяСсылка)) КАК ТочкаУчетаРодитель,
	|		Услуги.РасчетТолькоПоПоказаниям КАК РасчетТолькоПоПоказаниям
	|	ИЗ
	|		Услуги КАК Услуги
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг КАК энргВидыУслуг
	|			ПО Услуги.Услуга = энргВидыУслуг.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.энргСпособыРасчетаПоНаправлениям.СрезПоследних(&МоментВремени, ) КАК СпособыРасчетаПоНаправлениям
	|			ПО Услуги.Услуга = СпособыРасчетаПоНаправлениям.Услуга
	|				И Услуги.НаправлениеИспользованияТУ = СпособыРасчетаПоНаправлениям.НаправлениеИспользованияТУ
	|				И Услуги.Организация = СпособыРасчетаПоНаправлениям.Организация
	|				И Услуги.Район = СпособыРасчетаПоНаправлениям.Район
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.энргОперацияСЛицевымСчетом.ТочкиУчета КАК энргОперацияСЛицевымСчетомТочкиУчета
	|			ПО Услуги.ДокРегистратор = энргОперацияСЛицевымСчетомТочкиУчета.Ссылка
	|				И (энргОперацияСЛицевымСчетомТочкиУчета.Ссылка = &Ссылка)
	|				И Услуги.IDСтрокиРодитель = энргОперацияСЛицевымСчетомТочкиУчета.IDСтроки
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.энргОперацияСЛицевымСчетом.ВидыБлагоустройстваТарифныеКатегории КАК энргОперацияСЛицевымСчетомВидыБлагоустройстваТарифныеКатегории
	|			ПО Услуги.ДокРегистратор = энргОперацияСЛицевымСчетомВидыБлагоустройстваТарифныеКатегории.Ссылка
	|				И Услуги.Услуга = энргОперацияСЛицевымСчетомВидыБлагоустройстваТарифныеКатегории.Услуга
	|				И (энргОперацияСЛицевымСчетомВидыБлагоустройстваТарифныеКатегории.Ссылка = &Ссылка)) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеПлощади КАК ДанныеПлощади
	|		ПО ВложенныйЗапрос.ВидПлощади = ДанныеПлощади.ВидПлощади
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Услуги.Организация КАК Организация,
	|	Услуги.ПериодНачисления КАК ПериодНачисления,
	|	Услуги.Район КАК Район,
	|	Услуги.ЧастныйСектор КАК ЧастныйСектор,
	|	Услуги.Строение КАК Строение,
	|	Услуги.Помещение КАК Помещение,
	|	Услуги.ТочкаУчета КАК ТочкаУчета,
	|	Услуги.Услуга КАК Услуга,
	|	Услуги.НаправлениеИспользованияТУ КАК НаправлениеИспользованияТУ,
	|	энргОперацияСЛицевымСчетомЗначенияИзмерителей.НаправлениеИспользованияТУ КАК Измеритель,
	|	Услуги.ДатаРегистратора КАК ДатаРегистратора,
	|	Услуги.ДокРегистратор КАК ДокРегистратор,
	|	энргОперацияСЛицевымСчетомЗначенияИзмерителей.Значение КАК Количество
	|ПОМЕСТИТЬ ВсеПараметрыРасчетаСИзмерителями
	|ИЗ
	|	Услуги КАК Услуги
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргОперацияСЛицевымСчетом.ЗначенияИзмерителей КАК энргОперацияСЛицевымСчетомЗначенияИзмерителей
	|		ПО Услуги.ДокРегистратор = энргОперацияСЛицевымСчетомЗначенияИзмерителей.Ссылка
	|			И Услуги.IDСтроки = энргОперацияСЛицевымСчетомЗначенияИзмерителей.IDСтроки";	
	
	Текст  = Текст + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Текст = Текст + Справочники.энргКлючиНормативов.ТекстОпределенияКлючейНорматива(Истина);
	
	Текст  = Текст + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";

	Текст  = Текст +
	"ВЫБРАТЬ
	|	ВсеПараметрыРасчета.*,
	|	КлючиНорматива.КлючНорматива КАК КлючНорматива,
	|	КлючиНорматива.КлючСоцНорматива КАК КлючСоцНорматива
	|ИЗ
	|	ВсеПараметрыРасчета КАК ВсеПараметрыРасчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ КлючиНорматива КАК КлючиНорматива
	|		ПО (ВсеПараметрыРасчета.Услуга = КлючиНорматива.Услуга)
	|		И (ВсеПараметрыРасчета.НаправлениеИспользованияТУ = КлючиНорматива.НаправлениеИспользованияТУ)
	|		И (КлючиНорматива.Измеритель = ЗНАЧЕНИЕ(Справочник.энргНаправлениеИспользованияТочекУчета.ОсновноеНаправление))";
	
	Возврат Текст;	
	
КонецФункции

Функция ТекстЗапросаЗначениеИзмеретелейСКлючомНорматива()
	
	Текст = 
	"ВЫБРАТЬ
	|	ВсеПараметрыРасчетаСИзмерителями.Организация КАК Организация,
	|	ВсеПараметрыРасчетаСИзмерителями.ПериодНачисления КАК ПериодНачисления,
	|	ВсеПараметрыРасчетаСИзмерителями.Район КАК Район,
	|	ВсеПараметрыРасчетаСИзмерителями.ЧастныйСектор КАК ЧастныйСектор,
	|	ВсеПараметрыРасчетаСИзмерителями.Строение КАК Строение,
	|	ВсеПараметрыРасчетаСИзмерителями.Помещение КАК Помещение,
	|	ВсеПараметрыРасчетаСИзмерителями.Услуга КАК Услуга,
	|	ВсеПараметрыРасчетаСИзмерителями.ТочкаУчета КАК ТочкаУчета,
	|	0 КАК НомерПозиции,
	|	ВсеПараметрыРасчетаСИзмерителями.Измеритель КАК Измеритель,
	|	ВсеПараметрыРасчетаСИзмерителями.ДатаРегистратора КАК ДатаРегистратора,
	|	ВсеПараметрыРасчетаСИзмерителями.ДокРегистратор КАК ДокРегистратор,
	|	ВсеПараметрыРасчетаСИзмерителями.Количество КАК Количество,
	|	ЕСТЬNULL(КлючиНорматива.КлючНорматива, ЗНАЧЕНИЕ(Справочник.энргКлючиНормативов.Пустаяссылка)) КАК КлючНорматива
	|ИЗ
	|	ВсеПараметрыРасчетаСИзмерителями КАК ВсеПараметрыРасчетаСИзмерителями
	|		ЛЕВОЕ СОЕДИНЕНИЕ КлючиНорматива КАК КлючиНорматива
	|		ПО ВсеПараметрыРасчетаСИзмерителями.Услуга = КлючиНорматива.Услуга
	|			И ВсеПараметрыРасчетаСИзмерителями.НаправлениеИспользованияТУ = КлючиНорматива.НаправлениеИспользованияТУ
	|			И ВсеПараметрыРасчетаСИзмерителями.Измеритель = КлючиНорматива.Измеритель";
	
	Возврат Текст;	

КонецФункции

Функция ТекстЗапросаОткрытиеМКД() 
	Текст =   
	"ВЫБРАТЬ
	|	энргОткрытиеМКД.Организация КАК Организация,
	|	энргОткрытиеМКД.ПериодНачисления КАК ПериодНачисления,
	|	энргОткрытиеМКД.Район КАК Район,
	|	энргОткрытиеМКД.МКД КАК МКД,
	|	энргОткрытиеМКД.Дата КАК ДатаРегистратора,
	|	энргОткрытиеМКД.Ссылка КАК ДокРегистратор,
	|	ИСТИНА КАК МКДОткрыт,
	|	энргСтроения.КоличествоЭтажей КАК Этажность,
	|	энргСтроения.Бойлер КАК Бойлер,
	|	энргОткрытиеМКД.ТипСхемы КАК ТипСхемы,
	|	энргОткрытиеМКД.ВидТепловогоПункта КАК ВидТепловогоПункта,
	|	энргОткрытиеМКД.ОбщаяПлощадь КАК ОбщаяПлощадь
	|ПОМЕСТИТЬ Шапка
	|ИЗ
	|	Документ.энргОткрытиеМКД КАК энргОткрытиеМКД
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.энргСтроения КАК энргСтроения
	|		ПО энргОткрытиеМКД.МКД = энргСтроения.Ссылка
	|			И (энргОткрытиеМКД.Ссылка = &Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	энргОткрытиеМКДЗначениеПлощадей.Услуга КАК Услуга,
	|	энргОткрытиеМКДЗначениеПлощадей.ВидПлощади КАК ВидПлощади,
	|	энргОткрытиеМКДЗначениеПлощадей.Значение КАК Значение
	|ПОМЕСТИТЬ ДанныеПлощади
	|ИЗ
	|	Документ.энргОткрытиеМКД.ЗначениеПлощадей КАК энргОткрытиеМКДЗначениеПлощадей
	|ГДЕ
	|	энргОткрытиеМКДЗначениеПлощадей.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Шапка.Организация КАК Организация,
	|	Шапка.ПериодНачисления КАК ПериодНачисления,
	|	Шапка.Район КАК Район,
	|	Шапка.МКД КАК МКД,
	|	ЕСТЬNULL(энргОткрытиеМКДТочкиУчета.Услуга, ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)) КАК Услуга,
	|	ЕСТЬNULL(энргОткрытиеМКДТочкиУчета.ТочкаУчета, ЗНАЧЕНИЕ(Справочник.энргТочкиУчета.Пустаяссылка)) КАК ТочкаУчета,
	|	0 КАК НомерПозиции,
	|	Шапка.ДатаРегистратора КАК ДатаРегистратора,
	|	Шапка.ДокРегистратор КАК ДокРегистратор,
	|	Шапка.МКДОткрыт КАК МКДОткрыт,
	|	ВЫБОР
	|		КОГДА энргОткрытиеМКДТочкиУчета.Услуга ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК УслугаПодключена,
	|	ВЫБОР
	|		КОГДА энргОткрытиеМКДТочкиУчета.ПриборУчета ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		КОГДА энргОткрытиеМКДТочкиУчета.ПриборУчета = ЗНАЧЕНИЕ(Справочник.энргПриборыУчетаАбонента.ПУстаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПриборВведен,
	|	ЕСТЬNULL(энргОткрытиеМКДТочкиУчета.ПриборУчета, ЗНАЧЕНИЕ(Справочник.энргПриборыУчетаАбонента.ПустаяСсылка)) КАК ПриборУчета,
	|	ВЫБОР
	|		КОГДА энргОткрытиеМКДТочкиУчета.ПриборУчета ЕСТЬ NULL
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		КОГДА энргОткрытиеМКДТочкиУчета.ПриборУчета = ЗНАЧЕНИЕ(Справочник.энргПриборыУчетаАбонента.ПустаяСсылка)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ &ПериодРегистрации
	|	КОНЕЦ КАК ДатаСостоянияПрибора,
	|	ЕСТЬNULL(энргОткрытиеМКДТочкиУчета.КоэффициентПУ, 0) КАК КоэффициентПУ,
	|	Шапка.Этажность КАК Этажность,
	|	Шапка.Бойлер КАК Бойлер,
	|	энргОткрытиеМКДТочкиУчета.Поставщик КАК Поставщик,
	|	энргОткрытиеМКДТочкиУчета.ЭтоСоставнаяУслуга КАК ЭтоСоставнаяУслуга,
	|	энргОткрытиеМКДТочкиУчета.IDСтроки КАК IDСтроки,
	|	энргОткрытиеМКДТочкиУчета.РаспределятьНаАбонентов КАК РаспределятьНаАбонентов,
	|	Шапка.ТипСхемы КАК ТипСхемы,
	|	Шапка.ВидТепловогоПункта КАК ВидТепловогоПункта,
	|	Шапка.ОбщаяПлощадь КАК ОбщаяПлощадь
	|ПОМЕСТИТЬ ДанныеТочекУчета
	|ИЗ
	|	Шапка КАК Шапка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.энргОткрытиеМКД.ТочкиУчета КАК энргОткрытиеМКДТочкиУчета
	|		ПО Шапка.ДокРегистратор = энргОткрытиеМКДТочкиУчета.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ПериодНачисления КАК ПериодНачисления,
	|	ВложенныйЗапрос.Район КАК Район,
	|	ВложенныйЗапрос.МКД КАК МКД,
	|	ВложенныйЗапрос.Услуга КАК Услуга,
	|	ВложенныйЗапрос.ТочкаУчета КАК ТочкаУчета,
	|	ВложенныйЗапрос.НомерПозиции КАК НомерПозиции,
	|	ВложенныйЗапрос.ДатаРегистратора КАК ДатаРегистратора,
	|	ВложенныйЗапрос.ДокРегистратор КАК ДокРегистратор,
	|	ВложенныйЗапрос.МКДОткрыт КАК МКДОткрыт,
	|	ВложенныйЗапрос.УслугаПодключена КАК УслугаПодключена,
	|	ВложенныйЗапрос.ПриборВведен КАК ПриборВведен,
	|	ВложенныйЗапрос.ПриборУчета КАК ПриборУчета,
	|	ВложенныйЗапрос.ДатаСостоянияПрибора КАК ДатаСостоянияПрибора,
	|	ВложенныйЗапрос.Этажность КАК Этажность,
	|	ВложенныйЗапрос.КоэффициентПУ КАК КоэффициентПУ,
	|	ВложенныйЗапрос.Бойлер КАК Бойлер,
	|	ВложенныйЗапрос.Поставщик КАК Поставщик,
	|	ВложенныйЗапрос.IDСтроки КАК IDСтроки,
	|	ВложенныйЗапрос.СоставнаяУслуга КАК СоставнаяУслуга,
	|	ВложенныйЗапрос.НеРаспределятьНаАбонентов КАК НеРаспределятьНаАбонентов,
	|	ВложенныйЗапрос.ТипСхемы КАК ТипСхемы,
	|	ВложенныйЗапрос.ВидТепловогоПункта КАК ВидТепловогоПункта,
	|	ВложенныйЗапрос.ОбщаяПлощадь КАК ОбщаяПлощадь,
	|	ВЫБОР
	|		КОГДА энргВидыУслуг.Ссылка ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.энргВидыПлощадей.ОбщаяПлощадьМКД)
	|		КОГДА энргВидыУслуг.ВидПлощадиМКД = ЗНАЧЕНИЕ(Перечисление.энргВидыПлощадей.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.энргВидыПлощадей.ОбщаяПлощадьМКД)
	|		ИНАЧЕ энргВидыУслуг.ВидПлощадиМКД
	|	КОНЕЦ КАК ВидПлощади,
	|	энргВидыУслуг.НормативДляИндивидуальных КАК НормативДляИндивидуальных
	|ПОМЕСТИТЬ Услуги
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеТочекУчета.Организация КАК Организация,
	|		ДанныеТочекУчета.ПериодНачисления КАК ПериодНачисления,
	|		ДанныеТочекУчета.Район КАК Район,
	|		ДанныеТочекУчета.МКД КАК МКД,
	|		ВЫБОР
	|			КОГДА энргОткрытиеМКДПоставщикиСоставныхУслуг.Ссылка ЕСТЬ NULL
	|				ТОГДА ДанныеТочекУчета.Услуга
	|			ИНАЧЕ энргОткрытиеМКДПоставщикиСоставныхУслуг.ЧастьСоставнойУслуги
	|		КОНЕЦ КАК Услуга,
	|		ДанныеТочекУчета.ТочкаУчета КАК ТочкаУчета,
	|		ДанныеТочекУчета.НомерПозиции КАК НомерПозиции,
	|		ДанныеТочекУчета.ДатаРегистратора КАК ДатаРегистратора,
	|		ДанныеТочекУчета.ДокРегистратор КАК ДокРегистратор,
	|		ДанныеТочекУчета.МКДОткрыт КАК МКДОткрыт,
	|		ДанныеТочекУчета.УслугаПодключена КАК УслугаПодключена,
	|		ДанныеТочекУчета.ПриборВведен КАК ПриборВведен,
	|		ДанныеТочекУчета.ПриборУчета КАК ПриборУчета,
	|		ДанныеТочекУчета.ДатаСостоянияПрибора КАК ДатаСостоянияПрибора,
	|		ДанныеТочекУчета.Этажность КАК Этажность,
	|		ДанныеТочекУчета.КоэффициентПУ КАК КоэффициентПУ,
	|		ДанныеТочекУчета.Бойлер КАК Бойлер,
	|		ВЫБОР
	|			КОГДА энргОткрытиеМКДПоставщикиСоставныхУслуг.Ссылка ЕСТЬ NULL
	|				ТОГДА ДанныеТочекУчета.Поставщик
	|			ИНАЧЕ энргОткрытиеМКДПоставщикиСоставныхУслуг.Поставщик
	|		КОНЕЦ КАК Поставщик,
	|		ДанныеТочекУчета.IDСтроки КАК IDСтроки,
	|		ВЫБОР
	|			КОГДА энргОткрытиеМКДПоставщикиСоставныхУслуг.Ссылка ЕСТЬ NULL
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|			ИНАЧЕ ДанныеТочекУчета.Услуга
	|		КОНЕЦ КАК СоставнаяУслуга,
	|		ВЫБОР
	|			КОГДА энргОткрытиеМКДПоставщикиСоставныхУслуг.Ссылка ЕСТЬ NULL
	|				ТОГДА НЕ ДанныеТочекУчета.РаспределятьНаАбонентов
	|			ИНАЧЕ НЕ энргОткрытиеМКДПоставщикиСоставныхУслуг.РаспределятьНаАбонентов
	|		КОНЕЦ КАК НеРаспределятьНаАбонентов,
	|		ДанныеТочекУчета.ТипСхемы КАК ТипСхемы,
	|		ДанныеТочекУчета.ВидТепловогоПункта КАК ВидТепловогоПункта,
	|		ДанныеТочекУчета.ОбщаяПлощадь КАК ОбщаяПлощадь
	|	ИЗ
	|		ДанныеТочекУчета КАК ДанныеТочекУчета
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.энргОткрытиеМКД.ПоставщикиСоставныхУслуг КАК энргОткрытиеМКДПоставщикиСоставныхУслуг
	|			ПО (ДанныеТочекУчета.ЭтоСоставнаяУслуга)
	|				И ДанныеТочекУчета.ДокРегистратор = энргОткрытиеМКДПоставщикиСоставныхУслуг.Ссылка
	|				И ДанныеТочекУчета.IDСтроки = энргОткрытиеМКДПоставщикиСоставныхУслуг.IDСтроки) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг КАК энргВидыУслуг
	|		ПО ВложенныйЗапрос.Услуга = энргВидыУслуг.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ПериодНачисления КАК ПериодНачисления,
	|	ВложенныйЗапрос.Район КАК Район,
	|	ВложенныйЗапрос.МКД КАК МКД,
	|	ВложенныйЗапрос.Услуга КАК Услуга,
	|	ВложенныйЗапрос.ТочкаУчета КАК ТочкаУчета,
	|	ВложенныйЗапрос.НомерПозиции КАК НомерПозиции,
	|	&ПериодРегистрации КАК ПериодРегистрации,
	|	ВложенныйЗапрос.ДатаРегистратора КАК ДатаРегистратора,
	|	ВложенныйЗапрос.ДокРегистратор КАК ДокРегистратор,
	|	ВложенныйЗапрос.МКДОткрыт КАК МКДОткрыт,
	|	ВложенныйЗапрос.УслугаПодключена КАК УслугаПодключена,
	|	ВложенныйЗапрос.ПриборВведен КАК ПриборВведен,
	|	ВложенныйЗапрос.ПриборУчета КАК ПриборУчета,
	|	ВложенныйЗапрос.ДатаСостоянияПрибора КАК ДатаСостоянияПрибора,
	|	ВложенныйЗапрос.Этажность КАК Этажность,
	|	ВложенныйЗапрос.КоэффициентПУ КАК КоэффициентПУ,
	|	ВложенныйЗапрос.ВидБлагоустройства КАК ВидБлагоустройства,
	|	ЕСТЬNULL(ДанныеПлощади.Значение, 0) КАК ЗначениеПлощади,
	|	ВложенныйЗапрос.Поставщик КАК Поставщик,
	|	ВложенныйЗапрос.Бойлер КАК Бойлер,
	|	ВложенныйЗапрос.РасчетПоФормуле КАК РасчетПоФормуле,
	|	ВложенныйЗапрос.ФормулаРасчета КАК ФормулаРасчета,
	|	ВложенныйЗапрос.СоставнаяУслуга КАК СоставнаяУслуга,
	|	ИСТИНА КАК МенялосьСостояниеПУ,
	|	ИСТИНА КАК МенялосьСостояниеФормулы,
	|	ВложенныйЗапрос.Шкала КАК Шкала,
	|	ВложенныйЗапрос.НеРаспределятьНаАбонентов КАК НеРаспределятьНаАбонентов,
	|	ВложенныйЗапрос.ТипСхемы КАК ТипСхемы,
	|	ВложенныйЗапрос.ВидТепловогоПункта КАК ВидТепловогоПункта,
	|	ВложенныйЗапрос.ОбщаяПлощадь КАК ОбщаяПлощадь,
	|	ЗНАЧЕНИЕ(Перечисление.энргТипыСобственниковЖилья.ПустаяСсылка) КАК ВидСобственности,
	|	0 КАК ГодПостройки,
	|	0 КАК КоличествоКомнат,
	|	0 КАК КоличествоПрописанных,
	|	0 КАК КоличествоСобственников,
	|	0 КАК КоличествоПроживающих,
	|	энргСтроения.КоличествоЭтажей КАК КоличествоЭтажей,
	|	ВложенныйЗапрос.НаправлениеИспользованияТУ КАК НаправлениеИспользованияТУ
	|ПОМЕСТИТЬ ВсеПараметрыРасчета
	|ИЗ
	|	(ВЫБРАТЬ
	|		Услуги.Организация КАК Организация,
	|		Услуги.ПериодНачисления КАК ПериодНачисления,
	|		Услуги.Район КАК Район,
	|		Услуги.МКД КАК МКД,
	|		Услуги.Услуга КАК Услуга,
	|		Услуги.ТочкаУчета КАК ТочкаУчета,
	|		Услуги.НомерПозиции КАК НомерПозиции,
	|		Услуги.ДатаРегистратора КАК ДатаРегистратора,
	|		Услуги.ДокРегистратор КАК ДокРегистратор,
	|		Услуги.МКДОткрыт КАК МКДОткрыт,
	|		Услуги.УслугаПодключена КАК УслугаПодключена,
	|		Услуги.ПриборВведен КАК ПриборВведен,
	|		Услуги.ПриборУчета КАК ПриборУчета,
	|		Услуги.ДатаСостоянияПрибора КАК ДатаСостоянияПрибора,
	|		Услуги.Этажность КАК Этажность,
	|		Услуги.КоэффициентПУ КАК КоэффициентПУ,
	|		ВЫБОР
	|			КОГДА Услуги.НормативДляИндивидуальных
	|				ТОГДА энргОткрытиеМКДВидыБлагоустройств.ВидБлагоустройстваИндивидуальный
	|			ИНАЧЕ энргОткрытиеМКДВидыБлагоустройств.ВидБлагоустройстваОбщедомовой
	|		КОНЕЦ КАК ВидБлагоустройства,
	|		Услуги.Поставщик КАК Поставщик,
	|		Услуги.Бойлер КАК Бойлер,
	|		Услуги.СоставнаяУслуга КАК СоставнаяУслуга,
	|		Услуги.ВидПлощади КАК ВидПлощади,
	|		ВЫБОР
	|			КОГДА энргОткрытиеМКДФормулыРасчетаУслуг.Ссылка ЕСТЬ NULL
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ КАК РасчетПоФормуле,
	|		ЕСТЬNULL(энргОткрытиеМКДФормулыРасчетаУслуг.ФормулаРасчета, """") КАК ФормулаРасчета,
	|		ЕСТЬNULL(энргОткрытиеМКДШкалыУслуг.Шкала, ЗНАЧЕНИЕ(Справочник.энргШкалыПриборовУчета.ПустаяСсылка)) КАК Шкала,
	|		Услуги.НеРаспределятьНаАбонентов КАК НеРаспределятьНаАбонентов,
	|		Услуги.ТипСхемы КАК ТипСхемы,
	|		Услуги.ВидТепловогоПункта КАК ВидТепловогоПункта,
	|		Услуги.ОбщаяПлощадь КАК ОбщаяПлощадь,
	|		ЗНАЧЕНИЕ(Справочник.энргНаправлениеИспользованияТочекУчета.ОсновноеНаправление) КАК НаправлениеИспользованияТУ
	|	ИЗ
	|		Услуги КАК Услуги
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.энргОткрытиеМКД.ВидыБлагоустройстваТарифныеКатегории КАК энргОткрытиеМКДВидыБлагоустройств
	|			ПО Услуги.ДокРегистратор = энргОткрытиеМКДВидыБлагоустройств.Ссылка
	|				И Услуги.Услуга = энргОткрытиеМКДВидыБлагоустройств.Услуга
	|				И (энргОткрытиеМКДВидыБлагоустройств.Ссылка = &Ссылка)
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.энргОткрытиеМКД.ФормулыРасчетаУслуг КАК энргОткрытиеМКДФормулыРасчетаУслуг
	|			ПО Услуги.ДокРегистратор = энргОткрытиеМКДФормулыРасчетаУслуг.Ссылка
	|				И Услуги.Услуга = энргОткрытиеМКДФормулыРасчетаУслуг.Услуга
	|				И Услуги.IDСтроки = энргОткрытиеМКДФормулыРасчетаУслуг.IDСтроки
	|				И (энргОткрытиеМКДФормулыРасчетаУслуг.Ссылка = &Ссылка)
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.энргОткрытиеМКД.ШкалыУслуг КАК энргОткрытиеМКДШкалыУслуг
	|			ПО Услуги.ДокРегистратор = энргОткрытиеМКДШкалыУслуг.Ссылка
	|				И Услуги.Услуга = энргОткрытиеМКДШкалыУслуг.Услуга
	|				И Услуги.IDСтроки = энргОткрытиеМКДШкалыУслуг.IDСтроки
	|				И (энргОткрытиеМКДШкалыУслуг.Ссылка = &Ссылка)) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеПлощади КАК ДанныеПлощади
	|		ПО ВложенныйЗапрос.Услуга = ДанныеПлощади.Услуга
	|			И ВложенныйЗапрос.ВидПлощади = ДанныеПлощади.ВидПлощади
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргСтроения КАК энргСтроения
	|		ПО ВложенныйЗапрос.МКД = энргСтроения.Ссылка";
	
	Текст  = Текст + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Текст = Текст + Справочники.энргКлючиНормативов.ТекстОпределенияКлючейНормативаМКД();
	
	Текст  = Текст + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";

	Текст  = Текст +
	"ВЫБРАТЬ
	|	ВсеПараметрыРасчета.*,
	|	КлючиНорматива.КлючНорматива КАК КлючНорматива
	|ИЗ
	|	ВсеПараметрыРасчета КАК ВсеПараметрыРасчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ КлючиНорматива КАК КлючиНорматива
	|		ПО ВсеПараметрыРасчета.МКД = КлючиНорматива.МКД
	|		И ВсеПараметрыРасчета.Услуга = КлючиНорматива.Услуга
	|		И КлючиНорматива.НаправлениеИспользованияТУ = ЗНАЧЕНИЕ(Справочник.энргНаправлениеИспользованияТочекУчета.ОсновноеНаправление)";
	
	Возврат Текст;
	
КонецФункции

Функция ТекстЗапросаПодключениеУслуги()
	Текст  = 
	"ВЫБРАТЬ
	|	энргОперацияСУслугами.Организация КАК Организация,
	|	энргОперацияСУслугами.ПериодНачисления КАК ПериодНачисления,
	|	энргОперацияСУслугами.Район КАК Район,
	|	&ЧастныйСектор КАК ЧастныйСектор,
	|	&Строение КАК Строение,
	|	&Помещение КАК Помещение,
	|	энргОперацияСУслугами.Абонент КАК Абонент,
	|	энргОперацияСУслугами.Ссылка КАК Ссылка,
	|	энргОперацияСУслугами.Дата КАК Дата
	|ПОМЕСТИТЬ Шапка
	|ИЗ
	|	Документ.энргОперацияСУслугами КАК энргОперацияСУслугами
	|ГДЕ
	|	энргОперацияСУслугами.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	энргКлючиПомещений.КлючПомещения КАК КлючПомещения
	|ПОМЕСТИТЬ КлючиПомещения
	|ИЗ
	|	РегистрСведений.энргКлючиПомещений КАК энргКлючиПомещений
	|ГДЕ
	|	энргКлючиПомещений.Строение = &Строение
	|	И энргКлючиПомещений.Помещение = &Помещение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	энргЗначенияПлощадейСрезПоследних.ВидПлощади КАК ВидПлощади,
	|	энргЗначенияПлощадейСрезПоследних.Площадь КАК Площадь
	|ПОМЕСТИТЬ ЗначениеПлощадей
	|ИЗ
	|	РегистрСведений.энргЗначенияПлощадей.СрезПоследних(
	|			&МоментВремени,
	|			Организация = &Организация
	|				И Район = &Район
	|				И ВидПлощади В (ЗНАЧЕНИЕ(Перечисление.энргВидыПлощадей.ОбщаяПлощадь), ЗНАЧЕНИЕ(Перечисление.энргВидыПлощадей.Поливная))
	|				И КлючПомещения В
	|					(ВЫБРАТЬ
	|						КлючиПомещения.КлючПомещения
	|					ИЗ
	|						КлючиПомещения)) КАК энргЗначенияПлощадейСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КлючиПомещения КАК КлючиПомещения
	|		ПО энргЗначенияПлощадейСрезПоследних.КлючПомещения = КлючиПомещения.КлючПомещения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Шапка.Организация КАК Организация,
	|	Шапка.ПериодНачисления КАК ПериодНачисления,
	|	Шапка.Район КАК Район,
	|	Шапка.ЧастныйСектор КАК ЧастныйСектор,
	|	Шапка.Строение КАК Строение,
	|	Шапка.Помещение КАК Помещение,
	|	Шапка.Абонент КАК Абонент,
	|	энргОперацияСУслугамиТочкиУчета.Услуга КАК Услуга,
	|	энргОперацияСУслугамиТочкиУчета.ТочкаУчета КАК ТочкаУчета,
	|	Шапка.Дата КАК ДатаРегистратора,
	|	Шапка.Ссылка КАК ДокРегистратор,
	|	ИСТИНА КАК ЛСОткрыт,
	|	ИСТИНА КАК УслугаПодключена,
	|	ВЫБОР
	|		КОГДА энргОперацияСУслугамиТочкиУчета.ПриборУчета = ЗНАЧЕНИЕ(Справочник.энргПриборыУчетаАбонента.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПриборВведен,
	|	ВЫБОР
	|		КОГДА энргОперацияСУслугамиТочкиУчета.ПриборУчета = ЗНАЧЕНИЕ(Справочник.энргПриборыУчетаАбонента.ПустаяСсылка)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ &ПериодРегистрации
	|	КОНЕЦ КАК ДатаСостоянияПрибора,
	|	энргОперацияСУслугамиТочкиУчета.ПриборУчета КАК ПриборУчета,
	|	энргОперацияСУслугамиТочкиУчета.КоэффициентПУ КАК КоэффициентПУ,
	|	энргОперацияСУслугамиТочкиУчета.Поставщик КАК Поставщик,
	|	энргОперацияСУслугамиТочкиУчета.ЭтоСоставнаяУслуга КАК ЭтоСоставнаяУслуга,
	|	энргОперацияСУслугамиТочкиУчета.НаправлениеИспользованияТУ КАК НаправлениеИспользованияТУ,
	|	энргОперацияСУслугамиТочкиУчета.IDСтроки КАК IDСтроки,
	|	энргОперацияСУслугамиТочкиУчета.IDСтрокиРодитель КАК IDСтрокиРодитель,
	|	энргОперацияСУслугамиТочкиУчета.НетВозможностьУстановкиПУ КАК НетВозможностьУстановкиПУ,
	|	энргОперацияСУслугамиТочкиУчета.РассчитыватьПоДиаметруСечения КАК ИспользоватьДиаметрСечения,
	|	энргОперацияСУслугамиТочкиУчета.ДиаметрСечения КАК ДиаметрСечения,
	|	энргОперацияСУслугамиТочкиУчета.Техническая КАК Техническая,
	|	энргОперацияСУслугамиТочкиУчета.РасчетТолькоПоПоказаниям КАК РасчетТолькоПоПоказаниям
	|ПОМЕСТИТЬ ДанныеШапки
	|ИЗ
	|	Шапка КАК Шапка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргОперацияСУслугами.ТочкиУчета КАК энргОперацияСУслугамиТочкиУчета
	|		ПО Шапка.Ссылка = энргОперацияСУслугамиТочкиУчета.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеШапки.Организация КАК Организация,
	|	ДанныеШапки.ПериодНачисления КАК ПериодНачисления,
	|	ДанныеШапки.Район КАК Район,
	|	ДанныеШапки.ЧастныйСектор КАК ЧастныйСектор,
	|	ДанныеШапки.Строение КАК Строение,
	|	ДанныеШапки.Помещение КАК Помещение,
	|	ДанныеШапки.Абонент КАК Абонент,
	|	ВЫБОР
	|		КОГДА энргОперацияСУслугамиПоставщикиСоставныхУслуг.Ссылка ЕСТЬ NULL
	|			ТОГДА ДанныеШапки.Услуга
	|		ИНАЧЕ энргОперацияСУслугамиПоставщикиСоставныхУслуг.ЧастьСоставнойУслуги
	|	КОНЕЦ КАК Услуга,
	|	ВЫБОР
	|		КОГДА НЕ энргОперацияСУслугамиПоставщикиСоставныхУслуг.Ссылка ЕСТЬ NULL
	|			ТОГДА ДанныеШапки.Услуга
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|	КОНЕЦ КАК СоставнаяУслуга,
	|	ДанныеШапки.ТочкаУчета КАК ТочкаУчета,
	|	ДанныеШапки.ДатаРегистратора КАК ДатаРегистратора,
	|	ДанныеШапки.ДокРегистратор КАК ДокРегистратор,
	|	ДанныеШапки.ЛСОткрыт КАК ЛСОткрыт,
	|	ДанныеШапки.УслугаПодключена КАК УслугаПодключена,
	|	ДанныеШапки.ПриборВведен КАК ПриборВведен,
	|	ДанныеШапки.ПриборУчета КАК ПриборУчета,
	|	ДанныеШапки.ДатаСостоянияПрибора КАК ДатаСостоянияПрибора,
	|	ДанныеШапки.КоэффициентПУ КАК КоэффициентПУ,
	|	ДанныеШапки.ЭтоСоставнаяУслуга КАК ЭтоСоставнаяУслуга,
	|	ДанныеШапки.НаправлениеИспользованияТУ КАК НаправлениеИспользованияТУ,
	|	ДанныеШапки.IDСтроки КАК IDСтроки,
	|	ДанныеШапки.НетВозможностьУстановкиПУ КАК НетВозможностьУстановкиПУ,
	|	ВЫБОР
	|		КОГДА энргОперацияСУслугамиПоставщикиСоставныхУслуг.Ссылка ЕСТЬ NULL
	|			ТОГДА ДанныеШапки.Поставщик
	|		ИНАЧЕ энргОперацияСУслугамиПоставщикиСоставныхУслуг.Поставщик
	|	КОНЕЦ КАК Поставщик,
	|	ДанныеШапки.ИспользоватьДиаметрСечения КАК ИспользоватьДиаметрСечения,
	|	ДанныеШапки.ДиаметрСечения КАК ДиаметрСечения,
	|	ДанныеШапки.Техническая КАК Техническая,
	|	ДанныеШапки.IDСтрокиРодитель КАК IDСтрокиРодитель,
	|	ДанныеШапки.РасчетТолькоПоПоказаниям КАК РасчетТолькоПоПоказаниям
	|ПОМЕСТИТЬ ДанныеШапкиСоставныеУслуги
	|ИЗ
	|	ДанныеШапки КАК ДанныеШапки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.энргОперацияСУслугами.ПоставщикиСоставныхУслуг КАК энргОперацияСУслугамиПоставщикиСоставныхУслуг
	|		ПО ДанныеШапки.ДокРегистратор = энргОперацияСУслугамиПоставщикиСоставныхУслуг.Ссылка
	|			И (ДанныеШапки.ЭтоСоставнаяУслуга)
	|			И ДанныеШапки.IDСтроки = энргОперацияСУслугамиПоставщикиСоставныхУслуг.IDСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеШапкиСоставныеУслуги.Организация КАК Организация,
	|	ДанныеШапкиСоставныеУслуги.ПериодНачисления КАК ПериодНачисления,
	|	ДанныеШапкиСоставныеУслуги.Район КАК Район,
	|	ДанныеШапкиСоставныеУслуги.ЧастныйСектор КАК ЧастныйСектор,
	|	ДанныеШапкиСоставныеУслуги.Строение КАК Строение,
	|	ДанныеШапкиСоставныеУслуги.Помещение КАК Помещение,
	|	ДанныеШапкиСоставныеУслуги.Абонент КАК Абонент,
	|	ДанныеШапкиСоставныеУслуги.Услуга КАК Услуга,
	|	ДанныеШапкиСоставныеУслуги.ТочкаУчета КАК ТочкаУчета,
	|	0 КАК НомерПозиции,
	|	&ПериодРегистрации КАК ПериодРегистрации,
	|	ДанныеШапкиСоставныеУслуги.ДатаРегистратора КАК ДатаРегистратора,
	|	ДанныеШапкиСоставныеУслуги.ДокРегистратор КАК ДокРегистратор,
	|	ДанныеШапкиСоставныеУслуги.ЛСОткрыт КАК ЛСОткрыт,
	|	ДанныеШапкиСоставныеУслуги.УслугаПодключена КАК УслугаПодключена,
	|	ДанныеШапкиСоставныеУслуги.ПриборВведен КАК ПриборВведен,
	|	ДанныеШапкиСоставныеУслуги.ПриборУчета КАК ПриборУчета,
	|	ДанныеШапкиСоставныеУслуги.ДатаСостоянияПрибора КАК ДатаСостоянияПрибора,
	|	ДанныеШапкиСоставныеУслуги.НаправлениеИспользованияТУ КАК НаправлениеИспользованияТУ,
	|	&КоличествоПроживающих КАК КоличествоПроживающих,
	|	&КоличествоПрописанных КАК КоличествоПрописанных,
	|	&КоличествоСобственников КАК КоличествоСобственников,
	|	&КоличествоКомнат КАК КоличествоКомнат,
	|	ДанныеШапкиСоставныеУслуги.КоэффициентПУ КАК КоэффициентПУ,
	|	энргОперацияСУслугамиВидыБлагоустройстваТарифныеКатегории.ВидБлагоустройстваИндивидуальный КАК ВидБлагоустройства,
	|	ЕСТЬNULL(энргОперацияСУслугамиВидыБлагоустройстваТарифныеКатегории.ТарифнаяКатегория, ЗНАЧЕНИЕ(Справочник.энргГруппыПотребителей.ПустаяСсылка)) КАК ТарифнаяГруппа,
	|	ДанныеШапкиСоставныеУслуги.Поставщик КАК Поставщик,
	|	ДанныеШапкиСоставныеУслуги.НетВозможностьУстановкиПУ КАК НетВозможностьУстановкиПУ,
	|	ВЫБОР
	|		КОГДА НЕ СпособыРасчетаПоНаправлениям.Организация ЕСТЬ NULL
	|			ТОГДА СпособыРасчетаПоНаправлениям.ВидПлощади
	|		КОГДА энргВидыУслуг.Ссылка ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.энргВидыПлощадей.ОбщаяПлощадь)
	|		КОГДА энргВидыУслуг.ВидПлощади = ЗНАЧЕНИЕ(Перечисление.энргВидыПлощадей.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.энргВидыПлощадей.ОбщаяПлощадь)
	|		ИНАЧЕ энргВидыУслуг.ВидПлощади
	|	КОНЕЦ КАК ВидПлощади,
	|	ДанныеШапкиСоставныеУслуги.СоставнаяУслуга КАК СоставнаяУслуга,
	|	ДанныеШапкиСоставныеУслуги.ИспользоватьДиаметрСечения КАК ИспользоватьДиаметрСечения,
	|	ДанныеШапкиСоставныеУслуги.ДиаметрСечения КАК ДиаметрСечения,
	|	ДанныеШапкиСоставныеУслуги.Техническая КАК Техническая,
	|	ЕСТЬNULL(энргОперацияСУслугамиТочкиУчета.ТочкаУчета, ЗНАЧЕНИЕ(Справочник.энргТочкиУчета.ПустаяСсылка)) КАК ТочкаУчетаРодитель,
	|	ДанныеШапкиСоставныеУслуги.РасчетТолькоПоПоказаниям КАК РасчетТолькоПоПоказаниям
	|ПОМЕСТИТЬ ОбщиеДанные
	|ИЗ
	|	ДанныеШапкиСоставныеУслуги КАК ДанныеШапкиСоставныеУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.энргОперацияСУслугами.ВидыБлагоустройстваТарифныеКатегории КАК энргОперацияСУслугамиВидыБлагоустройстваТарифныеКатегории
	|		ПО ДанныеШапкиСоставныеУслуги.ДокРегистратор = энргОперацияСУслугамиВидыБлагоустройстваТарифныеКатегории.Ссылка
	|			И ДанныеШапкиСоставныеУслуги.Услуга = энргОперацияСУслугамиВидыБлагоустройстваТарифныеКатегории.Услуга
	|			И (энргОперацияСУслугамиВидыБлагоустройстваТарифныеКатегории.Ссылка = &Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.энргОперацияСУслугами.ТочкиУчета КАК энргОперацияСУслугамиТочкиУчета
	|		ПО ДанныеШапкиСоставныеУслуги.ДокРегистратор = энргОперацияСУслугамиТочкиУчета.Ссылка
	|			И (энргОперацияСУслугамиТочкиУчета.Ссылка = &Ссылка)
	|			И ДанныеШапкиСоставныеУслуги.IDСтрокиРодитель = энргОперацияСУслугамиТочкиУчета.IDСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг КАК энргВидыУслуг
	|		ПО ДанныеШапкиСоставныеУслуги.Услуга = энргВидыУслуг.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.энргСпособыРасчетаПоНаправлениям.СрезПоследних(&МоментВремени, ) КАК СпособыРасчетаПоНаправлениям
	|		ПО ДанныеШапкиСоставныеУслуги.Услуга = СпособыРасчетаПоНаправлениям.Услуга
	|			И ДанныеШапкиСоставныеУслуги.НаправлениеИспользованияТУ = СпособыРасчетаПоНаправлениям.НаправлениеИспользованияТУ
	|			И ДанныеШапкиСоставныеУслуги.Организация = СпособыРасчетаПоНаправлениям.Организация
	|			И ДанныеШапкиСоставныеУслуги.Район = СпособыРасчетаПоНаправлениям.Район
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбщиеДанные.Организация КАК Организация,
	|	ОбщиеДанные.ПериодНачисления КАК ПериодНачисления,
	|	ОбщиеДанные.Район КАК Район,
	|	ОбщиеДанные.ЧастныйСектор КАК ЧастныйСектор,
	|	ОбщиеДанные.Строение КАК Строение,
	|	ОбщиеДанные.Помещение КАК Помещение,
	|	ОбщиеДанные.Абонент КАК Абонент,
	|	ОбщиеДанные.Услуга КАК Услуга,
	|	ОбщиеДанные.ТочкаУчета КАК ТочкаУчета,
	|	ОбщиеДанные.НомерПозиции КАК НомерПозиции,
	|	ОбщиеДанные.ПериодРегистрации КАК ПериодРегистрации,
	|	ОбщиеДанные.ДатаРегистратора КАК ДатаРегистратора,
	|	ОбщиеДанные.ДокРегистратор КАК ДокРегистратор,
	|	ОбщиеДанные.ЛСОткрыт КАК ЛСОткрыт,
	|	ОбщиеДанные.УслугаПодключена КАК УслугаПодключена,
	|	ОбщиеДанные.ПриборВведен КАК ПриборВведен,
	|	ОбщиеДанные.ПриборУчета КАК ПриборУчета,
	|	ОбщиеДанные.ДатаСостоянияПрибора КАК ДатаСостоянияПрибора,
	|	ОбщиеДанные.НаправлениеИспользованияТУ КАК НаправлениеИспользованияТУ,
	|	ОбщиеДанные.КоличествоПроживающих КАК КоличествоПроживающих,
	|	ОбщиеДанные.КоличествоПрописанных КАК КоличествоПрописанных,
	|	ОбщиеДанные.КоличествоСобственников КАК КоличествоСобственников,
	|	ОбщиеДанные.КоличествоКомнат КАК КоличествоКомнат,
	|	ЕСТЬNULL(ЗначениеПлощадей.Площадь, 0) КАК ЗначениеПлощади,
	|	ОбщиеДанные.КоэффициентПУ КАК КоэффициентПУ,
	|	ОбщиеДанные.ВидБлагоустройства КАК ВидБлагоустройства,
	|	ОбщиеДанные.ТарифнаяГруппа КАК ТарифнаяГруппа,
	|	ОбщиеДанные.Поставщик КАК Поставщик,
	|	ИСТИНА КАК МенялосьСостояниеПУ,
	|	ИСТИНА КАК МенялосьСостояниеФормулы,
	|	ОбщиеДанные.СоставнаяУслуга КАК СоставнаяУслуга,
	|	0 КАК КоличествоЭтажей,
	|	0 КАК ГодПостройки,
	|	ЗНАЧЕНИЕ(Перечисление.энргТипыСобственниковЖилья.ПустаяСсылка) КАК ВидСобственности,
	|	ОбщиеДанные.ИспользоватьДиаметрСечения КАК ИспользоватьДиаметрСечения,
	|	ОбщиеДанные.ДиаметрСечения КАК ДиаметрСечения,
	|	ОбщиеДанные.Техническая КАК Техническая,
	|	ОбщиеДанные.ТочкаУчетаРодитель КАК ТочкаУчетаРодитель,
	|	ОбщиеДанные.РасчетТолькоПоПоказаниям КАК РасчетТолькоПоПоказаниям
	|ПОМЕСТИТЬ ВсеПараметрыРасчета
	|ИЗ
	|	ОбщиеДанные КАК ОбщиеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗначениеПлощадей КАК ЗначениеПлощадей
	|		ПО ОбщиеДанные.ВидПлощади = ЗначениеПлощадей.ВидПлощади
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеШапкиСоставныеУслуги.Организация КАК Организация,
	|	ДанныеШапкиСоставныеУслуги.ПериодНачисления КАК ПериодНачисления,
	|	ДанныеШапкиСоставныеУслуги.Район КАК Район,
	|	ДанныеШапкиСоставныеУслуги.ЧастныйСектор КАК ЧастныйСектор,
	|	ДанныеШапкиСоставныеУслуги.Строение КАК Строение,
	|	ДанныеШапкиСоставныеУслуги.Помещение КАК Помещение,
	|	ДанныеШапкиСоставныеУслуги.ТочкаУчета КАК ТочкаУчета,
	|	ДанныеШапкиСоставныеУслуги.Услуга КАК Услуга,
	|	ДанныеШапкиСоставныеУслуги.НаправлениеИспользованияТУ КАК НаправлениеИспользованияТУ,
	|	энргОперацияСУслугамиЗначенияИзмерителей.НаправлениеИспользованияТУ КАК Измеритель,
	|	ДанныеШапкиСоставныеУслуги.ДатаРегистратора КАК ДатаРегистратора,
	|	ДанныеШапкиСоставныеУслуги.ДокРегистратор КАК ДокРегистратор,
	|	энргОперацияСУслугамиЗначенияИзмерителей.Значение КАК Количество
	|ПОМЕСТИТЬ ВсеПараметрыРасчетаСИзмерителями
	|ИЗ
	|	ДанныеШапкиСоставныеУслуги КАК ДанныеШапкиСоставныеУслуги
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргОперацияСУслугами.ЗначенияИзмерителей КАК энргОперацияСУслугамиЗначенияИзмерителей
	|		ПО ДанныеШапкиСоставныеУслуги.ДокРегистратор = энргОперацияСУслугамиЗначенияИзмерителей.Ссылка
	|			И ДанныеШапкиСоставныеУслуги.IDСтроки = энргОперацияСУслугамиЗначенияИзмерителей.IDСтроки";
	
	Текст  = Текст + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Текст = Текст + Справочники.энргКлючиНормативов.ТекстОпределенияКлючейНорматива(Истина);
	
	Текст  = Текст + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";

	Текст  = Текст +
	"ВЫБРАТЬ
	|	ВсеПараметрыРасчета.*,
	|	КлючиНорматива.КлючНорматива КАК КлючНорматива,
	|	КлючиНорматива.КлючСоцНорматива КАК КлючСоцНорматива
	|ИЗ
	|	ВсеПараметрыРасчета КАК ВсеПараметрыРасчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ КлючиНорматива КАК КлючиНорматива
	|		ПО (ВсеПараметрыРасчета.Услуга = КлючиНорматива.Услуга)
	|		И (ВсеПараметрыРасчета.НаправлениеИспользованияТУ = КлючиНорматива.НаправлениеИспользованияТУ)
	|		И (КлючиНорматива.Измеритель = ЗНАЧЕНИЕ(Справочник.энргНаправлениеИспользованияТочекУчета.ОсновноеНаправление))";
	
	Возврат Текст;
КонецФункции

Функция ТекстЗапросаШкалыПриборовУчетаМКД() 
	
	Текст = 
	"ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	&ПериодНачисления КАК ПериодНачисления,
	|	&Район КАК Район,
	|	&МКД КАК МКД,
	|	ВложенныйЗапрос.ТочкаУчета КАК ТочкаУчета,
	|	0 КАК НомерПозиции,
	|	ВложенныйЗапрос.ЧастьУзлаУчета КАК ЧастьУзлаУчета,
	|	ТаблицаШкал.Шкала КАК Шкала,
	|	&ПериодРегистрации КАК ДатаРегистратора,
	|	&ссылка КАК ДокРегистратор,
	|	ТаблицаШкал.ВидДифференцированности КАК ВидДифференцированности
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТочкиУчета.ТочкаУчета КАК ТочкаУчета,
	|		ТочкиУчета.IDСтроки КАК IDСтроки,
	|		ТочкиУчета.Ссылка КАК Ссылка,
	|		ТаблицаПриборов.IDСтрокиШкалы КАК IDСтрокиШкалы,
	|		ТаблицаПриборов.ПриборУчета КАК ЧастьУзлаУчета
	|	ИЗ
	|		Документ.энргОткрытиеМКД.ТочкиУчета КАК ТочкиУчета
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргОткрытиеМКД.ПриборыУзловУчета КАК ТаблицаПриборов
	|			ПО ТочкиУчета.Ссылка = ТаблицаПриборов.Ссылка
	|				И ТочкиУчета.IDСтроки = ТаблицаПриборов.IDСтроки
	|				И (ТочкиУчета.Ссылка = &Ссылка)
	|				И (ТаблицаПриборов.Ссылка = &Ссылка)
	|				И (НЕ ТаблицаПриборов.ПриборУчета = ЗНАЧЕНИЕ(Справочник.энргПриборыУчетаАбонента.ПустаяСсылка))
	|	ГДЕ
	|		ТочкиУчета.Ссылка = &Ссылка
	|		И НЕ ТочкиУчета.ПриборУчета = ЗНАЧЕНИЕ(Справочник.энргПриборыУчетаАбонента.ПустаяСсылка)) КАК ВложенныйЗапрос
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргОткрытиеМКД.ШкалыПриборовУчета КАК ТаблицаШкал
	|		ПО ВложенныйЗапрос.Ссылка = ТаблицаШкал.Ссылка
	|			И ВложенныйЗапрос.IDСтрокиШкалы = ТаблицаШкал.IDСтроки
	|			И (ТаблицаШкал.Ссылка = &Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	&ПериодНачисления КАК ПериодНачисления,
	|	&Район КАК Район,
	|	&МКД КАК МКД,
	|	ВложенныйЗапрос.ТочкаУчета КАК ТочкаУчета,
	|	0 КАК НомерПозиции,
	|	ВложенныйЗапрос.ЧастьУзлаУчета КАК ЧастьУзлаУчета,
	|	ТаблицаШкал.Шкала КАК Шкала,
	|	&ПериодРегистрации КАК ДатаРегистратора,
	|	&ссылка КАК ДокРегистратор,
	|	ТаблицаШкал.ВидДифференцированности КАК ВидДифференцированности
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТочкиУчета.ТочкаУчета КАК ТочкаУчета,
	|		ТочкиУчета.IDСтроки КАК IDСтроки,
	|		ТочкиУчета.Ссылка КАК Ссылка,
	|		ТаблицаПриборов.IDСтрокиШкалы КАК IDСтрокиШкалы,
	|		ТаблицаПриборов.ПриборУчета КАК ЧастьУзлаУчета
	|	ИЗ
	|		Документ.энргОперацияСУслугамиМКД.ТочкиУчета КАК ТочкиУчета
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргОперацияСУслугамиМКД.ПриборыУзловУчета КАК ТаблицаПриборов
	|			ПО ТочкиУчета.Ссылка = ТаблицаПриборов.Ссылка
	|				И ТочкиУчета.IDСтроки = ТаблицаПриборов.IDСтроки
	|				И (ТочкиУчета.Ссылка = &Ссылка)
	|				И (ТаблицаПриборов.Ссылка = &Ссылка)
	|				И (НЕ ТаблицаПриборов.ПриборУчета = ЗНАЧЕНИЕ(Справочник.энргПриборыУчетаАбонента.ПустаяСсылка))
	|	ГДЕ
	|		ТочкиУчета.Ссылка = &Ссылка
	|		И НЕ ТочкиУчета.ПриборУчета = ЗНАЧЕНИЕ(Справочник.энргПриборыУчетаАбонента.ПустаяСсылка)) КАК ВложенныйЗапрос
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргОперацияСУслугамиМКД.ШкалыПриборовУчета КАК ТаблицаШкал
	|		ПО ВложенныйЗапрос.Ссылка = ТаблицаШкал.Ссылка
	|			И ВложенныйЗапрос.IDСтрокиШкалы = ТаблицаШкал.IDСтроки
	|			И (ТаблицаШкал.Ссылка = &Ссылка)";
	
	Возврат Текст;
	
КонецФункции

Функция ТекстЗапросаОткрытиеМКДСоставУзлаУчета()
	
	Текст = 
	"ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	&ПериодНачисления КАК ПериодНачисления,
	|	&Район КАК Район,
	|	&МКД КАК МКД,
	|	энргОткрытиеМКДТочкиУчета.ТочкаУчета КАК ТочкаУчета,
	|	энргОткрытиеМКДТочкиУчета.ПриборУчета КАК УзелУчета,
	|	энргОткрытиеМКДПриборыУзловУчета.ПриборУчета КАК ЧастьУзлаУчета,
	|	0 КАК НомерПозиции,
	|	&ПериодРегистрации КАК ДатаРегистратора,
	|	энргОткрытиеМКДПриборыУзловУчета.Ссылка КАК ДокРегистратор,
	|	ИСТИНА КАК ПриборВведен,
	|	&ПериодРегистрации КАК ДатаСостоянияПрибора,
	|	энргОткрытиеМКДПриборыУзловУчета.КоэффициентПУ КАК КоэффициентПУ
	|ИЗ
	|	Документ.энргОткрытиеМКД.ТочкиУчета КАК энргОткрытиеМКДТочкиУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргОткрытиеМКД.ПриборыУзловУчета КАК энргОткрытиеМКДПриборыУзловУчета
	|		ПО энргОткрытиеМКДТочкиУчета.Ссылка = энргОткрытиеМКДПриборыУзловУчета.Ссылка
	|			И (энргОткрытиеМКДТочкиУчета.Ссылка = &Ссылка)
	|			И (энргОткрытиеМКДПриборыУзловУчета.Ссылка = &Ссылка)
	|			И энргОткрытиеМКДТочкиУчета.IDСтроки = энргОткрытиеМКДПриборыУзловУчета.IDСтроки";
	
	Возврат Текст;
	
КонецФункции

Функция ТекстЗапросаШкалыПриборовУчета() 
	
	Текст = 
	"ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	&ПериодНачисления КАК ПериодНачисления,
	|	&Район КАК Район,
	|	&ЧастныйСектор КАК ЧастныйСектор,
	|	&Строение КАК Строение,
	|	&Помещение КАК Помещение,
	|	ВложенныйЗапрос.ТочкаУчета КАК ТочкаУчета,
	|	0 КАК НомерПозиции,
	|	ШкалыПриборовУчета.Шкала КАК Шкала,
	|	ШкалыПриборовУчета.ВидДифференцированности КАК ВидДифференцированности,
	|	&ссылка КАК ДокРегистратор,
	|	&ДатаДокумента КАК  ДатаРегистратора
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТочкиУчета.ТочкаУчета КАК ТочкаУчета,
	|		ТочкиУчета.IDСтроки КАК IDСтроки,
	|		ТочкиУчета.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.энргОперацияСЛицевымСчетом.ТочкиУчета КАК ТочкиУчета
	|	ГДЕ
	|		ТочкиУчета.Ссылка = &Ссылка
	|		И НЕ ТочкиУчета.ПриборУчета = ЗНАЧЕНИЕ(Справочник.энргПриборыУчетаАбонента.ПустаяСсылка)) КАК ВложенныйЗапрос
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргОперацияСЛицевымСчетом.ШкалыПриборовУчета КАК ШкалыПриборовУчета
	|		ПО ВложенныйЗапрос.Ссылка = ШкалыПриборовУчета.Ссылка
	|			И ВложенныйЗапрос.IDСтроки = ШкалыПриборовУчета.IDСтрокиТочкиУчета
	|			И (ШкалыПриборовУчета.Ссылка = &Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Организация,
	|	&ПериодНачисления,
	|	&Район,
	|	&ЧастныйСектор,
	|	&Строение,
	|	&Помещение КАК Помещение,
	|	ВложенныйЗапрос.ТочкаУчета,
	|	0,
	|	ШкалыПриборовУчета.Шкала,
	|	ШкалыПриборовУчета.ВидДифференцированности,
	|	&ссылка,
	|	&ДатаДокумента КАК  ДатаРегистратора
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТочкиУчета.ТочкаУчета КАК ТочкаУчета,
	|		ТочкиУчета.IDСтроки КАК IDСтроки,
	|		ТочкиУчета.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.энргОперацияСУслугами.ТочкиУчета КАК ТочкиУчета
	|	ГДЕ
	|		ТочкиУчета.Ссылка = &Ссылка
	|		И НЕ ТочкиУчета.ПриборУчета = ЗНАЧЕНИЕ(Справочник.энргПриборыУчетаАбонента.ПустаяСсылка)) КАК ВложенныйЗапрос
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргОперацияСУслугами.ШкалыПриборовУчета КАК ШкалыПриборовУчета
	|		ПО ВложенныйЗапрос.Ссылка = ШкалыПриборовУчета.Ссылка
	|			И ВложенныйЗапрос.IDСтроки = ШкалыПриборовУчета.IDСтрокиТочкиУчета
	|			И (ШкалыПриборовУчета.Ссылка = &Ссылка)";
	
	Возврат Текст;
	
КонецФункции

Функция ТекстЗапросаПереводПомещенияВПомещениеСРазделеннымиЛС() 
	
	Текст = 
	  "ВЫБРАТЬ
	  |	энргПереводПомещенияВПомещениеСРазделеннымиЛС.Организация КАК Организация,
	  |	энргПереводПомещенияВПомещениеСРазделеннымиЛС.Район КАК Район,
	  |	энргПереводПомещенияВПомещениеСРазделеннымиЛС.КлючПомещения КАК КлючПомещения,
	  |	&Строение КАК Строение,
	  |	&Помещение КАК Помещение,
	  |	&ЧастныйСектор КАК ЧастныйСектор,
	  |	&ПериодРегистрации КАК ПериодРегистрации,
	  |	энргПереводПомещенияВПомещениеСРазделеннымиЛС.ПериодНачисления КАК ПериодНачисления,
	  |	энргПереводПомещенияВПомещениеСРазделеннымиЛС.Ссылка КАК Ссылка,
	  |	энргПереводПомещенияВПомещениеСРазделеннымиЛС.Дата КАК Дата
	  |ПОМЕСТИТЬ ДанныеШапки
	  |ИЗ
	  |	Документ.энргПереводПомещенияВПомещениеСРазделеннымиЛС КАК энргПереводПомещенияВПомещениеСРазделеннымиЛС
	  |ГДЕ
	  |	энргПереводПомещенияВПомещениеСРазделеннымиЛС.Ссылка = &Ссылка
	  |;
	  |
	  |////////////////////////////////////////////////////////////////////////////////
	  |ВЫБРАТЬ
	  |	энргСтабильныеПериоды.Организация КАК Организация,
	  |	энргСтабильныеПериоды.ПериодНачисления КАК ПериодНачисления,
	  |	энргСтабильныеПериоды.Район КАК Район,
	  |	энргСтабильныеПериоды.ЧастныйСектор КАК ЧастныйСектор,
	  |	энргСтабильныеПериоды.Строение КАК Строение,
	  |	энргСтабильныеПериоды.Помещение КАК Помещение,
	  |	энргСтабильныеПериоды.Услуга КАК Услуга,
	  |	энргСтабильныеПериоды.ТочкаУчета КАК ТочкаУчета,
	  |	энргСтабильныеПериоды.НомерПозиции КАК НомерПозиции,
	  |	энргСтабильныеПериоды.ПериодРегистрации КАК ПериодРегистрации,
	  |	энргСтабильныеПериоды.ДатаРегистратора КАК ДатаРегистратора,
	  |	энргСтабильныеПериоды.ДокРегистратор КАК ДокРегистратор,
	  |	энргСтабильныеПериоды.УдалитьАбонент КАК УдалитьАбонент,
	  |	энргСтабильныеПериоды.КоличествоПрописанных КАК КоличествоПрописанных,
	  |	энргСтабильныеПериоды.КоличествоСобственников КАК КоличествоСобственников,
	  |	энргСтабильныеПериоды.КоличествоПроживающих КАК КоличествоПроживающих,
	  |	энргСтабильныеПериоды.ЯвляетсяПомещениемСРазделеннымиЛС КАК ЯвляетсяПомещениемСРазделеннымиЛС,
	  |	ДанныеШапки.ПериодНачисления КАК ПериодНачисленияДок,
	  |	ДанныеШапки.Дата КАК Дата,
	  |	ДанныеШапки.Ссылка КАК Ссылка,
	  |	ДанныеШапки.КлючПомещения КАК КлючПомещения,
	  |	ДанныеШапки.ПериодРегистрации КАК ПериодРегистрацииДок
	  |ПОМЕСТИТЬ СтабильныеПериоды
	  |ИЗ
	  |	РегистрСведений.энргСтабильныеПериоды КАК энргСтабильныеПериоды
	  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеШапки КАК ДанныеШапки
	  |		ПО энргСтабильныеПериоды.Организация = ДанныеШапки.Организация
	  |			И энргСтабильныеПериоды.Район = ДанныеШапки.Район
	  |			И энргСтабильныеПериоды.Строение = ДанныеШапки.Строение
	  |			И энргСтабильныеПериоды.Помещение = ДанныеШапки.Помещение
	  |			И энргСтабильныеПериоды.ПериодНачисления <= ДанныеШапки.ПериодНачисления
	  |ГДЕ
	  |	энргСтабильныеПериоды.ЛСОткрыт
	  |	И энргСтабильныеПериоды.УслугаПодключена
	  |;
	  |
	  |////////////////////////////////////////////////////////////////////////////////
	  |ВЫБРАТЬ
	  |	СтабильныеПериоды.Организация КАК Организация,
	  |	СтабильныеПериоды.Район КАК Район,
	  |	СтабильныеПериоды.ЧастныйСектор КАК ЧастныйСектор,
	  |	СтабильныеПериоды.Строение КАК Строение,
	  |	СтабильныеПериоды.Помещение КАК Помещение,
	  |	СтабильныеПериоды.Услуга КАК Услуга,
	  |	СтабильныеПериоды.ТочкаУчета КАК ТочкаУчета,
	  |	МАКСИМУМ(СтабильныеПериоды.ПериодНачисления) КАК ПериодНачисления
	  |ПОМЕСТИТЬ МаксПериодНачисления
	  |ИЗ
	  |	СтабильныеПериоды КАК СтабильныеПериоды
	  |
	  |СГРУППИРОВАТЬ ПО
	  |	СтабильныеПериоды.Организация,
	  |	СтабильныеПериоды.Район,
	  |	СтабильныеПериоды.ЧастныйСектор,
	  |	СтабильныеПериоды.Строение,
	  |	СтабильныеПериоды.Помещение,
	  |	СтабильныеПериоды.Услуга,
	  |	СтабильныеПериоды.ТочкаУчета
	  |;
	  |
	  |////////////////////////////////////////////////////////////////////////////////
	  |ВЫБРАТЬ
	  |	СтабильныеПериоды.Организация КАК Организация,
	  |	СтабильныеПериоды.Район КАК Район,
	  |	СтабильныеПериоды.ЧастныйСектор КАК ЧастныйСектор,
	  |	СтабильныеПериоды.Строение КАК Строение,
	  |	СтабильныеПериоды.Помещение КАК Помещение,
	  |	СтабильныеПериоды.Услуга КАК Услуга,
	  |	СтабильныеПериоды.ТочкаУчета КАК ТочкаУчета,
	  |	МАКСИМУМ(СтабильныеПериоды.НомерПозиции) КАК НомерПозиции,
	  |	СтабильныеПериоды.ПериодНачисления КАК ПериодНачисления
	  |ПОМЕСТИТЬ МаксНомерПозицииСтабПериоды
	  |ИЗ
	  |	СтабильныеПериоды КАК СтабильныеПериоды
	  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаксПериодНачисления КАК МаксПериодНачисления
	  |		ПО СтабильныеПериоды.Организация = МаксПериодНачисления.Организация
	  |			И СтабильныеПериоды.Район = МаксПериодНачисления.Район
	  |			И СтабильныеПериоды.ЧастныйСектор = МаксПериодНачисления.ЧастныйСектор
	  |			И СтабильныеПериоды.Строение = МаксПериодНачисления.Строение
	  |			И СтабильныеПериоды.Помещение = МаксПериодНачисления.Помещение
	  |			И СтабильныеПериоды.Услуга = МаксПериодНачисления.Услуга
	  |			И СтабильныеПериоды.ТочкаУчета = МаксПериодНачисления.ТочкаУчета
	  |			И СтабильныеПериоды.ПериодНачисления = МаксПериодНачисления.ПериодНачисления
	  |
	  |СГРУППИРОВАТЬ ПО
	  |	СтабильныеПериоды.Помещение,
	  |	СтабильныеПериоды.ЧастныйСектор,
	  |	СтабильныеПериоды.ТочкаУчета,
	  |	СтабильныеПериоды.Организация,
	  |	СтабильныеПериоды.Район,
	  |	СтабильныеПериоды.ПериодНачисления,
	  |	СтабильныеПериоды.Строение,
	  |	СтабильныеПериоды.Услуга
	  |;
	  |
	  |////////////////////////////////////////////////////////////////////////////////
	  |ВЫБРАТЬ
	  |	СтабильныеПериоды.Организация КАК Организация,
	  |	СтабильныеПериоды.ПериодНачисленияДок КАК ПериодНачисления,
	  |	СтабильныеПериоды.Район КАК Район,
	  |	СтабильныеПериоды.ЧастныйСектор КАК ЧастныйСектор,
	  |	СтабильныеПериоды.Строение КАК Строение,
	  |	СтабильныеПериоды.Помещение КАК Помещение,
	  |	СтабильныеПериоды.Услуга КАК Услуга,
	  |	СтабильныеПериоды.ТочкаУчета КАК ТочкаУчета,
	  |	ВЫБОР
	  |		КОГДА СтабильныеПериоды.КоличествоПрописанных = 0
	  |			ТОГДА ВЫБОР
	  |					КОГДА СтабильныеПериоды.КоличествоПроживающих = 0
	  |						ТОГДА СтабильныеПериоды.КоличествоСобственников
	  |					ИНАЧЕ СтабильныеПериоды.КоличествоПроживающих
	  |				КОНЕЦ
	  |		ИНАЧЕ СтабильныеПериоды.КоличествоПрописанных
	  |	КОНЕЦ КАК КоличествоЖильцов,
	  |	ИСТИНА КАК ЯвляетсяПомещениемСРазделеннымиЛС,
	  |	ЗНАЧЕНИЕ(Справочник.энргАбоненты.ПУстаяСсылка) КАК Абонент
	  |ПОМЕСТИТЬ ДанныеПоПомещению
	  |ИЗ
	  |	СтабильныеПериоды КАК СтабильныеПериоды
	  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаксНомерПозицииСтабПериоды КАК МаксНомерПозицииСтабПериоды
	  |		ПО СтабильныеПериоды.Организация = МаксНомерПозицииСтабПериоды.Организация
	  |			И СтабильныеПериоды.ПериодНачисления = МаксНомерПозицииСтабПериоды.ПериодНачисления
	  |			И СтабильныеПериоды.Район = МаксНомерПозицииСтабПериоды.Район
	  |			И СтабильныеПериоды.ЧастныйСектор = МаксНомерПозицииСтабПериоды.ЧастныйСектор
	  |			И СтабильныеПериоды.Строение = МаксНомерПозицииСтабПериоды.Строение
	  |			И СтабильныеПериоды.Помещение = МаксНомерПозицииСтабПериоды.Помещение
	  |			И СтабильныеПериоды.Услуга = МаксНомерПозицииСтабПериоды.Услуга
	  |			И СтабильныеПериоды.ТочкаУчета = МаксНомерПозицииСтабПериоды.ТочкаУчета
	  |			И СтабильныеПериоды.НомерПозиции = МаксНомерПозицииСтабПериоды.НомерПозиции";
	
	Возврат Текст;
	
КонецФункции

Функция ТекстЗапросаШкалыПереводПомещенияВПомещениеСРазделеннымиЛС() 
	
	Текст = 
	
	"ВЫБРАТЬ
	|	энргСтабильныеПериодыШкалы.Организация КАК Организация,
	|	энргСтабильныеПериодыШкалы.ПериодНачисления КАК ПериодНачисления,
	|	энргСтабильныеПериодыШкалы.Район КАК Район,
	|	энргСтабильныеПериодыШкалы.ЧастныйСектор КАК ЧастныйСектор,
	|	энргСтабильныеПериодыШкалы.Строение КАК Строение,
	|	энргСтабильныеПериодыШкалы.Помещение КАК Помещение,
	|	энргСтабильныеПериодыШкалы.ТочкаУчета КАК ТочкаУчета,
	|	энргСтабильныеПериодыШкалы.НомерПозиции КАК НомерПозиции,
	|	энргСтабильныеПериодыШкалы.Шкала КАК Шкала,
	|	ДанныеШапки.Дата КАК Дата,
	|	ДанныеШапки.Ссылка КАК Ссылка,
	|	ДанныеШапки.ПериодНачисления КАК ПериодНачисленияДок
	|ПОМЕСТИТЬ СтабПериодыШкалы
	|ИЗ
	|	РегистрСведений.энргСтабильныеПериодыШкалы КАК энргСтабильныеПериодыШкалы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеШапки КАК ДанныеШапки
	|		ПО энргСтабильныеПериодыШкалы.Организация = ДанныеШапки.Организация
	|			И энргСтабильныеПериодыШкалы.Район = ДанныеШапки.Район
	|			И энргСтабильныеПериодыШкалы.ЧастныйСектор = ДанныеШапки.ЧастныйСектор
	|			И энргСтабильныеПериодыШкалы.Строение = ДанныеШапки.Строение
	|			И энргСтабильныеПериодыШкалы.Помещение = ДанныеШапки.Помещение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтабПериодыШкалы.Организация КАК Организация,
	|	СтабПериодыШкалы.Район КАК Район,
	|	СтабПериодыШкалы.ЧастныйСектор КАК ЧастныйСектор,
	|	СтабПериодыШкалы.Строение КАК Строение,
	|	СтабПериодыШкалы.Помещение КАК Помещение,
	|	МАКСИМУМ(СтабПериодыШкалы.ПериодНачисления) КАК ПериодНачисления,
	|	СтабПериодыШкалы.ТочкаУчета КАК ТочкаУчета
	|ПОМЕСТИТЬ МаксПериодНачисленияШкалы
	|ИЗ
	|	СтабПериодыШкалы КАК СтабПериодыШкалы
	|
	|СГРУППИРОВАТЬ ПО
	|	СтабПериодыШкалы.Организация,
	|	СтабПериодыШкалы.Район,
	|	СтабПериодыШкалы.ЧастныйСектор,
	|	СтабПериодыШкалы.Строение,
	|	СтабПериодыШкалы.Помещение,
	|	СтабПериодыШкалы.ТочкаУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтабПериодыШкалы.Организация КАК Организация,
	|	СтабПериодыШкалы.ПериодНачисления КАК ПериодНачисления,
	|	СтабПериодыШкалы.Район КАК Район,
	|	СтабПериодыШкалы.ЧастныйСектор КАК ЧастныйСектор,
	|	СтабПериодыШкалы.Строение КАК Строение,
	|	СтабПериодыШкалы.Помещение КАК Помещение,
	|	СтабПериодыШкалы.ТочкаУчета КАК ТочкаУчета,
	|	МАКСИМУМ(СтабПериодыШкалы.НомерПозиции) КАК НомерПозиции
	|ПОМЕСТИТЬ МаксНомерПозицииШкалы
	|ИЗ
	|	МаксПериодНачисленияШкалы КАК МаксПериодНачисленияШкалы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СтабПериодыШкалы КАК СтабПериодыШкалы
	|		ПО МаксПериодНачисленияШкалы.Организация = СтабПериодыШкалы.Организация
	|			И МаксПериодНачисленияШкалы.Район = СтабПериодыШкалы.Район
	|			И МаксПериодНачисленияШкалы.ЧастныйСектор = СтабПериодыШкалы.ЧастныйСектор
	|			И МаксПериодНачисленияШкалы.Строение = СтабПериодыШкалы.Строение
	|			И МаксПериодНачисленияШкалы.Помещение = СтабПериодыШкалы.Помещение
	|			И МаксПериодНачисленияШкалы.ТочкаУчета = СтабПериодыШкалы.ТочкаУчета
	|			И МаксПериодНачисленияШкалы.ПериодНачисления = СтабПериодыШкалы.ПериодНачисления
	|
	|СГРУППИРОВАТЬ ПО
	|	СтабПериодыШкалы.Организация,
	|	СтабПериодыШкалы.ПериодНачисления,
	|	СтабПериодыШкалы.Район,
	|	СтабПериодыШкалы.ЧастныйСектор,
	|	СтабПериодыШкалы.Строение,
	|	СтабПериодыШкалы.Помещение,
	|	СтабПериодыШкалы.ТочкаУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтабПериодыШкалы.Организация КАК Организация,
	|	СтабПериодыШкалы.ПериодНачисленияДок КАК ПериодНачисления,
	|	СтабПериодыШкалы.Район КАК Район,
	|	СтабПериодыШкалы.ЧастныйСектор КАК ЧастныйСектор,
	|	СтабПериодыШкалы.Строение КАК Строение,
	|	СтабПериодыШкалы.Помещение КАК Помещение,
	|	СтабПериодыШкалы.ТочкаУчета КАК ТочкаУчета,
	|	0 КАК НомерПозиции,
	|	СтабПериодыШкалы.Шкала КАК Шкала,
	|	СтабПериодыШкалы.Дата КАК ДатаРегистратора,
	|	СтабПериодыШкалы.Ссылка КАК ДокРегистратор
	|ИЗ
	|	СтабПериодыШкалы КАК СтабПериодыШкалы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаксНомерПозицииШкалы КАК МаксНомерПозицииШкалы
	|		ПО СтабПериодыШкалы.Организация = МаксНомерПозицииШкалы.Организация
	|			И СтабПериодыШкалы.Район = МаксНомерПозицииШкалы.Район
	|			И СтабПериодыШкалы.ЧастныйСектор = МаксНомерПозицииШкалы.ЧастныйСектор
	|			И СтабПериодыШкалы.Строение = МаксНомерПозицииШкалы.Строение
	|			И СтабПериодыШкалы.Помещение = МаксНомерПозицииШкалы.Помещение
	|			И СтабПериодыШкалы.ТочкаУчета = МаксНомерПозицииШкалы.ТочкаУчета
	|			И СтабПериодыШкалы.ПериодНачисления = МаксНомерПозицииШкалы.ПериодНачисления
	|			И СтабПериодыШкалы.НомерПозиции = МаксНомерПозицииШкалы.НомерПозиции";
	
	Возврат Текст;
	
КонецФункции

Функция ТекстЗапросаСтабПериодыПоНовомуПомещению() 
	
	Текст = 
	  "ВЫБРАТЬ
	  |	энргПереводПомещенияВПомещениеСРазделеннымиЛС.Организация КАК Организация,
	  |	энргПереводПомещенияВПомещениеСРазделеннымиЛС.Район КАК Район,
	  |	энргПереводПомещенияВПомещениеСРазделеннымиЛС.КлючПомещения КАК КлючПомещения,
	  |	&Строение КАК Строение,
	  |	&Помещение КАК Помещение,
	  |	&ЧастныйСектор КАК ЧастныйСектор,
	  |	энргПереводПомещенияВПомещениеСРазделеннымиЛС.ПериодНачисления КАК ПериодНачисления,
	  |	энргПереводПомещенияВПомещениеСРазделеннымиЛС.Ссылка КАК Ссылка,
	  |	энргПереводПомещенияВПомещениеСРазделеннымиЛС.Дата КАК Дата,
	  |	&ЧастьПомещения КАК ЧастьПомещения
	  |ПОМЕСТИТЬ ДанныеШапки
	  |ИЗ
	  |	Документ.энргПереводПомещенияВПомещениеСРазделеннымиЛС КАК энргПереводПомещенияВПомещениеСРазделеннымиЛС
	  |ГДЕ
	  |	энргПереводПомещенияВПомещениеСРазделеннымиЛС.Ссылка = &Ссылка
	  |;
	  |
	  |////////////////////////////////////////////////////////////////////////////////
	  |ВЫБРАТЬ
	  |	энргСтабильныеПериоды.Организация КАК Организация,
	  |	энргСтабильныеПериоды.ПериодНачисления КАК ПериодНачисления,
	  |	энргСтабильныеПериоды.Район КАК Район,
	  |	энргСтабильныеПериоды.ЧастныйСектор КАК ЧастныйСектор,
	  |	энргСтабильныеПериоды.Строение КАК Строение,
	  |	энргСтабильныеПериоды.Помещение КАК Помещение,
	  |	энргСтабильныеПериоды.Услуга КАК Услуга,
	  |	энргСтабильныеПериоды.ТочкаУчета КАК ТочкаУчета,
	  |	энргСтабильныеПериоды.НомерПозиции КАК НомерПозиции,
	  |	энргСтабильныеПериоды.ПериодРегистрации КАК ПериодРегистрации,
	  |	энргСтабильныеПериоды.ДатаРегистратора КАК ДатаРегистратора,
	  |	энргСтабильныеПериоды.ДокРегистратор КАК ДокРегистратор,
	  |	энргСтабильныеПериоды.УдалитьАбонент КАК УдалитьАбонент,
	  |	энргСтабильныеПериоды.Абонент КАК Абонент,
	  |	энргСтабильныеПериоды.ЛСОткрыт КАК ЛСОткрыт,
	  |	энргСтабильныеПериоды.УслугаПодключена КАК УслугаПодключена,
	  |	энргСтабильныеПериоды.ПриборВведен КАК ПриборВведен,
	  |	энргСтабильныеПериоды.ПриборУчета КАК ПриборУчета,
	  |	энргСтабильныеПериоды.КоличествоПрописанных КАК КоличествоПрописанных,
	  |	энргСтабильныеПериоды.КоличествоСобственников КАК КоличествоСобственников,
	  |	энргСтабильныеПериоды.КоличествоПроживающих КАК КоличествоПроживающих,
	  |	энргСтабильныеПериоды.КоличествоКомнат КАК КоличествоКомнат,
	  |	энргСтабильныеПериоды.ЗначениеПлощади КАК ЗначениеПлощади,
	  |	энргСтабильныеПериоды.КоэффициентПУ КАК КоэффициентПУ,
	  |	энргСтабильныеПериоды.РасчетПоФормуле КАК РасчетПоФормуле,
	  |	энргСтабильныеПериоды.ВидБлагоустройства КАК ВидБлагоустройства,
	  |	энргСтабильныеПериоды.ТарифнаяГруппа КАК ТарифнаяГруппа,
	  |	энргСтабильныеПериоды.ДатаПоверки КАК ДатаПоверки,
	  |	энргСтабильныеПериоды.ОтключатьВНеполивнойСезон КАК ОтключатьВНеполивнойСезон,
	  |	энргСтабильныеПериоды.ЗависимаяТочкаУчета КАК ЗависимаяТочкаУчета,
	  |	энргСтабильныеПериоды.КоэффициентРасчета КАК КоэффициентРасчета,
	  |	энргСтабильныеПериоды.Поставщик КАК Поставщик,
	  |	энргСтабильныеПериоды.ДатаСостоянияПрибора КАК ДатаСостоянияПрибора,
	  |	энргСтабильныеПериоды.МенялосьСостояниеПУ КАК МенялосьСостояниеПУ,
	  |	энргСтабильныеПериоды.МенялосьСостояниеФормулы КАК МенялосьСостояниеФормулы,
	  |	энргСтабильныеПериоды.КлючНорматива КАК КлючНорматива,
	  |	энргСтабильныеПериоды.НетВозможностьУстановкиПУ КАК НетВозможностьУстановкиПУ,
	  |	энргСтабильныеПериоды.Шкала КАК Шкала,
	  |	энргСтабильныеПериоды.КоличествоЖильцов КАК КоличествоЖильцов,
	  |	энргСтабильныеПериоды.СпособРаспределенияОбъемаПомещения КАК СпособРаспределенияОбъемаПомещения,
	  |	энргСтабильныеПериоды.ФиксированныйОбъемПотребления КАК ФиксированныйОбъемПотребления,
	  |	энргСтабильныеПериоды.ДоляПотребленияЧислитель КАК ДоляПотребленияЧислитель,
	  |	энргСтабильныеПериоды.ДоляПотребленияЗнаменатель КАК ДоляПотребленияЗнаменатель,
	  |	энргСтабильныеПериоды.КоэффициентРаспределенияОстатка КАК КоэффициентРаспределенияОстатка,
	  |	энргСтабильныеПериоды.СоставнаяУслуга КАК СоставнаяУслуга,
	  |	энргСтабильныеПериоды.НаправлениеИспользованияТУ КАК НаправлениеИспользованияТУ,
	  |	энргСтабильныеПериоды.ЯвляетсяПомещениемСРазделеннымиЛС КАК ЯвляетсяПомещениемСРазделеннымиЛС,
	  |	ДанныеШапки.ПериодНачисления КАК ПериодНачисленияДок,
	  |	ДанныеШапки.Дата КАК Дата,
	  |	ДанныеШапки.Ссылка КАК Ссылка,
	  |	ДанныеШапки.КлючПомещения КАК КлючПомещения,
	  |	ДанныеШапки.ЧастьПомещения КАК ЧастьПомещения
	  |ПОМЕСТИТЬ СтабильныеПериоды
	  |ИЗ
	  |	РегистрСведений.энргСтабильныеПериоды КАК энргСтабильныеПериоды
	  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеШапки КАК ДанныеШапки
	  |		ПО энргСтабильныеПериоды.Организация = ДанныеШапки.Организация
	  |			И энргСтабильныеПериоды.Район = ДанныеШапки.Район
	  |			И энргСтабильныеПериоды.Строение = ДанныеШапки.Строение
	  |			И энргСтабильныеПериоды.Помещение = ДанныеШапки.Помещение
	  |			И энргСтабильныеПериоды.ПериодНачисления <= ДанныеШапки.ПериодНачисления
	  |ГДЕ
	  |	энргСтабильныеПериоды.ЛСОткрыт
	  |	И энргСтабильныеПериоды.УслугаПодключена
	  |;
	  |
	  |////////////////////////////////////////////////////////////////////////////////
	  |ВЫБРАТЬ
	  |	СтабильныеПериоды.Организация КАК Организация,
	  |	СтабильныеПериоды.Район КАК Район,
	  |	СтабильныеПериоды.ЧастныйСектор КАК ЧастныйСектор,
	  |	СтабильныеПериоды.Строение КАК Строение,
	  |	СтабильныеПериоды.Помещение КАК Помещение,
	  |	СтабильныеПериоды.Услуга КАК Услуга,
	  |	СтабильныеПериоды.ТочкаУчета КАК ТочкаУчета,
	  |	МАКСИМУМ(СтабильныеПериоды.ПериодНачисления) КАК ПериодНачисления
	  |ПОМЕСТИТЬ МаксПериодНачисления
	  |ИЗ
	  |	СтабильныеПериоды КАК СтабильныеПериоды
	  |
	  |СГРУППИРОВАТЬ ПО
	  |	СтабильныеПериоды.Организация,
	  |	СтабильныеПериоды.Район,
	  |	СтабильныеПериоды.ЧастныйСектор,
	  |	СтабильныеПериоды.Строение,
	  |	СтабильныеПериоды.Помещение,
	  |	СтабильныеПериоды.Услуга,
	  |	СтабильныеПериоды.ТочкаУчета
	  |;
	  |
	  |////////////////////////////////////////////////////////////////////////////////
	  |ВЫБРАТЬ
	  |	СтабильныеПериоды.Организация КАК Организация,
	  |	СтабильныеПериоды.Район КАК Район,
	  |	СтабильныеПериоды.ЧастныйСектор КАК ЧастныйСектор,
	  |	СтабильныеПериоды.Строение КАК Строение,
	  |	СтабильныеПериоды.Помещение КАК Помещение,
	  |	СтабильныеПериоды.Услуга КАК Услуга,
	  |	СтабильныеПериоды.ТочкаУчета КАК ТочкаУчета,
	  |	МАКСИМУМ(СтабильныеПериоды.НомерПозиции) КАК НомерПозиции,
	  |	СтабильныеПериоды.ПериодНачисления КАК ПериодНачисления
	  |ПОМЕСТИТЬ МаксНомерПозиции
	  |ИЗ
	  |	СтабильныеПериоды КАК СтабильныеПериоды
	  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаксПериодНачисления КАК МаксПериодНачисления
	  |		ПО СтабильныеПериоды.Организация = МаксПериодНачисления.Организация
	  |			И СтабильныеПериоды.Район = МаксПериодНачисления.Район
	  |			И СтабильныеПериоды.ЧастныйСектор = МаксПериодНачисления.ЧастныйСектор
	  |			И СтабильныеПериоды.Строение = МаксПериодНачисления.Строение
	  |			И СтабильныеПериоды.Помещение = МаксПериодНачисления.Помещение
	  |			И СтабильныеПериоды.Услуга = МаксПериодНачисления.Услуга
	  |			И СтабильныеПериоды.ТочкаУчета = МаксПериодНачисления.ТочкаУчета
	  |			И СтабильныеПериоды.ПериодНачисления = МаксПериодНачисления.ПериодНачисления
	  |
	  |СГРУППИРОВАТЬ ПО
	  |	СтабильныеПериоды.Помещение,
	  |	СтабильныеПериоды.ЧастныйСектор,
	  |	СтабильныеПериоды.ТочкаУчета,
	  |	СтабильныеПериоды.Организация,
	  |	СтабильныеПериоды.Район,
	  |	СтабильныеПериоды.ПериодНачисления,
	  |	СтабильныеПериоды.Строение,
	  |	СтабильныеПериоды.Услуга
	  |;
	  |
	  |////////////////////////////////////////////////////////////////////////////////
	  |ВЫБРАТЬ
	  |	СтабильныеПериоды.Организация КАК Организация,
	  |	СтабильныеПериоды.Район КАК Район,
	  |	СтабильныеПериоды.ЧастныйСектор КАК ЧастныйСектор,
	  |	СтабильныеПериоды.Строение КАК Строение,
	  |	СтабильныеПериоды.ЧастьПомещения КАК Помещение,
	  |	СтабильныеПериоды.Услуга КАК Услуга,
	  |	СтабильныеПериоды.ТочкаУчета КАК ТочкаУчета,
	  |	0 КАК НомерПозиции,
	  |	СтабильныеПериоды.ПериодРегистрации КАК ПериодРегистрации,
	  |	СтабильныеПериоды.ЛСОткрыт КАК ЛСОткрыт,
	  |	СтабильныеПериоды.УслугаПодключена КАК УслугаПодключена,
	  |	ЛОЖЬ КАК ПриборВведен,
	  |	ЗНАЧЕНИЕ(Справочник.энргПриборыУчетаАбонента.ПустаяСсылка) КАК ПриборУчета,
	  |	СтабильныеПериоды.КоличествоПрописанных КАК КоличествоПрописанных,
	  |	СтабильныеПериоды.КоличествоСобственников КАК КоличествоСобственников,
	  |	СтабильныеПериоды.КоличествоПроживающих КАК КоличествоПроживающих,
	  |	СтабильныеПериоды.КоличествоКомнат КАК КоличествоКомнат,
	  |	СтабильныеПериоды.ЗначениеПлощади КАК ЗначениеПлощади,
	  |	СтабильныеПериоды.КоэффициентПУ КАК КоэффициентПУ,
	  |	СтабильныеПериоды.РасчетПоФормуле КАК РасчетПоФормуле,
	  |	СтабильныеПериоды.ВидБлагоустройства КАК ВидБлагоустройства,
	  |	СтабильныеПериоды.ТарифнаяГруппа КАК ТарифнаяГруппа,
	  |	СтабильныеПериоды.ДатаПоверки КАК ДатаПоверки,
	  |	СтабильныеПериоды.ОтключатьВНеполивнойСезон КАК ОтключатьВНеполивнойСезон,
	  |	СтабильныеПериоды.ЗависимаяТочкаУчета КАК ЗависимаяТочкаУчета,
	  |	СтабильныеПериоды.КоэффициентРасчета КАК КоэффициентРасчета,
	  |	СтабильныеПериоды.Поставщик КАК Поставщик,
	  |	СтабильныеПериоды.ДатаСостоянияПрибора КАК ДатаСостоянияПрибора,
	  |	СтабильныеПериоды.МенялосьСостояниеПУ КАК МенялосьСостояниеПУ,
	  |	СтабильныеПериоды.МенялосьСостояниеФормулы КАК МенялосьСостояниеФормулы,
	  |	СтабильныеПериоды.КлючНорматива КАК КлючНорматива,
	  |	СтабильныеПериоды.НетВозможностьУстановкиПУ КАК НетВозможностьУстановкиПУ,
	  |	СтабильныеПериоды.Шкала КАК Шкала,
	  |	0 КАК КоличествоЖильцов,
	  |	СтабильныеПериоды.СпособРаспределенияОбъемаПомещения КАК СпособРаспределенияОбъемаПомещения,
	  |	СтабильныеПериоды.ФиксированныйОбъемПотребления КАК ФиксированныйОбъемПотребления,
	  |	СтабильныеПериоды.ДоляПотребленияЧислитель КАК ДоляПотребленияЧислитель,
	  |	СтабильныеПериоды.ДоляПотребленияЗнаменатель КАК ДоляПотребленияЗнаменатель,
	  |	СтабильныеПериоды.КоэффициентРаспределенияОстатка КАК КоэффициентРаспределенияОстатка,
	  |	СтабильныеПериоды.СоставнаяУслуга КАК СоставнаяУслуга,
	  |	СтабильныеПериоды.НаправлениеИспользованияТУ КАК НаправлениеИспользованияТУ,
	  |	ЛОЖЬ КАК ЯвляетсяПомещениемСРазделеннымиЛС,
	  |	СтабильныеПериоды.ПериодНачисленияДок КАК ПериодНачисления,
	  |	СтабильныеПериоды.Дата КАК ДатаРегистратора,
	  |	СтабильныеПериоды.Ссылка КАК ДокРегистратор,
	  |	СтабильныеПериоды.Абонент КАК Абонент
	  |ИЗ
	  |	СтабильныеПериоды КАК СтабильныеПериоды
	  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаксНомерПозиции КАК МаксНомерПозиции
	  |		ПО СтабильныеПериоды.Организация = МаксНомерПозиции.Организация
	  |			И СтабильныеПериоды.ПериодНачисления = МаксНомерПозиции.ПериодНачисления
	  |			И СтабильныеПериоды.Район = МаксНомерПозиции.Район
	  |			И СтабильныеПериоды.ЧастныйСектор = МаксНомерПозиции.ЧастныйСектор
	  |			И СтабильныеПериоды.Строение = МаксНомерПозиции.Строение
	  |			И СтабильныеПериоды.Помещение = МаксНомерПозиции.Помещение
	  |			И СтабильныеПериоды.Услуга = МаксНомерПозиции.Услуга
	  |			И СтабильныеПериоды.ТочкаУчета = МаксНомерПозиции.ТочкаУчета
	  |			И СтабильныеПериоды.НомерПозиции = МаксНомерПозиции.НомерПозиции";
	
	Возврат Текст;
	
КонецФункции

Функция ТекстЗапросаСтабПериодыПоСтаромуПомещению() 
	
	Текст = 
	  "ВЫБРАТЬ
	  |	энргПереводПомещенияВПомещениеСРазделеннымиЛС.Организация КАК Организация,
	  |	энргПереводПомещенияВПомещениеСРазделеннымиЛС.Район КАК Район,
	  |	энргПереводПомещенияВПомещениеСРазделеннымиЛС.КлючПомещения КАК КлючПомещения,
	  |	&Строение КАК Строение,
	  |	&Помещение КАК Помещение,
	  |	&ЧастныйСектор КАК ЧастныйСектор,
	  |	энргПереводПомещенияВПомещениеСРазделеннымиЛС.ПериодНачисления КАК ПериодНачисления,
	  |	энргПереводПомещенияВПомещениеСРазделеннымиЛС.Ссылка КАК Ссылка,
	  |	энргПереводПомещенияВПомещениеСРазделеннымиЛС.Дата КАК Дата,
	  |	&ЧастьПомещения КАК ЧастьПомещения
	  |ПОМЕСТИТЬ ДанныеШапки
	  |ИЗ
	  |	Документ.энргПереводПомещенияВПомещениеСРазделеннымиЛС КАК энргПереводПомещенияВПомещениеСРазделеннымиЛС
	  |ГДЕ
	  |	энргПереводПомещенияВПомещениеСРазделеннымиЛС.Ссылка = &Ссылка
	  |;
	  |
	  |////////////////////////////////////////////////////////////////////////////////
	  |ВЫБРАТЬ
	  |	энргСтабильныеПериоды.Организация КАК Организация,
	  |	энргСтабильныеПериоды.ПериодНачисления КАК ПериодНачисления,
	  |	энргСтабильныеПериоды.Район КАК Район,
	  |	энргСтабильныеПериоды.ЧастныйСектор КАК ЧастныйСектор,
	  |	энргСтабильныеПериоды.Строение КАК Строение,
	  |	энргСтабильныеПериоды.Помещение КАК Помещение,
	  |	энргСтабильныеПериоды.Услуга КАК Услуга,
	  |	энргСтабильныеПериоды.ТочкаУчета КАК ТочкаУчета,
	  |	энргСтабильныеПериоды.НомерПозиции КАК НомерПозиции,
	  |	энргСтабильныеПериоды.ПериодРегистрации КАК ПериодРегистрации,
	  |	энргСтабильныеПериоды.ДатаРегистратора КАК ДатаРегистратора,
	  |	энргСтабильныеПериоды.ДокРегистратор КАК ДокРегистратор,
	  |	энргСтабильныеПериоды.УдалитьАбонент КАК УдалитьАбонент,
	  |	энргСтабильныеПериоды.Абонент КАК Абонент,
	  |	энргСтабильныеПериоды.ЛСОткрыт КАК ЛСОткрыт,
	  |	энргСтабильныеПериоды.УслугаПодключена КАК УслугаПодключена,
	  |	энргСтабильныеПериоды.ПриборВведен КАК ПриборВведен,
	  |	энргСтабильныеПериоды.ПриборУчета КАК ПриборУчета,
	  |	энргСтабильныеПериоды.КоличествоПрописанных КАК КоличествоПрописанных,
	  |	энргСтабильныеПериоды.КоличествоСобственников КАК КоличествоСобственников,
	  |	энргСтабильныеПериоды.КоличествоПроживающих КАК КоличествоПроживающих,
	  |	энргСтабильныеПериоды.КоличествоКомнат КАК КоличествоКомнат,
	  |	энргСтабильныеПериоды.ЗначениеПлощади КАК ЗначениеПлощади,
	  |	энргСтабильныеПериоды.КоэффициентПУ КАК КоэффициентПУ,
	  |	энргСтабильныеПериоды.РасчетПоФормуле КАК РасчетПоФормуле,
	  |	энргСтабильныеПериоды.ВидБлагоустройства КАК ВидБлагоустройства,
	  |	энргСтабильныеПериоды.ТарифнаяГруппа КАК ТарифнаяГруппа,
	  |	энргСтабильныеПериоды.ДатаПоверки КАК ДатаПоверки,
	  |	энргСтабильныеПериоды.ОтключатьВНеполивнойСезон КАК ОтключатьВНеполивнойСезон,
	  |	энргСтабильныеПериоды.ЗависимаяТочкаУчета КАК ЗависимаяТочкаУчета,
	  |	энргСтабильныеПериоды.КоэффициентРасчета КАК КоэффициентРасчета,
	  |	энргСтабильныеПериоды.Поставщик КАК Поставщик,
	  |	энргСтабильныеПериоды.ДатаСостоянияПрибора КАК ДатаСостоянияПрибора,
	  |	энргСтабильныеПериоды.МенялосьСостояниеПУ КАК МенялосьСостояниеПУ,
	  |	энргСтабильныеПериоды.МенялосьСостояниеФормулы КАК МенялосьСостояниеФормулы,
	  |	энргСтабильныеПериоды.КлючНорматива КАК КлючНорматива,
	  |	энргСтабильныеПериоды.НетВозможностьУстановкиПУ КАК НетВозможностьУстановкиПУ,
	  |	энргСтабильныеПериоды.Шкала КАК Шкала,
	  |	энргСтабильныеПериоды.КоличествоЖильцов КАК КоличествоЖильцов,
	  |	энргСтабильныеПериоды.СпособРаспределенияОбъемаПомещения КАК СпособРаспределенияОбъемаПомещения,
	  |	энргСтабильныеПериоды.ФиксированныйОбъемПотребления КАК ФиксированныйОбъемПотребления,
	  |	энргСтабильныеПериоды.ДоляПотребленияЧислитель КАК ДоляПотребленияЧислитель,
	  |	энргСтабильныеПериоды.ДоляПотребленияЗнаменатель КАК ДоляПотребленияЗнаменатель,
	  |	энргСтабильныеПериоды.КоэффициентРаспределенияОстатка КАК КоэффициентРаспределенияОстатка,
	  |	энргСтабильныеПериоды.СоставнаяУслуга КАК СоставнаяУслуга,
	  |	энргСтабильныеПериоды.НаправлениеИспользованияТУ КАК НаправлениеИспользованияТУ,
	  |	энргСтабильныеПериоды.ЯвляетсяПомещениемСРазделеннымиЛС КАК ЯвляетсяПомещениемСРазделеннымиЛС,
	  |	ДанныеШапки.ПериодНачисления КАК ПериодНачисленияДок,
	  |	ДанныеШапки.Дата КАК Дата,
	  |	ДанныеШапки.Ссылка КАК Ссылка,
	  |	ДанныеШапки.КлючПомещения КАК КлючПомещения,
	  |	ДанныеШапки.ЧастьПомещения КАК ЧастьПомещения
	  |ПОМЕСТИТЬ СтабильныеПериоды
	  |ИЗ
	  |	РегистрСведений.энргСтабильныеПериоды КАК энргСтабильныеПериоды
	  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеШапки КАК ДанныеШапки
	  |		ПО энргСтабильныеПериоды.Организация = ДанныеШапки.Организация
	  |			И энргСтабильныеПериоды.Район = ДанныеШапки.Район
	  |			И энргСтабильныеПериоды.Строение = ДанныеШапки.Строение
	  |			И энргСтабильныеПериоды.Помещение = ДанныеШапки.Помещение
	  |			И энргСтабильныеПериоды.ПериодНачисления <= ДанныеШапки.ПериодНачисления
	  |ГДЕ
	  |	энргСтабильныеПериоды.ЛСОткрыт
	  |	И энргСтабильныеПериоды.УслугаПодключена
	  |;
	  |
	  |////////////////////////////////////////////////////////////////////////////////
	  |ВЫБРАТЬ
	  |	СтабильныеПериоды.Организация КАК Организация,
	  |	СтабильныеПериоды.Район КАК Район,
	  |	СтабильныеПериоды.ЧастныйСектор КАК ЧастныйСектор,
	  |	СтабильныеПериоды.Строение КАК Строение,
	  |	СтабильныеПериоды.Помещение КАК Помещение,
	  |	СтабильныеПериоды.Услуга КАК Услуга,
	  |	СтабильныеПериоды.ТочкаУчета КАК ТочкаУчета,
	  |	МАКСИМУМ(СтабильныеПериоды.ПериодНачисления) КАК ПериодНачисления
	  |ПОМЕСТИТЬ МаксПериодНачисления
	  |ИЗ
	  |	СтабильныеПериоды КАК СтабильныеПериоды
	  |
	  |СГРУППИРОВАТЬ ПО
	  |	СтабильныеПериоды.Организация,
	  |	СтабильныеПериоды.Район,
	  |	СтабильныеПериоды.ЧастныйСектор,
	  |	СтабильныеПериоды.Строение,
	  |	СтабильныеПериоды.Помещение,
	  |	СтабильныеПериоды.Услуга,
	  |	СтабильныеПериоды.ТочкаУчета
	  |;
	  |
	  |////////////////////////////////////////////////////////////////////////////////
	  |ВЫБРАТЬ
	  |	СтабильныеПериоды.Организация КАК Организация,
	  |	СтабильныеПериоды.Район КАК Район,
	  |	СтабильныеПериоды.ЧастныйСектор КАК ЧастныйСектор,
	  |	СтабильныеПериоды.Строение КАК Строение,
	  |	СтабильныеПериоды.Помещение КАК Помещение,
	  |	СтабильныеПериоды.Услуга КАК Услуга,
	  |	СтабильныеПериоды.ТочкаУчета КАК ТочкаУчета,
	  |	МАКСИМУМ(СтабильныеПериоды.НомерПозиции) КАК НомерПозиции,
	  |	СтабильныеПериоды.ПериодНачисления КАК ПериодНачисления
	  |ПОМЕСТИТЬ МаксНомерПозиции
	  |ИЗ
	  |	СтабильныеПериоды КАК СтабильныеПериоды
	  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаксПериодНачисления КАК МаксПериодНачисления
	  |		ПО СтабильныеПериоды.Организация = МаксПериодНачисления.Организация
	  |			И СтабильныеПериоды.Район = МаксПериодНачисления.Район
	  |			И СтабильныеПериоды.ЧастныйСектор = МаксПериодНачисления.ЧастныйСектор
	  |			И СтабильныеПериоды.Строение = МаксПериодНачисления.Строение
	  |			И СтабильныеПериоды.Помещение = МаксПериодНачисления.Помещение
	  |			И СтабильныеПериоды.Услуга = МаксПериодНачисления.Услуга
	  |			И СтабильныеПериоды.ТочкаУчета = МаксПериодНачисления.ТочкаУчета
	  |			И СтабильныеПериоды.ПериодНачисления = МаксПериодНачисления.ПериодНачисления
	  |
	  |СГРУППИРОВАТЬ ПО
	  |	СтабильныеПериоды.Помещение,
	  |	СтабильныеПериоды.ЧастныйСектор,
	  |	СтабильныеПериоды.ТочкаУчета,
	  |	СтабильныеПериоды.Организация,
	  |	СтабильныеПериоды.Район,
	  |	СтабильныеПериоды.ПериодНачисления,
	  |	СтабильныеПериоды.Строение,
	  |	СтабильныеПериоды.Услуга
	  |;
	  |
	  |////////////////////////////////////////////////////////////////////////////////
	  |ВЫБРАТЬ
	  |	СтабильныеПериоды.Организация КАК Организация,
	  |	СтабильныеПериоды.Район КАК Район,
	  |	СтабильныеПериоды.ЧастныйСектор КАК ЧастныйСектор,
	  |	СтабильныеПериоды.Строение КАК Строение,
	  |	СтабильныеПериоды.ЧастьПомещения КАК Помещение,
	  |	СтабильныеПериоды.Услуга КАК Услуга,
	  |	СтабильныеПериоды.ТочкаУчета КАК ТочкаУчета,
	  |	0 КАК НомерПозиции,
	  |	СтабильныеПериоды.ПериодРегистрации КАК ПериодРегистрации,
	  |	СтабильныеПериоды.ЛСОткрыт КАК ЛСОткрыт,
	  |	СтабильныеПериоды.УслугаПодключена КАК УслугаПодключена,
	  |	ЛОЖЬ КАК ПриборВведен,
	  |	ЗНАЧЕНИЕ(Справочник.энргПриборыУчетаАбонента.ПустаяСсылка) КАК ПриборУчета,
	  |	СтабильныеПериоды.КоличествоПрописанных КАК КоличествоПрописанных,
	  |	СтабильныеПериоды.КоличествоСобственников КАК КоличествоСобственников,
	  |	СтабильныеПериоды.КоличествоПроживающих КАК КоличествоПроживающих,
	  |	СтабильныеПериоды.КоличествоКомнат КАК КоличествоКомнат,
	  |	СтабильныеПериоды.ЗначениеПлощади КАК ЗначениеПлощади,
	  |	СтабильныеПериоды.КоэффициентПУ КАК КоэффициентПУ,
	  |	СтабильныеПериоды.РасчетПоФормуле КАК РасчетПоФормуле,
	  |	СтабильныеПериоды.ВидБлагоустройства КАК ВидБлагоустройства,
	  |	СтабильныеПериоды.ТарифнаяГруппа КАК ТарифнаяГруппа,
	  |	СтабильныеПериоды.ДатаПоверки КАК ДатаПоверки,
	  |	СтабильныеПериоды.ОтключатьВНеполивнойСезон КАК ОтключатьВНеполивнойСезон,
	  |	СтабильныеПериоды.ЗависимаяТочкаУчета КАК ЗависимаяТочкаУчета,
	  |	СтабильныеПериоды.КоэффициентРасчета КАК КоэффициентРасчета,
	  |	СтабильныеПериоды.Поставщик КАК Поставщик,
	  |	СтабильныеПериоды.ДатаСостоянияПрибора КАК ДатаСостоянияПрибора,
	  |	СтабильныеПериоды.МенялосьСостояниеПУ КАК МенялосьСостояниеПУ,
	  |	СтабильныеПериоды.МенялосьСостояниеФормулы КАК МенялосьСостояниеФормулы,
	  |	СтабильныеПериоды.КлючНорматива КАК КлючНорматива,
	  |	СтабильныеПериоды.НетВозможностьУстановкиПУ КАК НетВозможностьУстановкиПУ,
	  |	СтабильныеПериоды.Шкала КАК Шкала,
	  |	0 КАК КоличествоЖильцов,
	  |	СтабильныеПериоды.СпособРаспределенияОбъемаПомещения КАК СпособРаспределенияОбъемаПомещения,
	  |	СтабильныеПериоды.ФиксированныйОбъемПотребления КАК ФиксированныйОбъемПотребления,
	  |	СтабильныеПериоды.ДоляПотребленияЧислитель КАК ДоляПотребленияЧислитель,
	  |	СтабильныеПериоды.ДоляПотребленияЗнаменатель КАК ДоляПотребленияЗнаменатель,
	  |	СтабильныеПериоды.КоэффициентРаспределенияОстатка КАК КоэффициентРаспределенияОстатка,
	  |	СтабильныеПериоды.СоставнаяУслуга КАК СоставнаяУслуга,
	  |	СтабильныеПериоды.НаправлениеИспользованияТУ КАК НаправлениеИспользованияТУ,
	  |	ЛОЖЬ КАК ЯвляетсяПомещениемСРазделеннымиЛС,
	  |	СтабильныеПериоды.ПериодНачисленияДок КАК ПериодНачисления,
	  |	СтабильныеПериоды.Дата КАК ДатаРегистратора,
	  |	СтабильныеПериоды.Ссылка КАК ДокРегистратор
	  |ИЗ
	  |	СтабильныеПериоды КАК СтабильныеПериоды
	  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаксНомерПозиции КАК МаксНомерПозиции
	  |		ПО СтабильныеПериоды.Организация = МаксНомерПозиции.Организация
	  |			И СтабильныеПериоды.ПериодНачисления = МаксНомерПозиции.ПериодНачисления
	  |			И СтабильныеПериоды.Район = МаксНомерПозиции.Район
	  |			И СтабильныеПериоды.ЧастныйСектор = МаксНомерПозиции.ЧастныйСектор
	  |			И СтабильныеПериоды.Строение = МаксНомерПозиции.Строение
	  |			И СтабильныеПериоды.Помещение = МаксНомерПозиции.Помещение
	  |			И СтабильныеПериоды.Услуга = МаксНомерПозиции.Услуга
	  |			И СтабильныеПериоды.ТочкаУчета = МаксНомерПозиции.ТочкаУчета
	  |			И СтабильныеПериоды.НомерПозиции = МаксНомерПозиции.НомерПозиции";
	
	Возврат Текст;
	
КонецФункции

Функция ТекстЗапросаШкалыСтабПериодыПоНовомуПомещению() 
	
		Текст = 
	
	"ВЫБРАТЬ
	|	энргСтабильныеПериодыШкалы.Организация КАК Организация,
	|	энргСтабильныеПериодыШкалы.ПериодНачисления КАК ПериодНачисления,
	|	энргСтабильныеПериодыШкалы.Район КАК Район,
	|	энргСтабильныеПериодыШкалы.ЧастныйСектор КАК ЧастныйСектор,
	|	энргСтабильныеПериодыШкалы.Строение КАК Строение,
	|	энргСтабильныеПериодыШкалы.Помещение КАК Помещение,
	|	энргСтабильныеПериодыШкалы.ТочкаУчета КАК ТочкаУчета,
	|	энргСтабильныеПериодыШкалы.НомерПозиции КАК НомерПозиции,
	|	энргСтабильныеПериодыШкалы.Шкала КАК Шкала,
	|	ДанныеШапки.Дата КАК Дата,
	|	ДанныеШапки.Ссылка КАК Ссылка,
	|	ДанныеШапки.ЧастьПомещения КАК ЧастьПомещения,
	|	ДанныеШапки.ПериодНачисления КАК ПериодНачисленияДок
	|ПОМЕСТИТЬ СтабПериодыШкалы
	|ИЗ
	|	РегистрСведений.энргСтабильныеПериодыШкалы КАК энргСтабильныеПериодыШкалы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеШапки КАК ДанныеШапки
	|		ПО энргСтабильныеПериодыШкалы.Организация = ДанныеШапки.Организация
	|			И энргСтабильныеПериодыШкалы.Район = ДанныеШапки.Район
	|			И энргСтабильныеПериодыШкалы.ЧастныйСектор = ДанныеШапки.ЧастныйСектор
	|			И энргСтабильныеПериодыШкалы.Строение = ДанныеШапки.Строение
	|			И энргСтабильныеПериодыШкалы.Помещение = ДанныеШапки.Помещение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтабПериодыШкалы.Организация КАК Организация,
	|	СтабПериодыШкалы.Район КАК Район,
	|	СтабПериодыШкалы.ЧастныйСектор КАК ЧастныйСектор,
	|	СтабПериодыШкалы.Строение КАК Строение,
	|	СтабПериодыШкалы.Помещение КАК Помещение,
	|	МАКСИМУМ(СтабПериодыШкалы.ПериодНачисления) КАК ПериодНачисления,
	|	СтабПериодыШкалы.ТочкаУчета КАК ТочкаУчета
	|ПОМЕСТИТЬ МаксПериодНачисленияШкалы
	|ИЗ
	|	СтабПериодыШкалы КАК СтабПериодыШкалы
	|
	|СГРУППИРОВАТЬ ПО
	|	СтабПериодыШкалы.Организация,
	|	СтабПериодыШкалы.Район,
	|	СтабПериодыШкалы.ЧастныйСектор,
	|	СтабПериодыШкалы.Строение,
	|	СтабПериодыШкалы.Помещение,
	|	СтабПериодыШкалы.ТочкаУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтабПериодыШкалы.Организация КАК Организация,
	|	СтабПериодыШкалы.ПериодНачисления КАК ПериодНачисления,
	|	СтабПериодыШкалы.Район КАК Район,
	|	СтабПериодыШкалы.ЧастныйСектор КАК ЧастныйСектор,
	|	СтабПериодыШкалы.Строение КАК Строение,
	|	СтабПериодыШкалы.Помещение КАК Помещение,
	|	СтабПериодыШкалы.ТочкаУчета КАК ТочкаУчета,
	|	МАКСИМУМ(СтабПериодыШкалы.НомерПозиции) КАК НомерПозиции
	|ПОМЕСТИТЬ МаксНомерПозицииШкалы
	|ИЗ
	|	МаксПериодНачисленияШкалы КАК МаксПериодНачисленияШкалы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СтабПериодыШкалы КАК СтабПериодыШкалы
	|		ПО МаксПериодНачисленияШкалы.Организация = СтабПериодыШкалы.Организация
	|			И МаксПериодНачисленияШкалы.Район = СтабПериодыШкалы.Район
	|			И МаксПериодНачисленияШкалы.ЧастныйСектор = СтабПериодыШкалы.ЧастныйСектор
	|			И МаксПериодНачисленияШкалы.Строение = СтабПериодыШкалы.Строение
	|			И МаксПериодНачисленияШкалы.Помещение = СтабПериодыШкалы.Помещение
	|			И МаксПериодНачисленияШкалы.ТочкаУчета = СтабПериодыШкалы.ТочкаУчета
	|			И МаксПериодНачисленияШкалы.ПериодНачисления = СтабПериодыШкалы.ПериодНачисления
	|
	|СГРУППИРОВАТЬ ПО
	|	СтабПериодыШкалы.Организация,
	|	СтабПериодыШкалы.ПериодНачисления,
	|	СтабПериодыШкалы.Район,
	|	СтабПериодыШкалы.ЧастныйСектор,
	|	СтабПериодыШкалы.Строение,
	|	СтабПериодыШкалы.Помещение,
	|	СтабПериодыШкалы.ТочкаУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтабПериодыШкалы.Организация КАК Организация,
	|	СтабПериодыШкалы.ПериодНачисленияДок КАК ПериодНачисления,
	|	СтабПериодыШкалы.Район КАК Район,
	|	СтабПериодыШкалы.ЧастныйСектор КАК ЧастныйСектор,
	|	СтабПериодыШкалы.Строение КАК Строение,
	|	СтабПериодыШкалы.ЧастьПомещения КАК Помещение,
	|	СтабПериодыШкалы.ТочкаУчета КАК ТочкаУчета,
	|	0 КАК НомерПозиции,
	|	СтабПериодыШкалы.Шкала КАК Шкала,
	|	СтабПериодыШкалы.Дата КАК ДатаРегистратора,
	|	СтабПериодыШкалы.Ссылка КАК ДокРегистратор
	|ИЗ
	|	СтабПериодыШкалы КАК СтабПериодыШкалы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаксНомерПозицииШкалы КАК МаксНомерПозицииШкалы
	|		ПО СтабПериодыШкалы.Организация = МаксНомерПозицииШкалы.Организация
	|			И СтабПериодыШкалы.Район = МаксНомерПозицииШкалы.Район
	|			И СтабПериодыШкалы.ЧастныйСектор = МаксНомерПозицииШкалы.ЧастныйСектор
	|			И СтабПериодыШкалы.Строение = МаксНомерПозицииШкалы.Строение
	|			И СтабПериодыШкалы.Помещение = МаксНомерПозицииШкалы.Помещение
	|			И СтабПериодыШкалы.ТочкаУчета = МаксНомерПозицииШкалы.ТочкаУчета
	|			И СтабПериодыШкалы.ПериодНачисления = МаксНомерПозицииШкалы.ПериодНачисления
	|			И СтабПериодыШкалы.НомерПозиции = МаксНомерПозицииШкалы.НомерПозиции";
	
	Возврат Текст;

	
КонецФункции

Функция ТекстЗапросаИзменениеДиаметраСечения()
	Текст  = 
	"ВЫБРАТЬ
	|	энргИзменитьДиаметрСеченияТочекУчета.Организация КАК Организация,
	|	энргИзменитьДиаметрСеченияТочекУчета.ПериодНачисления КАК ПериодНачисления,
	|	энргИзменитьДиаметрСеченияТочекУчета.Район КАК Район,
	|	&ЧастныйСектор КАК ЧастныйСектор,
	|	&Строение КАК Строение,
	|	&Помещение КАК Помещение,
	|	энргИзменитьДиаметрСеченияТочекУчета.Ссылка КАК Ссылка,
	|	энргИзменитьДиаметрСеченияТочекУчета.Дата КАК Дата,
	|	энргИзменитьДиаметрСеченияТочекУчета.Абонент КАК Абонент
	|ПОМЕСТИТЬ Шапка
	|ИЗ
	|	Документ.энргИзменитьДиаметрСеченияТочекУчета КАК энргИзменитьДиаметрСеченияТочекУчета
	|ГДЕ
	|	энргИзменитьДиаметрСеченияТочекУчета.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	энргКлючиПомещений.КлючПомещения КАК КлючПомещения,
	|	энргКлючиПомещений.Строение КАК Строение,
	|	энргКлючиПомещений.Помещение КАК Помещение
	|ПОМЕСТИТЬ КлючиПомещения
	|ИЗ
	|	РегистрСведений.энргКлючиПомещений КАК энргКлючиПомещений
	|ГДЕ
	|	энргКлючиПомещений.Строение = &Строение
	|	И энргКлючиПомещений.Помещение = &Помещение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	энргЗначенияПлощадейСрезПоследних.ВидПлощади КАК ВидПлощади,
	|	энргЗначенияПлощадейСрезПоследних.Площадь КАК Площадь
	|ПОМЕСТИТЬ ЗначениеПлощадей
	|ИЗ
	|	РегистрСведений.энргЗначенияПлощадей.СрезПоследних(
	|			&МоментВремени,
	|			Организация = &Организация
	|				И Район = &Район
	|				И ВидПлощади В (ЗНАЧЕНИЕ(Перечисление.энргВидыПлощадей.ОбщаяПлощадь), ЗНАЧЕНИЕ(Перечисление.энргВидыПлощадей.Поливная))
	|				И КлючПомещения В
	|					(ВЫБРАТЬ
	|						КлючиПомещения.КлючПомещения
	|					ИЗ
	|						КлючиПомещения)) КАК энргЗначенияПлощадейСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КлючиПомещения КАК КлючиПомещения
	|		ПО энргЗначенияПлощадейСрезПоследних.КлючПомещения = КлючиПомещения.КлючПомещения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	энргИзменитьДиаметрСеченияТочекУчетаТочкиУчета.ТочкаУчета КАК ТочкаУчета,
	|	энргИзменитьДиаметрСеченияТочекУчетаТочкиУчета.РассчитыватьПоДиаметруСечения КАК ИспользоватьДиаметрСечения,
	|	энргИзменитьДиаметрСеченияТочекУчетаТочкиУчета.ДиаметрСечения КАК ДиаметрСечения,
	|	энргИзменитьДиаметрСеченияТочекУчетаТочкиУчета.Ссылка КАК СсылкаРегистратора,
	|	Шапка.Организация КАК Организация,
	|	Шапка.Район КАК Район,
	|	КлючиПомещения.КлючПомещения КАК КлючПомещения,
	|	Шапка.ПериодНачисления КАК ПериодНачисления,
	|	Шапка.ЧастныйСектор КАК ЧастныйСектор,
	|	Шапка.Дата КАК ДатаРегистратора,
	|	Шапка.Строение КАК Строение,
	|	Шапка.Помещение КАК Помещение,
	|	Шапка.Абонент КАК Абонент
	|ПОМЕСТИТЬ ВТ_ТочкиУчета
	|ИЗ
	|	Шапка КАК Шапка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КлючиПомещения КАК КлючиПомещения
	|		ПО Шапка.Строение = КлючиПомещения.Строение
	|			И Шапка.Помещение = КлючиПомещения.Помещение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргИзменитьДиаметрСеченияТочекУчета.ТочкиУчета КАК энргИзменитьДиаметрСеченияТочекУчетаТочкиУчета
	|		ПО Шапка.Ссылка = энргИзменитьДиаметрСеченияТочекУчетаТочкиУчета.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	энргНаправлениеИспользованияТочекУчетаСрезПоследних.Организация КАК Организация,
	|	энргНаправлениеИспользованияТочекУчетаСрезПоследних.Район КАК Район,
	|	энргНаправлениеИспользованияТочекУчетаСрезПоследних.КлючПомещения КАК КлючПомещения,
	|	энргНаправлениеИспользованияТочекУчетаСрезПоследних.ТочкаУчета КАК ТочкаУчета,
	|	энргНаправлениеИспользованияТочекУчетаСрезПоследних.НаправлениеИспользованияТУ КАК НаправлениеИспользованияТУ
	|ПОМЕСТИТЬ ВТ_НаправлениеТУ
	|ИЗ
	|	РегистрСведений.энргНаправлениеИспользованияТочекУчета.СрезПоследних(
	|			&МоментВремени,
	|			(Организация, Район, ТочкаУчета, КлючПомещения) В
	|				(ВЫБРАТЬ
	|					ВТ_ТочкиУчета.Организация КАК Организация,
	|					ВТ_ТочкиУчета.Район КАК Район,
	|					ВТ_ТочкиУчета.ТочкаУчета КАК ТочкаУчета,
	|					ВТ_ТочкиУчета.КлючПомещения КАК КлючПомещения
	|				ИЗ
	|					ВТ_ТочкиУчета КАК ВТ_ТочкиУчета)) КАК энргНаправлениеИспользованияТочекУчетаСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	энргУслугиТочекУчетаСрезПоследних.Организация КАК Организация,
	|	энргУслугиТочекУчетаСрезПоследних.Район КАК Район,
	|	энргУслугиТочекУчетаСрезПоследних.КлючПомещения КАК КлючПомещения,
	|	энргУслугиТочекУчетаСрезПоследних.ТочкаУчета КАК ТочкаУчета,
	|	ЕСТЬNULL(энргВидыУслугСоставляющиеУслуг.Услуга, энргУслугиТочекУчетаСрезПоследних.Услуга) КАК Услуга,
	|	ВЫБОР
	|		КОГДА энргВидыУслугСоставляющиеУслуг.Услуга ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЧастьСоставной,
	|	ВЫБОР
	|		КОГДА энргВидыУслугСоставляющиеУслуг.Услуга ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|		ИНАЧЕ энргУслугиТочекУчетаСрезПоследних.Услуга
	|	КОНЕЦ КАК СоставнаяУслуга
	|ПОМЕСТИТЬ ВТ_Услуга
	|ИЗ
	|	РегистрСведений.энргУслугиТочекУчета.СрезПоследних(
	|			&МоментВремени,
	|			(Организация, Район, ТочкаУчета, КлючПомещения) В
	|				(ВЫБРАТЬ
	|					ВТ_НаправлениеТУ.Организация КАК Организация,
	|					ВТ_НаправлениеТУ.Район КАК Район,
	|					ВТ_НаправлениеТУ.ТочкаУчета КАК ТочкаУчета,
	|					ВТ_НаправлениеТУ.КлючПомещения КАК КлючПомещения
	|				ИЗ
	|					ВТ_НаправлениеТУ КАК ВТ_НаправлениеТУ)) КАК энргУслугиТочекУчетаСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг.СоставляющиеУслуг КАК энргВидыУслугСоставляющиеУслуг
	|		ПО энргУслугиТочекУчетаСрезПоследних.Услуга = энргВидыУслугСоставляющиеУслуг.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Услуга.Организация КАК Организация,
	|	ВТ_Услуга.Район КАК Район,
	|	ВТ_Услуга.КлючПомещения КАК КлючПомещения,
	|	ВТ_Услуга.ТочкаУчета КАК ТочкаУчета,
	|	ВТ_Услуга.Услуга КАК Услуга,
	|	ВТ_Услуга.ЧастьСоставной КАК ЧастьСоставной,
	|	энргПоставщикиУслугАбонентаСрезПоследних.Поставщик КАК Поставщик,
	|	ВТ_Услуга.СоставнаяУслуга КАК СоставнаяУслуга,
	|	ЕСТЬNULL(энргГруппыПотребителейАбонентовСрезПоследних.ГруппаПотребителей, ЗНАЧЕНИЕ(Справочник.энргГруппыПотребителей.ПустаяСсылка)) КАК ТарифнаяГруппа,
	|	энргВидБлагоустройствАбонентаСрезПоследних.ВидБлагоустройства КАК ВидБлагоустройства
	|ПОМЕСТИТЬ ВТ_Поставщики
	|ИЗ
	|	ВТ_Услуга КАК ВТ_Услуга
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.энргПоставщикиУслугАбонента.СрезПоследних(
	|				&МоментВремени,
	|				(Организация, Район, КлючПомещения, ТочкаУчета, Услуга, ЧастьСоставной) В
	|					(ВЫБРАТЬ
	|						ВТ_Услуга.Организация КАК Организация,
	|						ВТ_Услуга.Район КАК Район,
	|						ВТ_Услуга.КлючПомещения КАК КлючПомещения,
	|						ВТ_Услуга.ТочкаУчета КАК ТочкаУчета,
	|						ВТ_Услуга.Услуга КАК Услуга,
	|						ВТ_Услуга.ЧастьСоставной КАК ЧастьСоставной
	|					ИЗ
	|						ВТ_Услуга КАК ВТ_Услуга)) КАК энргПоставщикиУслугАбонентаСрезПоследних
	|		ПО ВТ_Услуга.Организация = энргПоставщикиУслугАбонентаСрезПоследних.Организация
	|			И ВТ_Услуга.Район = энргПоставщикиУслугАбонентаСрезПоследних.Район
	|			И ВТ_Услуга.КлючПомещения = энргПоставщикиУслугАбонентаСрезПоследних.КлючПомещения
	|			И ВТ_Услуга.ТочкаУчета = энргПоставщикиУслугАбонентаСрезПоследних.ТочкаУчета
	|			И ВТ_Услуга.Услуга = энргПоставщикиУслугАбонентаСрезПоследних.Услуга
	|			И ВТ_Услуга.ЧастьСоставной = энргПоставщикиУслугАбонентаСрезПоследних.ЧастьСоставной
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.энргГруппыПотребителейАбонентов.СрезПоследних(
	|				&МоментВремени,
	|				(Организация, Район, КлючПомещения, Услуга) В
	|					(ВЫБРАТЬ
	|						ВТ_Услуга.Организация КАК Организация,
	|						ВТ_Услуга.Район КАК Район,
	|						ВТ_Услуга.КлючПомещения КАК КлючПомещения,
	|						ВТ_Услуга.Услуга КАК Услуга
	|					ИЗ
	|						ВТ_Услуга КАК ВТ_Услуга)) КАК энргГруппыПотребителейАбонентовСрезПоследних
	|		ПО ВТ_Услуга.Организация = энргГруппыПотребителейАбонентовСрезПоследних.Организация
	|			И ВТ_Услуга.Район = энргГруппыПотребителейАбонентовСрезПоследних.Район
	|			И ВТ_Услуга.КлючПомещения = энргГруппыПотребителейАбонентовСрезПоследних.КлючПомещения
	|			И ВТ_Услуга.Услуга = энргГруппыПотребителейАбонентовСрезПоследних.Услуга
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.энргВидБлагоустройствАбонента.СрезПоследних(
	|				&МоментВремени,
	|				(Организация, Район, КлючПомещения, Услуга) В
	|					(ВЫБРАТЬ
	|						ВТ_Услуга.Организация КАК Организация,
	|						ВТ_Услуга.Район КАК Район,
	|						ВТ_Услуга.КлючПомещения КАК КлючПомещения,
	|						ВТ_Услуга.Услуга КАК Услуга
	|					ИЗ
	|						ВТ_Услуга КАК ВТ_Услуга)) КАК энргВидБлагоустройствАбонентаСрезПоследних
	|		ПО ВТ_Услуга.Организация = энргВидБлагоустройствАбонентаСрезПоследних.Организация
	|			И ВТ_Услуга.Район = энргВидБлагоустройствАбонентаСрезПоследних.Район
	|			И ВТ_Услуга.КлючПомещения = энргВидБлагоустройствАбонентаСрезПоследних.КлючПомещения
	|			И ВТ_Услуга.Услуга = энргВидБлагоустройствАбонентаСрезПоследних.Услуга
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	энргПриборыТочекУчетаСрезПоследних.Организация КАК Организация,
	|	энргПриборыТочекУчетаСрезПоследних.Район КАК Район,
	|	энргПриборыТочекУчетаСрезПоследних.КлючПомещения КАК КлючПомещения,
	|	энргПриборыТочекУчетаСрезПоследних.ТочкаУчета КАК ТочкаУчета,
	|	энргПриборыТочекУчетаСрезПоследних.ПриборУчета КАК ПриборУчета
	|ПОМЕСТИТЬ ВТ_ПриборыУчета
	|ИЗ
	|	РегистрСведений.энргПриборыТочекУчета.СрезПоследних(
	|			&МоментВремени,
	|			(Организация, Район, ТочкаУчета, КлючПомещения) В
	|				(ВЫБРАТЬ
	|					ВТ_ТочкиУчета.Организация КАК Организация,
	|					ВТ_ТочкиУчета.Район КАК Район,
	|					ВТ_ТочкиУчета.ТочкаУчета КАК ТочкаУчета,
	|					ВТ_ТочкиУчета.КлючПомещения КАК КлючПомещения
	|				ИЗ
	|					ВТ_ТочкиУчета КАК ВТ_ТочкиУчета)) КАК энргПриборыТочекУчетаСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПриборыУчета.Организация КАК Организация,
	|	ВТ_ПриборыУчета.Район КАК Район,
	|	ВТ_ПриборыУчета.КлючПомещения КАК КлючПомещения,
	|	ВТ_ПриборыУчета.ТочкаУчета КАК ТочкаУчета,
	|	ВТ_ПриборыУчета.ПриборУчета КАК ПриборУчета,
	|	энргКоэффциентыПриборовУчетаСрезПоследних.Коэффициент КАК КоэффициентПУ
	|ПОМЕСТИТЬ ВТ_КоэффициентыПУ
	|ИЗ
	|	ВТ_ПриборыУчета КАК ВТ_ПриборыУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.энргКоэффциентыПриборовУчета.СрезПоследних(
	|				&МоментВремени,
	|				(Организация, Район, КлючПомещения, ПриборУчета) В
	|					(ВЫБРАТЬ
	|						ВТ_ПриборыУчета.Организация КАК Организация,
	|						ВТ_ПриборыУчета.Район КАК Район,
	|						ВТ_ПриборыУчета.КлючПомещения КАК КлючПомещения,
	|						ВТ_ПриборыУчета.ПриборУчета КАК ПриборУчета
	|					ИЗ
	|						ВТ_ПриборыУчета КАК ВТ_ПриборыУчета)) КАК энргКоэффциентыПриборовУчетаСрезПоследних
	|		ПО (энргКоэффциентыПриборовУчетаСрезПоследних.Организация = ВТ_ПриборыУчета.Организация)
	|			И (энргКоэффциентыПриборовУчетаСрезПоследних.Район = ВТ_ПриборыУчета.Район)
	|			И (энргКоэффциентыПриборовУчетаСрезПоследних.КлючПомещения = ВТ_ПриборыУчета.КлючПомещения)
	|			И (энргКоэффциентыПриборовУчетаСрезПоследних.ПриборУчета = ВТ_ПриборыУчета.ПриборУчета)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТочкиУчета.Организация КАК Организация,
	|	ВТ_ТочкиУчета.ПериодНачисления КАК ПериодНачисления,
	|	ВТ_ТочкиУчета.Район КАК Район,
	|	ВТ_ТочкиУчета.ЧастныйСектор КАК ЧастныйСектор,
	|	ВТ_ТочкиУчета.Строение КАК Строение,
	|	ВТ_ТочкиУчета.Помещение КАК Помещение,
	|	ВТ_Поставщики.Услуга КАК Услуга,
	|	ВТ_Поставщики.СоставнаяУслуга КАК СоставнаяУслуга,
	|	ВТ_ТочкиУчета.ТочкаУчета КАК ТочкаУчета,
	|	ВТ_ТочкиУчета.ДатаРегистратора КАК ДатаРегистратора,
	|	ВТ_ТочкиУчета.СсылкаРегистратора КАК ДокРегистратор,
	|	ИСТИНА КАК ЛСОткрыт,
	|	ИСТИНА КАК УслугаПодключена,
	|	ВЫБОР
	|		КОГДА ВТ_КоэффициентыПУ.ПриборУчета ЕСТЬ NULL
	|				ИЛИ ВТ_КоэффициентыПУ.ПриборУчета = ЗНАЧЕНИЕ(Справочник.энргПриборыУчетаАбонента.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПриборВведен,
	|	ВТ_КоэффициентыПУ.ПриборУчета КАК ПриборУчета,
	|	ВЫБОР
	|		КОГДА ВТ_КоэффициентыПУ.ПриборУчета ЕСТЬ NULL
	|				ИЛИ ВТ_КоэффициентыПУ.ПриборУчета = ЗНАЧЕНИЕ(Справочник.энргПриборыУчетаАбонента.ПустаяСсылка)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ &ПериодРегистрации
	|	КОНЕЦ КАК ДатаСостоянияПрибора,
	|	ВТ_КоэффициентыПУ.КоэффициентПУ КАК КоэффициентПУ,
	|	ВТ_НаправлениеТУ.НаправлениеИспользованияТУ КАК НаправлениеИспользованияТУ,
	|	ВТ_ТочкиУчета.ДиаметрСечения КАК ДиаметрСечения,
	|	ВТ_Поставщики.Поставщик КАК Поставщик,
	|	ВТ_Поставщики.ТарифнаяГруппа КАК ТарифнаяГруппа,
	|	ВТ_Поставщики.ВидБлагоустройства КАК ВидБлагоустройства,
	|	ВТ_ТочкиУчета.Абонент КАК Абонент,
	|	ВТ_ТочкиУчета.КлючПомещения КАК КлючПомещения,
	|	ВТ_ТочкиУчета.ИспользоватьДиаметрСечения КАК ИспользоватьДиаметрСечения
	|ПОМЕСТИТЬ ДанныеШапкиСоставныеУслуги
	|ИЗ
	|	ВТ_ТочкиУчета КАК ВТ_ТочкиУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Поставщики КАК ВТ_Поставщики
	|		ПО ВТ_ТочкиУчета.Организация = ВТ_Поставщики.Организация
	|			И ВТ_ТочкиУчета.Район = ВТ_Поставщики.Район
	|			И ВТ_ТочкиУчета.КлючПомещения = ВТ_Поставщики.КлючПомещения
	|			И ВТ_ТочкиУчета.ТочкаУчета = ВТ_Поставщики.ТочкаУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НаправлениеТУ КАК ВТ_НаправлениеТУ
	|		ПО ВТ_ТочкиУчета.Организация = ВТ_НаправлениеТУ.Организация
	|			И ВТ_ТочкиУчета.Район = ВТ_НаправлениеТУ.Район
	|			И ВТ_ТочкиУчета.ТочкаУчета = ВТ_НаправлениеТУ.ТочкаУчета
	|			И ВТ_ТочкиУчета.КлючПомещения = ВТ_НаправлениеТУ.КлючПомещения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КоэффициентыПУ КАК ВТ_КоэффициентыПУ
	|		ПО ВТ_ТочкиУчета.Организация = ВТ_КоэффициентыПУ.Организация
	|			И ВТ_ТочкиУчета.Район = ВТ_КоэффициентыПУ.Район
	|			И ВТ_ТочкиУчета.КлючПомещения = ВТ_КоэффициентыПУ.КлючПомещения
	|			И ВТ_ТочкиУчета.ТочкаУчета = ВТ_КоэффициентыПУ.ТочкаУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеШапкиСоставныеУслуги.Организация КАК Организация,
	|	ДанныеШапкиСоставныеУслуги.ПериодНачисления КАК ПериодНачисления,
	|	ДанныеШапкиСоставныеУслуги.Район КАК Район,
	|	ДанныеШапкиСоставныеУслуги.ЧастныйСектор КАК ЧастныйСектор,
	|	ДанныеШапкиСоставныеУслуги.Строение КАК Строение,
	|	ДанныеШапкиСоставныеУслуги.Помещение КАК Помещение,
	|	ДанныеШапкиСоставныеУслуги.Услуга КАК Услуга,
	|	ДанныеШапкиСоставныеУслуги.ТочкаУчета КАК ТочкаУчета,
	|	0 КАК НомерПозиции,
	|	&ПериодРегистрации КАК ПериодРегистрации,
	|	ДанныеШапкиСоставныеУслуги.ДатаРегистратора КАК ДатаРегистратора,
	|	ДанныеШапкиСоставныеУслуги.ДокРегистратор КАК ДокРегистратор,
	|	ДанныеШапкиСоставныеУслуги.ЛСОткрыт КАК ЛСОткрыт,
	|	ДанныеШапкиСоставныеУслуги.УслугаПодключена КАК УслугаПодключена,
	|	ДанныеШапкиСоставныеУслуги.ПриборВведен КАК ПриборВведен,
	|	ДанныеШапкиСоставныеУслуги.ПриборУчета КАК ПриборУчета,
	|	ДанныеШапкиСоставныеУслуги.ДатаСостоянияПрибора КАК ДатаСостоянияПрибора,
	|	ДанныеШапкиСоставныеУслуги.НаправлениеИспользованияТУ КАК НаправлениеИспользованияТУ,
	|	&КоличествоПрописанных КАК КоличествоПрописанных,
	|	&КоличествоКомнат КАК КоличествоКомнат,
	|	ДанныеШапкиСоставныеУслуги.КоэффициентПУ КАК КоэффициентПУ,
	|	ДанныеШапкиСоставныеУслуги.ВидБлагоустройства КАК ВидБлагоустройства,
	|	ДанныеШапкиСоставныеУслуги.ТарифнаяГруппа КАК ТарифнаяГруппа,
	|	ДанныеШапкиСоставныеУслуги.Поставщик КАК Поставщик,
	|	ВЫБОР
	|		КОГДА энргВидыУслуг.Ссылка ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.энргВидыПлощадей.ОбщаяПлощадь)
	|		КОГДА энргВидыУслуг.ВидПлощади = ЗНАЧЕНИЕ(Перечисление.энргВидыПлощадей.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.энргВидыПлощадей.ОбщаяПлощадь)
	|		ИНАЧЕ энргВидыУслуг.ВидПлощади
	|	КОНЕЦ КАК ВидПлощади,
	|	ДанныеШапкиСоставныеУслуги.СоставнаяУслуга КАК СоставнаяУслуга,
	|	ДанныеШапкиСоставныеУслуги.Абонент КАК Абонент,
	|	ДанныеШапкиСоставныеУслуги.КлючПомещения КАК КлючПомещения,
	|	ДанныеШапкиСоставныеУслуги.ДиаметрСечения КАК ДиаметрСечения,
	|	ДанныеШапкиСоставныеУслуги.ИспользоватьДиаметрСечения КАК ИспользоватьДиаметрСечения
	|ПОМЕСТИТЬ ОбщиеДанные
	|ИЗ
	|	ДанныеШапкиСоставныеУслуги КАК ДанныеШапкиСоставныеУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг КАК энргВидыУслуг
	|		ПО ДанныеШапкиСоставныеУслуги.Услуга = энргВидыУслуг.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбщиеДанные.Организация КАК Организация,
	|	ОбщиеДанные.ПериодНачисления КАК ПериодНачисления,
	|	ОбщиеДанные.Район КАК Район,
	|	ОбщиеДанные.ЧастныйСектор КАК ЧастныйСектор,
	|	ОбщиеДанные.Строение КАК Строение,
	|	ОбщиеДанные.Помещение КАК Помещение,
	|	ОбщиеДанные.Услуга КАК Услуга,
	|	ОбщиеДанные.ТочкаУчета КАК ТочкаУчета,
	|	ОбщиеДанные.НомерПозиции КАК НомерПозиции,
	|	ОбщиеДанные.ПериодРегистрации КАК ПериодРегистрации,
	|	ОбщиеДанные.ДатаРегистратора КАК ДатаРегистратора,
	|	ОбщиеДанные.ДокРегистратор КАК ДокРегистратор,
	|	ОбщиеДанные.ЛСОткрыт КАК ЛСОткрыт,
	|	ОбщиеДанные.УслугаПодключена КАК УслугаПодключена,
	|	ОбщиеДанные.ПриборВведен КАК ПриборВведен,
	|	ОбщиеДанные.ПриборУчета КАК ПриборУчета,
	|	ОбщиеДанные.ДатаСостоянияПрибора КАК ДатаСостоянияПрибора,
	|	ОбщиеДанные.НаправлениеИспользованияТУ КАК НаправлениеИспользованияТУ,
	|	ОбщиеДанные.КоличествоПрописанных КАК КоличествоПрописанных,
	|	ОбщиеДанные.КоличествоКомнат КАК КоличествоКомнат,
	|	ЕСТЬNULL(ЗначениеПлощадей.Площадь, 0) КАК ЗначениеПлощади,
	|	ОбщиеДанные.КоэффициентПУ КАК КоэффициентПУ,
	|	ОбщиеДанные.ВидБлагоустройства КАК ВидБлагоустройства,
	|	ОбщиеДанные.ТарифнаяГруппа КАК ТарифнаяГруппа,
	|	ОбщиеДанные.Поставщик КАК Поставщик,
	|	ИСТИНА КАК МенялосьСостояниеПУ,
	|	ИСТИНА КАК МенялосьСостояниеФормулы,
	|	ОбщиеДанные.СоставнаяУслуга КАК СоставнаяУслуга,
	|	0 КАК КоличествоЭтажей,
	|	0 КАК ГодПостройки,
	|	ЗНАЧЕНИЕ(Перечисление.энргТипыСобственниковЖилья.ПустаяСсылка) КАК ВидСобственности,
	|	ОбщиеДанные.Абонент КАК Абонент,
	|	ОбщиеДанные.ДиаметрСечения КАК ДиаметрСечения,
	|	ОбщиеДанные.ИспользоватьДиаметрСечения КАК ИспользоватьДиаметрСечения
	|ПОМЕСТИТЬ ВсеПараметрыРасчета
	|ИЗ
	|	ОбщиеДанные КАК ОбщиеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗначениеПлощадей КАК ЗначениеПлощадей
	|		ПО ОбщиеДанные.ВидПлощади = ЗначениеПлощадей.ВидПлощади";
	
	Текст  = Текст + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Текст = Текст + Справочники.энргКлючиНормативов.ТекстОпределенияКлючейНорматива();
	
	Текст  = Текст + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";

	Текст  = Текст +
	"ВЫБРАТЬ
	|	ВсеПараметрыРасчета.*,
	|	КлючиНорматива.КлючНорматива КАК КлючНорматива,
	|	КлючиНорматива.КлючСоцНорматива КАК КлючСоцНорматива
	|ИЗ
	|	ВсеПараметрыРасчета КАК ВсеПараметрыРасчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ КлючиНорматива КАК КлючиНорматива
	|		ПО ВсеПараметрыРасчета.Услуга = КлючиНорматива.Услуга
	|		И КлючиНорматива.НаправлениеИспользованияТУ = ЗНАЧЕНИЕ(Справочник.энргНаправлениеИспользованияТочекУчета.ОсновноеНаправление)";
	
	Возврат Текст;
КонецФункции

Функция ТекстЗапросаШкалыДиаметрСечения() 
	
	Текст = 
	"ВЫБРАТЬ
	|	энргВидыДифференцированностиПриборовУчетаСрезПоследних.Организация КАК Организация,
	|	ДанныеШапкиСоставныеУслуги.ПериодНачисления КАК ПериодНачисления,
	|	ДанныеШапкиСоставныеУслуги.Район КАК Район,
	|	ДанныеШапкиСоставныеУслуги.ЧастныйСектор КАК ЧастныйСектор,
	|	ДанныеШапкиСоставныеУслуги.Строение КАК Строение,
	|	ДанныеШапкиСоставныеУслуги.Помещение КАК Помещение,
	|	ДанныеШапкиСоставныеУслуги.ТочкаУчета КАК ТочкаУчета,
	|	0 КАК НомерПозиции,
	|	энргВидыДифференцированностиПриборовУчетаСрезПоследних.Шкала КАК Шкала,
	|	энргВидыДифференцированностиПриборовУчетаСрезПоследних.ВидДифференцированности КАК ВидДифференцированности,
	|	ДанныеШапкиСоставныеУслуги.ДокРегистратор КАК ДокРегистратор,
	|	ДанныеШапкиСоставныеУслуги.ДатаРегистратора КАК ДатаРегистратора
	|ИЗ
	|	РегистрСведений.энргВидыДифференцированностиПриборовУчета.СрезПоследних(
	|			&МоментВремени,
	|			(Организация, Район, КлючПомещения, ПриборУчета) В
	|				(ВЫБРАТЬ
	|					ДанныеШапкиСоставныеУслуги.Организация КАК Организация,
	|					ДанныеШапкиСоставныеУслуги.Район КАК Район,
	|					ДанныеШапкиСоставныеУслуги.КлючПомещения КАК КлючПомещения,
	|					ДанныеШапкиСоставныеУслуги.ПриборУчета КАК ПриборУчета
	|				ИЗ
	|					ДанныеШапкиСоставныеУслуги КАК ДанныеШапкиСоставныеУслуги)) КАК энргВидыДифференцированностиПриборовУчетаСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеШапкиСоставныеУслуги КАК ДанныеШапкиСоставныеУслуги
	|		ПО энргВидыДифференцированностиПриборовУчетаСрезПоследних.Организация = ДанныеШапкиСоставныеУслуги.Организация
	|			И энргВидыДифференцированностиПриборовУчетаСрезПоследних.Район = ДанныеШапкиСоставныеУслуги.Район
	|			И энргВидыДифференцированностиПриборовУчетаСрезПоследних.КлючПомещения = ДанныеШапкиСоставныеУслуги.КлючПомещения
	|			И энргВидыДифференцированностиПриборовУчетаСрезПоследних.ПриборУчета = ДанныеШапкиСоставныеУслуги.ПриборУчета";
	
	Возврат Текст;
	
КонецФункции

Функция ТекстЗапросаПодключениеУслугиПомещениеСРазделеннымиЛС()
	
	Текст  = 
	"ВЫБРАТЬ
	|	энргОперацияСУслугами.Организация КАК Организация,
	|	энргОперацияСУслугами.ПериодНачисления КАК ПериодНачисления,
	|	энргОперацияСУслугами.Район КАК Район,
	|	&ЧастныйСектор КАК ЧастныйСектор,
	|	&Строение КАК Строение,
	|	&Помещение КАК Помещение,
	|	энргОперацияСУслугами.Абонент КАК Абонент,
	|	энргОперацияСУслугами.Ссылка КАК Ссылка,
	|	энргОперацияСУслугами.Дата КАК Дата
	|ПОМЕСТИТЬ Шапка
	|ИЗ
	|	Документ.энргОперацияСУслугами КАК энргОперацияСУслугами
	|ГДЕ
	|	энргОперацияСУслугами.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	энргКлючиПомещений.КлючПомещения КАК КлючПомещения
	|ПОМЕСТИТЬ КлючиПомещения
	|ИЗ
	|	РегистрСведений.энргКлючиПомещений КАК энргКлючиПомещений
	|ГДЕ
	|	энргКлючиПомещений.Строение = &Строение
	|	И энргКлючиПомещений.Помещение = &Помещение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	энргПомещения.Ссылка КАК Комната,
	|	энргКлючиПомещений.КлючПомещения КАК КлючПомещения,
	|	Шапка.ПериодНачисления КАК ПериодНачисления,
	|	Шапка.Организация КАК Организация,
	|	Шапка.Район КАК Район,
	|	Шапка.ЧастныйСектор КАК ЧастныйСектор,
	|	Шапка.Строение КАК Строение,
	|	Шапка.Помещение КАК Помещение
	|ПОМЕСТИТЬ КлючиКомнатПомещения
	|ИЗ
	|	РегистрСведений.энргКлючиПомещений КАК энргКлючиПомещений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.энргПомещения КАК энргПомещения
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Шапка КАК Шапка
	|			ПО (Шапка.Помещение = энргПомещения.Родитель)
	|		ПО энргКлючиПомещений.Помещение = энргПомещения.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	энргКоличествоПрописанныхСрезПоследних.Организация КАК Организация,
	|	энргКоличествоПрописанныхСрезПоследних.Район КАК Район,
	|	энргКоличествоПрописанныхСрезПоследних.Количество КАК Количество,
	|	энргКоличествоПрописанныхСрезПоследних.КлючПомещения КАК КлючПомещения
	|ПОМЕСТИТЬ КоличествоПрописанных
	|ИЗ
	|	РегистрСведений.энргКоличествоПрописанных.СрезПоследних(
	|			&ПериодРегистрации,
	|			Организация = &Организация
	|				И Район = &Район
	|				И КлючПомещения В
	|					(ВЫБРАТЬ
	|						КлючиКомнатПомещения.КлючПомещения
	|					ИЗ
	|						КлючиКомнатПомещения)) КАК энргКоличествоПрописанныхСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КлючиКомнатПомещения КАК КлючиКомнатПомещения
	|		ПО энргКоличествоПрописанныхСрезПоследних.КлючПомещения = КлючиКомнатПомещения.КлючПомещения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	энргКоличествоПроживающихСрезПоследних.Организация КАК Организация,
	|	энргКоличествоПроживающихСрезПоследних.Район КАК Район,
	|	энргКоличествоПроживающихСрезПоследних.Количество КАК Количество,
	|	энргКоличествоПроживающихСрезПоследних.КлючПомещения КАК КлючПомещения
	|ПОМЕСТИТЬ КоличествоПроживающих
	|ИЗ
	|	РегистрСведений.энргКоличествоПроживающих.СрезПоследних(
	|			&ПериодРегистрации,
	|			Организация = &Организация
	|				И Район = &Район
	|				И КлючПомещения В
	|					(ВЫБРАТЬ
	|						КлючиКомнатПомещения.КлючПомещения
	|					ИЗ
	|						КлючиКомнатПомещения)) КАК энргКоличествоПроживающихСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КлючиКомнатПомещения КАК КлючиКомнатПомещения
	|		ПО энргКоличествоПроживающихСрезПоследних.КлючПомещения = КлючиКомнатПомещения.КлючПомещения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	энргКоличествоСобственниковСрезПоследних.Организация КАК Организация,
	|	энргКоличествоСобственниковСрезПоследних.Район КАК Район,
	|	энргКоличествоСобственниковСрезПоследних.Количество КАК Количество,
	|	энргКоличествоСобственниковСрезПоследних.КлючПомещения КАК КлючПомещения
	|ПОМЕСТИТЬ КоличествоСобственников
	|ИЗ
	|	РегистрСведений.энргКоличествоСобственников.СрезПоследних(
	|			&ПериодРегистрации,
	|			Организация = &Организация
	|				И Район = &Район
	|				И КлючПомещения В
	|					(ВЫБРАТЬ
	|						КлючиКомнатПомещения.КлючПомещения
	|					ИЗ
	|						КлючиКомнатПомещения)) КАК энргКоличествоСобственниковСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КлючиКомнатПомещения КАК КлючиКомнатПомещения
	|		ПО энргКоличествоСобственниковСрезПоследних.КлючПомещения = КлючиКомнатПомещения.КлючПомещения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КлючиКомнатПомещения.Комната КАК Комната,
	|	МАКСИМУМ(ЕСТЬNULL(КоличествоПрописанных.Количество, ЕСТЬNULL(КоличествоПроживающих.Количество, ЕСТЬNULL(КоличествоСобственников.Количество, 0)))) КАК КоличествоЖильцов,
	|	КлючиКомнатПомещения.ПериодНачисления КАК ПериодНачисления,
	|	КлючиКомнатПомещения.Организация КАК Организация,
	|	КлючиКомнатПомещения.Район КАК Район,
	|	КлючиКомнатПомещения.ЧастныйСектор КАК ЧастныйСектор,
	|	КлючиКомнатПомещения.Строение КАК Строение,
	|	КлючиКомнатПомещения.Помещение КАК Помещение
	|ПОМЕСТИТЬ КоличествоЖильцовПоКомнатам
	|ИЗ
	|	КлючиКомнатПомещения КАК КлючиКомнатПомещения
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоПрописанных КАК КоличествоПрописанных
	|		ПО КлючиКомнатПомещения.КлючПомещения = КоличествоПрописанных.КлючПомещения
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоПроживающих КАК КоличествоПроживающих
	|		ПО КлючиКомнатПомещения.КлючПомещения = КоличествоПроживающих.КлючПомещения
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоСобственников КАК КоличествоСобственников
	|		ПО КлючиКомнатПомещения.КлючПомещения = КоличествоСобственников.КлючПомещения
	|
	|СГРУППИРОВАТЬ ПО
	|	КлючиКомнатПомещения.Комната,
	|	КлючиКомнатПомещения.ПериодНачисления,
	|	КлючиКомнатПомещения.Организация,
	|	КлючиКомнатПомещения.Район,
	|	КлючиКомнатПомещения.ЧастныйСектор,
	|	КлючиКомнатПомещения.Строение,
	|	КлючиКомнатПомещения.Помещение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(КоличествоЖильцовПоКомнатам.КоличествоЖильцов) КАК КоличествоЖильцов,
	|	КоличествоЖильцовПоКомнатам.ПериодНачисления КАК ПериодНачисления,
	|	КоличествоЖильцовПоКомнатам.Организация КАК Организация,
	|	КоличествоЖильцовПоКомнатам.Район КАК Район,
	|	КоличествоЖильцовПоКомнатам.ЧастныйСектор КАК ЧастныйСектор,
	|	КоличествоЖильцовПоКомнатам.Строение КАК Строение,
	|	КоличествоЖильцовПоКомнатам.Помещение КАК Помещение
	|ПОМЕСТИТЬ ДанныеКоличестваЖильцов
	|ИЗ
	|	КоличествоЖильцовПоКомнатам КАК КоличествоЖильцовПоКомнатам
	|
	|СГРУППИРОВАТЬ ПО
	|	КоличествоЖильцовПоКомнатам.ЧастныйСектор,
	|	КоличествоЖильцовПоКомнатам.Помещение,
	|	КоличествоЖильцовПоКомнатам.Организация,
	|	КоличествоЖильцовПоКомнатам.ПериодНачисления,
	|	КоличествоЖильцовПоКомнатам.Строение,
	|	КоличествоЖильцовПоКомнатам.Район
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	энргЗначенияПлощадейСрезПоследних.ВидПлощади КАК ВидПлощади,
	|	энргЗначенияПлощадейСрезПоследних.Площадь КАК Площадь
	|ПОМЕСТИТЬ ЗначениеПлощадей
	|ИЗ
	|	РегистрСведений.энргЗначенияПлощадей.СрезПоследних(
	|			&МоментВремени,
	|			Организация = &Организация
	|				И Район = &Район
	|				И ВидПлощади В (ЗНАЧЕНИЕ(Перечисление.энргВидыПлощадей.ОбщаяПлощадь), ЗНАЧЕНИЕ(Перечисление.энргВидыПлощадей.Поливная))
	|				И КлючПомещения В
	|					(ВЫБРАТЬ
	|						КлючиПомещения.КлючПомещения
	|					ИЗ
	|						КлючиПомещения)) КАК энргЗначенияПлощадейСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КлючиПомещения КАК КлючиПомещения
	|		ПО энргЗначенияПлощадейСрезПоследних.КлючПомещения = КлючиПомещения.КлючПомещения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Шапка.Организация КАК Организация,
	|	Шапка.ПериодНачисления КАК ПериодНачисления,
	|	Шапка.Район КАК Район,
	|	Шапка.ЧастныйСектор КАК ЧастныйСектор,
	|	Шапка.Строение КАК Строение,
	|	Шапка.Помещение КАК Помещение,
	|	Шапка.Абонент КАК Абонент,
	|	энргОперацияСУслугамиТочкиУчета.Услуга КАК Услуга,
	|	энргОперацияСУслугамиТочкиУчета.ТочкаУчета КАК ТочкаУчета,
	|	Шапка.Дата КАК ДатаРегистратора,
	|	Шапка.Ссылка КАК ДокРегистратор,
	|	ИСТИНА КАК ЛСОткрыт,
	|	ИСТИНА КАК УслугаПодключена,
	|	ВЫБОР
	|		КОГДА энргОперацияСУслугамиТочкиУчета.ПриборУчета = ЗНАЧЕНИЕ(Справочник.энргПриборыУчетаАбонента.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПриборВведен,
	|	ВЫБОР
	|		КОГДА энргОперацияСУслугамиТочкиУчета.ПриборУчета = ЗНАЧЕНИЕ(Справочник.энргПриборыУчетаАбонента.ПустаяСсылка)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ &ПериодРегистрации
	|	КОНЕЦ КАК ДатаСостоянияПрибора,
	|	энргОперацияСУслугамиТочкиУчета.ПриборУчета КАК ПриборУчета,
	|	энргОперацияСУслугамиТочкиУчета.КоэффициентПУ КАК КоэффициентПУ,
	|	энргОперацияСУслугамиТочкиУчета.Поставщик КАК Поставщик,
	|	энргОперацияСУслугамиТочкиУчета.ЭтоСоставнаяУслуга КАК ЭтоСоставнаяУслуга,
	|	энргОперацияСУслугамиТочкиУчета.НаправлениеИспользованияТУ КАК НаправлениеИспользованияТУ,
	|	энргОперацияСУслугамиТочкиУчета.IDСтроки КАК IDСтроки,
	|	энргОперацияСУслугамиТочкиУчета.НетВозможностьУстановкиПУ КАК НетВозможностьУстановкиПУ,
	|	энргОперацияСУслугамиТочкиУчета.РассчитыватьПоДиаметруСечения КАК ИспользоватьДиаметрСечения,
	|	энргОперацияСУслугамиТочкиУчета.ДиаметрСечения КАК ДиаметрСечения,
	|	энргОперацияСУслугамиТочкиУчета.РасчетТолькоПоПоказаниям КАК РасчетТолькоПоПоказаниям
	|ПОМЕСТИТЬ ДанныеШапки
	|ИЗ
	|	Шапка КАК Шапка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргОперацияСУслугами.ТочкиУчета КАК энргОперацияСУслугамиТочкиУчета
	|		ПО Шапка.Ссылка = энргОперацияСУслугамиТочкиУчета.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеШапки.Организация КАК Организация,
	|	ДанныеШапки.ПериодНачисления КАК ПериодНачисления,
	|	ДанныеШапки.Район КАК Район,
	|	ДанныеШапки.ЧастныйСектор КАК ЧастныйСектор,
	|	ДанныеШапки.Строение КАК Строение,
	|	ДанныеШапки.Помещение КАК Помещение,
	|	ДанныеШапки.Абонент КАК Абонент,
	|	ВЫБОР
	|		КОГДА энргОперацияСУслугамиПоставщикиСоставныхУслуг.Ссылка ЕСТЬ NULL
	|			ТОГДА ДанныеШапки.Услуга
	|		ИНАЧЕ энргОперацияСУслугамиПоставщикиСоставныхУслуг.ЧастьСоставнойУслуги
	|	КОНЕЦ КАК Услуга,
	|	ВЫБОР
	|		КОГДА НЕ энргОперацияСУслугамиПоставщикиСоставныхУслуг.Ссылка ЕСТЬ NULL
	|			ТОГДА ДанныеШапки.Услуга
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|	КОНЕЦ КАК СоставнаяУслуга,
	|	ДанныеШапки.ТочкаУчета КАК ТочкаУчета,
	|	ДанныеШапки.ДатаРегистратора КАК ДатаРегистратора,
	|	ДанныеШапки.ДокРегистратор КАК ДокРегистратор,
	|	ДанныеШапки.ЛСОткрыт КАК ЛСОткрыт,
	|	ДанныеШапки.УслугаПодключена КАК УслугаПодключена,
	|	ДанныеШапки.ПриборВведен КАК ПриборВведен,
	|	ДанныеШапки.ПриборУчета КАК ПриборУчета,
	|	ДанныеШапки.ДатаСостоянияПрибора КАК ДатаСостоянияПрибора,
	|	ДанныеШапки.КоэффициентПУ КАК КоэффициентПУ,
	|	ДанныеШапки.ЭтоСоставнаяУслуга КАК ЭтоСоставнаяУслуга,
	|	ДанныеШапки.НаправлениеИспользованияТУ КАК НаправлениеИспользованияТУ,
	|	ДанныеШапки.IDСтроки КАК IDСтроки,
	|	ДанныеШапки.НетВозможностьУстановкиПУ КАК НетВозможностьУстановкиПУ,
	|	ВЫБОР
	|		КОГДА энргОперацияСУслугамиПоставщикиСоставныхУслуг.Ссылка ЕСТЬ NULL
	|			ТОГДА ДанныеШапки.Поставщик
	|		ИНАЧЕ энргОперацияСУслугамиПоставщикиСоставныхУслуг.Поставщик
	|	КОНЕЦ КАК Поставщик,
	|	ДанныеШапки.ИспользоватьДиаметрСечения КАК ИспользоватьДиаметрСечения,
	|	ДанныеШапки.ДиаметрСечения КАК ДиаметрСечения,
	|	ДанныеШапки.РасчетТолькоПоПоказаниям КАК РасчетТолькоПоПоказаниям
	|ПОМЕСТИТЬ ДанныеШапкиСоставныеУслуги
	|ИЗ
	|	ДанныеШапки КАК ДанныеШапки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.энргОперацияСУслугами.ПоставщикиСоставныхУслуг КАК энргОперацияСУслугамиПоставщикиСоставныхУслуг
	|		ПО ДанныеШапки.ДокРегистратор = энргОперацияСУслугамиПоставщикиСоставныхУслуг.Ссылка
	|			И (ДанныеШапки.ЭтоСоставнаяУслуга)
	|			И ДанныеШапки.IDСтроки = энргОперацияСУслугамиПоставщикиСоставныхУслуг.IDСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеШапкиСоставныеУслуги.Организация КАК Организация,
	|	ДанныеШапкиСоставныеУслуги.ПериодНачисления КАК ПериодНачисления,
	|	ДанныеШапкиСоставныеУслуги.Район КАК Район,
	|	ДанныеШапкиСоставныеУслуги.ЧастныйСектор КАК ЧастныйСектор,
	|	ДанныеШапкиСоставныеУслуги.Строение КАК Строение,
	|	ДанныеШапкиСоставныеУслуги.Помещение КАК Помещение,
	|	ДанныеШапкиСоставныеУслуги.Абонент КАК Абонент,
	|	ДанныеШапкиСоставныеУслуги.Услуга КАК Услуга,
	|	ДанныеШапкиСоставныеУслуги.ТочкаУчета КАК ТочкаУчета,
	|	0 КАК НомерПозиции,
	|	&ПериодРегистрации КАК ПериодРегистрации,
	|	ДанныеШапкиСоставныеУслуги.ДатаРегистратора КАК ДатаРегистратора,
	|	ДанныеШапкиСоставныеУслуги.ДокРегистратор КАК ДокРегистратор,
	|	ДанныеШапкиСоставныеУслуги.ЛСОткрыт КАК ЛСОткрыт,
	|	ДанныеШапкиСоставныеУслуги.УслугаПодключена КАК УслугаПодключена,
	|	ДанныеШапкиСоставныеУслуги.ПриборВведен КАК ПриборВведен,
	|	ДанныеШапкиСоставныеУслуги.ПриборУчета КАК ПриборУчета,
	|	ДанныеШапкиСоставныеУслуги.ДатаСостоянияПрибора КАК ДатаСостоянияПрибора,
	|	ДанныеШапкиСоставныеУслуги.НаправлениеИспользованияТУ КАК НаправлениеИспользованияТУ,
	|	&КоличествоПроживающих КАК КоличествоПроживающих,
	|	&КоличествоПрописанных КАК КоличествоПрописанных,
	|	&КоличествоСобственников КАК КоличествоСобственников,
	|	&КоличествоКомнат КАК КоличествоКомнат,
	|	ДанныеШапкиСоставныеУслуги.КоэффициентПУ КАК КоэффициентПУ,
	|	энргОперацияСУслугамиВидыБлагоустройстваТарифныеКатегории.ВидБлагоустройстваИндивидуальный КАК ВидБлагоустройства,
	|	ЕСТЬNULL(энргОперацияСУслугамиВидыБлагоустройстваТарифныеКатегории.ТарифнаяКатегория, ЗНАЧЕНИЕ(Справочник.энргГруппыПотребителей.ПустаяСсылка)) КАК ТарифнаяГруппа,
	|	ДанныеШапкиСоставныеУслуги.Поставщик КАК Поставщик,
	|	ДанныеШапкиСоставныеУслуги.НетВозможностьУстановкиПУ КАК НетВозможностьУстановкиПУ,
	|	ВЫБОР
	|		КОГДА энргВидыУслуг.Ссылка ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.энргВидыПлощадей.ОбщаяПлощадь)
	|		КОГДА энргВидыУслуг.ВидПлощади = ЗНАЧЕНИЕ(Перечисление.энргВидыПлощадей.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.энргВидыПлощадей.ОбщаяПлощадь)
	|		ИНАЧЕ энргВидыУслуг.ВидПлощади
	|	КОНЕЦ КАК ВидПлощади,
	|	ДанныеШапкиСоставныеУслуги.СоставнаяУслуга КАК СоставнаяУслуга,
	|	ДанныеШапкиСоставныеУслуги.ИспользоватьДиаметрСечения КАК ИспользоватьДиаметрСечения,
	|	ДанныеШапкиСоставныеУслуги.ДиаметрСечения КАК ДиаметрСечения,
	|	ДанныеШапкиСоставныеУслуги.РасчетТолькоПоПоказаниям КАК РасчетТолькоПоПоказаниям
	|ПОМЕСТИТЬ ОбщиеДанные
	|ИЗ
	|	ДанныеШапкиСоставныеУслуги КАК ДанныеШапкиСоставныеУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.энргОперацияСУслугами.ВидыБлагоустройстваТарифныеКатегории КАК энргОперацияСУслугамиВидыБлагоустройстваТарифныеКатегории
	|		ПО ДанныеШапкиСоставныеУслуги.ДокРегистратор = энргОперацияСУслугамиВидыБлагоустройстваТарифныеКатегории.Ссылка
	|			И ДанныеШапкиСоставныеУслуги.Услуга = энргОперацияСУслугамиВидыБлагоустройстваТарифныеКатегории.Услуга
	|			И (энргОперацияСУслугамиВидыБлагоустройстваТарифныеКатегории.Ссылка = &Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргВидыУслуг КАК энргВидыУслуг
	|		ПО ДанныеШапкиСоставныеУслуги.Услуга = энргВидыУслуг.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбщиеДанные.Организация КАК Организация,
	|	ОбщиеДанные.ПериодНачисления КАК ПериодНачисления,
	|	ОбщиеДанные.Район КАК Район,
	|	ОбщиеДанные.ЧастныйСектор КАК ЧастныйСектор,
	|	ОбщиеДанные.Строение КАК Строение,
	|	ОбщиеДанные.Помещение КАК Помещение,
	|	ОбщиеДанные.Абонент КАК Абонент,
	|	ОбщиеДанные.Услуга КАК Услуга,
	|	ОбщиеДанные.ТочкаУчета КАК ТочкаУчета,
	|	ОбщиеДанные.НомерПозиции КАК НомерПозиции,
	|	ОбщиеДанные.ПериодРегистрации КАК ПериодРегистрации,
	|	ОбщиеДанные.ДатаРегистратора КАК ДатаРегистратора,
	|	ОбщиеДанные.ДокРегистратор КАК ДокРегистратор,
	|	ОбщиеДанные.ЛСОткрыт КАК ЛСОткрыт,
	|	ОбщиеДанные.УслугаПодключена КАК УслугаПодключена,
	|	ОбщиеДанные.ПриборВведен КАК ПриборВведен,
	|	ОбщиеДанные.ПриборУчета КАК ПриборУчета,
	|	ОбщиеДанные.ДатаСостоянияПрибора КАК ДатаСостоянияПрибора,
	|	ОбщиеДанные.НаправлениеИспользованияТУ КАК НаправлениеИспользованияТУ,
	|	ОбщиеДанные.КоличествоПроживающих КАК КоличествоПроживающих,
	|	ОбщиеДанные.КоличествоПрописанных КАК КоличествоПрописанных,
	|	ОбщиеДанные.КоличествоСобственников КАК КоличествоСобственников,
	|	ОбщиеДанные.КоличествоКомнат КАК КоличествоКомнат,
	|	ЕСТЬNULL(ЗначениеПлощадей.Площадь, 0) КАК ЗначениеПлощади,
	|	ОбщиеДанные.КоэффициентПУ КАК КоэффициентПУ,
	|	ОбщиеДанные.ВидБлагоустройства КАК ВидБлагоустройства,
	|	ОбщиеДанные.ТарифнаяГруппа КАК ТарифнаяГруппа,
	|	ОбщиеДанные.Поставщик КАК Поставщик,
	|	ИСТИНА КАК МенялосьСостояниеПУ,
	|	ИСТИНА КАК МенялосьСостояниеФормулы,
	|	ОбщиеДанные.СоставнаяУслуга КАК СоставнаяУслуга,
	|	0 КАК КоличествоЭтажей,
	|	0 КАК ГодПостройки,
	|	ЗНАЧЕНИЕ(Перечисление.энргТипыСобственниковЖилья.ПустаяСсылка) КАК ВидСобственности,
	|	ОбщиеДанные.ИспользоватьДиаметрСечения КАК ИспользоватьДиаметрСечения,
	|	ОбщиеДанные.ДиаметрСечения КАК ДиаметрСечения,
	|	ЕСТЬNULL(ДанныеКоличестваЖильцов.КоличествоЖильцов, 0) КАК КоличествоЖильцов,
	|	ОбщиеДанные.РасчетТолькоПоПоказаниям КАК РасчетТолькоПоПоказаниям
	|ПОМЕСТИТЬ ВсеПараметрыРасчета
	|ИЗ
	|	ОбщиеДанные КАК ОбщиеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗначениеПлощадей КАК ЗначениеПлощадей
	|		ПО ОбщиеДанные.ВидПлощади = ЗначениеПлощадей.ВидПлощади
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеКоличестваЖильцов КАК ДанныеКоличестваЖильцов
	|		ПО ОбщиеДанные.Организация = ДанныеКоличестваЖильцов.Организация
	|			И ОбщиеДанные.Район = ДанныеКоличестваЖильцов.Район
	|			И ОбщиеДанные.Строение = ДанныеКоличестваЖильцов.Строение
	|			И ОбщиеДанные.Помещение = ДанныеКоличестваЖильцов.Помещение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеШапкиСоставныеУслуги.Организация КАК Организация,
	|	ДанныеШапкиСоставныеУслуги.ПериодНачисления КАК ПериодНачисления,
	|	ДанныеШапкиСоставныеУслуги.Район КАК Район,
	|	ДанныеШапкиСоставныеУслуги.ЧастныйСектор КАК ЧастныйСектор,
	|	ДанныеШапкиСоставныеУслуги.Строение КАК Строение,
	|	ДанныеШапкиСоставныеУслуги.Помещение КАК Помещение,
	|	ДанныеШапкиСоставныеУслуги.ТочкаУчета КАК ТочкаУчета,
	|	ДанныеШапкиСоставныеУслуги.Услуга КАК Услуга,
	|	ДанныеШапкиСоставныеУслуги.НаправлениеИспользованияТУ КАК НаправлениеИспользованияТУ,
	|	энргОперацияСУслугамиЗначенияИзмерителей.НаправлениеИспользованияТУ КАК Измеритель,
	|	ДанныеШапкиСоставныеУслуги.ДатаРегистратора КАК ДатаРегистратора,
	|	ДанныеШапкиСоставныеУслуги.ДокРегистратор КАК ДокРегистратор,
	|	энргОперацияСУслугамиЗначенияИзмерителей.Значение КАК Количество
	|ПОМЕСТИТЬ ВсеПараметрыРасчетаСИзмерителями
	|ИЗ
	|	ДанныеШапкиСоставныеУслуги КАК ДанныеШапкиСоставныеУслуги
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргОперацияСУслугами.ЗначенияИзмерителей КАК энргОперацияСУслугамиЗначенияИзмерителей
	|		ПО ДанныеШапкиСоставныеУслуги.ДокРегистратор = энргОперацияСУслугамиЗначенияИзмерителей.Ссылка
	|			И ДанныеШапкиСоставныеУслуги.IDСтроки = энргОперацияСУслугамиЗначенияИзмерителей.IDСтроки";
	
	Текст  = Текст + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Текст = Текст + Справочники.энргКлючиНормативов.ТекстОпределенияКлючейНорматива();
	
	Текст  = Текст + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";

	Текст  = Текст +
	"ВЫБРАТЬ
	|	ВсеПараметрыРасчета.*,
	|	КлючиНорматива.КлючНорматива КАК КлючНорматива,
	|	КлючиНорматива.КлючСоцНорматива КАК КлючСоцНорматива
	|ИЗ
	|	ВсеПараметрыРасчета КАК ВсеПараметрыРасчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ КлючиНорматива КАК КлючиНорматива
	|		ПО ВсеПараметрыРасчета.Услуга = КлючиНорматива.Услуга
	|		И КлючиНорматива.НаправлениеИспользованияТУ = ЗНАЧЕНИЕ(Справочник.энргНаправлениеИспользованияТочекУчета.ОсновноеНаправление)";
	
	Возврат Текст;
КонецФункции

Функция ТекстЗапросаПодключениеУслугиМКД()
	
	Текст = 
	"ВЫБРАТЬ
	|	энргОперацияСУслугамиМКД.Организация КАК Организация,
	|	энргОперацияСУслугамиМКД.ПериодНачисления КАК ПериодНачисления,
	|	энргОперацияСУслугамиМКД.Район КАК Район,
	|	энргОперацияСУслугамиМКД.МКД КАК МКД,
	|	энргОперацияСУслугамиМКД.Ссылка КАК Ссылка,
	|	энргОперацияСУслугамиМКД.Дата КАК Дата
	|ПОМЕСТИТЬ Шапка
	|ИЗ
	|	Документ.энргОперацияСУслугамиМКД КАК энргОперацияСУслугамиМКД
	|ГДЕ
	|	энргОперацияСУслугамиМКД.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	энргЗначениеПлощадейМКДСрезПоследних.ВидПлощади КАК ВидПлощади,
	|	энргЗначениеПлощадейМКДСрезПоследних.Площадь КАК Площадь,
	|	энргЗначениеПлощадейМКДСрезПоследних.МКД КАК МКД
	|ПОМЕСТИТЬ ЗначениеПлощадей
	|ИЗ
	|	РегистрСведений.энргЗначениеПлощадейМКД.СрезПоследних(
	|			&МоментВремени,
	|			Организация = &Организация
	|				И МКД = &МКД
	|				И Район = &Район
	|				И ВидПлощади = ЗНАЧЕНИЕ(Перечисление.энргВидыПлощадей.ОбщаяПлощадьМКД)) КАК энргЗначениеПлощадейМКДСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	энргТипСхемыГВССрезПоследних.МКД КАК МКД,
	|	энргТипСхемыГВССрезПоследних.ТипСхемы КАК ТипСхемы,
	|	энргТипСхемыГВССрезПоследних.Организация КАК Организация
	|ПОМЕСТИТЬ ТипСхемыГВС
	|ИЗ
	|	РегистрСведений.энргТипСхемыГВС.СрезПоследних(
	|			&МоментВремени,
	|			Организация = &Организация
	|				И Район = &Район
	|				И МКД = &МКД) КАК энргТипСхемыГВССрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	энргТипПринадлежностиМКДСрезПоследних.МКД КАК МКД,
	|	энргТипПринадлежностиМКДСрезПоследних.Организация КАК Организация,
	|	энргТипПринадлежностиМКДСрезПоследних.ВидТепловогоПункта КАК ВидТепловогоПункта,
	|	энргТипПринадлежностиМКДСрезПоследних.Район КАК Район
	|ПОМЕСТИТЬ ТипПринадлежностиМКД
	|ИЗ
	|	РегистрСведений.энргТипПринадлежностиМКД.СрезПоследних(
	|			&МоментВремени,
	|			Организация = &Организация
	|				И Район = &Район
	|				И МКД = &МКД) КАК энргТипПринадлежностиМКДСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Шапка.Организация КАК Организация,
	|	Шапка.ПериодНачисления КАК ПериодНачисления,
	|	Шапка.Район КАК Район,
	|	Шапка.МКД КАК МКД,
	|	энргОперацияСУслугамиМКДТочкиУчета.Услуга КАК Услуга,
	|	энргОперацияСУслугамиМКДТочкиУчета.ТочкаУчета КАК ТочкаУчета,
	|	Шапка.Дата КАК ДатаРегистратора,
	|	Шапка.Ссылка КАК ДокРегистратор,
	|	ИСТИНА КАК МКДОткрыт,
	|	ИСТИНА КАК УслугаПодключена,
	|	ВЫБОР
	|		КОГДА энргОперацияСУслугамиМКДТочкиУчета.ПриборУчета = ЗНАЧЕНИЕ(Справочник.энргПриборыУчетаАбонента.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПриборВведен,
	|	ВЫБОР
	|		КОГДА энргОперацияСУслугамиМКДТочкиУчета.ПриборУчета = ЗНАЧЕНИЕ(Справочник.энргПриборыУчетаАбонента.ПустаяСсылка)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ &ПериодРегистрации
	|	КОНЕЦ КАК ДатаСостоянияПрибора,
	|	энргОперацияСУслугамиМКДТочкиУчета.ПриборУчета КАК ПриборУчета,
	|	энргОперацияСУслугамиМКДТочкиУчета.КоэффициентПУ КАК КоэффициентПУ,
	|	энргОперацияСУслугамиМКДТочкиУчета.Поставщик КАК Поставщик,
	|	энргОперацияСУслугамиМКДТочкиУчета.ЭтоСоставнаяУслуга КАК ЭтоСоставнаяУслуга,
	|	энргОперацияСУслугамиМКДТочкиУчета.IDСтроки КАК IDСтроки,
	|	энргОперацияСУслугамиМКДТочкиУчета.РаспределятьНаАбонентов КАК РаспределятьНаАбонентов
	|ПОМЕСТИТЬ ДанныеШапки
	|ИЗ
	|	Шапка КАК Шапка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.энргОперацияСУслугамиМКД.ТочкиУчета КАК энргОперацияСУслугамиМКДТочкиУчета
	|		ПО Шапка.Ссылка = энргОперацияСУслугамиМКДТочкиУчета.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеШапки.Организация КАК Организация,
	|	ДанныеШапки.ПериодНачисления КАК ПериодНачисления,
	|	ДанныеШапки.Район КАК Район,
	|	ДанныеШапки.МКД КАК МКД,
	|	ВЫБОР
	|		КОГДА энргОперацияСУслугамиМКДПоставщикиСоставныхУслуг.Ссылка ЕСТЬ NULL
	|			ТОГДА ДанныеШапки.Услуга
	|		ИНАЧЕ энргОперацияСУслугамиМКДПоставщикиСоставныхУслуг.ЧастьСоставнойУслуги
	|	КОНЕЦ КАК Услуга,
	|	ДанныеШапки.ТочкаУчета КАК ТочкаУчета,
	|	ДанныеШапки.ДатаРегистратора КАК ДатаРегистратора,
	|	ДанныеШапки.ДокРегистратор КАК ДокРегистратор,
	|	ДанныеШапки.МКДОткрыт КАК МКДОткрыт,
	|	ДанныеШапки.УслугаПодключена КАК УслугаПодключена,
	|	ДанныеШапки.ПриборВведен КАК ПриборВведен,
	|	ДанныеШапки.ПриборУчета КАК ПриборУчета,
	|	ДанныеШапки.ДатаСостоянияПрибора КАК ДатаСостоянияПрибора,
	|	ДанныеШапки.КоэффициентПУ КАК КоэффициентПУ,
	|	ДанныеШапки.ЭтоСоставнаяУслуга КАК ЭтоСоставнаяУслуга,
	|	ДанныеШапки.IDСтроки КАК IDСтроки,
	|	ВЫБОР
	|		КОГДА энргОперацияСУслугамиМКДПоставщикиСоставныхУслуг.Ссылка ЕСТЬ NULL
	|			ТОГДА ДанныеШапки.Поставщик
	|		ИНАЧЕ энргОперацияСУслугамиМКДПоставщикиСоставныхУслуг.Поставщик
	|	КОНЕЦ КАК Поставщик,
	|	ВЫБОР
	|		КОГДА энргОперацияСУслугамиМКДПоставщикиСоставныхУслуг.Ссылка ЕСТЬ NULL
	|			ТОГДА НЕ ДанныеШапки.РаспределятьНаАбонентов
	|		ИНАЧЕ НЕ энргОперацияСУслугамиМКДПоставщикиСоставныхУслуг.РаспределятьНаАбонентов
	|	КОНЕЦ КАК НеРаспределятьНаАбонентов
	|ПОМЕСТИТЬ ДанныеШапкиСоставныеУслуги
	|ИЗ
	|	ДанныеШапки КАК ДанныеШапки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.энргОперацияСУслугамиМКД.ПоставщикиСоставныхУслуг КАК энргОперацияСУслугамиМКДПоставщикиСоставныхУслуг
	|		ПО ДанныеШапки.ДокРегистратор = энргОперацияСУслугамиМКДПоставщикиСоставныхУслуг.Ссылка
	|			И (ДанныеШапки.ЭтоСоставнаяУслуга)
	|			И ДанныеШапки.IDСтроки = энргОперацияСУслугамиМКДПоставщикиСоставныхУслуг.IDСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеШапкиСоставныеУслуги.Организация КАК Организация,
	|	ДанныеШапкиСоставныеУслуги.ПериодНачисления КАК ПериодНачисления,
	|	ДанныеШапкиСоставныеУслуги.Район КАК Район,
	|	ДанныеШапкиСоставныеУслуги.МКД КАК МКД,
	|	ДанныеШапкиСоставныеУслуги.Услуга КАК Услуга,
	|	ДанныеШапкиСоставныеУслуги.ТочкаУчета КАК ТочкаУчета,
	|	0 КАК НомерПозиции,
	|	&ПериодРегистрации КАК ПериодРегистрации,
	|	ДанныеШапкиСоставныеУслуги.ДатаРегистратора КАК ДатаРегистратора,
	|	ДанныеШапкиСоставныеУслуги.ДокРегистратор КАК ДокРегистратор,
	|	ДанныеШапкиСоставныеУслуги.МКДОткрыт КАК МКДОткрыт,
	|	ДанныеШапкиСоставныеУслуги.УслугаПодключена КАК УслугаПодключена,
	|	ДанныеШапкиСоставныеУслуги.ПриборВведен КАК ПриборВведен,
	|	ДанныеШапкиСоставныеУслуги.ПриборУчета КАК ПриборУчета,
	|	ДанныеШапкиСоставныеУслуги.ДатаСостоянияПрибора КАК ДатаСостоянияПрибора,
	|	ДанныеШапкиСоставныеУслуги.КоэффициентПУ КАК КоэффициентПУ,
	|	ДанныеШапкиСоставныеУслуги.Поставщик КАК Поставщик,
	|	ЗНАЧЕНИЕ(Перечисление.энргВидыПлощадей.ОбщаяПлощадьМКД) КАК ВидПлощади,
	|	ДанныеШапкиСоставныеУслуги.НеРаспределятьНаАбонентов КАК НеРаспределятьНаАбонентов,
	|	ДанныеШапкиСоставныеУслуги.IDСтроки КАК IDСтроки
	|ПОМЕСТИТЬ ОбщиеДанные
	|ИЗ
	|	ДанныеШапкиСоставныеУслуги КАК ДанныеШапкиСоставныеУслуги
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ПериодНачисления КАК ПериодНачисления,
	|	ВложенныйЗапрос.Район КАК Район,
	|	ВложенныйЗапрос.МКД КАК МКД,
	|	ВложенныйЗапрос.Услуга КАК Услуга,
	|	ВложенныйЗапрос.ТочкаУчета КАК ТочкаУчета,
	|	ВложенныйЗапрос.НомерПозиции КАК НомерПозиции,
	|	ВложенныйЗапрос.ПериодРегистрации КАК ПериодРегистрации,
	|	ВложенныйЗапрос.ДатаРегистратора КАК ДатаРегистратора,
	|	ВложенныйЗапрос.ДокРегистратор КАК ДокРегистратор,
	|	ВложенныйЗапрос.МКДОткрыт КАК МКДОткрыт,
	|	ВложенныйЗапрос.УслугаПодключена КАК УслугаПодключена,
	|	ВложенныйЗапрос.ПриборВведен КАК ПриборВведен,
	|	ВложенныйЗапрос.ПриборУчета КАК ПриборУчета,
	|	ВложенныйЗапрос.ДатаСостоянияПрибора КАК ДатаСостоянияПрибора,
	|	ЕСТЬNULL(ЗначениеПлощадей.Площадь, 0) КАК ЗначениеПлощади,
	|	ВложенныйЗапрос.КоэффициентПУ КАК КоэффициентПУ,
	|	ВложенныйЗапрос.ВидБлагоустройства КАК ВидБлагоустройства,
	|	ВложенныйЗапрос.Поставщик КАК Поставщик,
	|	ИСТИНА КАК МенялосьСостояниеПУ,
	|	ИСТИНА КАК МенялосьСостояниеФормулы,
	|	ВложенныйЗапрос.НеРаспределятьНаАбонентов КАК НеРаспределятьНаАбонентов,
	|	ЗНАЧЕНИЕ(Перечисление.энргТипыСобственниковЖилья.ПустаяСсылка) КАК ВидСобственности,
	|	энргСтроения.ГодПостройки КАК ГодПостройки,
	|	0 КАК КоличествоКомнат,
	|	0 КАК КоличествоПрописанных,
	|	0 КАК КоличествоСобственников,
	|	0 КАК КоличествоПроживающих,
	|	ВложенныйЗапрос.ВидПлощади КАК ВидПлощади,
	|	ВложенныйЗапрос.РасчетПоФормуле КАК РасчетПоФормуле,
	|	ВложенныйЗапрос.ФормулаРасчета КАК ФормулаРасчета,
	|	ВложенныйЗапрос.Шкала КАК Шкала,
	|	ВложенныйЗапрос.НаправлениеИспользованияТУ КАК НаправлениеИспользованияТУ,
	|	энргСтроения.Этажность КАК КоличествоЭтажей,
	|	ВложенныйЗапрос.ТипСхемы КАК ТипСхемы,
	|	ВложенныйЗапрос.ВидТепловогоПункта КАК ВидТепловогоПункта
	|ПОМЕСТИТЬ ВсеПараметрыРасчета
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОбщиеДанные.Организация КАК Организация,
	|		ОбщиеДанные.ПериодНачисления КАК ПериодНачисления,
	|		ОбщиеДанные.Район КАК Район,
	|		ОбщиеДанные.МКД КАК МКД,
	|		ОбщиеДанные.Услуга КАК Услуга,
	|		ОбщиеДанные.ТочкаУчета КАК ТочкаУчета,
	|		ОбщиеДанные.НомерПозиции КАК НомерПозиции,
	|		ОбщиеДанные.ПериодРегистрации КАК ПериодРегистрации,
	|		ОбщиеДанные.ДатаРегистратора КАК ДатаРегистратора,
	|		ОбщиеДанные.ДокРегистратор КАК ДокРегистратор,
	|		ОбщиеДанные.МКДОткрыт КАК МКДОткрыт,
	|		ОбщиеДанные.УслугаПодключена КАК УслугаПодключена,
	|		ОбщиеДанные.ПриборВведен КАК ПриборВведен,
	|		ОбщиеДанные.ПриборУчета КАК ПриборУчета,
	|		ОбщиеДанные.ДатаСостоянияПрибора КАК ДатаСостоянияПрибора,
	|		ОбщиеДанные.КоэффициентПУ КАК КоэффициентПУ,
	|		ОбщиеДанные.Поставщик КАК Поставщик,
	|		ОбщиеДанные.ВидПлощади КАК ВидПлощади,
	|		ОбщиеДанные.НеРаспределятьНаАбонентов КАК НеРаспределятьНаАбонентов,
	|		ВЫБОР
	|			КОГДА энргОперацияСУслугамиМКДФормулыРасчетаУслуг.Ссылка ЕСТЬ NULL
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ КАК РасчетПоФормуле,
	|		ЕСТЬNULL(энргОперацияСУслугамиМКДФормулыРасчетаУслуг.ФормулаРасчета, """") КАК ФормулаРасчета,
	|		ЕСТЬNULL(энргОперацияСУслугамиМКДШкалыУслуг.Шкала, ЗНАЧЕНИЕ(Справочник.энргШкалыПриборовУчета.ПустаяСсылка)) КАК Шкала,
	|		ЗНАЧЕНИЕ(Справочник.энргНаправлениеИспользованияТочекУчета.ОсновноеНаправление) КАК НаправлениеИспользованияТУ,
	|		энргОперацияСУслугамиМКДВидыБлагоустройстваТарифныеКатегории.ВидБлагоустройстваОбщедомовой КАК ВидБлагоустройства,
	|		ТипСхемыГВС.ТипСхемы КАК ТипСхемы,
	|		ТипПринадлежностиМКД.ВидТепловогоПункта КАК ВидТепловогоПункта
	|	ИЗ
	|		ОбщиеДанные КАК ОбщиеДанные
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.энргОперацияСУслугамиМКД.ФормулыРасчетаУслуг КАК энргОперацияСУслугамиМКДФормулыРасчетаУслуг
	|			ПО ОбщиеДанные.ДокРегистратор = энргОперацияСУслугамиМКДФормулыРасчетаУслуг.Ссылка
	|				И ОбщиеДанные.Услуга = энргОперацияСУслугамиМКДФормулыРасчетаУслуг.Услуга
	|				И (энргОперацияСУслугамиМКДФормулыРасчетаУслуг.Ссылка = &Ссылка)
	|				И ОбщиеДанные.IDСтроки = энргОперацияСУслугамиМКДФормулыРасчетаУслуг.IDСтроки
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.энргОперацияСУслугамиМКД.ШкалыУслуг КАК энргОперацияСУслугамиМКДШкалыУслуг
	|			ПО ОбщиеДанные.ДокРегистратор = энргОперацияСУслугамиМКДШкалыУслуг.Ссылка
	|				И ОбщиеДанные.Услуга = энргОперацияСУслугамиМКДШкалыУслуг.Услуга
	|				И (энргОперацияСУслугамиМКДШкалыУслуг.Ссылка = &Ссылка)
	|				И ОбщиеДанные.IDСтроки = энргОперацияСУслугамиМКДШкалыУслуг.IDСтроки
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.энргОперацияСУслугамиМКД.ВидыБлагоустройстваТарифныеКатегории КАК энргОперацияСУслугамиМКДВидыБлагоустройстваТарифныеКатегории
	|			ПО ОбщиеДанные.ДокРегистратор = энргОперацияСУслугамиМКДВидыБлагоустройстваТарифныеКатегории.Ссылка
	|				И ОбщиеДанные.Услуга = энргОперацияСУслугамиМКДВидыБлагоустройстваТарифныеКатегории.Услуга
	|				И (энргОперацияСУслугамиМКДВидыБлагоустройстваТарифныеКатегории.Ссылка = &Ссылка)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ТипСхемыГВС КАК ТипСхемыГВС
	|			ПО ОбщиеДанные.МКД = ТипСхемыГВС.МКД
	|			ЛЕВОЕ СОЕДИНЕНИЕ ТипПринадлежностиМКД КАК ТипПринадлежностиМКД
	|			ПО ОбщиеДанные.МКД = ТипПринадлежностиМКД.МКД) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗначениеПлощадей КАК ЗначениеПлощадей
	|		ПО ВложенныйЗапрос.ВидПлощади = ЗначениеПлощадей.ВидПлощади
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.энргСтроения КАК энргСтроения
	|		ПО ВложенныйЗапрос.МКД = энргСтроения.Ссылка";
	
	Текст  = Текст + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Текст = Текст + Справочники.энргКлючиНормативов.ТекстОпределенияКлючейНормативаМКД();
	
	Текст  = Текст + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Текст  = Текст +
	"ВЫБРАТЬ
	|	ВсеПараметрыРасчета.*,
	|	КлючиНорматива.КлючНорматива КАК КлючНорматива
	|ИЗ
	|	ВсеПараметрыРасчета КАК ВсеПараметрыРасчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ КлючиНорматива КАК КлючиНорматива
	|		ПО (ВсеПараметрыРасчета.Услуга = КлючиНорматива.Услуга)
	|		И КлючиНорматива.НаправлениеИспользованияТУ = ЗНАЧЕНИЕ(Справочник.энргНаправлениеИспользованияТочекУчета.ОсновноеНаправление)";
	
	Возврат Текст;

КонецФункции

Функция ПолучитьПоследниеСтабильныеПериодыШкалы(ИмяТаблицы)
	
	Текст 												= 
	"ВЫБРАТЬ
	|	энргСтабильныеПериодыШкалы.Организация КАК Организация,
	|	энргСтабильныеПериодыШкалы.ПериодНачисления КАК ПериодНачисления,
	|	энргСтабильныеПериодыШкалы.Район КАК Район,
	|	энргСтабильныеПериодыШкалы.ЧастныйСектор КАК ЧастныйСектор,
	|	энргСтабильныеПериодыШкалы.Строение КАК Строение,
	|	энргСтабильныеПериодыШкалы.Помещение КАК Помещение,
	|	энргСтабильныеПериодыШкалы.ТочкаУчета КАК ТочкаУчета,
	|	энргСтабильныеПериодыШкалы.НомерПозиции КАК НомерПозиции,
	|	энргСтабильныеПериодыШкалы.Шкала КАК Шкала,
	|	энргСтабильныеПериодыШкалы.ВидДифференцированности КАК ВидДифференцированности,
	|	ДанныеВременнойТаблицы.Ссылка КАК ДокРегистратор,
	|	ДанныеВременнойТаблицы.Дата КАК ДатаРегистратора
	|ПОМЕСТИТЬ ДанныеСтабильныхПериодовШкал
	|ИЗ" + Символы.ПС + 
			ИмяТаблицы + " КАК ДанныеВременнойТаблицы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.энргСтабильныеПериодыШкалы КАК энргСтабильныеПериодыШкалы
	|		ПО ДанныеВременнойТаблицы.Организация = энргСтабильныеПериодыШкалы.Организация
	|			И ДанныеВременнойТаблицы.ПериодНачисления = энргСтабильныеПериодыШкалы.ПериодНачисления
	|			И ДанныеВременнойТаблицы.Район = энргСтабильныеПериодыШкалы.Район
	|			И ДанныеВременнойТаблицы.ЧастныйСектор = энргСтабильныеПериодыШкалы.ЧастныйСектор
	|			И ДанныеВременнойТаблицы.Строение = энргСтабильныеПериодыШкалы.Строение
	|			И ДанныеВременнойТаблицы.Помещение = энргСтабильныеПериодыШкалы.Помещение
	|			И ДанныеВременнойТаблицы.ТочкаУчета = энргСтабильныеПериодыШкалы.ТочкаУчета
	|			И (энргСтабильныеПериодыШкалы.Организация = &Организация)
	|			И (энргСтабильныеПериодыШкалы.ПериодНачисления = &ПериодНачисления)
	|			И (энргСтабильныеПериодыШкалы.Район = &Район)
	|			И (энргСтабильныеПериодыШкалы.ЧастныйСектор = &ЧастныйСектор)
	|			И (энргСтабильныеПериодыШкалы.Строение = &Строение)
	|			И (энргСтабильныеПериодыШкалы.Помещение = &Помещение)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеСтабильныхПериодовШкал.Организация КАК Организация,
	|	ДанныеСтабильныхПериодовШкал.ПериодНачисления КАК ПериодНачисления,
	|	ДанныеСтабильныхПериодовШкал.Район КАК Район,
	|	ДанныеСтабильныхПериодовШкал.ЧастныйСектор КАК ЧастныйСектор,
	|	ДанныеСтабильныхПериодовШкал.Строение КАК Строение,
	|	ДанныеСтабильныхПериодовШкал.Помещение КАК Помещение,
	|	ДанныеСтабильныхПериодовШкал.ТочкаУчета КАК ТочкаУчета,
	|	ДанныеСтабильныхПериодовШкал.НомерПозиции + 1 КАК НомерПозиции,
	|	ДанныеСтабильныхПериодовШкал.Шкала КАК Шкала,
	|	ДанныеСтабильныхПериодовШкал.ВидДифференцированности КАК ВидДифференцированности,
	|	ДанныеСтабильныхПериодовШкал.ДатаРегистратора КАК ДатаРегистратора,
	|	ДанныеСтабильныхПериодовШкал.ДокРегистратор КАК ДокРегистратор
	|ИЗ
	|	ДанныеСтабильныхПериодовШкал КАК ДанныеСтабильныхПериодовШкал
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ДанныеСтабильныхПериодовШкал.Организация КАК Организация,
	|			ДанныеСтабильныхПериодовШкал.ПериодНачисления КАК ПериодНачисления,
	|			ДанныеСтабильныхПериодовШкал.Район КАК Район,
	|			ДанныеСтабильныхПериодовШкал.ЧастныйСектор КАК ЧастныйСектор,
	|			ДанныеСтабильныхПериодовШкал.Строение КАК Строение,
	|			ДанныеСтабильныхПериодовШкал.Помещение КАК Помещение,
	|			ДанныеСтабильныхПериодовШкал.ТочкаУчета КАК ТочкаУчета,
	|			МАКСИМУМ(ДанныеСтабильныхПериодовШкал.НомерПозиции) КАК НомерПозиции
	|		ИЗ
	|			ДанныеСтабильныхПериодовШкал КАК ДанныеСтабильныхПериодовШкал
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ДанныеСтабильныхПериодовШкал.Организация,
	|			ДанныеСтабильныхПериодовШкал.ПериодНачисления,
	|			ДанныеСтабильныхПериодовШкал.Район,
	|			ДанныеСтабильныхПериодовШкал.ЧастныйСектор,
	|			ДанныеСтабильныхПериодовШкал.Строение,
	|			ДанныеСтабильныхПериодовШкал.Помещение,
	|			ДанныеСтабильныхПериодовШкал.ТочкаУчета) КАК ВложенныйЗапрос
	|		ПО ДанныеСтабильныхПериодовШкал.Организация = ВложенныйЗапрос.Организация
	|			И ДанныеСтабильныхПериодовШкал.ПериодНачисления = ВложенныйЗапрос.ПериодНачисления
	|			И ДанныеСтабильныхПериодовШкал.Район = ВложенныйЗапрос.Район
	|			И ДанныеСтабильныхПериодовШкал.ЧастныйСектор = ВложенныйЗапрос.ЧастныйСектор
	|			И ДанныеСтабильныхПериодовШкал.Строение = ВложенныйЗапрос.Строение
	|			И ДанныеСтабильныхПериодовШкал.Помещение = ВложенныйЗапрос.Помещение
	|			И ДанныеСтабильныхПериодовШкал.ТочкаУчета = ВложенныйЗапрос.ТочкаУчета
	|			И ДанныеСтабильныхПериодовШкал.НомерПозиции = ВложенныйЗапрос.НомерПозиции";
	
	Возврат Текст;
	
КонецФункции

Функция ПолучитьПоследниеСтабильныеПериодыИзмерителиНаправлений(ИмяТаблицы)
	
	Текст 												= 
	"ВЫБРАТЬ
	|	энргСтабильныеПериодыИзмерителиНаправлений.Организация КАК Организация,
	|	энргСтабильныеПериодыИзмерителиНаправлений.ПериодНачисления КАК ПериодНачисления,
	|	энргСтабильныеПериодыИзмерителиНаправлений.Район КАК Район,
	|	энргСтабильныеПериодыИзмерителиНаправлений.ЧастныйСектор КАК ЧастныйСектор,
	|	энргСтабильныеПериодыИзмерителиНаправлений.Строение КАК Строение,
	|	энргСтабильныеПериодыИзмерителиНаправлений.Помещение КАК Помещение,
	|	энргСтабильныеПериодыИзмерителиНаправлений.Услуга КАК Услуга,
	|	энргСтабильныеПериодыИзмерителиНаправлений.ТочкаУчета КАК ТочкаУчета,
	|	энргСтабильныеПериодыИзмерителиНаправлений.НомерПозиции КАК НомерПозиции,
	|	энргСтабильныеПериодыИзмерителиНаправлений.Измеритель КАК Измеритель,
	|	энргСтабильныеПериодыИзмерителиНаправлений.Количество КАК Количество,
	|	энргСтабильныеПериодыИзмерителиНаправлений.КлючНорматива КАК КлючНорматива,
	|	ДанныеВременнойТаблицы.Ссылка КАК ДокРегистратор,
	|	ДанныеВременнойТаблицы.Дата КАК ДатаРегистратора
	|ПОМЕСТИТЬ ДанныеСтабильныхПериодов
	|ИЗ" + Символы.ПС + 
			ИмяТаблицы + " КАК ДанныеВременнойТаблицы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.энргСтабильныеПериодыИзмерителиНаправлений КАК энргСтабильныеПериодыИзмерителиНаправлений
	|		ПО ДанныеВременнойТаблицы.Организация = энргСтабильныеПериодыИзмерителиНаправлений.Организация
	|			И ДанныеВременнойТаблицы.ПериодНачисления = энргСтабильныеПериодыИзмерителиНаправлений.ПериодНачисления
	|			И ДанныеВременнойТаблицы.Район = энргСтабильныеПериодыИзмерителиНаправлений.Район
	|			И ДанныеВременнойТаблицы.ЧастныйСектор = энргСтабильныеПериодыИзмерителиНаправлений.ЧастныйСектор
	|			И ДанныеВременнойТаблицы.Строение = энргСтабильныеПериодыИзмерителиНаправлений.Строение
	|			И ДанныеВременнойТаблицы.Помещение = энргСтабильныеПериодыИзмерителиНаправлений.Помещение
	|			И ДанныеВременнойТаблицы.ТочкаУчета = энргСтабильныеПериодыИзмерителиНаправлений.ТочкаУчета
	|			И (энргСтабильныеПериодыИзмерителиНаправлений.Организация = &Организация)
	|			И (энргСтабильныеПериодыИзмерителиНаправлений.ПериодНачисления = &ПериодНачисления)
	|			И (энргСтабильныеПериодыИзмерителиНаправлений.Район = &Район)
	|			И (энргСтабильныеПериодыИзмерителиНаправлений.ЧастныйСектор = &ЧастныйСектор)
	|			И (энргСтабильныеПериодыИзмерителиНаправлений.Строение = &Строение)
	|			И (энргСтабильныеПериодыИзмерителиНаправлений.Помещение = &Помещение)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеСтабильныхПериодов.Организация КАК Организация,
	|	ДанныеСтабильныхПериодов.ПериодНачисления КАК ПериодНачисления,
	|	ДанныеСтабильныхПериодов.Район КАК Район,
	|	ДанныеСтабильныхПериодов.ЧастныйСектор КАК ЧастныйСектор,
	|	ДанныеСтабильныхПериодов.Строение КАК Строение,
	|	ДанныеСтабильныхПериодов.Помещение КАК Помещение,
	|	ДанныеСтабильныхПериодов.Услуга КАК Услуга,
	|	ДанныеСтабильныхПериодов.ТочкаУчета КАК ТочкаУчета,
	|	ДанныеСтабильныхПериодов.НомерПозиции + 1 КАК НомерПозиции,
	|	ДанныеСтабильныхПериодов.Измеритель КАК Измеритель,
	|	ДанныеСтабильныхПериодов.ДатаРегистратора КАК ДатаРегистратора,
	|	ДанныеСтабильныхПериодов.ДокРегистратор КАК ДокРегистратор,
	|	ДанныеСтабильныхПериодов.Количество КАК Количество,
	|	ДанныеСтабильныхПериодов.КлючНорматива КАК КлючНорматива
	|ИЗ
	|	ДанныеСтабильныхПериодов КАК ДанныеСтабильныхПериодов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ДанныеСтабильныхПериодов.Организация КАК Организация,
	|			ДанныеСтабильныхПериодов.ПериодНачисления КАК ПериодНачисления,
	|			ДанныеСтабильныхПериодов.Район КАК Район,
	|			ДанныеСтабильныхПериодов.ЧастныйСектор КАК ЧастныйСектор,
	|			ДанныеСтабильныхПериодов.Строение КАК Строение,
	|			ДанныеСтабильныхПериодов.Помещение КАК Помещение,
	|			ДанныеСтабильныхПериодов.ТочкаУчета КАК ТочкаУчета,
	|			МАКСИМУМ(ДанныеСтабильныхПериодов.НомерПозиции) КАК НомерПозиции
	|		ИЗ
	|			ДанныеСтабильныхПериодов КАК ДанныеСтабильныхПериодов
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ДанныеСтабильныхПериодов.Организация,
	|			ДанныеСтабильныхПериодов.ПериодНачисления,
	|			ДанныеСтабильныхПериодов.Район,
	|			ДанныеСтабильныхПериодов.ЧастныйСектор,
	|			ДанныеСтабильныхПериодов.Строение,
	|			ДанныеСтабильныхПериодов.Помещение,
	|			ДанныеСтабильныхПериодов.ТочкаУчета) КАК ВложенныйЗапрос
	|		ПО ДанныеСтабильныхПериодов.Организация = ВложенныйЗапрос.Организация
	|			И ДанныеСтабильныхПериодов.ПериодНачисления = ВложенныйЗапрос.ПериодНачисления
	|			И ДанныеСтабильныхПериодов.Район = ВложенныйЗапрос.Район
	|			И ДанныеСтабильныхПериодов.ЧастныйСектор = ВложенныйЗапрос.ЧастныйСектор
	|			И ДанныеСтабильныхПериодов.Строение = ВложенныйЗапрос.Строение
	|			И ДанныеСтабильныхПериодов.Помещение = ВложенныйЗапрос.Помещение
	|			И ДанныеСтабильныхПериодов.ТочкаУчета = ВложенныйЗапрос.ТочкаУчета
	|			И ДанныеСтабильныхПериодов.НомерПозиции = ВложенныйЗапрос.НомерПозиции";
	
	Возврат Текст;
	
КонецФункции

#КонецОбласти

#Область ОсновныеПроцедурыРаботыСПериодомДействия

Процедура ЗаполнитьНомераПозиций(МВТ,Параметры,ИмяТаблицы,Увеличивать = ложь)
	СоотвествиеПолей 	= СоотвествиеПолей();
	Запрос  			= Новый запрос;
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.УстановитьПараметр("ПериодНачисления",параметры.ПериодНачисления);
	ПараметрыЗапроса  	= Параметры.ПараметрыЗапроса;
	для Каждого стр из ПараметрыЗапроса цикл
		Запрос.УстановитьПараметр(стр.ключ,стр.Значение);
	КонецЦикла; 

	Текст = 
	"ВЫБРАТЬ
	|	энргНомераСтрокСтабильногоПериода.Организация КАК Организация,
	|	энргНомераСтрокСтабильногоПериода.ПериодНачисления КАК ПериодНачисления,
	|	энргНомераСтрокСтабильногоПериода.Район КАК Район,
	|	энргНомераСтрокСтабильногоПериода.ЧастныйСектор КАК ЧастныйСектор,
	|	энргНомераСтрокСтабильногоПериода.Строение КАК Строение,
	|	энргНомераСтрокСтабильногоПериода.Помещение КАК Помещение,
	|	энргНомераСтрокСтабильногоПериода.Услуга КАК Услуга,
	|	энргНомераСтрокСтабильногоПериода.ТочкаУчета КАК точкаУчета,
	|	МАКСИМУМ(энргНомераСтрокСтабильногоПериода.НомерПозиции) КАК НомерПозиции
	|ПОМЕСТИТЬ МаксНомерПозиции
	|ИЗ
	|	РегистрСведений.энргНомераСтрокСтабильногоПериода КАК энргНомераСтрокСтабильногоПериода
	|ГДЕ
	|	энргНомераСтрокСтабильногоПериода.Организация = &Организация
	|	И энргНомераСтрокСтабильногоПериода.ПериодНачисления = &ПериодНачисления
	|	И энргНомераСтрокСтабильногоПериода.Район = &Район
	|	И энргНомераСтрокСтабильногоПериода.ЧастныйСектор = &ЧастныйСектор
	|	И энргНомераСтрокСтабильногоПериода.Строение = &Строение
	|	И энргНомераСтрокСтабильногоПериода.Помещение = &Помещение
	|
	|СГРУППИРОВАТЬ ПО
	|	энргНомераСтрокСтабильногоПериода.Организация,
	|	энргНомераСтрокСтабильногоПериода.ПериодНачисления,
	|	энргНомераСтрокСтабильногоПериода.Район,
	|	энргНомераСтрокСтабильногоПериода.ЧастныйСектор,
	|	энргНомераСтрокСтабильногоПериода.Строение,
	|	энргНомераСтрокСтабильногоПериода.Помещение,
	|	энргНомераСтрокСтабильногоПериода.Услуга,
	|	энргНомераСтрокСтабильногоПериода.ТочкаУчета";

	Текст 				= Текст + Символы.ПС;
	Текст 				= Текст + ";";
	Текст 				= Текст + Символы.ПС;
	Текст 				= Текст + "////////////////////";
 
	Текст 				= Текст + Символы.ПС;
	Текст				= Текст + "ВЫБРАТЬ
	|";
	Сч 					= 0;
	Измерения  			= Параметры.Измерения;
	Ресурсы  			= Параметры.ресурсы;
	для Каждого стр из СоотвествиеПолей цикл
		Сч 				= Сч + 1;
		ЕстьПоле 		= Измерения.найти(стр.ключ) <>Неопределено или Ресурсы.найти(стр.ключ) <>Неопределено;		
		Если ЕстьПоле тогда
			Текст 		= Текст +?(Сч = 1 ,"",", ")+ ИмяТаблицы + "." + стр.ключ + " как " + стр.ключ+ Символы.ПС;
		иначе
			Текст 		= Текст +?(Сч = 1 ,"",", ")+ "МаксНомерПозиции" + "." + стр.ключ + " как " + стр.ключ+ Символы.ПС;
		КонецЕсли;  		
	КонецЦикла;
	
	для Каждого стр из Ресурсы цикл
		Сч 				= Сч + 1;
		Текст 			= Текст +", "+ ИмяТаблицы + "." + стр + " как " + стр+ Символы.ПС;
	КонецЦикла;	
	
	Текст				= Текст  + "
	|ПОМЕСТИТЬ НомераПозиций" + ИмяТаблицы + " 
	|ИЗ 
	|" +  ИмяТаблицы + " как " + ИмяТаблицы + "
	| ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаксНомерПозиции КАК МаксНомерПозиции";  
	
	Текст 				= Текст + "
	| по ";
	
	Сч = 0;
	для Каждого стр из Измерения цикл
		Текст			= Текст+?(Сч= 0 ,""," и ") +ИмяТаблицы+"."+стр + "=МаксНомерПозиции." + стр + Символы.ПС;
		Сч 				= Сч + 1;
	КонецЦикла;
			
	Запрос.Текст 		= Текст;
	Запрос.Выполнить();
		
	ДобавитьСтрокуСтабильногоПериода(МВТ,Параметры,ИмяТаблицы,Увеличивать);
КонецПроцедуры

Процедура ЗаполнитьНомераПозицийМКД(МВТ,Параметры,ИмяТаблицы,Увеличивать = ложь)
	
	СоотвествиеПолей 		= СоотвествиеПолейМКД();
	Запрос  				= Новый запрос;
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.УстановитьПараметр("ПериодНачисления",параметры.ПериодНачисления);
	ПараметрыЗапроса  		= Параметры.ПараметрыЗапроса;
	для Каждого стр из ПараметрыЗапроса цикл
		Запрос.УстановитьПараметр(стр.ключ,стр.Значение);
	КонецЦикла; 

	Текст = 
	"ВЫБРАТЬ
	|	энргНомераСтрокСтабильногоПериодаМКД.Организация КАК Организация,
	|	энргНомераСтрокСтабильногоПериодаМКД.ПериодНачисления КАК ПериодНачисления,
	|	энргНомераСтрокСтабильногоПериодаМКД.Район КАК Район,
	|	энргНомераСтрокСтабильногоПериодаМКД.МКД КАК МКД,
	|	энргНомераСтрокСтабильногоПериодаМКД.Услуга КАК Услуга,
	|	энргНомераСтрокСтабильногоПериодаМКД.ТочкаУчета КАК точкаУчета,
	|	МАКСИМУМ(энргНомераСтрокСтабильногоПериодаМКД.НомерПозиции) КАК НомерПозиции
	|ПОМЕСТИТЬ МаксНомерПозиции
	|ИЗ
	|	РегистрСведений.энргНомераСтрокСтабильногоПериодаМКД КАК энргНомераСтрокСтабильногоПериодаМКД
	|ГДЕ
	|	энргНомераСтрокСтабильногоПериодаМКД.Организация = &Организация
	|	И энргНомераСтрокСтабильногоПериодаМКД.ПериодНачисления = &ПериодНачисления
	|	И энргНомераСтрокСтабильногоПериодаМКД.Район = &Район
	|	И энргНомераСтрокСтабильногоПериодаМКД.МКД = &МКД
	|
	|СГРУППИРОВАТЬ ПО
	|	энргНомераСтрокСтабильногоПериодаМКД.Организация,
	|	энргНомераСтрокСтабильногоПериодаМКД.ПериодНачисления,
	|	энргНомераСтрокСтабильногоПериодаМКД.Район,
	|	энргНомераСтрокСтабильногоПериодаМКД.МКД,
	|	энргНомераСтрокСтабильногоПериодаМКД.Услуга,
	|	энргНомераСтрокСтабильногоПериодаМКД.ТочкаУчета";

	Текст 			= Текст + Символы.ПС;
	Текст 			= Текст + ";";
	Текст 			= Текст + Символы.ПС;
	Текст			= Текст + "////////////////////";
 
	Текст 			= Текст + Символы.ПС;
	Текст 			= Текст + "ВЫБРАТЬ
	|";
	Сч 				= 0;
	Измерения  		= Параметры.Измерения;
	Ресурсы  		= Параметры.ресурсы;
	для Каждого стр из СоотвествиеПолей цикл
		Сч = Сч + 1;
		ЕстьПоле 	= Измерения.найти(стр.ключ) <>Неопределено или Ресурсы.найти(стр.ключ) <>Неопределено;		
		Если ЕстьПоле тогда
			Текст 	= Текст +?(Сч = 1 ,"",", ")+ ИмяТаблицы + "." + стр.ключ + " как " + стр.ключ+ Символы.ПС;
		иначе
			Текст 	= Текст +?(Сч = 1 ,"",", ")+ "МаксНомерПозиции" + "." + стр.ключ + " как " + стр.ключ+ Символы.ПС;
		КонецЕсли;  		
	КонецЦикла;
	
	для Каждого стр из Ресурсы цикл
		Сч 			= Сч + 1;
		Текст 		= Текст +", "+ ИмяТаблицы + "." + стр + " как " + стр+ Символы.ПС;
	КонецЦикла;	
	
	Текст 			= Текст  + "
	|ПОМЕСТИТЬ НомераПозиций
	|ИЗ 
	|" +  ИмяТаблицы + " как " + ИмяТаблицы + "
	| ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаксНомерПозиции КАК МаксНомерПозиции";  
	
	Текст = Текст + "
	| по ";
	
	Сч = 0;
	для Каждого стр из Измерения цикл
		Текст = Текст+?(Сч= 0 ,""," и ") +ИмяТаблицы+"."+стр + "=МаксНомерПозиции." + стр + Символы.ПС;
		Сч = Сч + 1;
	КонецЦикла;
			
	Запрос.Текст = Текст;
	Запрос.Выполнить();
		
	ДобавитьСтрокуСтабильногоПериодаМКД(МВТ,Параметры,Увеличивать);
КонецПроцедуры

Процедура ДобавитьСтрокуСтабильногоПериода(МВТ,Параметры,ИмяТаблицы,Увеличивать)
	РесурсыРегистра 									= РесурсыСтабильногоПериода();
	РесурсыРегистраШкал									= РесурсыСтабильногоПериодаШкал();
	Ресурсы  											= Параметры.Ресурсы;
	ПараметрыНорматива 									= Справочники.энргКлючиНормативов.ПолучаемыеСвойстваПомещения();
	
	Запрос  											= Новый Запрос;
	Запрос.МенеджерВременныхТаблиц 						= МВТ;
	Запрос.УстановитьПараметр("Ссылка",				Параметры.ссылка);
	Запрос.УстановитьПараметр("ПериодРегистрации",	Параметры.ПараметрыЗапроса.ПериодРегистрации);
	Запрос.УстановитьПараметр("ТипНачисления",		Перечисления.энргТипыНачислений.ИндивидуальныеНачисления);
	Запрос.УстановитьПараметр("Организация",		Параметры.ПараметрыЗапроса.Организация);
	Запрос.УстановитьПараметр("Район",				Параметры.ПараметрыЗапроса.Район); 	
	Запрос.УстановитьПараметр("МоментВремени",		Параметры.ДатаДок);
	Запрос.УстановитьПараметр("ДатаДок",			Параметры.ДатаДок);
	Текст 												=
	"ВЫБРАТЬ
	|	НомераПозиций.Организация,
	|	НомераПозиций.ПериодНачисления,
	|	НомераПозиций.Район,
	|	НомераПозиций.ЧастныйСектор,
	|	НомераПозиций.Строение,
	|	НомераПозиций.Помещение,
	|	НомераПозиций.Услуга,
	|	НомераПозиций.ТочкаУчета,
	|	НомераПозиций.НомерПозиции + 1 КАК НомерПозиции,
	|	&ПериодРегистрации КАК ПериодРегистрации,";
	
	ИскатьКлючНорматива 								= Ложь;
	
	для Каждого стр из Ресурсы цикл 		
		Если НЕ СтрНайти(ПараметрыНорматива,(стр + ",")) = 0 Тогда
			ИскатьКлючНорматива 						= Истина;
			Прервать;
		КонецЕсли; 		
	КонецЦикла;
	
	РесурсыИслючая 										= Новый Массив;
	
	Если ИскатьКлючНорматива Тогда
		РесурсыИслючая.Добавить("КлючНорматива");
		РесурсыИслючая.Добавить("КлючСоцНорматива");		
	КонецЕсли;
		
	для Каждого стр из РесурсыРегистра цикл 		
		Если НЕ РесурсыИслючая.Найти(стр) = Неопределено Тогда
			Продолжить;
		КонецЕсли;		
		ЕстьРесурс 										= Ресурсы.найти(стр) <> Неопределено;
		Текст 											= Текст + Символы.ПС + ?(ЕстьРесурс,"НомераПозиций","энргСтабильныеПериоды") + "." + стр  + " как " + стр + ",";
	КонецЦикла;
	
	Текст 												= Текст + "			 
	|	&Ссылка КАК ДокРегистратор,
	|	&ДатаДок КАК ДатаРегистратора,
	|	0 КАК КоличествоЭтажей,
	|	0 КАК ГодПостройки,
	|	ЗНАЧЕНИЕ(Перечисление.энргТипыСобственниковЖилья.ПустаяСсылка) КАК ВидСобственности
	|" +?(ИскатьКлючНорматива,"ПОМЕСТИТЬ ВсеПараметрыРасчета","")+ "	
	|ИЗ
	|	НомераПозиций" + ИмяТаблицы + " КАК НомераПозиций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.энргСтабильныеПериоды КАК энргСтабильныеПериоды
	|		ПО НомераПозиций.Организация = энргСтабильныеПериоды.Организация
	|			И НомераПозиций.ПериодНачисления = энргСтабильныеПериоды.ПериодНачисления
	|			И НомераПозиций.Район = энргСтабильныеПериоды.Район
	|			И НомераПозиций.ЧастныйСектор = энргСтабильныеПериоды.ЧастныйСектор
	|			И НомераПозиций.Строение = энргСтабильныеПериоды.Строение
	|			И НомераПозиций.Помещение = энргСтабильныеПериоды.Помещение
	|			И НомераПозиций.Услуга = энргСтабильныеПериоды.Услуга
	|			И НомераПозиций.ТочкаУчета = энргСтабильныеПериоды.ТочкаУчета
	|			И НомераПозиций.НомерПозиции = энргСтабильныеПериоды.НомерПозиции";
	
	Если ИскатьКлючНорматива Тогда
		Текст 											= Текст + "	
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		 
		Текст 											= Текст + Справочники.энргКлючиНормативов.ТекстОпределенияКлючейНорматива();
		Запрос.Текст 									= Текст;
		Запрос.Выполнить();
			
		Текст 											=  
		"ВЫБРАТЬ
		|	ВсеПараметрыРасчета.*,
		|	КлючиНорматива.КлючНорматива,
		|	КлючиНорматива.КлючСоцНорматива
		|ИЗ 
		|	ВсеПараметрыРасчета КАК ВсеПараметрыРасчета
		|		ЛЕВОЕ СОЕДИНЕНИЕ КлючиНорматива КАК КлючиНорматива
		|		ПО ВсеПараметрыРасчета.Услуга = КлючиНорматива.Услуга
		|		И ВсеПараметрыРасчета.НаправлениеИспользованияТУ = КлючиНорматива.НаправлениеИспользованияТУ";		
	КонецЕсли;
	
	ДобавлятьШкалы  									= Истина;
	Если Параметры.Свойство("ШкалыОтдельно") и Параметры.ШкалыОтдельно Тогда
		ДобавлятьШкалы 									= Ложь;
	КонецЕсли;
	  
	Если ДобавлятьШкалы Тогда
		Текст 											= Текст + "	
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НомераПозиций.Организация,
		|	НомераПозиций.ПериодНачисления,
		|	НомераПозиций.Район,
		|	НомераПозиций.ЧастныйСектор,
		|	НомераПозиций.Строение,
		|	НомераПозиций.Помещение,
		|	НомераПозиций.ТочкаУчета,		
		|	НомераПозиций.НомерПозиции + 1 КАК НомерПозиции,
		|	энргСтабильныеПериодыШкалы.Шкала,
		|	&ПериодРегистрации КАК ПериодРегистрации,";
		
		для Каждого стр из РесурсыРегистраШкал цикл 		
			ЕстьРесурс 									= Ресурсы.найти(стр) <> Неопределено;
			Текст 										= Текст + Символы.ПС + ?(ЕстьРесурс,"НомераПозиций","энргСтабильныеПериодыШкалы") + "." + стр  + " как " + стр + ",";
		КонецЦикла;
		
		Текст 											= Текст +"			 
		|	&Ссылка КАК ДокРегистратор,
		|	&ДатаДок КАК ДатаРегистратора
		|ИЗ
		|	НомераПозиций" + ИмяТаблицы + " КАК НомераПозиций
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.энргСтабильныеПериодыШкалы КАК энргСтабильныеПериодыШкалы
		|		ПО НомераПозиций.Организация = энргСтабильныеПериодыШкалы.Организация
		|			И НомераПозиций.ПериодНачисления = энргСтабильныеПериодыШкалы.ПериодНачисления
		|			И НомераПозиций.Район = энргСтабильныеПериодыШкалы.Район
		|			И НомераПозиций.ЧастныйСектор = энргСтабильныеПериодыШкалы.ЧастныйСектор
		|			И НомераПозиций.Строение = энргСтабильныеПериодыШкалы.Строение
		|			И НомераПозиций.Помещение = энргСтабильныеПериодыШкалы.Помещение
		|			И НомераПозиций.ТочкаУчета = энргСтабильныеПериодыШкалы.ТочкаУчета
		|			И НомераПозиций.НомерПозиции = энргСтабильныеПериодыШкалы.НомерПозиции";		
	КонецЕсли;
	
	Если ИскатьКлючНорматива Тогда
		Текст 											= Текст + "	
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
		Текст 											= Текст + 	
		"ВЫБРАТЬ
		|	энргСтабильныеПериодыИзмерителиНаправлений.Организация КАК Организация,
		|	энргСтабильныеПериодыИзмерителиНаправлений.ПериодНачисления КАК ПериодНачисления,
		|	энргСтабильныеПериодыИзмерителиНаправлений.Район КАК Район,
		|	энргСтабильныеПериодыИзмерителиНаправлений.ЧастныйСектор КАК ЧастныйСектор,
		|	энргСтабильныеПериодыИзмерителиНаправлений.Строение КАК Строение,
		|	энргСтабильныеПериодыИзмерителиНаправлений.Помещение КАК Помещение,
		|	энргСтабильныеПериодыИзмерителиНаправлений.Услуга КАК Услуга,
		|	энргСтабильныеПериодыИзмерителиНаправлений.ТочкаУчета КАК ТочкаУчета,
		|	энргСтабильныеПериодыИзмерителиНаправлений.НомерПозиции + 1 КАК НомерПозиции,
		|	энргСтабильныеПериодыИзмерителиНаправлений.Измеритель КАК Измеритель,
		|	&Ссылка КАК ДокРегистратор,
		|	&ДатаДок КАК ДатаРегистратора,
		|	энргСтабильныеПериодыИзмерителиНаправлений.Количество КАК Количество,
		|	энргСтабильныеПериодыИзмерителиНаправлений.КлючНорматива КАК КлючНорматива
		|ИЗ
		|	НомераПозиций" + ИмяТаблицы + " КАК НомераПозиций
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.энргСтабильныеПериодыИзмерителиНаправлений КАК энргСтабильныеПериодыИзмерителиНаправлений
		|		ПО НомераПозиций.Организация = энргСтабильныеПериодыИзмерителиНаправлений.Организация
		|			И НомераПозиций.ПериодНачисления = энргСтабильныеПериодыИзмерителиНаправлений.ПериодНачисления
		|			И НомераПозиций.Район = энргСтабильныеПериодыИзмерителиНаправлений.Район
		|			И НомераПозиций.ЧастныйСектор = энргСтабильныеПериодыИзмерителиНаправлений.ЧастныйСектор
		|			И НомераПозиций.Строение = энргСтабильныеПериодыИзмерителиНаправлений.Строение
		|			И НомераПозиций.Помещение = энргСтабильныеПериодыИзмерителиНаправлений.Помещение
		|			И НомераПозиций.ТочкаУчета = энргСтабильныеПериодыИзмерителиНаправлений.ТочкаУчета
		|			И НомераПозиций.НомерПозиции = энргСтабильныеПериодыИзмерителиНаправлений.НомерПозиции";
	КонецЕсли;
	
	Запрос.Текст 										= Текст;
	Результат  											= Запрос.ВыполнитьПакет();
		
	Запрос.Текст 										= "УНИЧТОЖИТЬ МаксНомерПозиции";
	
	Запрос.Выполнить();                                 		
	//Запрос.Текст 										= "УНИЧТОЖИТЬ НомераПозиций";
	//Запрос.Выполнить();
	
	Выборка  											= Результат[0].Выбрать();
	Пока Выборка.Следующий() цикл		
		СтрокаСтабПериоды								= Параметры.НаборСтабильныеПериоды.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСтабПериоды,Выборка);
		
		Если Увеличивать тогда
			СтрокаСтабПериоды.НомерПозиции  			= СтрокаСтабПериоды.НомерПозиции + 1;
		КонецЕсли;
		
		Если Увеличивать тогда
			для Сч = 0 по Параметры.НаборПоследнихНомеров.количество()-1 цикл
				СтрокаПоследнихНомеров 					= Параметры.НаборПоследнихНомеров[СЧ];
				Если СтрокаПоследнихНомеров.Услуга  = Выборка.Услуга и СтрокаПоследнихНомеров.ТочкаУчета  = Выборка.ТочкаУчета тогда
					СтрокаПоследнихНомеров.НомерПозиции = СтрокаПоследнихНомеров.НомерПозиции + 1;
					Прервать;
				КонецЕсли; 				  
			КонецЦикла;  			
		иначе
			СтрокаПоследнихНомеров  					= Параметры.НаборПоследнихНомеров.добавить();
			ЗаполнитьЗначенияСвойств(СтрокаПоследнихНомеров,Выборка);		
			СтрокаПоследнихНомеров.период 				= Параметры.ПараметрыЗапроса.ПериодРегистрации;	
		КонецЕсли; 		
	КонецЦикла;
	
	Если ДобавлятьШкалы Тогда
		ВыборкаШкалы 									= Результат[1].Выбрать();
		
		Пока ВыборкаШкалы.Следующий() цикл		
			СтрокаСтабПериоды							= Параметры.НаборСтабильныеПериодыШкалы.добавить();
			ЗаполнитьЗначенияСвойств(СтрокаСтабПериоды,ВыборкаШкалы);				
		КонецЦикла;		
	КонецЕсли;
		
	Если ИскатьКлючНорматива Тогда
		ВыборкаИзмерителиНаправлений 					= Результат[2].Выбрать();
		Пока ВыборкаИзмерителиНаправлений.Следующий() Цикл
			СтрокаСтабПериоды							= Параметры.НаборСтабильныеПериодыИзмерителиНаправлений.добавить();
			ЗаполнитьЗначенияСвойств(СтрокаСтабПериоды,ВыборкаИзмерителиНаправлений);
		КонецЦикла;		
	КонецЕсли;	
	
КонецПроцедуры

Процедура ДобавитьСтрокуСтабильногоПериодаШКал(МВТ, Параметры)
	
КонецПроцедуры

Процедура ДобавитьСтрокуСтабильногоПериодаМКД(МВТ,Параметры,Увеличивать)
	РесурсыРегистра 										= РесурсыСтабильногоПериодаМКД();
	Ресурсы  												= Параметры.Ресурсы;
	РесурсыРегистраШкал										= РесурсыСтабильногоПериодаМКДШкал();
	
	Запрос  												= Новый Запрос;
	Запрос.МенеджерВременныхТаблиц 							= МВТ;
	Запрос.УстановитьПараметр("Ссылка",				Параметры.ссылка);
	Запрос.УстановитьПараметр("ПериодРегистрации",	Параметры.ПараметрыЗапроса.ПериодРегистрации);
	Запрос.УстановитьПараметр("ДатаДок",			Параметры.ДатаДок);
	Текст 													=
	"ВЫБРАТЬ
	|	НомераПозиций.ПериодНачисления,
	|	НомераПозиций.Организация,
	|	НомераПозиций.Район,
	|	НомераПозиций.МКД,
	|	НомераПозиций.Услуга,
	|	НомераПозиций.ТочкаУчета,
	|	НомераПозиций.НомерПозиции + 1 КАК НомерПозиции,
	|	&ПериодРегистрации КАК ПериодРегистрации,";
	для Каждого стр из РесурсыРегистра цикл
		ЕстьРесурс 										= Ресурсы.найти(стр) <> Неопределено;
		Текст 											= Текст + Символы.ПС + ?(ЕстьРесурс,"НомераПозиций","энргСтабильныеПериоды") + "." + стр  + " как " + стр + ",";
	КонецЦикла;
	
	Текст 												= Текст +
	"			 
	|	&Ссылка КАК ДокРегистратор,
	|	&ДатаДок КАК ДатаРегистратора
	|ИЗ
	|	НомераПозиций КАК НомераПозиций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.энргСтабильныеПериодыМКД КАК энргСтабильныеПериоды
	|		ПО НомераПозиций.ПериодНачисления = энргСтабильныеПериоды.ПериодНачисления
	|			И НомераПозиций.Район = энргСтабильныеПериоды.Район
	|			И НомераПозиций.МКД = энргСтабильныеПериоды.МКД
	|			И НомераПозиций.Услуга = энргСтабильныеПериоды.Услуга
	|			И НомераПозиций.ТочкаУчета = энргСтабильныеПериоды.ТочкаУчета
	|			И НомераПозиций.НомерПозиции = энргСтабильныеПериоды.НомерПозиции";	 
	
	ДобавлятьШкалы  										= Истина;
	Если Параметры.Свойство("ШкалыОтдельно") и Параметры.ШкалыОтдельно Тогда
		ДобавлятьШкалы 										= Ложь;
	КонецЕсли;
	  
	Если ДобавлятьШкалы Тогда
		Текст 												= Текст + "	
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НомераПозиций.Организация,
		|	НомераПозиций.ПериодНачисления,
		|	НомераПозиций.Район,
		|	НомераПозиций.МКД,
		|	НомераПозиций.ТочкаУчета,		
		|	НомераПозиций.НомерПозиции + 1 КАК НомерПозиции,
		|	энргСтабильныеПериодыШкалы.Шкала,
		|	&ПериодРегистрации КАК ПериодРегистрации,";
		
		для Каждого стр из РесурсыРегистраШкал цикл 		
			ЕстьРесурс 										= Ресурсы.найти(стр) <> Неопределено;
			Текст 											= Текст + Символы.ПС + ?(ЕстьРесурс,"НомераПозиций","энргСтабильныеПериодыШкалы") + "." + стр  + " как " + стр + ",";
		КонецЦикла;
		
		Текст 												= Текст +"			 
		|	&Ссылка КАК ДокРегистратор,
		|	&ДатаДок КАК ДатаРегистратора
		|ИЗ
		|	НомераПозиций КАК НомераПозиций
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.энргСтабильныеПериодыМКДШкалы КАК энргСтабильныеПериодыШкалы
		|		ПО НомераПозиций.Организация = энргСтабильныеПериодыШкалы.Организация
		|			И НомераПозиций.ПериодНачисления = энргСтабильныеПериодыШкалы.ПериодНачисления
		|			И НомераПозиций.Район = энргСтабильныеПериодыШкалы.Район
		|			И НомераПозиций.МКД = энргСтабильныеПериодыШкалы.МКД
		|			И НомераПозиций.ТочкаУчета = энргСтабильныеПериодыШкалы.ТочкаУчета
		|			И НомераПозиций.НомерПозиции = энргСтабильныеПериодыШкалы.НомерПозиции";		
	КонецЕсли;
	Запрос.Текст 											= Текст;
	Результат  												= Запрос.ВыполнитьПакет();
			
	Запрос.Текст 											= "УНИЧТОЖИТЬ МаксНомерПозиции";
	Запрос.Выполнить();
		
	Запрос.Текст 											= "УНИЧТОЖИТЬ НомераПозиций";
	Запрос.Выполнить();
	
	Выборка  												= Результат[0].Выбрать();
	Пока Выборка.Следующий() цикл		
		СтрокаСтабПериоды									= Параметры.НаборСтабильныеПериоды.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСтабПериоды,Выборка);
		
		Если Увеличивать тогда
			СтрокаСтабПериоды.НомерПозиции  				= СтрокаСтабПериоды.НомерПозиции + 1;
		КонецЕсли;
		
		Если Увеличивать тогда
			для Сч = 0 по Параметры.НаборПоследнихНомеров.количество()-1 цикл
				СтрокаПоследнихНомеров 						= Параметры.НаборПоследнихНомеров[СЧ];
				Если СтрокаПоследнихНомеров.Услуга  = Выборка.Услуга и СтрокаПоследнихНомеров.ТочкаУчета  = Выборка.ТочкаУчета тогда
					СтрокаПоследнихНомеров.НомерПозиции 	= СтрокаПоследнихНомеров.НомерПозиции + 1;
					Прервать;
				КонецЕсли; 				  
			КонецЦикла;  			
		иначе
			СтрокаПоследнихНомеров  						= Параметры.НаборПоследнихНомеров.добавить();
			ЗаполнитьЗначенияСвойств(СтрокаПоследнихНомеров,Выборка);		
			СтрокаПоследнихНомеров.период 					= Параметры.ПараметрыЗапроса.ПериодРегистрации;	
		КонецЕсли; 		
	КонецЦикла;
	
	Если ДобавлятьШкалы Тогда
		ВыборкаШкалы 										= Результат[1].Выбрать();
		
		Пока ВыборкаШкалы.Следующий() цикл		
			СтрокаСтабПериоды								= Параметры.НаборСтабильныеПериодыШкалы.добавить();
			ЗаполнитьЗначенияСвойств(СтрокаСтабПериоды,ВыборкаШкалы);				
		КонецЦикла;		
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ВспомогательныеПроцедуры

Функция ПерерасчетВПериоде(ПериодНачисления,Абонент)
	Запрос  		= Новый Запрос;
	Запрос.УстановитьПараметр("ПериодНачисления",ПериодНачисления);
	Запрос.УстановитьПараметр("Абонент",Абонент);
	Запрос.Текст 	="ВЫБРАТЬ ПЕРВЫЕ 1
	|	энргПерерасчет.Ссылка
	|ИЗ
	|	Документ.энргПерерасчет КАК энргПерерасчет
	|ГДЕ
	|	энргПерерасчет.Проведен
	|	И энргПерерасчет.Абонент = &Абонент
	|	И энргПерерасчет.ПериодНачисления = &ПериодНачисления";
	результат  = Запрос.Выполнить();
	Если результат.Пустой() тогда
		Возврат Документы.энргПерерасчет.ПустаяСсылка();
	иначе
		Выборка  = результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.ссылка;
	КонецЕсли;
КонецФункции

Функция СоотвествиеПолей()
	СоотвествиеПолей  	= Новый Соответствие;	
	
	ПоляПропустить 		= Новый Массив;
	ПоляПропустить.Добавить("ДатаРегистратора");
	ПоляПропустить.Добавить("ДокРегистратор");
	ПоляПропустить.Добавить("УдалитьАбонент");
	
	МетаданныеРег  		= Метаданные.РегистрыСведений.энргНомераСтрокСтабильногоПериода;
	для Каждого Измерение из МетаданныеРег.измерения цикл
		Если ПоляПропустить.Найти(Измерение.имя) <> Неопределено тогда
			Продолжить;
		КонецЕсли;
		
		Тип  			=  Измерение.тип.типы()[0]; // не нужно тут использовать поля составного типа
		СоотвествиеПолей.Вставить(Измерение.имя,ПустоеЗначениеПоТипу(Тип));
	КонецЦикла;   	
	
	для Каждого Рерсур из МетаданныеРег.Ресурсы цикл
		Если ПоляПропустить.Найти(Рерсур.имя) <> Неопределено тогда
			Продолжить;
		КонецЕсли;
		Тип  			=  Рерсур.тип.типы()[0]; // не нужно тут использовать поля составного типа
		СоотвествиеПолей.Вставить(Рерсур.имя,ПустоеЗначениеПоТипу(Тип));
	КонецЦикла;
	
	Возврат СоотвествиеПолей;
КонецФункции

Функция СоотвествиеПолейМКД()
	
	СоотвествиеПолей  	= Новый Соответствие;	
	
	ПоляПропустить 		= Новый Массив;
	ПоляПропустить.Добавить("ДатаРегистратора");
	ПоляПропустить.Добавить("ДокРегистратор");
	
	МетаданныеРег  		= Метаданные.РегистрыСведений.энргНомераСтрокСтабильногоПериодаМКД;
	для Каждого Измерение из МетаданныеРег.измерения цикл
		Если ПоляПропустить.Найти(Измерение.имя) <> Неопределено тогда
			Продолжить;
		КонецЕсли;
		
		Тип  			=  Измерение.тип.типы()[0]; // не нужно тут использовать поля составного типа
		СоотвествиеПолей.Вставить(Измерение.имя,ПустоеЗначениеПоТипу(Тип));
	КонецЦикла;   	
	
	для Каждого Рерсур из МетаданныеРег.Ресурсы цикл
		Если ПоляПропустить.Найти(Рерсур.имя) <> Неопределено тогда
			Продолжить;
		КонецЕсли;
		Тип  			=  Рерсур.тип.типы()[0]; // не нужно тут использовать поля составного типа
		СоотвествиеПолей.Вставить(Рерсур.имя,ПустоеЗначениеПоТипу(Тип));
	КонецЦикла;
	
	Возврат СоотвествиеПолей;
КонецФункции

Функция РесурсыСтабильногоПериода()
	МетаданныеРег  = Метаданные.РегистрыСведений.энргСтабильныеПериоды;
	РесурсыСтабильногоПериода = Новый Массив;
	для Каждого Рерсур из МетаданныеРег.Ресурсы цикл
		Тип  =   Рерсур.тип.типы()[0]; // не нужно тут использовать поля составного типа
		РесурсыСтабильногоПериода.Добавить(Рерсур.имя);
	КонецЦикла;
	Возврат РесурсыСтабильногоПериода;
КонецФункции  

Функция РесурсыСтабильногоПериодаШкал()
	МетаданныеРег  = Метаданные.РегистрыСведений.энргСтабильныеПериодыШкалы;
	РесурсыСтабильногоПериода = Новый Массив;
	для Каждого Рерсур из МетаданныеРег.Ресурсы цикл
		Тип  =   Рерсур.тип.типы()[0]; // не нужно тут использовать поля составного типа
		РесурсыСтабильногоПериода.Добавить(Рерсур.имя);
	КонецЦикла;
	Возврат РесурсыСтабильногоПериода;
КонецФункции

Функция РесурсыСтабильногоПериодаМКД()
	МетаданныеРег  				= Метаданные.РегистрыСведений.энргСтабильныеПериодыМКД;
	РесурсыСтабильногоПериода 	= Новый Массив;
	для Каждого Рерсур из МетаданныеРег.Ресурсы цикл
		Тип  =   Рерсур.тип.типы()[0]; // не нужно тут использовать поля составного типа
		РесурсыСтабильногоПериода.Добавить(Рерсур.имя);
	КонецЦикла;
	Возврат РесурсыСтабильногоПериода;
КонецФункции 

Функция РесурсыСтабильногоПериодаМКДШкал()
	МетаданныеРег  = Метаданные.РегистрыСведений.энргСтабильныеПериодыМКДШкалы;
	РесурсыСтабильногоПериода = Новый Массив;
	для Каждого Рерсур из МетаданныеРег.Ресурсы цикл
		Тип  =   Рерсур.тип.типы()[0]; // не нужно тут использовать поля составного типа
		РесурсыСтабильногоПериода.Добавить(Рерсур.имя);
	КонецЦикла;
	Возврат РесурсыСтабильногоПериода;
КонецФункции

Функция ПустоеЗначениеПоТипу(Тип)
	
	Если  Тип= тип("Булево") тогда
		Возврат "Ложь";
	ИначеЕсли  Тип= тип("Число") тогда
		Возврат "0";
	ИначеЕсли  Тип= тип("Дата") тогда
		Возврат "ДатаВремя(1,1,1)";	
	ИначеЕсли  Тип= тип("СправочникСсылка.энргТочкиУчета") тогда
		Возврат "Значение(Справочник.энргТочкиУчета.ПустаяСсылка)";
	ИначеЕсли  Тип= тип("СправочникСсылка.энргЗоныОтвественности") тогда
		Возврат "Значение(Справочник.энргЗоныОтвественности.ПустаяСсылка)";
	ИначеЕсли  Тип= тип("СправочникСсылка.энргСтроения") тогда
		Возврат "Значение(Справочник.энргМногоквартирныеДома.ПустаяСсылка)";
	ИначеЕсли  Тип= тип("СправочникСсылка.энргАбоненты") тогда
		Возврат "Значение(Справочник.энргАбоненты.ПустаяСсылка)";	
	ИначеЕсли  Тип= тип("СправочникСсылка.энргПриборыУчетаАбонента") тогда
		Возврат "Значение(Справочник.энргПриборыУчетаАбонента.ПустаяСсылка)";
	ИначеЕсли  Тип= тип("СправочникСсылка.энргВидыУслуг") тогда
		Возврат "Значение(Справочник.энргВидыУслуг.ПустаяСсылка)";	
	КонецЕсли;
	
КонецФункции

Функция ПолучитьКоличествоЖильцов(Организация, Район, ПериодРегистрации, Помещение)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	энргПомещения.Ссылка КАК Помещение
		|ПОМЕСТИТЬ ДанныеДокумента
		|ИЗ
		|	Справочник.энргПомещения КАК энргПомещения
		|ГДЕ
		|	энргПомещения.Ссылка = &Помещение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	энргПомещения.Ссылка КАК Комната,
		|	энргКлючиПомещений.КлючПомещения КАК КлючПомещения,
		|	ДанныеДокумента.Помещение КАК Помещение
		|ПОМЕСТИТЬ КлючиКомнатПомещения
		|ИЗ
		|	РегистрСведений.энргКлючиПомещений КАК энргКлючиПомещений
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.энргПомещения КАК энргПомещения
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокумента КАК ДанныеДокумента
		|			ПО (ДанныеДокумента.Помещение = энргПомещения.Родитель)
		|		ПО энргКлючиПомещений.Помещение = энргПомещения.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	энргКоличествоПрописанныхСрезПоследних.Организация КАК Организация,
		|	энргКоличествоПрописанныхСрезПоследних.Район КАК Район,
		|	энргКоличествоПрописанныхСрезПоследних.Количество КАК Количество,
		|	энргКоличествоПрописанныхСрезПоследних.КлючПомещения КАК КлючПомещения
		|ПОМЕСТИТЬ КоличествоПрописанных
		|ИЗ
		|	РегистрСведений.энргКоличествоПрописанных.СрезПоследних(
		|			&ПериодРегистрации,
		|			Организация = &Организация
		|				И Район = &Район
		|				И КлючПомещения В
		|					(ВЫБРАТЬ
		|						КлючиКомнатПомещения.КлючПомещения
		|					ИЗ
		|						КлючиКомнатПомещения)) КАК энргКоличествоПрописанныхСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КлючиКомнатПомещения КАК КлючиКомнатПомещения
		|		ПО энргКоличествоПрописанныхСрезПоследних.КлючПомещения = КлючиКомнатПомещения.КлючПомещения
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	энргКоличествоПроживающихСрезПоследних.Организация КАК Организация,
		|	энргКоличествоПроживающихСрезПоследних.Район КАК Район,
		|	энргКоличествоПроживающихСрезПоследних.Количество КАК Количество,
		|	энргКоличествоПроживающихСрезПоследних.КлючПомещения КАК КлючПомещения
		|ПОМЕСТИТЬ КоличествоПроживающих
		|ИЗ
		|	РегистрСведений.энргКоличествоПроживающих.СрезПоследних(
		|			&ПериодРегистрации,
		|			Организация = &Организация
		|				И Район = &Район
		|				И КлючПомещения В
		|					(ВЫБРАТЬ
		|						КлючиКомнатПомещения.КлючПомещения
		|					ИЗ
		|						КлючиКомнатПомещения)) КАК энргКоличествоПроживающихСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КлючиКомнатПомещения КАК КлючиКомнатПомещения
		|		ПО энргКоличествоПроживающихСрезПоследних.КлючПомещения = КлючиКомнатПомещения.КлючПомещения
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	энргКоличествоСобственниковСрезПоследних.Организация КАК Организация,
		|	энргКоличествоСобственниковСрезПоследних.Район КАК Район,
		|	энргКоличествоСобственниковСрезПоследних.Количество КАК Количество,
		|	энргКоличествоСобственниковСрезПоследних.КлючПомещения КАК КлючПомещения
		|ПОМЕСТИТЬ КоличествоСобственников
		|ИЗ
		|	РегистрСведений.энргКоличествоСобственников.СрезПоследних(
		|			&ПериодРегистрации,
		|			Организация = &Организация
		|				И Район = &Район
		|				И КлючПомещения В
		|					(ВЫБРАТЬ
		|						КлючиКомнатПомещения.КлючПомещения
		|					ИЗ
		|						КлючиКомнатПомещения)) КАК энргКоличествоСобственниковСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КлючиКомнатПомещения КАК КлючиКомнатПомещения
		|		ПО энргКоличествоСобственниковСрезПоследних.КлючПомещения = КлючиКомнатПомещения.КлючПомещения
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КлючиКомнатПомещения.Комната КАК Комната,
		|	МАКСИМУМ(ЕСТЬNULL(КоличествоПроживающих.Количество, ЕСТЬNULL(КоличествоПрописанных.Количество, ЕСТЬNULL(КоличествоСобственников.Количество, 0)))) КАК КоличествоЖильцов,
		|	КлючиКомнатПомещения.Помещение КАК Помещение
		|ПОМЕСТИТЬ КоличествоЖильцовПоКомнатам
		|ИЗ
		|	КлючиКомнатПомещения КАК КлючиКомнатПомещения
		|		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоПрописанных КАК КоличествоПрописанных
		|		ПО КлючиКомнатПомещения.КлючПомещения = КоличествоПрописанных.КлючПомещения
		|		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоПроживающих КАК КоличествоПроживающих
		|		ПО КлючиКомнатПомещения.КлючПомещения = КоличествоПроживающих.КлючПомещения
		|		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоСобственников КАК КоличествоСобственников
		|		ПО КлючиКомнатПомещения.КлючПомещения = КоличествоСобственников.КлючПомещения
		|
		|СГРУППИРОВАТЬ ПО
		|	КлючиКомнатПомещения.Комната,
		|	КлючиКомнатПомещения.Помещение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(КоличествоЖильцовПоКомнатам.КоличествоЖильцов) КАК КоличествоЖильцов
		|ИЗ
		|	КоличествоЖильцовПоКомнатам КАК КоличествоЖильцовПоКомнатам";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("Помещение", Помещение);
	Запрос.УстановитьПараметр("Район", Район);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат   ВыборкаДетальныеЗаписи.КоличествоЖильцов;
	КонецЦикла;

	
КонецФункции

#КонецОбласти

#Область ИндивидуальныеНачисленияРазделенныеЛС 

Процедура СтабПериодыОткрытиеЛСРазделенныйЛС(ссылка,Параметры, КомКомната)
	
	МВТ  							= Новый МенеджерВременныхТаблиц;
	ПараметрыЗапроса 				= Параметры.ПараметрыЗапроса;
	
	Запрос  			= Новый Запрос;
	Запрос.УстановитьПараметр("ссылка",			ссылка);
	Запрос.УстановитьПараметр("МоментВремени",	Параметры.МоментВремени);    	
	для Каждого стр из ПараметрыЗапроса цикл
		Запрос.УстановитьПараметр(стр.ключ,стр.значение); 
	КонецЦикла;   
	
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Если  КомКомната Тогда
		Запрос.Текст 		=
		
		"ВЫБРАТЬ
		|	0 КАК КоличествоЖильцов,
		|	ВложенныйЗапрос.ПериодНачисления КАК ПериодНачисления,
		|	ВложенныйЗапрос.Организация КАК Организация,
		|	ВложенныйЗапрос.Район КАК Район,
		|	ВложенныйЗапрос.ЧастныйСектор КАК ЧастныйСектор,
		|	ВложенныйЗапрос.Строение КАК Строение,
		|	ВложенныйЗапрос.Помещение КАК Помещение,
		|	ВложенныйЗапрос.КлючПомещения КАК КлючПомещения
		|ПОМЕСТИТЬ ДанныеКоличестваЖильцов
		|ИЗ
		|	(ВЫБРАТЬ
		|		энргОперацияСЛицевымСчетом.ПериодНачисления КАК ПериодНачисления,
		|		энргОперацияСЛицевымСчетом.Организация КАК Организация,
		|		энргОперацияСЛицевымСчетом.Район КАК Район,
		|		&ЧастныйСектор КАК ЧастныйСектор,
		|		&Строение КАК Строение,
		|		&Помещение КАК Помещение,
		|		энргКлючиПомещений.КлючПомещения КАК КлючПомещения
		|	ИЗ
		|		Документ.энргОперацияСЛицевымСчетом КАК энргОперацияСЛицевымСчетом
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.энргКлючиПомещений КАК энргКлючиПомещений
		|			ПО (энргОперацияСЛицевымСчетом.Ссылка = &Ссылка)
		|				И (энргКлючиПомещений.Строение = &Строение)
		|				И (энргКлючиПомещений.Помещение = &Помещение)) КАК ВложенныйЗапрос";
	Иначе
		Запрос.Текст 		=
		
		"ВЫБРАТЬ
		|	ВложенныйЗапрос.ПериодНачисления КАК ПериодНачисления,
		|	ВложенныйЗапрос.Организация КАК Организация,
		|	ВложенныйЗапрос.Район КАК Район,
		|	ВложенныйЗапрос.ЧастныйСектор КАК ЧастныйСектор,
		|	ВложенныйЗапрос.Строение КАК Строение,
		|	ВложенныйЗапрос.Помещение КАК Помещение,
		|	ВложенныйЗапрос.КлючПомещения КАК КлючПомещения
		|ПОМЕСТИТЬ ДанныеДокумента
		|ИЗ
		|	(ВЫБРАТЬ
		|		энргОперацияСЛицевымСчетом.ПериодНачисления КАК ПериодНачисления,
		|		энргОперацияСЛицевымСчетом.Организация КАК Организация,
		|		энргОперацияСЛицевымСчетом.Район КАК Район,
		|		&ЧастныйСектор КАК ЧастныйСектор,
		|		&Строение КАК Строение,
		|		&Помещение КАК Помещение,
		|		энргОперацияСЛицевымСчетом.КлючПомещения КАК КлючПомещения,
		|		энргКлючиПомещений.Помещение КАК ПомещениеПотомок
		|	ИЗ
		|		Документ.энргОперацияСЛицевымСчетом КАК энргОперацияСЛицевымСчетом
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.энргКлючиПомещений КАК энргКлючиПомещений
		|			ПО энргОперацияСЛицевымСчетом.КлючПомещения = энргКлючиПомещений.КлючПомещения
		|				И (энргОперацияСЛицевымСчетом.Ссылка = &Ссылка)) КАК ВложенныйЗапрос
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.энргПомещения КАК энргПомещения
		|		ПО ВложенныйЗапрос.ПомещениеПотомок = энргПомещения.Ссылка
		|			И (энргПомещения.Родитель = &Помещение)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	энргПомещения.Ссылка КАК Комната,
		|	энргКлючиПомещений.КлючПомещения КАК КлючПомещения,
		|	ДанныеДокумента.ПериодНачисления КАК ПериодНачисления,
		|	ДанныеДокумента.Организация КАК Организация,
		|	ДанныеДокумента.Район КАК Район,
		|	ДанныеДокумента.ЧастныйСектор КАК ЧастныйСектор,
		|	ДанныеДокумента.Строение КАК Строение,
		|	ДанныеДокумента.Помещение КАК Помещение
		|ПОМЕСТИТЬ КлючиКомнатПомещения
		|ИЗ
		|	РегистрСведений.энргКлючиПомещений КАК энргКлючиПомещений
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.энргПомещения КАК энргПомещения
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокумента КАК ДанныеДокумента
		|			ПО (ДанныеДокумента.Помещение = энргПомещения.Родитель)
		|		ПО энргКлючиПомещений.Помещение = энргПомещения.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	энргКоличествоПрописанныхСрезПоследних.Организация КАК Организация,
		|	энргКоличествоПрописанныхСрезПоследних.Район КАК Район,
		|	энргКоличествоПрописанныхСрезПоследних.Количество КАК Количество,
		|	энргКоличествоПрописанныхСрезПоследних.КлючПомещения КАК КлючПомещения
		|ПОМЕСТИТЬ КоличествоПрописанных
		|ИЗ
		|	РегистрСведений.энргКоличествоПрописанных.СрезПоследних(
		|			&ПериодРегистрации,
		|			Организация = &Организация
		|				И Район = &Район
		|				И КлючПомещения В
		|					(ВЫБРАТЬ
		|						КлючиКомнатПомещения.КлючПомещения
		|					ИЗ
		|						КлючиКомнатПомещения)) КАК энргКоличествоПрописанныхСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КлючиКомнатПомещения КАК КлючиКомнатПомещения
		|		ПО энргКоличествоПрописанныхСрезПоследних.КлючПомещения = КлючиКомнатПомещения.КлючПомещения
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	энргКоличествоПроживающихСрезПоследних.Организация КАК Организация,
		|	энргКоличествоПроживающихСрезПоследних.Район КАК Район,
		|	энргКоличествоПроживающихСрезПоследних.Количество КАК Количество,
		|	энргКоличествоПроживающихСрезПоследних.КлючПомещения КАК КлючПомещения
		|ПОМЕСТИТЬ КоличествоПроживающих
		|ИЗ
		|	РегистрСведений.энргКоличествоПроживающих.СрезПоследних(
		|			&ПериодРегистрации,
		|			Организация = &Организация
		|				И Район = &Район
		|				И КлючПомещения В
		|					(ВЫБРАТЬ
		|						КлючиКомнатПомещения.КлючПомещения
		|					ИЗ
		|						КлючиКомнатПомещения)) КАК энргКоличествоПроживающихСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КлючиКомнатПомещения КАК КлючиКомнатПомещения
		|		ПО энргКоличествоПроживающихСрезПоследних.КлючПомещения = КлючиКомнатПомещения.КлючПомещения
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	энргКоличествоСобственниковСрезПоследних.Организация КАК Организация,
		|	энргКоличествоСобственниковСрезПоследних.Район КАК Район,
		|	энргКоличествоСобственниковСрезПоследних.Количество КАК Количество,
		|	энргКоличествоСобственниковСрезПоследних.КлючПомещения КАК КлючПомещения
		|ПОМЕСТИТЬ КоличествоСобственников
		|ИЗ
		|	РегистрСведений.энргКоличествоСобственников.СрезПоследних(
		|			&ПериодРегистрации,
		|			Организация = &Организация
		|				И Район = &Район
		|				И КлючПомещения В
		|					(ВЫБРАТЬ
		|						КлючиКомнатПомещения.КлючПомещения
		|					ИЗ
		|						КлючиКомнатПомещения)) КАК энргКоличествоСобственниковСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КлючиКомнатПомещения КАК КлючиКомнатПомещения
		|		ПО энргКоличествоСобственниковСрезПоследних.КлючПомещения = КлючиКомнатПомещения.КлючПомещения
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КлючиКомнатПомещения.Комната КАК Комната,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА НЕ КоличествоПроживающих.Количество ЕСТЬ NULL
		|					И КоличествоПроживающих.Количество <> 0
		|				ТОГДА КоличествоПроживающих.Количество
		|			КОГДА НЕ КоличествоПрописанных.Количество ЕСТЬ NULL
		|					И КоличествоПрописанных.Количество <> 0
		|				ТОГДА КоличествоПрописанных.Количество
		|			КОГДА НЕ КоличествоСобственников.Количество ЕСТЬ NULL
		|					И КоличествоСобственников.Количество <> 0
		|				ТОГДА КоличествоСобственников.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КоличествоЖильцов,
		|	КлючиКомнатПомещения.ПериодНачисления КАК ПериодНачисления,
		|	КлючиКомнатПомещения.Организация КАК Организация,
		|	КлючиКомнатПомещения.Район КАК Район,
		|	КлючиКомнатПомещения.ЧастныйСектор КАК ЧастныйСектор,
		|	КлючиКомнатПомещения.Строение КАК Строение,
		|	КлючиКомнатПомещения.Помещение КАК Помещение
		|ПОМЕСТИТЬ КоличествоЖильцовПоКомнатам
		|ИЗ
		|	КлючиКомнатПомещения КАК КлючиКомнатПомещения
		|		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоПрописанных КАК КоличествоПрописанных
		|		ПО КлючиКомнатПомещения.КлючПомещения = КоличествоПрописанных.КлючПомещения
		|		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоПроживающих КАК КоличествоПроживающих
		|		ПО КлючиКомнатПомещения.КлючПомещения = КоличествоПроживающих.КлючПомещения
		|		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоСобственников КАК КоличествоСобственников
		|		ПО КлючиКомнатПомещения.КлючПомещения = КоличествоСобственников.КлючПомещения
		|
		|СГРУППИРОВАТЬ ПО
		|	КлючиКомнатПомещения.Комната,
		|	КлючиКомнатПомещения.ПериодНачисления,
		|	КлючиКомнатПомещения.Организация,
		|	КлючиКомнатПомещения.Район,
		|	КлючиКомнатПомещения.ЧастныйСектор,
		|	КлючиКомнатПомещения.Строение,
		|	КлючиКомнатПомещения.Помещение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(КоличествоЖильцовПоКомнатам.КоличествоЖильцов) КАК КоличествоЖильцов,
		|	КоличествоЖильцовПоКомнатам.ПериодНачисления КАК ПериодНачисления,
		|	КоличествоЖильцовПоКомнатам.Организация КАК Организация,
		|	КоличествоЖильцовПоКомнатам.Район КАК Район,
		|	КоличествоЖильцовПоКомнатам.ЧастныйСектор КАК ЧастныйСектор,
		|	КоличествоЖильцовПоКомнатам.Строение КАК Строение,
		|	КоличествоЖильцовПоКомнатам.Помещение КАК Помещение
		|ПОМЕСТИТЬ ДанныеКоличестваЖильцов
		|ИЗ
		|	КоличествоЖильцовПоКомнатам КАК КоличествоЖильцовПоКомнатам
		|
		|СГРУППИРОВАТЬ ПО
		|	КоличествоЖильцовПоКомнатам.ЧастныйСектор,
		|	КоличествоЖильцовПоКомнатам.Помещение,
		|	КоличествоЖильцовПоКомнатам.Организация,
		|	КоличествоЖильцовПоКомнатам.ПериодНачисления,
		|	КоличествоЖильцовПоКомнатам.Строение,
		|	КоличествоЖильцовПоКомнатам.Район";
		
	КонецЕсли;
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Организация");
	Измерения.Добавить("Район");
	Измерения.Добавить("ЧастныйСектор");
	Измерения.Добавить("Строение");
	Измерения.Добавить("Помещение");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("КоличествоЖильцов");

	
	Параметры.вставить("Измерения",Измерения);
	Параметры.вставить("Ресурсы",Ресурсы);
	
	ЗаполнитьНомераПозиций(МВТ,Параметры,"ДанныеКоличестваЖильцов"); 
	
КонецПроцедуры

Процедура СтабПериодыЗакрытиеРазделенныхЛС(ссылка,Параметры)
	ПараметрыЗапроса  	= Параметры.ПараметрыЗапроса;		
	МВТ 				= Новый МенеджерВременныхТаблиц;
	Запрос  			= Новый Запрос;
	Запрос.УстановитьПараметр("ссылка",			ссылка);
	Запрос.УстановитьПараметр("Помещение",		  ПараметрыЗапроса.Помещение);
	
	Запрос.МенеджерВременныхТаблиц = МВТ;	
	Запрос.Текст 	=
	"ВЫБРАТЬ
	|	энргОперацияСЛицевымСчетом.Ссылка,
	|	энргОперацияСЛицевымСчетом.Дата,
	|	энргОперацияСЛицевымСчетом.Организация,
	|	энргОперацияСЛицевымСчетом.ПериодНачисления,
	|	энргОперацияСЛицевымСчетом.Район,
	|	энргОперацияСЛицевымСчетом.МКД,
	|	&Помещение КАК Помещение,
	|	энргОперацияСЛицевымСчетом.Абонент,
	|	ЛОЖЬ КАК ЛСОткрыт,
	|	ИСТИНА КАК МенялосьСостояниеПУ,
	|	ИСТИНА КАК МенялосьСостояниеФормулы
	|ПОМЕСТИТЬ ЗакрытиеЛС
	|ИЗ
	|	Документ.энргОперацияСЛицевымСчетом КАК энргОперацияСЛицевымСчетом
	|ГДЕ
	|	энргОперацияСЛицевымСчетом.Ссылка = &Ссылка";
	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("Организация");
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Район");
	Измерения.Добавить("МКД");
	Измерения.Добавить("Помещение");
	Измерения.Добавить("Абонент");
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("ЛСОткрыт");
	Ресурсы.Добавить("МенялосьСостояниеПУ");
	Ресурсы.Добавить("МенялосьСостояниеФормулы");
	
	Параметры.вставить("Измерения",				Измерения);
	Параметры.вставить("Ресурсы",				Ресурсы);
	Параметры.вставить("ИзменяетСостояниеПУ",	Истина);
	
	//ЗаполнитьНомераПозицийРазделенныеЛС(МВТ,Параметры,"ЗакрытиеЛС");
	
КонецПроцедуры

Процедура СтабПериодыУстановитьКоличествоПрописанныхРазделенныеЛС(ссылка,Параметры) 
				
	МВТ 							= Новый МенеджерВременныхТаблиц;
	ПараметрыЗапроса 				= Параметры.ПараметрыЗапроса;
	
	Запрос  						= Новый Запрос;
	Запрос.УстановитьПараметр("ссылка",				ссылка);
	Запрос.УстановитьПараметр("МоментВремени",		Параметры.МоментВремени);
	Запрос.МенеджерВременныхТаблиц 	= МВТ;	
	
	ПараметрыЗапроса  				= Параметры.ПараметрыЗапроса;	  	
	для Каждого стр из ПараметрыЗапроса цикл
		Запрос.УстановитьПараметр(стр.ключ,стр.значение); 
	КонецЦикла; 	
		
	Запрос.Текст = "ВЫБРАТЬ
	               |	энргУстановитьКоличествоПрописанных.ПериодНачисления КАК ПериодНачисления,
	               |	энргУстановитьКоличествоПрописанных.Организация КАК Организация,
	               |	энргУстановитьКоличествоПрописанных.Район КАК Район,
	               |	&ЧастныйСектор КАК ЧастныйСектор,
	               |	&Строение КАК Строение,
	               |	&Помещение КАК Помещение,
	               |	энргУстановитьКоличествоПрописанных.КлючПомещения КАК КлючТекКомнаты,
	               |	&РазделенныйЛС КАК РазделенныйЛС,
	               |	энргУстановитьКоличествоПрописанных.Количество КАК Количество
	               |ПОМЕСТИТЬ ДанныеДокумента
	               |ИЗ
	               |	Документ.энргУстановитьКоличествоПрописанных КАК энргУстановитьКоличествоПрописанных
	               |ГДЕ
	               |	энргУстановитьКоличествоПрописанных.Ссылка = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	энргКлючиПомещений.КлючПомещения КАК КлючПомещения,
	               |	ДанныеДокумента.ПериодНачисления КАК ПериодНачисления,
	               |	ДанныеДокумента.Организация КАК Организация,
	               |	ДанныеДокумента.Район КАК Район,
	               |	ДанныеДокумента.ЧастныйСектор КАК ЧастныйСектор,
	               |	ДанныеДокумента.Строение КАК Строение,
	               |	ДанныеДокумента.Помещение КАК Помещение,
	               |	ДанныеДокумента.РазделенныйЛС КАК РазделенныйЛС,
	               |	ДанныеДокумента.Количество КАК Количество
	               |ПОМЕСТИТЬ КлючиКомнатПомещения
	               |ИЗ
	               |	РегистрСведений.энргКлючиПомещений КАК энргКлючиПомещений
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокумента КАК ДанныеДокумента
	               |		ПО энргКлючиПомещений.Помещение.Родитель = ДанныеДокумента.Помещение
	               |			И энргКлючиПомещений.КлючПомещения <> ДанныеДокумента.КлючТекКомнаты
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	энргКоличествоПрописанныхСрезПоследних.Организация КАК Организация,
	               |	энргКоличествоПрописанныхСрезПоследних.Район КАК Район,
	               |	энргКоличествоПрописанныхСрезПоследних.Количество КАК Количество,
	               |	энргКоличествоПрописанныхСрезПоследних.КлючПомещения КАК КлючПомещения
	               |ПОМЕСТИТЬ КоличествоПрописанных
	               |ИЗ
	               |	РегистрСведений.энргКоличествоПрописанных.СрезПоследних(
	               |			&ПериодРегистрации,
	               |			Организация = &Организация
	               |				И Район = &Район
	               |				И КлючПомещения В
	               |					(ВЫБРАТЬ
	               |						КлючиКомнатПомещения.КлючПомещения
	               |					ИЗ
	               |						КлючиКомнатПомещения)) КАК энргКоличествоПрописанныхСрезПоследних
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КлючиКомнатПомещения КАК КлючиКомнатПомещения
	               |		ПО энргКоличествоПрописанныхСрезПоследних.КлючПомещения = КлючиКомнатПомещения.КлючПомещения
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	энргКоличествоПроживающихСрезПоследних.Организация КАК Организация,
	               |	энргКоличествоПроживающихСрезПоследних.Район КАК Район,
	               |	энргКоличествоПроживающихСрезПоследних.Количество КАК Количество,
	               |	энргКоличествоПроживающихСрезПоследних.КлючПомещения КАК КлючПомещения
	               |ПОМЕСТИТЬ КоличествоПроживающих
	               |ИЗ
	               |	РегистрСведений.энргКоличествоПроживающих.СрезПоследних(
	               |			&ПериодРегистрации,
	               |			Организация = &Организация
	               |				И Район = &Район
	               |				И КлючПомещения В
	               |					(ВЫБРАТЬ
	               |						КлючиКомнатПомещения.КлючПомещения
	               |					ИЗ
	               |						КлючиКомнатПомещения)) КАК энргКоличествоПроживающихСрезПоследних
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КлючиКомнатПомещения КАК КлючиКомнатПомещения
	               |		ПО энргКоличествоПроживающихСрезПоследних.КлючПомещения = КлючиКомнатПомещения.КлючПомещения
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	энргКоличествоСобственниковСрезПоследних.Организация КАК Организация,
	               |	энргКоличествоСобственниковСрезПоследних.Район КАК Район,
	               |	энргКоличествоСобственниковСрезПоследних.Количество КАК Количество,
	               |	энргКоличествоСобственниковСрезПоследних.КлючПомещения КАК КлючПомещения
	               |ПОМЕСТИТЬ КоличествоСобственников
	               |ИЗ
	               |	РегистрСведений.энргКоличествоСобственников.СрезПоследних(
	               |			&ПериодРегистрации,
	               |			Организация = &Организация
	               |				И Район = &Район
	               |				И КлючПомещения В
	               |					(ВЫБРАТЬ
	               |						КлючиКомнатПомещения.КлючПомещения
	               |					ИЗ
	               |						КлючиКомнатПомещения)) КАК энргКоличествоСобственниковСрезПоследних
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КлючиКомнатПомещения КАК КлючиКомнатПомещения
	               |		ПО энргКоличествоСобственниковСрезПоследних.КлючПомещения = КлючиКомнатПомещения.КлючПомещения
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	МАКСИМУМ(ЕСТЬNULL(КоличествоПрописанных.Количество, ЕСТЬNULL(КоличествоПроживающих.Количество, ЕСТЬNULL(КоличествоСобственников.Количество, 0)))) КАК КоличествоЖильцов,
	               |	КлючиКомнатПомещения.ПериодНачисления КАК ПериодНачисления,
	               |	КлючиКомнатПомещения.Организация КАК Организация,
	               |	КлючиКомнатПомещения.Район КАК Район,
	               |	КлючиКомнатПомещения.ЧастныйСектор КАК ЧастныйСектор,
	               |	КлючиКомнатПомещения.Строение КАК Строение,
	               |	КлючиКомнатПомещения.Помещение КАК Помещение,
	               |	КлючиКомнатПомещения.Количество КАК Количество
	               |ПОМЕСТИТЬ КоличествоЖильцовПоКомнатам
	               |ИЗ
	               |	КлючиКомнатПомещения КАК КлючиКомнатПомещения
	               |		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоПрописанных КАК КоличествоПрописанных
	               |		ПО КлючиКомнатПомещения.КлючПомещения = КоличествоПрописанных.КлючПомещения
	               |		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоПроживающих КАК КоличествоПроживающих
	               |		ПО КлючиКомнатПомещения.КлючПомещения = КоличествоПроживающих.КлючПомещения
	               |		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоСобственников КАК КоличествоСобственников
	               |		ПО КлючиКомнатПомещения.КлючПомещения = КоличествоСобственников.КлючПомещения
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	КлючиКомнатПомещения.ПериодНачисления,
	               |	КлючиКомнатПомещения.Организация,
	               |	КлючиКомнатПомещения.Район,
	               |	КлючиКомнатПомещения.ЧастныйСектор,
	               |	КлючиКомнатПомещения.Строение,
	               |	КлючиКомнатПомещения.Помещение,
	               |	КлючиКомнатПомещения.Количество
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	МАКСИМУМ(КоличествоЖильцовПоКомнатам.КоличествоЖильцов + КоличествоЖильцовПоКомнатам.Количество) КАК КоличествоЖильцов,
	               |	КоличествоЖильцовПоКомнатам.ПериодНачисления КАК ПериодНачисления,
	               |	КоличествоЖильцовПоКомнатам.Организация КАК Организация,
	               |	КоличествоЖильцовПоКомнатам.Район КАК Район,
	               |	КоличествоЖильцовПоКомнатам.ЧастныйСектор КАК ЧастныйСектор,
	               |	КоличествоЖильцовПоКомнатам.Строение КАК Строение,
	               |	КоличествоЖильцовПоКомнатам.Помещение КАК Помещение
	               |ПОМЕСТИТЬ КоличествоЖильцовПомещения
	               |ИЗ
	               |	КоличествоЖильцовПоКомнатам КАК КоличествоЖильцовПоКомнатам
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	КоличествоЖильцовПоКомнатам.ЧастныйСектор,
	               |	КоличествоЖильцовПоКомнатам.Помещение,
	               |	КоличествоЖильцовПоКомнатам.Организация,
	               |	КоличествоЖильцовПоКомнатам.ПериодНачисления,
	               |	КоличествоЖильцовПоКомнатам.Строение,
	               |	КоличествоЖильцовПоКомнатам.Район
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	КоличествоЖильцовПомещения.ПериодНачисления КАК ПериодНачисления,
	               |	КоличествоЖильцовПомещения.Организация КАК Организация,
	               |	КоличествоЖильцовПомещения.Район КАК Район,
	               |	КоличествоЖильцовПомещения.ЧастныйСектор КАК ЧастныйСектор,
	               |	КоличествоЖильцовПомещения.Строение КАК Строение,
	               |	КоличествоЖильцовПомещения.Помещение КАК Помещение,
	               |	КоличествоЖильцовПомещения.КоличествоЖильцов КАК КоличествоЖильцов
	               |ПОМЕСТИТЬ ДанныеКоличестваЖильцов
	               |ИЗ
	               |	КоличествоЖильцовПомещения КАК КоличествоЖильцовПомещения";
	

	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("Организация");
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Район");
	Измерения.Добавить("ЧастныйСектор");
	Измерения.Добавить("Строение");
	Измерения.Добавить("Помещение");  

	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("КоличествоЖильцов");
	
	Параметры.вставить("Измерения",Измерения);
	Параметры.вставить("Ресурсы",Ресурсы);
	
	ЗаполнитьНомераПозиций(МВТ,Параметры,"ДанныеКоличестваЖильцов"); 

КонецПроцедуры

Процедура СтабПериодыУстановитьКоличествоПроживающихРазделенныеЛС(Ссылка, Параметры)
	
	МВТ 							= Новый МенеджерВременныхТаблиц;
	ПараметрыЗапроса 				= Параметры.ПараметрыЗапроса;
	
	ДанныеЗаполнения  				= Новый Структура("ВидБлагоустройства, ВидСобственности, КоличествоКомнат");	
	КлючПомещенияСтруктура 			= Новый Структура("Строение, Помещение",ПараметрыЗапроса.Строение,ПараметрыЗапроса.Помещение);
	энргРаботаСЛицевымСчетомСервер.ПараметрыРасчетаПомещения(ПараметрыЗапроса.Организация, ПараметрыЗапроса.Район,КлючПомещенияСтруктура,Параметры.МоментВремени,ДанныеЗаполнения);
	ДанныеЗаполнения.Вставить("КоличествоПрописанных", ссылка.Количество);
	
	Справочники.энргКлючиНормативов.КлючиПоСвойствамОбъекта(Параметры.МоментВремени, ПараметрыЗапроса.Организация, ПараметрыЗапроса.Район, Перечисления.энргТипыНачислений.ИндивидуальныеНачисления, МВТ, "КлючНормативов", ДанныеЗаполнения);  
	
	Запрос  						= Новый Запрос;
	Запрос.МенеджерВременныхТаблиц 	= МВТ;
	Запрос.УстановитьПараметр("ссылка",			ссылка);
	Запрос.УстановитьПараметр("МоментВремени",	Параметры.МоментВремени);
	Запрос.УстановитьПараметр("КлючПомещения",	ДанныеЗаполнения.КлючПомещения);
	
	ПараметрыЗапроса  				= Параметры.ПараметрыЗапроса;	  	
	для Каждого стр из ПараметрыЗапроса цикл
		Запрос.УстановитьПараметр(стр.ключ,стр.значение); 
	КонецЦикла;  
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	энргУстановитьКоличествоПроживающих.ПериодНачисления КАК ПериодНачисления,
	               |	энргУстановитьКоличествоПроживающих.Организация КАК Организация,
	               |	энргУстановитьКоличествоПроживающих.Район КАК Район,
	               |	&ЧастныйСектор КАК ЧастныйСектор,
	               |	&Строение КАК Строение,
	               |	&Помещение КАК Помещение,
	               |	энргУстановитьКоличествоПроживающих.КлючПомещения КАК КлючТекКомнаты,
	               |	&РазделенныйЛС КАК РазделенныйЛС,
	               |	энргУстановитьКоличествоПроживающих.Количество КАК Количество
	               |ПОМЕСТИТЬ ДанныеДокумента
	               |ИЗ
	               |	Документ.энргУстановитьКоличествоПроживающих КАК энргУстановитьКоличествоПроживающих
	               |ГДЕ
	               |	энргУстановитьКоличествоПроживающих.Ссылка = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	энргКлючиПомещений.КлючПомещения КАК КлючПомещения,
	               |	ДанныеДокумента.ПериодНачисления КАК ПериодНачисления,
	               |	ДанныеДокумента.Организация КАК Организация,
	               |	ДанныеДокумента.Район КАК Район,
	               |	ДанныеДокумента.ЧастныйСектор КАК ЧастныйСектор,
	               |	ДанныеДокумента.Строение КАК Строение,
	               |	ДанныеДокумента.Помещение КАК Помещение,
	               |	ДанныеДокумента.РазделенныйЛС КАК РазделенныйЛС,
	               |	ДанныеДокумента.Количество КАК Количество
	               |ПОМЕСТИТЬ КлючиКомнатПомещения
	               |ИЗ
	               |	РегистрСведений.энргКлючиПомещений КАК энргКлючиПомещений
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокумента КАК ДанныеДокумента
	               |		ПО энргКлючиПомещений.Помещение.Родитель = ДанныеДокумента.Помещение
	               |			И энргКлючиПомещений.КлючПомещения <> ДанныеДокумента.КлючТекКомнаты
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	энргКоличествоПрописанныхСрезПоследних.Организация КАК Организация,
	               |	энргКоличествоПрописанныхСрезПоследних.Район КАК Район,
	               |	энргКоличествоПрописанныхСрезПоследних.Количество КАК Количество,
	               |	энргКоличествоПрописанныхСрезПоследних.КлючПомещения КАК КлючПомещения
	               |ПОМЕСТИТЬ КоличествоПрописанных
	               |ИЗ
	               |	РегистрСведений.энргКоличествоПрописанных.СрезПоследних(
	               |			&ПериодРегистрации,
	               |			Организация = &Организация
	               |				И Район = &Район
	               |				И КлючПомещения В
	               |					(ВЫБРАТЬ
	               |						КлючиКомнатПомещения.КлючПомещения
	               |					ИЗ
	               |						КлючиКомнатПомещения)) КАК энргКоличествоПрописанныхСрезПоследних
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КлючиКомнатПомещения КАК КлючиКомнатПомещения
	               |		ПО энргКоличествоПрописанныхСрезПоследних.КлючПомещения = КлючиКомнатПомещения.КлючПомещения
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	энргКоличествоПроживающихСрезПоследних.Организация КАК Организация,
	               |	энргКоличествоПроживающихСрезПоследних.Район КАК Район,
	               |	энргКоличествоПроживающихСрезПоследних.Количество КАК Количество,
	               |	энргКоличествоПроживающихСрезПоследних.КлючПомещения КАК КлючПомещения
	               |ПОМЕСТИТЬ КоличествоПроживающих
	               |ИЗ
	               |	РегистрСведений.энргКоличествоПроживающих.СрезПоследних(
	               |			&ПериодРегистрации,
	               |			Организация = &Организация
	               |				И Район = &Район
	               |				И КлючПомещения В
	               |					(ВЫБРАТЬ
	               |						КлючиКомнатПомещения.КлючПомещения
	               |					ИЗ
	               |						КлючиКомнатПомещения)) КАК энргКоличествоПроживающихСрезПоследних
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КлючиКомнатПомещения КАК КлючиКомнатПомещения
	               |		ПО энргКоличествоПроживающихСрезПоследних.КлючПомещения = КлючиКомнатПомещения.КлючПомещения
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	энргКоличествоСобственниковСрезПоследних.Организация КАК Организация,
	               |	энргКоличествоСобственниковСрезПоследних.Район КАК Район,
	               |	энргКоличествоСобственниковСрезПоследних.Количество КАК Количество,
	               |	энргКоличествоСобственниковСрезПоследних.КлючПомещения КАК КлючПомещения
	               |ПОМЕСТИТЬ КоличествоСобственников
	               |ИЗ
	               |	РегистрСведений.энргКоличествоСобственников.СрезПоследних(
	               |			&ПериодРегистрации,
	               |			Организация = &Организация
	               |				И Район = &Район
	               |				И КлючПомещения В
	               |					(ВЫБРАТЬ
	               |						КлючиКомнатПомещения.КлючПомещения
	               |					ИЗ
	               |						КлючиКомнатПомещения)) КАК энргКоличествоСобственниковСрезПоследних
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КлючиКомнатПомещения КАК КлючиКомнатПомещения
	               |		ПО энргКоличествоСобственниковСрезПоследних.КлючПомещения = КлючиКомнатПомещения.КлючПомещения
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	МАКСИМУМ(ЕСТЬNULL(КоличествоПрописанных.Количество, ЕСТЬNULL(КоличествоПроживающих.Количество, ЕСТЬNULL(КоличествоСобственников.Количество, 0)))) КАК КоличествоЖильцов,
	               |	КлючиКомнатПомещения.ПериодНачисления КАК ПериодНачисления,
	               |	КлючиКомнатПомещения.Организация КАК Организация,
	               |	КлючиКомнатПомещения.Район КАК Район,
	               |	КлючиКомнатПомещения.ЧастныйСектор КАК ЧастныйСектор,
	               |	КлючиКомнатПомещения.Строение КАК Строение,
	               |	КлючиКомнатПомещения.Помещение КАК Помещение,
	               |	КлючиКомнатПомещения.Количество КАК Количество
	               |ПОМЕСТИТЬ КоличествоЖильцовПоКомнатам
	               |ИЗ
	               |	КлючиКомнатПомещения КАК КлючиКомнатПомещения
	               |		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоПрописанных КАК КоличествоПрописанных
	               |		ПО КлючиКомнатПомещения.КлючПомещения = КоличествоПрописанных.КлючПомещения
	               |		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоПроживающих КАК КоличествоПроживающих
	               |		ПО КлючиКомнатПомещения.КлючПомещения = КоличествоПроживающих.КлючПомещения
	               |		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоСобственников КАК КоличествоСобственников
	               |		ПО КлючиКомнатПомещения.КлючПомещения = КоличествоСобственников.КлючПомещения
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	КлючиКомнатПомещения.ПериодНачисления,
	               |	КлючиКомнатПомещения.Организация,
	               |	КлючиКомнатПомещения.Район,
	               |	КлючиКомнатПомещения.ЧастныйСектор,
	               |	КлючиКомнатПомещения.Строение,
	               |	КлючиКомнатПомещения.Помещение,
	               |	КлючиКомнатПомещения.Количество
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	энргКоличествоПрописанныхСрезПоследних.Организация КАК Организация,
	               |	энргКоличествоПрописанныхСрезПоследних.Район КАК Район,
	               |	энргКоличествоПрописанныхСрезПоследних.Количество КАК Количество,
	               |	энргКоличествоПрописанныхСрезПоследних.КлючПомещения КАК КлючПомещения,
	               |	ДанныеДокумента.Помещение КАК Помещение
	               |ПОМЕСТИТЬ КоличествоПрописанныхТекКомнаты
	               |ИЗ
	               |	РегистрСведений.энргКоличествоПрописанных.СрезПоследних(
	               |			&ПериодРегистрации,
	               |			Организация = &Организация
	               |				И Район = &Район
	               |				И КлючПомещения В
	               |					(ВЫБРАТЬ
	               |						ДанныеДокумента.КлючТекКомнаты
	               |					ИЗ
	               |						ДанныеДокумента)) КАК энргКоличествоПрописанныхСрезПоследних
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокумента КАК ДанныеДокумента
	               |		ПО энргКоличествоПрописанныхСрезПоследних.Организация = ДанныеДокумента.Организация
	               |			И энргКоличествоПрописанныхСрезПоследних.Район = ДанныеДокумента.Район
	               |			И энргКоличествоПрописанныхСрезПоследних.КлючПомещения = ДанныеДокумента.КлючТекКомнаты
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	МАКСИМУМ(КоличествоЖильцовПоКомнатам.КоличествоЖильцов + ЕСТЬNULL(КоличествоПрописанныхТекКомнаты.Количество, КоличествоЖильцовПоКомнатам.Количество)) КАК КоличествоЖильцов,
	               |	КоличествоЖильцовПоКомнатам.ПериодНачисления КАК ПериодНачисления,
	               |	КоличествоЖильцовПоКомнатам.Организация КАК Организация,
	               |	КоличествоЖильцовПоКомнатам.Район КАК Район,
	               |	КоличествоЖильцовПоКомнатам.ЧастныйСектор КАК ЧастныйСектор,
	               |	КоличествоЖильцовПоКомнатам.Строение КАК Строение,
	               |	КоличествоЖильцовПоКомнатам.Помещение КАК Помещение
	               |ПОМЕСТИТЬ КоличествоЖильцовПомещения
	               |ИЗ
	               |	КоличествоЖильцовПоКомнатам КАК КоличествоЖильцовПоКомнатам
	               |		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоПрописанныхТекКомнаты КАК КоличествоПрописанныхТекКомнаты
	               |		ПО КоличествоЖильцовПоКомнатам.Организация = КоличествоПрописанныхТекКомнаты.Организация
	               |			И КоличествоЖильцовПоКомнатам.Район = КоличествоПрописанныхТекКомнаты.Район
	               |			И КоличествоЖильцовПоКомнатам.Помещение = КоличествоПрописанныхТекКомнаты.Помещение
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	КоличествоЖильцовПоКомнатам.ЧастныйСектор,
	               |	КоличествоЖильцовПоКомнатам.Помещение,
	               |	КоличествоЖильцовПоКомнатам.Организация,
	               |	КоличествоЖильцовПоКомнатам.ПериодНачисления,
	               |	КоличествоЖильцовПоКомнатам.Строение,
	               |	КоличествоЖильцовПоКомнатам.Район
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	КоличествоЖильцовПомещения.ПериодНачисления КАК ПериодНачисления,
	               |	КоличествоЖильцовПомещения.Организация КАК Организация,
	               |	КоличествоЖильцовПомещения.Район КАК Район,
	               |	КоличествоЖильцовПомещения.ЧастныйСектор КАК ЧастныйСектор,
	               |	КоличествоЖильцовПомещения.Строение КАК Строение,
	               |	КоличествоЖильцовПомещения.Помещение КАК Помещение,
	               |	КлючНормативов.Услуга КАК Услуга,
	               |	КоличествоЖильцовПомещения.КоличествоЖильцов КАК КоличествоЖильцов,
	               |	КлючНормативов.КлючНорматива КАК КлючНорматива
	               |ПОМЕСТИТЬ ДанныеКоличестваЖильцов
	               |ИЗ
	               |	КоличествоЖильцовПомещения КАК КоличествоЖильцовПомещения
	               |		ЛЕВОЕ СОЕДИНЕНИЕ КлючНормативов КАК КлючНормативов
	               |		ПО (ИСТИНА)";

	
	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("Организация");
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Район");
	Измерения.Добавить("ЧастныйСектор");
	Измерения.Добавить("Строение");
	Измерения.Добавить("Помещение");
	Измерения.Добавить("Услуга");   
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("КоличествоЖильцов");
	Ресурсы.Добавить("КлючНорматива");
	
	Параметры.вставить("Измерения",Измерения);
	Параметры.вставить("Ресурсы",Ресурсы);
	
	ЗаполнитьНомераПозиций(МВТ,Параметры,"ДанныеКоличестваЖильцов"); 
	
КонецПроцедуры

Процедура СтабПериодыУстановитьКоличествоСобственниковРазделенныеЛС(Ссылка, Параметры)
	
	МВТ 							= Новый МенеджерВременныхТаблиц;
	ПараметрыЗапроса 				= Параметры.ПараметрыЗапроса;
	
	ДанныеЗаполнения  				= Новый Структура("ВидБлагоустройства, ВидСобственности, КоличествоКомнат");	
	КлючПомещенияСтруктура 			= Новый Структура("Строение, Помещение",ПараметрыЗапроса.Строение,ПараметрыЗапроса.Помещение);
	энргРаботаСЛицевымСчетомСервер.ПараметрыРасчетаПомещения(ПараметрыЗапроса.Организация, ПараметрыЗапроса.Район,КлючПомещенияСтруктура,Параметры.МоментВремени,ДанныеЗаполнения);
	ДанныеЗаполнения.Вставить("КоличествоПрописанных", ссылка.Количество);
	
	Справочники.энргКлючиНормативов.КлючиПоСвойствамОбъекта(Параметры.МоментВремени, ПараметрыЗапроса.Организация, ПараметрыЗапроса.Район, Перечисления.энргТипыНачислений.ИндивидуальныеНачисления, МВТ, "КлючНормативов", ДанныеЗаполнения);  
	
	Запрос  						= Новый Запрос;
	Запрос.УстановитьПараметр("ссылка",			ссылка);
	Запрос.УстановитьПараметр("МоментВремени",	Параметры.МоментВремени);  
	Запрос.МенеджерВременныхТаблиц 	= МВТ;	
	
	ПараметрыЗапроса  				= параметры.ПараметрыЗапроса;	  	
	для Каждого стр из ПараметрыЗапроса цикл
		Запрос.УстановитьПараметр(стр.ключ,стр.значение); 
	КонецЦикла;  

	 Запрос.Текст = "ВЫБРАТЬ
	                |	энргУстановитьКоличествоПроживающих.ПериодНачисления КАК ПериодНачисления,
	                |	энргУстановитьКоличествоПроживающих.Организация КАК Организация,
	                |	энргУстановитьКоличествоПроживающих.Район КАК Район,
	                |	&ЧастныйСектор КАК ЧастныйСектор,
	                |	&Строение КАК Строение,
	                |	&Помещение КАК Помещение,
	                |	энргУстановитьКоличествоПроживающих.КлючПомещения КАК КлючТекКомнаты,
	                |	&РазделенныйЛС КАК РазделенныйЛС,
	                |	энргУстановитьКоличествоПроживающих.Количество КАК Количество
	                |ПОМЕСТИТЬ ДанныеДокумента
	                |ИЗ
	                |	Документ.энргУстановитьКоличествоПроживающих КАК энргУстановитьКоличествоПроживающих
	                |ГДЕ
	                |	энргУстановитьКоличествоПроживающих.Ссылка = &Ссылка
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	энргКлючиПомещений.КлючПомещения КАК КлючПомещения,
	                |	ДанныеДокумента.ПериодНачисления КАК ПериодНачисления,
	                |	ДанныеДокумента.Организация КАК Организация,
	                |	ДанныеДокумента.Район КАК Район,
	                |	ДанныеДокумента.ЧастныйСектор КАК ЧастныйСектор,
	                |	ДанныеДокумента.Строение КАК Строение,
	                |	ДанныеДокумента.Помещение КАК Помещение,
	                |	ДанныеДокумента.РазделенныйЛС КАК РазделенныйЛС,
	                |	ДанныеДокумента.Количество КАК Количество
	                |ПОМЕСТИТЬ КлючиКомнатПомещения
	                |ИЗ
	                |	РегистрСведений.энргКлючиПомещений КАК энргКлючиПомещений
	                |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокумента КАК ДанныеДокумента
	                |		ПО энргКлючиПомещений.Помещение.Родитель = ДанныеДокумента.Помещение
	                |			И энргКлючиПомещений.КлючПомещения <> ДанныеДокумента.КлючТекКомнаты
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	энргКоличествоПрописанныхСрезПоследних.Организация КАК Организация,
	                |	энргКоличествоПрописанныхСрезПоследних.Район КАК Район,
	                |	энргКоличествоПрописанныхСрезПоследних.Количество КАК Количество,
	                |	энргКоличествоПрописанныхСрезПоследних.КлючПомещения КАК КлючПомещения
	                |ПОМЕСТИТЬ КоличествоПрописанных
	                |ИЗ
	                |	РегистрСведений.энргКоличествоПрописанных.СрезПоследних(
	                |			&ПериодРегистрации,
	                |			Организация = &Организация
	                |				И Район = &Район
	                |				И КлючПомещения В
	                |					(ВЫБРАТЬ
	                |						КлючиКомнатПомещения.КлючПомещения
	                |					ИЗ
	                |						КлючиКомнатПомещения)) КАК энргКоличествоПрописанныхСрезПоследних
	                |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КлючиКомнатПомещения КАК КлючиКомнатПомещения
	                |		ПО энргКоличествоПрописанныхСрезПоследних.КлючПомещения = КлючиКомнатПомещения.КлючПомещения
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	энргКоличествоПроживающихСрезПоследних.Организация КАК Организация,
	                |	энргКоличествоПроживающихСрезПоследних.Район КАК Район,
	                |	энргКоличествоПроживающихСрезПоследних.Количество КАК Количество,
	                |	энргКоличествоПроживающихСрезПоследних.КлючПомещения КАК КлючПомещения
	                |ПОМЕСТИТЬ КоличествоПроживающих
	                |ИЗ
	                |	РегистрСведений.энргКоличествоПроживающих.СрезПоследних(
	                |			&ПериодРегистрации,
	                |			Организация = &Организация
	                |				И Район = &Район
	                |				И КлючПомещения В
	                |					(ВЫБРАТЬ
	                |						КлючиКомнатПомещения.КлючПомещения
	                |					ИЗ
	                |						КлючиКомнатПомещения)) КАК энргКоличествоПроживающихСрезПоследних
	                |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КлючиКомнатПомещения КАК КлючиКомнатПомещения
	                |		ПО энргКоличествоПроживающихСрезПоследних.КлючПомещения = КлючиКомнатПомещения.КлючПомещения
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	энргКоличествоСобственниковСрезПоследних.Организация КАК Организация,
	                |	энргКоличествоСобственниковСрезПоследних.Район КАК Район,
	                |	энргКоличествоСобственниковСрезПоследних.Количество КАК Количество,
	                |	энргКоличествоСобственниковСрезПоследних.КлючПомещения КАК КлючПомещения
	                |ПОМЕСТИТЬ КоличествоСобственников
	                |ИЗ
	                |	РегистрСведений.энргКоличествоСобственников.СрезПоследних(
	                |			&ПериодРегистрации,
	                |			Организация = &Организация
	                |				И Район = &Район
	                |				И КлючПомещения В
	                |					(ВЫБРАТЬ
	                |						КлючиКомнатПомещения.КлючПомещения
	                |					ИЗ
	                |						КлючиКомнатПомещения)) КАК энргКоличествоСобственниковСрезПоследних
	                |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КлючиКомнатПомещения КАК КлючиКомнатПомещения
	                |		ПО энргКоличествоСобственниковСрезПоследних.КлючПомещения = КлючиКомнатПомещения.КлючПомещения
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	МАКСИМУМ(ЕСТЬNULL(КоличествоПрописанных.Количество, ЕСТЬNULL(КоличествоПроживающих.Количество, ЕСТЬNULL(КоличествоСобственников.Количество, 0)))) КАК КоличествоЖильцов,
	                |	КлючиКомнатПомещения.ПериодНачисления КАК ПериодНачисления,
	                |	КлючиКомнатПомещения.Организация КАК Организация,
	                |	КлючиКомнатПомещения.Район КАК Район,
	                |	КлючиКомнатПомещения.ЧастныйСектор КАК ЧастныйСектор,
	                |	КлючиКомнатПомещения.Строение КАК Строение,
	                |	КлючиКомнатПомещения.Помещение КАК Помещение,
	                |	КлючиКомнатПомещения.Количество КАК Количество
	                |ПОМЕСТИТЬ КоличествоЖильцовПоКомнатам
	                |ИЗ
	                |	КлючиКомнатПомещения КАК КлючиКомнатПомещения
	                |		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоПрописанных КАК КоличествоПрописанных
	                |		ПО КлючиКомнатПомещения.КлючПомещения = КоличествоПрописанных.КлючПомещения
	                |		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоПроживающих КАК КоличествоПроживающих
	                |		ПО КлючиКомнатПомещения.КлючПомещения = КоличествоПроживающих.КлючПомещения
	                |		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоСобственников КАК КоличествоСобственников
	                |		ПО КлючиКомнатПомещения.КлючПомещения = КоличествоСобственников.КлючПомещения
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	КлючиКомнатПомещения.ПериодНачисления,
	                |	КлючиКомнатПомещения.Организация,
	                |	КлючиКомнатПомещения.Район,
	                |	КлючиКомнатПомещения.ЧастныйСектор,
	                |	КлючиКомнатПомещения.Строение,
	                |	КлючиКомнатПомещения.Помещение,
	                |	КлючиКомнатПомещения.Количество
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	энргКоличествоПрописанныхСрезПоследних.Организация КАК Организация,
	                |	энргКоличествоПрописанныхСрезПоследних.Район КАК Район,
	                |	энргКоличествоПрописанныхСрезПоследних.Количество КАК Количество,
	                |	энргКоличествоПрописанныхСрезПоследних.КлючПомещения КАК КлючПомещения,
	                |	ДанныеДокумента.Помещение КАК Помещение
	                |ПОМЕСТИТЬ КоличествоПрописанныхТекКомнаты
	                |ИЗ
	                |	РегистрСведений.энргКоличествоПрописанных.СрезПоследних(
	                |			&ПериодРегистрации,
	                |			Организация = &Организация
	                |				И Район = &Район
	                |				И КлючПомещения В
	                |					(ВЫБРАТЬ
	                |						ДанныеДокумента.КлючТекКомнаты
	                |					ИЗ
	                |						ДанныеДокумента)) КАК энргКоличествоПрописанныхСрезПоследних
	                |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокумента КАК ДанныеДокумента
	                |		ПО энргКоличествоПрописанныхСрезПоследних.Организация = ДанныеДокумента.Организация
	                |			И энргКоличествоПрописанныхСрезПоследних.Район = ДанныеДокумента.Район
	                |			И энргКоличествоПрописанныхСрезПоследних.КлючПомещения = ДанныеДокумента.КлючТекКомнаты
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	энргКоличествоПроживающихСрезПоследних.Организация КАК Организация,
	                |	энргКоличествоПроживающихСрезПоследних.Район КАК Район,
	                |	энргКоличествоПроживающихСрезПоследних.Количество КАК Количество,
	                |	энргКоличествоПроживающихСрезПоследних.КлючПомещения КАК КлючПомещения,
	                |	ДанныеДокумента.Помещение КАК Помещение
	                |ПОМЕСТИТЬ КоличествоПроживающихТекКомнаты
	                |ИЗ
	                |	РегистрСведений.энргКоличествоПроживающих.СрезПоследних(
	                |			&ПериодРегистрации,
	                |			Организация = &Организация
	                |				И Район = &Район
	                |				И КлючПомещения В
	                |					(ВЫБРАТЬ
	                |						ДанныеДокумента.КлючТекКомнаты
	                |					ИЗ
	                |						ДанныеДокумента)) КАК энргКоличествоПроживающихСрезПоследних
	                |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокумента КАК ДанныеДокумента
	                |		ПО энргКоличествоПроживающихСрезПоследних.Организация = ДанныеДокумента.Организация
	                |			И энргКоличествоПроживающихСрезПоследних.Район = ДанныеДокумента.Район
	                |			И энргКоличествоПроживающихСрезПоследних.КлючПомещения = ДанныеДокумента.КлючТекКомнаты
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	МАКСИМУМ(КоличествоЖильцовПоКомнатам.КоличествоЖильцов + ЕСТЬNULL(ЕСТЬNULL(КоличествоПрописанныхТекКомнаты.Количество, КоличествоПроживающихТекКомнаты.Количество), КоличествоЖильцовПоКомнатам.Количество)) КАК КоличествоЖильцов,
	                |	КоличествоЖильцовПоКомнатам.ПериодНачисления КАК ПериодНачисления,
	                |	КоличествоЖильцовПоКомнатам.Организация КАК Организация,
	                |	КоличествоЖильцовПоКомнатам.Район КАК Район,
	                |	КоличествоЖильцовПоКомнатам.ЧастныйСектор КАК ЧастныйСектор,
	                |	КоличествоЖильцовПоКомнатам.Строение КАК Строение,
	                |	КоличествоЖильцовПоКомнатам.Помещение КАК Помещение
	                |ПОМЕСТИТЬ КоличествоЖильцовПомещения
	                |ИЗ
	                |	КоличествоЖильцовПоКомнатам КАК КоличествоЖильцовПоКомнатам
	                |		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоПрописанныхТекКомнаты КАК КоличествоПрописанныхТекКомнаты
	                |		ПО КоличествоЖильцовПоКомнатам.Организация = КоличествоПрописанныхТекКомнаты.Организация
	                |			И КоличествоЖильцовПоКомнатам.Район = КоличествоПрописанныхТекКомнаты.Район
	                |			И КоличествоЖильцовПоКомнатам.Помещение = КоличествоПрописанныхТекКомнаты.Помещение
	                |			И КоличествоЖильцовПоКомнатам.Организация = КоличествоПрописанныхТекКомнаты.Организация
	                |			И КоличествоЖильцовПоКомнатам.Район = КоличествоПрописанныхТекКомнаты.Район
	                |			И КоличествоЖильцовПоКомнатам.Помещение = КоличествоПрописанныхТекКомнаты.Помещение,
	                |	КоличествоПроживающихТекКомнаты КАК КоличествоПроживающихТекКомнаты
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	КоличествоЖильцовПоКомнатам.ЧастныйСектор,
	                |	КоличествоЖильцовПоКомнатам.Помещение,
	                |	КоличествоЖильцовПоКомнатам.Организация,
	                |	КоличествоЖильцовПоКомнатам.ПериодНачисления,
	                |	КоличествоЖильцовПоКомнатам.Строение,
	                |	КоличествоЖильцовПоКомнатам.Район
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	КоличествоЖильцовПомещения.ПериодНачисления КАК ПериодНачисления,
	                |	КоличествоЖильцовПомещения.Организация КАК Организация,
	                |	КоличествоЖильцовПомещения.Район КАК Район,
	                |	КоличествоЖильцовПомещения.ЧастныйСектор КАК ЧастныйСектор,
	                |	КоличествоЖильцовПомещения.Строение КАК Строение,
	                |	КоличествоЖильцовПомещения.Помещение КАК Помещение,
	                |	КлючНормативов.Услуга КАК Услуга,
	                |	КоличествоЖильцовПомещения.КоличествоЖильцов КАК КоличествоЖильцов,
	                |	КлючНормативов.КлючНорматива КАК КлючНорматива
	                |ПОМЕСТИТЬ ДанныеКоличестваЖильцов
	                |ИЗ
	                |	КоличествоЖильцовПомещения КАК КоличествоЖильцовПомещения
	                |		ЛЕВОЕ СОЕДИНЕНИЕ КлючНормативов КАК КлючНормативов
	                |		ПО (ИСТИНА)";

	
	
	Запрос.Выполнить();
	
	Измерения = Новый Массив;
	Измерения.Добавить("Организация");
	Измерения.Добавить("ПериодНачисления");
	Измерения.Добавить("Район");
	Измерения.Добавить("ЧастныйСектор");
	Измерения.Добавить("Строение");
	Измерения.Добавить("Помещение");
	Измерения.Добавить("Услуга");   
	
	Ресурсы = Новый Массив;
	Ресурсы.Добавить("КоличествоЖильцов");
	Ресурсы.Добавить("КлючНорматива");
	
	Параметры.вставить("Измерения",Измерения);
	Параметры.вставить("Ресурсы",Ресурсы);
	
	ЗаполнитьНомераПозиций(МВТ,Параметры,"ДанныеКоличестваЖильцов"); 
	
КонецПроцедуры

#КонецОбласти





