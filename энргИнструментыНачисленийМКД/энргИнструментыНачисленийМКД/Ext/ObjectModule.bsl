
#Область СлужебныйИнтерфейс

// Процедура - Начисление на ОДН
//
// Параметры:
//  ПериодНачисления - 	 - 
//  Район			 - 	 - 
//  Дом				 - 	 - 
//  ДокументОбъект	 - 	 - 
//
Процедура НачислениеНаОДН(Организация,ПериодНачисления, Район,МКД, Набор)  Экспорт 
	
	ГраницыПериода  		= Обработки.энргГраницыПериодаНачисленияМенеджер.ГраницыРасчетногоПериода(Организация,Район,ПериодНачисления,Ложь);	 
	результатЗапроса 		= РезультатЗапросаНачисленияНаОДН(Организация,ПериодНачисления,Район,МКД,ГраницыПериода);	
	ОбработатьРезультатЗапросаНачисленийМКД(результатЗапроса, ГраницыПериода, МКД, Набор);
	
КонецПроцедуры

#КонецОбласти

#Область НачисленияМКД

Функция ТекстЗапросаПолучитьСтабильныеПериодыМКД()
	Текст  = 
	"ВЫБРАТЬ
	|	ПериодыСезонности.Организация КАК Организация,
	|	ПериодыСезонности.ПериодНачисления КАК ПериодНачисления,
	|	ПериодыСезонности.Район КАК Район,
	|	ПериодыСезонности.Сезонность КАК Сезонность,	
	|	ПериодыСезонности.НачалоСезонности КАК Период,
	|	1 КАК КоэфициентСезонности
	|ПОМЕСТИТЬ ПериодыИзмененияСезонности
	|ИЗ
	|	ПериодыСезонности КАК ПериодыСезонности
	|ГДЕ
	|	ПериодыСезонности.НачалоСезонности > ПериодыСезонности.НачалоОП
	|	И ПериодыСезонности.НачалоСезонности < ПериодыСезонности.ЗавершениеОП
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПериодыСезонности.Организация,
	|	ПериодыСезонности.ПериодНачисления КАК ПериодНачисления,
	|	ПериодыСезонности.Район,
	|	ПериодыСезонности.Сезонность,	
	|	ПериодыСезонности.КонецСезонности,
	|	0
	|ИЗ
	|	ПериодыСезонности КАК ПериодыСезонности
	|ГДЕ
	|	ПериодыСезонности.КонецСезонности > ПериодыСезонности.НачалоОП
	|	И ПериодыСезонности.КонецСезонности < ПериодыСезонности.ЗавершениеОП
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ПериодНачисления КАК ПериодНачисления,
	|	ВложенныйЗапрос.Район КАК Район,
	|	ВложенныйЗапрос.МКД КАК МКД,
	|	ВложенныйЗапрос.ПриборУчета КАК ПриборУчета,
	|	ВложенныйЗапрос.Шкала КАК Шкала,
	|	ВложенныйЗапрос.ТарифнаяЗона КАК ТарифнаяЗона,
	|	ВложенныйЗапрос.Показания КАК Показания,
	|	ВложенныйЗапрос.ДокРегистратор КАК ДокРегистратор,
	|	ВложенныйЗапрос.ДатаРегистратора КАК ДатаРегистратора,
	|	ВложенныйЗапрос.Приоритет КАК Приоритет
	|ПОМЕСТИТЬ МаксимальныеПоказанияСрезНабор
	|ИЗ
	|	(ВЫБРАТЬ
	|		МаксимальныеПоказанияСрез.Организация КАК Организация,
	|		ДОБАВИТЬКДАТЕ(МаксимальныеПоказанияСрез.ПериодНачисления, МЕСЯЦ, 1) КАК ПериодНачисления,
	|		МаксимальныеПоказанияСрез.Район КАК Район,
	|		МаксимальныеПоказанияСрез.МКД КАК МКД,
	|		МаксимальныеПоказанияСрез.ПриборУчета КАК ПриборУчета,
	|		МаксимальныеПоказанияСрез.Шкала КАК Шкала,
	|		МаксимальныеПоказанияСрез.ТарифнаяЗона КАК ТарифнаяЗона,
	|		МаксимальныеПоказанияСрез.Показания КАК Показания,
	|		МаксимальныеПоказанияСрез.ДокРегистратор КАК ДокРегистратор,
	|		МаксимальныеПоказанияСрез.ДатаРегистратора КАК ДатаРегистратора,
	|		0 КАК Приоритет
	|	ИЗ
	|		МаксимальныеПоказанияСрезПредыдущийПериод КАК МаксимальныеПоказанияСрез
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПредоставленныеПоказания.Организация,
	|		ПредоставленныеПоказания.ПериодНачисления,
	|		ПредоставленныеПоказания.Район,
	|		ПредоставленныеПоказания.МКД,
	|		ПредоставленныеПоказания.ПриборУчета,
	|		ПредоставленныеПоказания.Шкала,
	|		ПредоставленныеПоказания.ТарифнаяЗона,
	|		ПредоставленныеПоказания.Показания,
	|		ПредоставленныеПоказания.ДокРегистратор,
	|		ПредоставленныеПоказания.ДатаРегистратора,
	|		1
	|	ИЗ
	|		ПредоставленныеПоказания КАК ПредоставленныеПоказания
	|	ГДЕ
	|		ПредоставленныеПоказания.НомерПозиции = -1) КАК ВложенныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеПоказанияСрезНабор.Организация КАК Организация,
	|	МаксимальныеПоказанияСрезНабор.ПериодНачисления КАК ПериодНачисления,
	|	МаксимальныеПоказанияСрезНабор.Район КАК Район,
	|	МаксимальныеПоказанияСрезНабор.МКД,
	|	МаксимальныеПоказанияСрезНабор.ПриборУчета КАК ПриборУчета,
	|	МаксимальныеПоказанияСрезНабор.Шкала КАК Шкала,
	|	МаксимальныеПоказанияСрезНабор.ТарифнаяЗона КАК ТарифнаяЗона,
	|	МаксимальныеПоказанияСрезНабор.Показания КАК Показания,
	|	МаксимальныеПоказанияСрезНабор.ДокРегистратор КАК ДокРегистратор,
	|	МаксимальныеПоказанияСрезНабор.ДатаРегистратора КАК ДатаРегистратора,
	|	МаксимальныеПоказанияСрезНабор.Приоритет КАК Приоритет
	|ПОМЕСТИТЬ МаксимальныеПоказанияСрез
	|ИЗ
	|	МаксимальныеПоказанияСрезНабор КАК МаксимальныеПоказанияСрезНабор
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			МаксимальныеПоказанияСрезНабор.Организация КАК Организация,
	|			МаксимальныеПоказанияСрезНабор.ПериодНачисления КАК ПериодНачисления,
	|			МаксимальныеПоказанияСрезНабор.Район КАК Район,
	|			МаксимальныеПоказанияСрезНабор.МКД КАК МКД,
	|			МаксимальныеПоказанияСрезНабор.ПриборУчета КАК ПриборУчета,
	|			МаксимальныеПоказанияСрезНабор.Шкала КАК Шкала,
	|			МаксимальныеПоказанияСрезНабор.ТарифнаяЗона КАК ТарифнаяЗона,
	|			МАКСИМУМ(МаксимальныеПоказанияСрезНабор.Приоритет) КАК Приоритет
	|		ИЗ
	|			МаксимальныеПоказанияСрезНабор КАК МаксимальныеПоказанияСрезНабор
	|		
	|		СГРУППИРОВАТЬ ПО
	|			МаксимальныеПоказанияСрезНабор.Организация,
	|			МаксимальныеПоказанияСрезНабор.ПериодНачисления,
	|			МаксимальныеПоказанияСрезНабор.Район,
	|			МаксимальныеПоказанияСрезНабор.МКД,
	|			МаксимальныеПоказанияСрезНабор.ПриборУчета,
	|			МаксимальныеПоказанияСрезНабор.Шкала,
	|			МаксимальныеПоказанияСрезНабор.ТарифнаяЗона) КАК МаксимальныйПриоритетПоказаний
	|		ПО МаксимальныеПоказанияСрезНабор.Организация = МаксимальныйПриоритетПоказаний.Организация
	|			И МаксимальныеПоказанияСрезНабор.Организация = МаксимальныйПриоритетПоказаний.Организация
	|			И МаксимальныеПоказанияСрезНабор.ПериодНачисления = МаксимальныйПриоритетПоказаний.ПериодНачисления
	|			И МаксимальныеПоказанияСрезНабор.Район = МаксимальныйПриоритетПоказаний.Район
	|			И МаксимальныеПоказанияСрезНабор.МКД = МаксимальныйПриоритетПоказаний.МКД
	|			И МаксимальныеПоказанияСрезНабор.ПриборУчета = МаксимальныйПриоритетПоказаний.ПриборУчета
	|			И МаксимальныеПоказанияСрезНабор.Шкала = МаксимальныйПриоритетПоказаний.Шкала
	|			И МаксимальныеПоказанияСрезНабор.ТарифнаяЗона = МаксимальныйПриоритетПоказаний.ТарифнаяЗона
	|			И МаксимальныеПоказанияСрезНабор.Приоритет = МаксимальныйПриоритетПоказаний.Приоритет	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ПериодНачисления КАК ПериодНачисления,
	|	ВложенныйЗапрос.Район КАК Район,
	|	ВложенныйЗапрос.МКД КАК МКД,
	|	ВложенныйЗапрос.Услуга КАК Услуга,
	|	СУММА(ВложенныйЗапрос.ПлощадьМОП) КАК ПлощадьМОП,
	|	СУММА(ВложенныйЗапрос.ПлощадьАбонентов) КАК ПлощадьАбонентов,
	|	СУММА(ВложенныйЗапрос.ПлощадьСобственнаяПоставка) КАК ПлощадьСобственнаяПоставка
	|ПОМЕСТИТЬ ЗначенияПлощадейСтроений
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗначениеПлощадейМКД.Организация КАК Организация,
	|		ЗначениеПлощадейМКД.ПериодНачисления КАК ПериодНачисления,
	|		ЗначениеПлощадейМКД.Район КАК Район,
	|		ЗначениеПлощадейМКД.МКД КАК МКД,
	|		ЗначениеПлощадейМКД.Услуга КАК Услуга,
	|		ЗначениеПлощадейМКД.ПлощадьМОП КАК ПлощадьМОП,
	|		0 КАК ПлощадьАбонентов,
	|		0 КАК ПлощадьСобственнаяПоставка
	|	ИЗ
	|		ЗначениеПлощадейМКД КАК ЗначениеПлощадейМКД
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗначениеИндивидуальныхПлощадей.Организация,
	|		ЗначениеИндивидуальныхПлощадей.ПериодНачисления,
	|		ЗначениеИндивидуальныхПлощадей.Район,
	|		ЗначениеИндивидуальныхПлощадей.МКД,
	|		ЗначениеИндивидуальныхПлощадей.Услуга,
	|		0,
	|		ЗначениеИндивидуальныхПлощадей.ПлощадьАбонентов,
	|		ЗначениеИндивидуальныхПлощадей.ПлощадьСобственнаяПоставка
	|	ИЗ
	|		ЗначениеИндивидуальныхПлощадей КАК ЗначениеИндивидуальныхПлощадей) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Организация,
	|	ВложенныйЗапрос.ПериодНачисления,
	|	ВложенныйЗапрос.Район,
	|	ВложенныйЗапрос.МКД,
	|	ВложенныйЗапрос.Услуга
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеПоказанияСрез.Организация КАК Организация,
	|	МаксимальныеПоказанияСрез.ПериодНачисления КАК ПериодНачисления,
	|	МаксимальныеПоказанияСрез.Район КАК Район,
	|	МаксимальныеПоказанияСрез.МКД,
	|	МаксимальныеПоказанияСрез.ПриборУчета КАК ПриборУчета,
	|	МаксимальныеПоказанияСрез.Шкала КАК Шкала,
	|	МаксимальныеПоказанияСрез.ТарифнаяЗона КАК ТарифнаяЗона,
	|	МаксимальныеПоказанияСрез.Показания КАК Показания,
	|	ДАТАВРЕМЯ(1,1,1) КАК Период,	
	|	-1 КАК НомерПозиции,
	|	МаксимальныеПоказанияСрез.ДокРегистратор КАК ДокРегистратор
	|ПОМЕСТИТЬ НаборПоказаний
	|ИЗ
	|	МаксимальныеПоказанияСрез КАК МаксимальныеПоказанияСрез
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПредоставленныеПоказания.Организация,
	|	ПредоставленныеПоказания.ПериодНачисления,
	|	ПредоставленныеПоказания.Район,
	|	ПредоставленныеПоказания.МКД,
	|	ПредоставленныеПоказания.ПриборУчета,
	|	ПредоставленныеПоказания.Шкала,
	|	ПредоставленныеПоказания.ТарифнаяЗона,
	|	ПредоставленныеПоказания.Показания,
	|	ПредоставленныеПоказания.ДатаРегистратора,
	|	ПредоставленныеПоказания.НомерПозиции,
	|	ПредоставленныеПоказания.ДокРегистратор
	|ИЗ
	|	ПредоставленныеПоказания КАК ПредоставленныеПоказания
	|ГДЕ
	|	ПредоставленныеПоказания.НомерПозиции >= 0 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоказанияНачало.Организация КАК Организация,
	|	ПоказанияНачало.ПериодНачисления КАК ПериодНачисления,
	|	ПоказанияНачало.Район КАК Район,
	|	ПоказанияНачало.МКД,
	|	ПоказанияНачало.ПриборУчета КАК ПриборУчета,
	|	ПоказанияНачало.Шкала КАК Шкала,
	|	ПоказанияНачало.ТарифнаяЗона КАК ТарифнаяЗона,
	|	ПоказанияНачало.Показания КАК Показания,
	|	ПоказанияНачало.Период КАК НачалоПериодДействия,
	|	ВЫБОР
	|		КОГДА ПоказанияКонец.Период ЕСТЬ NULL
	|			ТОГДА ДАТАВРЕМЯ(3999,12,31)
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(ПоказанияКонец.Период, СЕКУНДА, -1)
	|	КОНЕЦ КАК ОкончаниеПериодаДействия,
	|	ВЫБОР
	|		КОГДА ПоказанияНачало.НомерПозиции = -1
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПризнакНачалаПериода,
	|	ПоказанияНачало.ДокРегистратор КАК ДокРегистратор
	|ПОМЕСТИТЬ ПериодыПоказаний
	|ИЗ
	|	НаборПоказаний КАК ПоказанияНачало
	|		ЛЕВОЕ СОЕДИНЕНИЕ НаборПоказаний КАК ПоказанияКонец
	|		ПО ПоказанияНачало.Организация = ПоказанияКонец.Организация
	|			И ПоказанияНачало.ПериодНачисления = ПоказанияКонец.ПериодНачисления
	|			И ПоказанияНачало.Район = ПоказанияКонец.Район
	|			И ПоказанияНачало.МКД = ПоказанияКонец.МКД
	|			И ПоказанияНачало.ПриборУчета = ПоказанияКонец.ПриборУчета
	|			И ПоказанияНачало.Шкала = ПоказанияКонец.Шкала
	|			И ПоказанияНачало.ТарифнаяЗона = ПоказанияКонец.ТарифнаяЗона
	|			И (ПоказанияНачало.НомерПозиции = ПоказанияКонец.НомерПозиции - 1)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредоставленныеПоказания.Организация КАК Организация,
	|	ПредоставленныеПоказания.ПериодНачисления КАК ПериодНачисления,
	|	ПредоставленныеПоказания.Район КАК Район,
	|	ПредоставленныеПоказания.МКД КАК МКД,
	|	ПредоставленныеПоказания.ПриборУчета КАК ПриборУчета,
	|	МАКСИМУМ(ПредоставленныеПоказания.ПоказанияТекущегоПериода) КАК ПоказанияТекущегоПериода
	|ПОМЕСТИТЬ ПредоставленныеПоказанияПоМКД
	|ИЗ
	|	ПредоставленныеПоказания КАК ПредоставленныеПоказания
	|
	|СГРУППИРОВАТЬ ПО
	|	ПредоставленныеПоказания.Организация,
	|	ПредоставленныеПоказания.ПериодНачисления,
	|	ПредоставленныеПоказания.Район,
	|	ПредоставленныеПоказания.МКД,
	|	ПредоставленныеПоказания.ПриборУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредоставленныеПоказания.Организация КАК Организация,
	|	ПредоставленныеПоказания.ПериодНачисления КАК ПериодНачисления,
	|	ПредоставленныеПоказания.Район КАК Район,
	|	ПредоставленныеПоказания.МКД КАК МКД,
	|	ПредоставленныеПоказания.ПриборУчета КАК ПриборУчета,
	|	ПредоставленныеПоказания.Шкала КАК Шкала,
	|	ПредоставленныеПоказания.ТарифнаяЗона КАК ТарифнаяЗона,
	|	МАКСИМУМ(ПредоставленныеПоказания.ВСрок) КАК ВСрок
	|ПОМЕСТИТЬ ПредоставленныеПоказанияВСрок
	|ИЗ
	|	ПредоставленныеПоказания КАК ПредоставленныеПоказания
	|
	|СГРУППИРОВАТЬ ПО
	|	ПредоставленныеПоказания.Организация,
	|	ПредоставленныеПоказания.ПериодНачисления,
	|	ПредоставленныеПоказания.Район,
	|	ПредоставленныеПоказания.МКД,
	|	ПредоставленныеПоказания.ПриборУчета,
	|	ПредоставленныеПоказания.Шкала,
	|	ПредоставленныеПоказания.ТарифнаяЗона
	|;
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтабильныеПериоды.Организация КАК Организация,
	|	СтабильныеПериоды.ПериодНачисления КАК ПериодНачисления,
	|	СтабильныеПериоды.Район КАК Район,
	|	СтабильныеПериоды.МКД
	|ПОМЕСТИТЬ ЗакрытиеМКД
	|ИЗ
	|	СтабильныеПериодыНачало КАК СтабильныеПериоды
	|ГДЕ
	|	СтабильныеПериоды.НомерПозиции > 0
	|	И НЕ СтабильныеПериоды.МКДОткрыт
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|" + энргНачисления.СформироватьСтрокуДляЗапроса("энргСтабильныеПериодыМКД","СтабильныеПериоды","",Истина,Ложь) + "
	|	СтабильныеПериоды.ЗависитОтУслуги КАК ЗависитОтУслуги,
	|	СтабильныеПериоды.НеПрименятьЗависимостьЕслиБольшеОднойТочки,
	|	СтабильныеПериоды.ИспользоватьКоэффициентСдерживанияРостаПлаты,
	|	СтабильныеПериоды.РегистрируетОбъем,
	|	СтабильныеПериоды.МаксимальноВозможныеПоказания,
	|	СтабильныеПериоды.НачалоОП КАК НачалоОП,
	|	СтабильныеПериоды.ЗавершениеОП КАК ЗавершениеОП,
	|	СтабильныеПериоды.ДнейВПериоде КАК ДнейВПериоде,
	|	ЕСТЬNULL(НастройкаСезонностиУслугМКД.Коэффициент, ЕСТЬNULL(НастройкаСезонностиУслуг.Коэффициент, 1)) КАК КоэффициентНорматива,
	|	ЕСТЬNULL(НастройкаСезонностиУслугМКД.КоэффициентНеПрименятьСезонность, ЕСТЬNULL(НастройкаСезонностиУслуг.КоэффициентНеПрименятьСезонность, 1)) КАК КоэффициентНормативаНеПрименятьСезонность, 
	|	ЕСТЬNULL(НастройкаСезонностиУслугМКД.КорректироватьГодовойОбъем, ЕСТЬNULL(НастройкаСезонностиУслуг.КорректироватьГодовойОбъем, ЛОЖЬ)) КАК КорректироватьГодовойОбъем,
	|	ЕСТЬNULL(НастройкаСезонностиУслугМКД.НеПрименятьСезонность, ЕСТЬNULL(НастройкаСезонностиУслуг.НеПрименятьСезонность, ЛОЖЬ)) КАК НеПрименятьСезонность,
	|	ЕСТЬNULL(НастройкаСезонностиУслугМКД.ОбъемЗаПрошлыйГод, ЕСТЬNULL(НастройкаСезонностиУслуг.ОбъемЗаПрошлыйГод, ЛОЖЬ)) КАК ОбъемЗаПрошлыйГод,
	|	СпособыРасчетаПоНаправлениям.Сезонность КАК Сезонность,
	|	ЕСТЬNULL(СпособыРасчетаПоНаправлениям.НачислятьЗаПолныйМесяц, ЛОЖЬ) КАК НачислятьЗаПолныйМесяц,
	|	СтабильныеПериоды.ВидПлощадиУслуги КАК ВидПлощади,
	|	ЕСТЬNULL(ПредоставленныеПоказанияПоМКД.ПоказанияТекущегоПериода, ЛОЖЬ) КАК ЕстьПоказанияМКД,	
	|	ЕСТЬNULL(ТипСхемыГВС.ТипСхемы, ЗНАЧЕНИЕ(Перечисление.энргТипыСхемТеплоснабжения.ПустаяСсылка)) КАК ТипСхемы,
	|	ЕСТЬNULL(ВидыТепловыхПунктов.ВидТепловогоПункта, ЗНАЧЕНИЕ(Перечисление.энргВидыТепловыхПунктов.ПустаяСсылка)) КАК ВидТепловогоПункта,	
	|	ЕСТЬNULL(ЗначенияПлощадейСтроений.ПлощадьМОП, 0) КАК ПлощадьМОП,
	|	ЕСТЬNULL(ЗначенияПлощадейСтроений.ПлощадьАбонентов, 0) КАК ПлощадьАбонентов,
	|	ЕСТЬNULL(ЗначенияПлощадейСтроений.ПлощадьСобственнаяПоставка, 0) КАК ПлощадьСобственнаяПоставка,	
	|	ЕСТЬNULL(ДокументыНачислений.ДокументНачисления, &ДокументНачисленияПустаяСсылка) КАК ДокументНачисления,
	|	ЕСТЬNULL(ДокументыНачислений.ПометкаУдаления, ЛОЖЬ) КАК ДокументНачисленияПометкаУдаления,	
	|	ЛОЖЬ КАК ВыводПрибораУчета,	
	|	ВЫБОР 
	|		КОГДА ЗакрытиеМКД.Организация ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК МКДЗакрытВТекущемПериоде	
	|ПОМЕСТИТЬ СтабильныеПериодыСезонность
	|ИЗ
	|	СтабильныеПериодыНачало КАК СтабильныеПериоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ СпособыРасчетаПоНаправлениям КАК СпособыРасчетаПоНаправлениям
	|		ПО СтабильныеПериоды.Организация = СпособыРасчетаПоНаправлениям.Организация
	|			И СтабильныеПериоды.ПериодНачисления = СпособыРасчетаПоНаправлениям.ПериодНачисления
	|			И СтабильныеПериоды.Район = СпособыРасчетаПоНаправлениям.Район
	|			И СтабильныеПериоды.Услуга = СпособыРасчетаПоНаправлениям.Услуга
	|		ЛЕВОЕ СОЕДИНЕНИЕ НастройкаСезонностиУслуг КАК НастройкаСезонностиУслуг
	|		ПО СтабильныеПериоды.Организация = НастройкаСезонностиУслуг.Организация
	|			И СтабильныеПериоды.ПериодНачисления = НастройкаСезонностиУслуг.ПериодНачисления
	|			И СтабильныеПериоды.Район = НастройкаСезонностиУслуг.Район
	|			И СтабильныеПериоды.Услуга = НастройкаСезонностиУслуг.Услуга
	|			И (НастройкаСезонностиУслуг.МКД = ЗНАЧЕНИЕ(Справочник.энргСтроения.ПустаяСсылка))
	|		ЛЕВОЕ СОЕДИНЕНИЕ НастройкаСезонностиУслуг КАК НастройкаСезонностиУслугМКД
	|		ПО СтабильныеПериоды.Организация = НастройкаСезонностиУслугМКД.Организация
	|			И СтабильныеПериоды.ПериодНачисления = НастройкаСезонностиУслугМКД.ПериодНачисления
	|			И СтабильныеПериоды.Район = НастройкаСезонностиУслугМКД.Район
	|			И СтабильныеПериоды.Услуга = НастройкаСезонностиУслугМКД.Услуга
	|			И СтабильныеПериоды.МКД = НастройкаСезонностиУслугМКД.МКД
	|			И (НастройкаСезонностиУслугМКД.МКД <> ЗНАЧЕНИЕ(Справочник.энргСтроения.ПустаяСсылка))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПредоставленныеПоказанияПоМКД КАК ПредоставленныеПоказанияПоМКД
	|		ПО СтабильныеПериоды.Организация = ПредоставленныеПоказанияПоМКД.Организация
	|			И СтабильныеПериоды.ПериодНачисления = ПредоставленныеПоказанияПоМКД.ПериодНачисления
	|			И СтабильныеПериоды.Район = ПредоставленныеПоказанияПоМКД.Район
	|			И СтабильныеПериоды.МКД = ПредоставленныеПоказанияПоМКД.МКД
	|			И СтабильныеПериоды.ПриборУчета = ПредоставленныеПоказанияПоМКД.ПриборУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗакрытиеМКД КАК ЗакрытиеМКД
	|		ПО СтабильныеПериоды.Организация = ЗакрытиеМКД.Организация
	|			И СтабильныеПериоды.ПериодНачисления = ЗакрытиеМКД.ПериодНачисления
	|			И СтабильныеПериоды.Район = ЗакрытиеМКД.Район
	|			И СтабильныеПериоды.МКД = ЗакрытиеМКД.МКД 
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТипСхемыГВС КАК ТипСхемыГВС
	|		ПО СтабильныеПериоды.Организация = ТипСхемыГВС.Организация
	|			И СтабильныеПериоды.ПериодНачисления = ТипСхемыГВС.ПериодНачисления
	|			И СтабильныеПериоды.Район = ТипСхемыГВС.Район
	|			И СтабильныеПериоды.МКД = ТипСхемыГВС.МКД
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВидыТепловыхПунктов КАК ВидыТепловыхПунктов
	|		ПО СтабильныеПериоды.Организация = ВидыТепловыхПунктов.Организация
	|			И СтабильныеПериоды.ПериодНачисления = ВидыТепловыхПунктов.ПериодНачисления
	|			И СтабильныеПериоды.Район = ВидыТепловыхПунктов.Район
	|			И СтабильныеПериоды.МКД = ВидыТепловыхПунктов.МКД		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДокументыНачислений КАК ДокументыНачислений
	|		ПО СтабильныеПериоды.Организация = ДокументыНачислений.Организация
	|			И СтабильныеПериоды.ПериодНачисления = ДокументыНачислений.ПериодНачисления
	|			И СтабильныеПериоды.Район = ДокументыНачислений.Район		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗначенияПлощадейСтроений КАК ЗначенияПлощадейСтроений
	|		ПО СтабильныеПериоды.Организация = ЗначенияПлощадейСтроений.Организация
	|			И СтабильныеПериоды.ПериодНачисления = ЗначенияПлощадейСтроений.ПериодНачисления
	|			И СтабильныеПериоды.Район = ЗначенияПлощадейСтроений.Район
	|			И СтабильныеПериоды.Услуга = ЗначенияПлощадейСтроений.Услуга
	|			И СтабильныеПериоды.МКД = ЗначенияПлощадейСтроений.МКД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////	
	|ВЫБРАТЬ
	|	СтабильныеПериодыСезонность.Организация КАК Организация,
	|	СтабильныеПериодыСезонность.ПериодНачисления КАК ПериодНачисления,
	|	СтабильныеПериодыСезонность.Район КАК Район,
	|	СтабильныеПериодыСезонность.МКД КАК МКД,
	|	СтабильныеПериодыСезонность.ТочкаУчета КАК ТочкаУчета,
	|	ПериодыИзмененияСезонности.Период КАК ПериодРегистрации
	|ПОМЕСТИТЬ НомераСтрокИзмененияСезонности
	|ИЗ
	|	СтабильныеПериодыСезонность КАК СтабильныеПериодыСезонность
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПериодыИзмененияСезонности КАК ПериодыИзмененияСезонности
	|		ПО СтабильныеПериодыСезонность.Организация = ПериодыИзмененияСезонности.Организация
	|			И СтабильныеПериодыСезонность.Район = ПериодыИзмененияСезонности.Район
	|			И СтабильныеПериодыСезонность.ПериодНачисления = ПериодыИзмененияСезонности.ПериодНачисления
	|			И СтабильныеПериодыСезонность.Сезонность = ПериодыИзмененияСезонности.Сезонность
	|			И (ВЫБОР
	|				КОГДА СтабильныеПериодыСезонность.НачислятьЗаПолныйМесяц
	|						И (ПериодыИзмененияСезонности.Период МЕЖДУ СтабильныеПериодыСезонность.НачалоОП И СтабильныеПериодыСезонность.ЗавершениеОП)
	|					ТОГДА ЛОЖЬ
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтабильныеПериодыСезонность.Организация КАК Организация,
	|	СтабильныеПериодыСезонность.ПериодНачисления КАК ПериодНачисления,
	|	СтабильныеПериодыСезонность.Район КАК Район,
	|	СтабильныеПериодыСезонность.МКД КАК МКД,
	|	СтабильныеПериодыСезонность.ТочкаУчета КАК ТочкаУчета,
	|	СтабильныеПериодыСезонность.Услуга КАК Услуга,
	|	НомераСтрокИзменения.ПериодРегистрации КАК ПериодРегистрации,
	|	МАКСИМУМ(СтабильныеПериодыСезонность.НомерПозиции) КАК НомерПозиции
	|ПОМЕСТИТЬ ИзменениеНомеровСтрок
	|ИЗ
	|	СтабильныеПериодыСезонность КАК СтабильныеПериодыСезонность
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НомераСтрокИзмененияСезонности КАК НомераСтрокИзменения
	|		ПО СтабильныеПериодыСезонность.Организация = НомераСтрокИзменения.Организация
	|			И СтабильныеПериодыСезонность.ПериодНачисления = НомераСтрокИзменения.ПериодНачисления
	|			И СтабильныеПериодыСезонность.Район = НомераСтрокИзменения.Район
	|			И СтабильныеПериодыСезонность.МКД = НомераСтрокИзменения.МКД
	|			И СтабильныеПериодыСезонность.ТочкаУчета = НомераСтрокИзменения.ТочкаУчета
	|			И СтабильныеПериодыСезонность.ПериодРегистрации < НомераСтрокИзменения.ПериодРегистрации
	|
	|СГРУППИРОВАТЬ ПО
	|	СтабильныеПериодыСезонность.Организация,
	|	СтабильныеПериодыСезонность.ПериодНачисления,
	|	СтабильныеПериодыСезонность.Район,
	|	СтабильныеПериодыСезонность.МКД,
	|	СтабильныеПериодыСезонность.ТочкаУчета,
	|	СтабильныеПериодыСезонность.Услуга,
	|	НомераСтрокИзменения.ПериодРегистрации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИзменениеНомеровСтрок.Организация КАК Организация,
	|	ИзменениеНомеровСтрок.ПериодНачисления КАК ПериодНачисления,
	|	ИзменениеНомеровСтрок.Район КАК Район,
	|	ИзменениеНомеровСтрок.МКД,
	|	ИзменениеНомеровСтрок.ТочкаУчета КАК ТочкаУчета,
	|	ИзменениеНомеровСтрок.Услуга КАК Услуга,
	|	ИзменениеНомеровСтрок.ПериодРегистрации КАК ПериодРегистрации,
	|	ИзменениеНомеровСтрок.НомерПозиции КАК НомерПозиции,
	|	СУММА(ВЫБОР
	|			КОГДА ИзменениеНомеровСтрокПраво.Организация ЕСТЬ NULL
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК УвеличениеНомераПозиции
	|ПОМЕСТИТЬ ИзменениеНомеровСтрокУвеличениеПозиций
	|ИЗ
	|	ИзменениеНомеровСтрок КАК ИзменениеНомеровСтрок
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИзменениеНомеровСтрок КАК ИзменениеНомеровСтрокПраво
	|		ПО ИзменениеНомеровСтрок.Организация = ИзменениеНомеровСтрокПраво.Организация
	|			И ИзменениеНомеровСтрок.ПериодНачисления = ИзменениеНомеровСтрокПраво.ПериодНачисления
	|			И ИзменениеНомеровСтрок.Район = ИзменениеНомеровСтрокПраво.Район
	|			И ИзменениеНомеровСтрок.МКД = ИзменениеНомеровСтрокПраво.МКД
	|			И ИзменениеНомеровСтрок.ТочкаУчета = ИзменениеНомеровСтрокПраво.ТочкаУчета
	|			И ИзменениеНомеровСтрок.Услуга = ИзменениеНомеровСтрокПраво.Услуга
	|			И (ВЫБОР
	|				КОГДА ИзменениеНомеровСтрок.НомерПозиции = ИзменениеНомеровСтрокПраво.НомерПозиции
	|					ТОГДА ИзменениеНомеровСтрок.ПериодРегистрации > ИзменениеНомеровСтрокПраво.ПериодРегистрации
	|				ИНАЧЕ ИзменениеНомеровСтрок.НомерПозиции > ИзменениеНомеровСтрокПраво.НомерПозиции
	|			КОНЕЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзменениеНомеровСтрок.Организация,
	|	ИзменениеНомеровСтрок.ПериодНачисления,
	|	ИзменениеНомеровСтрок.Район,
	|	ИзменениеНомеровСтрок.МКД,
	|	ИзменениеНомеровСтрок.ТочкаУчета,
	|	ИзменениеНомеровСтрок.Услуга,
	|	ИзменениеНомеровСтрок.ПериодРегистрации,
	|	ИзменениеНомеровСтрок.НомерПозиции
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтабильныеПериодыСезонность.Организация КАК Организация,
	|	СтабильныеПериодыСезонность.ПериодНачисления КАК ПериодНачисления,
	|	СтабильныеПериодыСезонность.Район КАК Район,
	|	СтабильныеПериодыСезонность.МКД КАК МКД,
	|	СтабильныеПериодыСезонность.Услуга КАК Услуга,
	|	СтабильныеПериодыСезонность.ТочкаУчета КАК ТочкаУчета,
	|	СтабильныеПериодыСезонность.НомерПозиции КАК НомерПозиции,
	|	СУММА(1) КАК КоличествоСтрокПеред
	|ПОМЕСТИТЬ ДобавляемыеСтрокиПередНомеромПозиции
	|ИЗ
	|	СтабильныеПериодыСезонность КАК СтабильныеПериодыСезонность
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИзменениеНомеровСтрок КАК ИзменениеНомеровСтрок
	|		ПО СтабильныеПериодыСезонность.Организация = ИзменениеНомеровСтрок.Организация
	|			И СтабильныеПериодыСезонность.ПериодНачисления = ИзменениеНомеровСтрок.ПериодНачисления
	|			И СтабильныеПериодыСезонность.Район = ИзменениеНомеровСтрок.Район
	|			И СтабильныеПериодыСезонность.МКД = ИзменениеНомеровСтрок.МКД
	|			И СтабильныеПериодыСезонность.Услуга = ИзменениеНомеровСтрок.Услуга
	|			И СтабильныеПериодыСезонность.ТочкаУчета = ИзменениеНомеровСтрок.ТочкаУчета
	|			И СтабильныеПериодыСезонность.НомерПозиции > ИзменениеНомеровСтрок.НомерПозиции
	|
	|СГРУППИРОВАТЬ ПО
	|	СтабильныеПериодыСезонность.Организация,
	|	СтабильныеПериодыСезонность.ПериодНачисления,
	|	СтабильныеПериодыСезонность.Район,
	|	СтабильныеПериодыСезонность.МКД,
	|	СтабильныеПериодыСезонность.Услуга,
	|	СтабильныеПериодыСезонность.ТочкаУчета,
	|	СтабильныеПериодыСезонность.НомерПозиции
	|;
	|////////////////////////////////////////////////////////////////////////////////	
	|ВЫБРАТЬ
	|" + энргНачисления.СформироватьСтрокуДляЗапроса("энргСтабильныеПериодыМКД","СтабильныеПериодыСезонность","НомерПозиции,ДокРегистратор,ДатаРегистратора,ПериодРегистрации",Истина,Ложь) + "
	|	СтабильныеПериодыСезонность.ЗависитОтУслуги КАК ЗависитОтУслуги,
	|	СтабильныеПериодыСезонность.НеПрименятьЗависимостьЕслиБольшеОднойТочки,
	|	СтабильныеПериодыСезонность.ИспользоватьКоэффициентСдерживанияРостаПлаты,
	|	СтабильныеПериодыСезонность.РегистрируетОбъем,
	|	СтабильныеПериодыСезонность.МаксимальноВозможныеПоказания,
	|	СтабильныеПериодыСезонность.НачалоОП КАК НачалоОП,
	|	СтабильныеПериодыСезонность.ЗавершениеОП КАК ЗавершениеОП,
	|	СтабильныеПериодыСезонность.ДнейВПериоде КАК ДнейВПериоде,
	|	СтабильныеПериодыСезонность.КоэффициентНорматива КАК КоэффициентНорматива,
	|	СтабильныеПериодыСезонность.КоэффициентНормативаНеПрименятьСезонность КАК КоэффициентНормативаНеПрименятьСезонность, 
	|	СтабильныеПериодыСезонность.КорректироватьГодовойОбъем КАК КорректироватьГодовойОбъем,
	|	СтабильныеПериодыСезонность.НеПрименятьСезонность КАК НеПрименятьСезонность,
	|	СтабильныеПериодыСезонность.ОбъемЗаПрошлыйГод КАК ОбъемЗаПрошлыйГод,
	|	СтабильныеПериодыСезонность.Сезонность КАК Сезонность,
	|	СтабильныеПериодыСезонность.ВидПлощади КАК ВидПлощади,
	|	СтабильныеПериодыСезонность.НачислятьЗаПолныйМесяц КАК НачислятьЗаПолныйМесяц,
	|	СтабильныеПериодыСезонность.ЕстьПоказанияМКД КАК ЕстьПоказанияМКД,	
	|	СтабильныеПериодыСезонность.ТипСхемы КАК ТипСхемы,
	|	СтабильныеПериодыСезонность.ВидТепловогоПункта КАК ВидТепловогоПункта,	
	|	СтабильныеПериодыСезонность.ПлощадьМОП КАК ПлощадьМОП,
	|	СтабильныеПериодыСезонность.ПлощадьАбонентов КАК ПлощадьАбонентов,
	|	СтабильныеПериодыСезонность.ПлощадьСобственнаяПоставка КАК ПлощадьСобственнаяПоставка,	
	|	СтабильныеПериодыСезонность.ДокументНачисления КАК ДокументНачисления,
	|	СтабильныеПериодыСезонность.ДокументНачисленияПометкаУдаления КАК ДокументНачисленияПометкаУдаления,	
	|	СтабильныеПериодыСезонность.ВыводПрибораУчета КАК ВыводПрибораУчета,	
	|	СтабильныеПериодыСезонность.МКДЗакрытВТекущемПериоде КАК МКДЗакрытВТекущемПериоде,
	|	СтабильныеПериодыСезонность.НомерПозиции + ЕСТЬNULL(ДобавляемыеСтрокиПередНомеромПозиции.КоличествоСтрокПеред, 0) КАК НомерПозиции,
	|	ЕСТЬNULL(ДобавляемыеСтрокиПередНомеромПозиции.КоличествоСтрокПеред, 0) КАК УвеличениеПозиции,		
	|	СтабильныеПериодыСезонность.ПериодРегистрации,
	|	СтабильныеПериодыСезонность.ДокРегистратор,
	|	СтабильныеПериодыСезонность.ДатаРегистратора
	|ПОМЕСТИТЬ СтабильныеПериодыПослеИзмененияСезонности
	|ИЗ
	|	СтабильныеПериодыСезонность КАК СтабильныеПериодыСезонность
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДобавляемыеСтрокиПередНомеромПозиции КАК ДобавляемыеСтрокиПередНомеромПозиции
	|		ПО СтабильныеПериодыСезонность.Организация = ДобавляемыеСтрокиПередНомеромПозиции.Организация 
	|			И СтабильныеПериодыСезонность.ПериодНачисления = ДобавляемыеСтрокиПередНомеромПозиции.ПериодНачисления
	|			И СтабильныеПериодыСезонность.Район = ДобавляемыеСтрокиПередНомеромПозиции.Район
	|			И СтабильныеПериодыСезонность.МКД = ДобавляемыеСтрокиПередНомеромПозиции.МКД
	|			И СтабильныеПериодыСезонность.ТочкаУчета = ДобавляемыеСтрокиПередНомеромПозиции.ТочкаУчета
	|			И СтабильныеПериодыСезонность.Услуга = ДобавляемыеСтрокиПередНомеромПозиции.Услуга
	|			И СтабильныеПериодыСезонность.НомерПозиции = ДобавляемыеСтрокиПередНомеромПозиции.НомерПозиции
	|
	|ОБЪЕДИНИТЬ ВСЕ	
	|
	|ВЫБРАТЬ
	|" + энргНачисления.СформироватьСтрокуДляЗапроса("энргСтабильныеПериодыМКД","СтабильныеПериодыСезонность","НомерПозиции,ДокРегистратор,ДатаРегистратора,ПериодРегистрации",Истина,Ложь) + "
	|	СтабильныеПериодыСезонность.ЗависитОтУслуги КАК ЗависитОтУслуги,
	|	СтабильныеПериодыСезонность.НеПрименятьЗависимостьЕслиБольшеОднойТочки,
	|	СтабильныеПериодыСезонность.ИспользоватьКоэффициентСдерживанияРостаПлаты,
	|	СтабильныеПериодыСезонность.РегистрируетОбъем,
	|	СтабильныеПериодыСезонность.МаксимальноВозможныеПоказания,
	|	СтабильныеПериодыСезонность.НачалоОП КАК НачалоОП,
	|	СтабильныеПериодыСезонность.ЗавершениеОП КАК ЗавершениеОП,
	|	СтабильныеПериодыСезонность.ДнейВПериоде КАК ДнейВПериоде,
	|	СтабильныеПериодыСезонность.КоэффициентНорматива КАК КоэффициентНорматива,
	|	СтабильныеПериодыСезонность.КоэффициентНормативаНеПрименятьСезонность КАК КоэффициентНормативаНеПрименятьСезонность, 
	|	СтабильныеПериодыСезонность.КорректироватьГодовойОбъем КАК КорректироватьГодовойОбъем,
	|	СтабильныеПериодыСезонность.НеПрименятьСезонность КАК НеПрименятьСезонность,
	|	СтабильныеПериодыСезонность.ОбъемЗаПрошлыйГод КАК ОбъемЗаПрошлыйГод,
	|	СтабильныеПериодыСезонность.Сезонность КАК Сезонность,
	|	СтабильныеПериодыСезонность.ВидПлощади КАК ВидПлощади,
	|	СтабильныеПериодыСезонность.НачислятьЗаПолныйМесяц КАК НачислятьЗаПолныйМесяц,
	|	СтабильныеПериодыСезонность.ЕстьПоказанияМКД КАК ЕстьПоказанияМКД,	
	|	СтабильныеПериодыСезонность.ТипСхемы КАК ТипСхемы,
	|	СтабильныеПериодыСезонность.ВидТепловогоПункта КАК ВидТепловогоПункта,	
	|	СтабильныеПериодыСезонность.ПлощадьМОП КАК ПлощадьМОП,
	|	СтабильныеПериодыСезонность.ПлощадьАбонентов КАК ПлощадьАбонентов,
	|	СтабильныеПериодыСезонность.ПлощадьСобственнаяПоставка КАК ПлощадьСобственнаяПоставка,	
	|	СтабильныеПериодыСезонность.ДокументНачисления КАК ДокументНачисления,
	|	СтабильныеПериодыСезонность.ДокументНачисленияПометкаУдаления КАК ДокументНачисленияПометкаУдаления,	
	|	СтабильныеПериодыСезонность.ВыводПрибораУчета КАК ВыводПрибораУчета,	
	|	СтабильныеПериодыСезонность.МКДЗакрытВТекущемПериоде КАК МКДЗакрытВТекущемПериоде,
	|	СтабильныеПериодыСезонность.НомерПозиции + 1 + ИзменениеНомеровСтрокУвеличениеПозиций.УвеличениеНомераПозиции КАК НомерПозиции,
	|	1 + ИзменениеНомеровСтрокУвеличениеПозиций.УвеличениеНомераПозиции КАК УвеличениеПозиции,
	|	ИзменениеНомеровСтрокУвеличениеПозиций.ПериодРегистрации,
	|	НЕОПРЕДЕЛЕНО КАК ДокРегистратор,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаРегистратора
	|ИЗ 
	|	СтабильныеПериодыСезонность КАК СтабильныеПериодыСезонность
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИзменениеНомеровСтрокУвеличениеПозиций КАК ИзменениеНомеровСтрокУвеличениеПозиций
	|			ПО СтабильныеПериодыСезонность.Организация = ИзменениеНомеровСтрокУвеличениеПозиций.Организация 
	|			И СтабильныеПериодыСезонность.ПериодНачисления = ИзменениеНомеровСтрокУвеличениеПозиций.ПериодНачисления
	|			И СтабильныеПериодыСезонность.Район = ИзменениеНомеровСтрокУвеличениеПозиций.Район
	|			И СтабильныеПериодыСезонность.МКД = ИзменениеНомеровСтрокУвеличениеПозиций.МКД
	|			И СтабильныеПериодыСезонность.ТочкаУчета = ИзменениеНомеровСтрокУвеличениеПозиций.ТочкаУчета
	|			И СтабильныеПериодыСезонность.Услуга = ИзменениеНомеровСтрокУвеличениеПозиций.Услуга
	|			И СтабильныеПериодыСезонность.НомерПозиции = ИзменениеНомеровСтрокУвеличениеПозиций.НомерПозиции
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////	
	|ВЫБРАТЬ
	|	" + энргНачисления.СформироватьСтрокуДляЗапроса("энргСтабильныеПериодыМКД","СтабильныеПериодыНачало","",Истина,Ложь) + "	
	|	СтабильныеПериодыНачало.ЗависитОтУслуги КАК ЗависитОтУслуги,
	|	СтабильныеПериодыНачало.НеПрименятьЗависимостьЕслиБольшеОднойТочки,
	|	СтабильныеПериодыНачало.ИспользоватьКоэффициентСдерживанияРостаПлаты,
	|	СтабильныеПериодыНачало.РегистрируетОбъем,
	|	СтабильныеПериодыНачало.МаксимальноВозможныеПоказания,
	|	СтабильныеПериодыНачало.НачалоОП КАК НачалоОП,
	|	СтабильныеПериодыНачало.ЗавершениеОП КАК ЗавершениеОП,
	|	СтабильныеПериодыНачало.ДнейВПериоде КАК ДнейВПериоде,
	|	СтабильныеПериодыНачало.КоэффициентНорматива КАК КоэффициентНорматива,
	|	СтабильныеПериодыНачало.КоэффициентНормативаНеПрименятьСезонность КАК КоэффициентНормативаНеПрименятьСезонность, 
	|	СтабильныеПериодыНачало.КорректироватьГодовойОбъем КАК КорректироватьГодовойОбъем,
	|	СтабильныеПериодыНачало.НеПрименятьСезонность КАК НеПрименятьСезонность,
	|	СтабильныеПериодыНачало.ОбъемЗаПрошлыйГод КАК ОбъемЗаПрошлыйГод,
	|	СтабильныеПериодыНачало.Сезонность КАК Сезонность,
	|	СтабильныеПериодыНачало.ВидПлощади КАК ВидПлощади,
	|	СтабильныеПериодыНачало.НачислятьЗаПолныйМесяц КАК НачислятьЗаПолныйМесяц,
	|	СтабильныеПериодыНачало.ЕстьПоказанияМКД КАК ЕстьПоказанияМКД,	
	|	СтабильныеПериодыНачало.ТипСхемы КАК ТипСхемы,
	|	СтабильныеПериодыНачало.ВидТепловогоПункта КАК ВидТепловогоПункта,	
	|	СтабильныеПериодыНачало.ПлощадьМОП КАК ПлощадьМОП,
	|	СтабильныеПериодыНачало.ПлощадьАбонентов КАК ПлощадьАбонентов,
	|	СтабильныеПериодыНачало.ПлощадьСобственнаяПоставка КАК ПлощадьСобственнаяПоставка,	
	|	СтабильныеПериодыНачало.ДокументНачисления КАК ДокументНачисления,
	|	СтабильныеПериодыНачало.ДокументНачисленияПометкаУдаления КАК ДокументНачисленияПометкаУдаления,	
	|	СтабильныеПериодыНачало.ВыводПрибораУчета КАК ВыводПрибораУчета,	
	|	СтабильныеПериодыНачало.МКДЗакрытВТекущемПериоде КАК МКДЗакрытВТекущемПериоде,
	|	СтабильныеПериодыНачало.УвеличениеПозиции КАК УвеличениеПозиции,
	|	СтабильныеПериодыНачало.ПериодРегистрации,
	|	ВЫБОР
	|		КОГДА СтабильныеПериодыНачало.ПериодРегистрации < СтабильныеПериодыНачало.НачалоОП
	|			ТОГДА СтабильныеПериодыНачало.НачалоОП
	|		КОГДА СтабильныеПериодыНачало.ПериодРегистрации > СтабильныеПериодыНачало.ЗавершениеОП
	|			ТОГДА СтабильныеПериодыНачало.ЗавершениеОП
	|		ИНАЧЕ СтабильныеПериодыНачало.ПериодРегистрации
	|	КОНЕЦ КАК НачалоПериода,
	|	ВЫБОР
	|		КОГДА СтабильныеПериодыНачалоОкончание.ПериодРегистрации ЕСТЬ NULL
	|			ТОГДА СтабильныеПериодыНачало.ЗавершениеОП
	|		КОГДА СтабильныеПериодыНачалоОкончание.ПериодРегистрации > СтабильныеПериодыНачало.ЗавершениеОП
	|			ТОГДА СтабильныеПериодыНачало.ЗавершениеОП
	|		КОГДА СтабильныеПериодыНачалоОкончание.ПериодРегистрации < СтабильныеПериодыНачало.НачалоОП
	|			ТОГДА СтабильныеПериодыНачало.НачалоОП
	|		ИНАЧЕ СтабильныеПериодыНачалоОкончание.ПериодРегистрации
	|	КОНЕЦ КАК КонецПериода,	
	|	ЕСТЬNULL(СтабильныеПериодыНачалоОкончание.ПериодРегистрации, ДАТАВРЕМЯ(1,1,1)) КАК СледующийПериодРегистрации,	
	|	ЕСТЬNULL(СтабильныеПериодыНачалоОкончание.ДокРегистратор, НЕОПРЕДЕЛЕНО) КАК СледующийРегистратор	
	
	|ПОМЕСТИТЬ Периоды
	|ИЗ 
	|   СтабильныеПериодыПослеИзмененияСезонности КАК СтабильныеПериодыНачало
	|   ЛЕВОЕ СОЕДИНЕНИЕ СтабильныеПериодыПослеИзмененияСезонности КАК СтабильныеПериодыНачалоОкончание
	|   	ПО (СтабильныеПериодыНачало.НомерПозиции = СтабильныеПериодыНачалоОкончание.НомерПозиции - 1)
	|			И СтабильныеПериодыНачало.Организация = СтабильныеПериодыНачалоОкончание.Организация
	|			И СтабильныеПериодыНачало.ПериодНачисления = СтабильныеПериодыНачалоОкончание.ПериодНачисления
	|			И СтабильныеПериодыНачало.Район = СтабильныеПериодыНачалоОкончание.Район
	|			И СтабильныеПериодыНачало.МКД = СтабильныеПериодыНачалоОкончание.МКД
	|			И СтабильныеПериодыНачало.ТочкаУчета = СтабильныеПериодыНачалоОкончание.ТочкаУчета
	|			И СтабильныеПериодыНачало.Услуга = СтабильныеПериодыНачалоОкончание.Услуга
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	" + энргНачисления.СформироватьСтрокуДляЗапроса("энргСтабильныеПериодыМКД","СтабильныеПериодыПослеИзмененияСезонности","Шкала,КоэффициентПУ",Истина,Ложь) + "	 
	
	|	СтабильныеПериодыПослеИзмененияСезонности.ЗависитОтУслуги КАК ЗависитОтУслуги,
	|	СтабильныеПериодыПослеИзмененияСезонности.НеПрименятьЗависимостьЕслиБольшеОднойТочки,
	|	СтабильныеПериодыПослеИзмененияСезонности.ИспользоватьКоэффициентСдерживанияРостаПлаты,
	|	СтабильныеПериодыПослеИзмененияСезонности.РегистрируетОбъем,
	|	СтабильныеПериодыПослеИзмененияСезонности.МаксимальноВозможныеПоказания,
	|	СтабильныеПериодыПослеИзмененияСезонности.НачалоОП КАК НачалоОП,
	|	СтабильныеПериодыПослеИзмененияСезонности.ЗавершениеОП КАК ЗавершениеОП,
	|	СтабильныеПериодыПослеИзмененияСезонности.ДнейВПериоде КАК ДнейВПериоде,
	|	СтабильныеПериодыПослеИзмененияСезонности.КоэффициентНорматива КАК КоэффициентНорматива,
	|	СтабильныеПериодыПослеИзмененияСезонности.КоэффициентНормативаНеПрименятьСезонность КАК КоэффициентНормативаНеПрименятьСезонность, 
	|	СтабильныеПериодыПослеИзмененияСезонности.КорректироватьГодовойОбъем КАК КорректироватьГодовойОбъем,
	|	СтабильныеПериодыПослеИзмененияСезонности.НеПрименятьСезонность КАК НеПрименятьСезонность,
	|	СтабильныеПериодыПослеИзмененияСезонности.ОбъемЗаПрошлыйГод КАК ОбъемЗаПрошлыйГод,
	|	СтабильныеПериодыПослеИзмененияСезонности.Сезонность КАК Сезонность,
	|	СтабильныеПериодыПослеИзмененияСезонности.ВидПлощади КАК ВидПлощади,
	|	СтабильныеПериодыПослеИзмененияСезонности.НачислятьЗаПолныйМесяц КАК НачислятьЗаПолныйМесяц,
	|	СтабильныеПериодыПослеИзмененияСезонности.ЕстьПоказанияМКД КАК ЕстьПоказанияМКД,	
	|	СтабильныеПериодыПослеИзмененияСезонности.ТипСхемы КАК ТипСхемы,
	|	СтабильныеПериодыПослеИзмененияСезонности.ВидТепловогоПункта КАК ВидТепловогоПункта,	
	|	СтабильныеПериодыПослеИзмененияСезонности.ПлощадьМОП КАК ПлощадьМОП,
	|	СтабильныеПериодыПослеИзмененияСезонности.ПлощадьАбонентов КАК ПлощадьАбонентов,
	|	СтабильныеПериодыПослеИзмененияСезонности.ПлощадьСобственнаяПоставка КАК ПлощадьСобственнаяПоставка,	
	|	СтабильныеПериодыПослеИзмененияСезонности.ДокументНачисления КАК ДокументНачисления,
	|	СтабильныеПериодыПослеИзмененияСезонности.ДокументНачисленияПометкаУдаления КАК ДокументНачисленияПометкаУдаления,	
	|	СтабильныеПериодыПослеИзмененияСезонности.ВыводПрибораУчета КАК ВыводПрибораУчета,	
	|	СтабильныеПериодыПослеИзмененияСезонности.МКДЗакрытВТекущемПериоде КАК МКДЗакрытВТекущемПериоде,
	|	СтабильныеПериодыПослеИзмененияСезонности.УвеличениеПозиции КАК УвеличениеПозиции,
	|	СтабильныеПериодыПослеИзмененияСезонности.ПериодРегистрации,
	|	СтабильныеПериодыПослеИзмененияСезонности.НачалоПериода КАК НачалоПериода,
	|	СтабильныеПериодыПослеИзмененияСезонности.КонецПериода КАК КонецПериода,	
	|	СтабильныеПериодыПослеИзмененияСезонности.СледующийПериодРегистрации КАК СледующийПериодРегистрации,	
	|	СтабильныеПериодыПослеИзмененияСезонности.СледующийРегистратор КАК СледующийРегистратор,	
	|	ЕСТЬNULL(СтабильныеПериодыШкалы.Шкала, СтабильныеПериодыПослеИзмененияСезонности.Шкала) КАК Шкала,
	|	ЕСТЬNULL(СтабильныеПериодыШкалы.КоэффициентПУ, СтабильныеПериодыПослеИзмененияСезонности.КоэффициентПУ) КАК КоэффициентПУ,
	|	ЕСТЬNULL(СтабильныеПериодыШкалы.ВидДифференцированности, ЗНАЧЕНИЕ(Справочник.энргВидыДифференцированности.Однотарифный)) КАК ВидДифференцированности,
	|	ВЫБОР
	|		КОГДА СтабильныеПериодыПослеИзмененияСезонности.Шкала = ЗНАЧЕНИЕ(Справочник.энргШкалыПриборовУчета.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПривязанаКШкале	
	|ПОМЕСТИТЬ ПериодыШкалы
	|ИЗ
	|	Периоды КАК СтабильныеПериодыПослеИзмененияСезонности
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтабильныеПериодыШкалы КАК СтабильныеПериодыШкалы
	|		ПО СтабильныеПериодыПослеИзмененияСезонности.Организация = СтабильныеПериодыШкалы.Организация
	|			И СтабильныеПериодыПослеИзмененияСезонности.ПериодНачисления = СтабильныеПериодыШкалы.ПериодНачисления
	|			И СтабильныеПериодыПослеИзмененияСезонности.Район = СтабильныеПериодыШкалы.Район
	|			И СтабильныеПериодыПослеИзмененияСезонности.МКД = СтабильныеПериодыШкалы.МКД
	|			И СтабильныеПериодыПослеИзмененияСезонности.ТочкаУчета = СтабильныеПериодыШкалы.ТочкаУчета
	|			И (СтабильныеПериодыПослеИзмененияСезонности.НомерПозиции - СтабильныеПериодыПослеИзмененияСезонности.УвеличениеПозиции = СтабильныеПериодыШкалы.НомерПозиции)
	|			И (ВЫБОР
	|				КОГДА СтабильныеПериодыПослеИзмененияСезонности.Шкала = ЗНАЧЕНИЕ(Справочник.энргШкалыПриборовУчета.ПустаяСсылка)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ СтабильныеПериодыПослеИзмененияСезонности.Шкала = СтабильныеПериодыШкалы.Шкала
	|			КОНЕЦ)
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	" + энргНачисления.СформироватьСтрокуДляЗапроса("энргСтабильныеПериодыМКД","СтабильныеПериоды","",Истина,Ложь) + "	
	|	СтабильныеПериоды.ЗависитОтУслуги КАК ЗависитОтУслуги,
	|	СтабильныеПериоды.НеПрименятьЗависимостьЕслиБольшеОднойТочки,
	|	СтабильныеПериоды.ИспользоватьКоэффициентСдерживанияРостаПлаты,
	|	СтабильныеПериоды.РегистрируетОбъем,
	|	СтабильныеПериоды.МаксимальноВозможныеПоказания,
	|	СтабильныеПериоды.НачалоОП КАК НачалоОП,
	|	СтабильныеПериоды.ЗавершениеОП КАК ЗавершениеОП,
	|	СтабильныеПериоды.ДнейВПериоде КАК ДнейВПериоде,
	|	СтабильныеПериоды.КоэффициентНорматива КАК КоэффициентНорматива,
	|	СтабильныеПериоды.КоэффициентНормативаНеПрименятьСезонность КАК КоэффициентНормативаНеПрименятьСезонность, 
	|	СтабильныеПериоды.КорректироватьГодовойОбъем КАК КорректироватьГодовойОбъем,
	|	СтабильныеПериоды.НеПрименятьСезонность КАК НеПрименятьСезонность,
	|	СтабильныеПериоды.ОбъемЗаПрошлыйГод КАК ОбъемЗаПрошлыйГод,
	|	СтабильныеПериоды.Сезонность КАК Сезонность,
	|	СтабильныеПериоды.ВидПлощади КАК ВидПлощади,
	|	СтабильныеПериоды.НачислятьЗаПолныйМесяц КАК НачислятьЗаПолныйМесяц,
	|	СтабильныеПериоды.ЕстьПоказанияМКД КАК ЕстьПоказанияМКД,	
	|	СтабильныеПериоды.ТипСхемы КАК ТипСхемы,
	|	СтабильныеПериоды.ВидТепловогоПункта КАК ВидТепловогоПункта,	
	|	СтабильныеПериоды.ПлощадьМОП КАК ПлощадьМОП,
	|	СтабильныеПериоды.ПлощадьАбонентов КАК ПлощадьАбонентов,
	|	СтабильныеПериоды.ПлощадьСобственнаяПоставка КАК ПлощадьСобственнаяПоставка,	
	|	СтабильныеПериоды.ДокументНачисления КАК ДокументНачисления,
	|	СтабильныеПериоды.ДокументНачисленияПометкаУдаления КАК ДокументНачисленияПометкаУдаления,	
	|	СтабильныеПериоды.ВыводПрибораУчета КАК ВыводПрибораУчета,	
	|	СтабильныеПериоды.МКДЗакрытВТекущемПериоде КАК МКДЗакрытВТекущемПериоде,
	|	СтабильныеПериоды.УвеличениеПозиции КАК УвеличениеПозиции,
	|	СтабильныеПериоды.ПериодРегистрации,
	|	СтабильныеПериоды.НачалоПериода КАК НачалоПериода,
	|	СтабильныеПериоды.КонецПериода КАК КонецПериода,	
	|	СтабильныеПериоды.СледующийПериодРегистрации КАК СледующийПериодРегистрации,	
	|	СтабильныеПериоды.СледующийРегистратор КАК СледующийРегистратор,	
	|	СтабильныеПериоды.ВидДифференцированности КАК ВидДифференцированности,
	|	СтабильныеПериоды.ПривязанаКШкале КАК ПривязанаКШкале,
	|	ВЫБОР
	|		КОГДА ВидыДифференцированностиТарифныеЗоны.ВидДифференцированности ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.энргТарифныеЗоны.БезРазбивки)
	|		ИНАЧЕ ВидыДифференцированностиТарифныеЗоны.ТарифнаяЗона
	|	КОНЕЦ КАК ТарифнаяЗона	
	|ПОМЕСТИТЬ ПериодыШкалыТарифнаяЗона
	|ИЗ
	|	ПериодыШкалы КАК СтабильныеПериоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВидыДифференцированностиТарифныеЗоны КАК ВидыДифференцированностиТарифныеЗоны
	|		ПО СтабильныеПериоды.ВидДифференцированности = ВидыДифференцированностиТарифныеЗоны.ВидДифференцированности		
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	" + энргНачисления.СформироватьСтрокуДляЗапроса("энргСтабильныеПериодыМКД","СтабильныеПериоды","",Истина,Ложь) + "
	
	|	СтабильныеПериоды.ЗависитОтУслуги КАК ЗависитОтУслуги,
	|	СтабильныеПериоды.НеПрименятьЗависимостьЕслиБольшеОднойТочки,
	|	СтабильныеПериоды.ИспользоватьКоэффициентСдерживанияРостаПлаты,
	|	СтабильныеПериоды.РегистрируетОбъем,
	|	СтабильныеПериоды.МаксимальноВозможныеПоказания,
	|	СтабильныеПериоды.НачалоОП КАК НачалоОП,
	|	СтабильныеПериоды.ЗавершениеОП КАК ЗавершениеОП,
	|	СтабильныеПериоды.ДнейВПериоде КАК ДнейВПериоде,
	|	СтабильныеПериоды.КоэффициентНорматива КАК КоэффициентНорматива,
	|	СтабильныеПериоды.КоэффициентНормативаНеПрименятьСезонность КАК КоэффициентНормативаНеПрименятьСезонность, 
	|	СтабильныеПериоды.КорректироватьГодовойОбъем КАК КорректироватьГодовойОбъем,
	|	СтабильныеПериоды.НеПрименятьСезонность КАК НеПрименятьСезонность,
	|	СтабильныеПериоды.ОбъемЗаПрошлыйГод КАК ОбъемЗаПрошлыйГод,
	|	СтабильныеПериоды.Сезонность КАК Сезонность,
	|	СтабильныеПериоды.ВидПлощади КАК ВидПлощади,
	|	СтабильныеПериоды.НачислятьЗаПолныйМесяц КАК НачислятьЗаПолныйМесяц,
	|	СтабильныеПериоды.ЕстьПоказанияМКД КАК ЕстьПоказанияМКД,	
	|	СтабильныеПериоды.ТипСхемы КАК ТипСхемы,
	|	СтабильныеПериоды.ВидТепловогоПункта КАК ВидТепловогоПункта,	
	|	СтабильныеПериоды.ПлощадьМОП КАК ПлощадьМОП,
	|	СтабильныеПериоды.ПлощадьАбонентов КАК ПлощадьАбонентов,
	|	СтабильныеПериоды.ПлощадьСобственнаяПоставка КАК ПлощадьСобственнаяПоставка,	
	|	СтабильныеПериоды.ДокументНачисления КАК ДокументНачисления,
	|	СтабильныеПериоды.ДокументНачисленияПометкаУдаления КАК ДокументНачисленияПометкаУдаления,	
	|	СтабильныеПериоды.ВыводПрибораУчета КАК ВыводПрибораУчета,	
	|	СтабильныеПериоды.МКДЗакрытВТекущемПериоде КАК МКДЗакрытВТекущемПериоде,
	|	СтабильныеПериоды.УвеличениеПозиции КАК УвеличениеПозиции,
	|	СтабильныеПериоды.ПериодРегистрации,
	|	СтабильныеПериоды.НачалоПериода КАК НачалоПериода,
	|	СтабильныеПериоды.КонецПериода КАК КонецПериода,	
	|	СтабильныеПериоды.СледующийПериодРегистрации КАК СледующийПериодРегистрации,	
	|	СтабильныеПериоды.СледующийРегистратор КАК СледующийРегистратор,	
	|	СтабильныеПериоды.ВидДифференцированности КАК ВидДифференцированности,
	|	СтабильныеПериоды.ПривязанаКШкале КАК ПривязанаКШкале,
	|	СтабильныеПериоды.ТарифнаяЗона КАК ТарифнаяЗона,	
	|	ВЫБОР
	|		КОГДА ВЫБОР
	|					КОГДА СтабильныеПериоды.ПериодРегистрации < СтабильныеПериоды.НачалоОП
	|						ТОГДА СтабильныеПериоды.НачалоОП
	|					КОГДА СтабильныеПериоды.ПериодРегистрации > СтабильныеПериоды.ЗавершениеОП
	|						ТОГДА СтабильныеПериоды.ЗавершениеОП
	|					ИНАЧЕ СтабильныеПериоды.ПериодРегистрации
	|				КОНЕЦ = СтабильныеПериоды.НачалоОП
	|				И СтабильныеПериоды.РегистрируетОбъем
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ПериодыПоказанийНачалоПериодаРегистрации.Показания, 0)
	|	КОНЕЦ КАК НачальныеПоказания,
	|	ЕСТЬNULL(ПериодыПоказанийОкончаниеПериодаРегистрации.Показания, 0) КАК КонечныеПоказания,	
	|	ВЫБОР
	|		КОГДА СтабильныеПериоды.НеПрименятьСезонность
	|			ТОГДА 1
	|		КОГДА ПериодыСезонности.Организация ЕСТЬ NULL
	|			ТОГДА 1
	|		КОГДА ПериодыСезонности.НачалоСезонности <= СтабильныеПериоды.ПериодРегистрации
	|				И СтабильныеПериоды.ПериодРегистрации < ПериодыСезонности.КонецСезонности
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоэффициентСезоности,
	|	ВЫБОР
	|		КОГДА ПериодыСезонности.Организация ЕСТЬ NULL
	|			ТОГДА 1
	|		КОГДА СтабильныеПериоды.НачислятьЗаПолныйМесяц
	|				И (ПериодыСезонности.НачалоСезонности МЕЖДУ СтабильныеПериоды.НачалоОП И СтабильныеПериоды.ЗавершениеОП)
	|			ТОГДА 1
	|		КОГДА СтабильныеПериоды.НачислятьЗаПолныйМесяц
	|				И (ПериодыСезонности.КонецСезонности МЕЖДУ СтабильныеПериоды.НачалоОП И СтабильныеПериоды.ЗавершениеОП)
	|			ТОГДА 1
	|		КОГДА ПериодыСезонности.НачалоСезонности <= СтабильныеПериоды.ПериодРегистрации
	|				И СтабильныеПериоды.ПериодРегистрации < ПериодыСезонности.КонецСезонности
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоэффициентСезоностиОбъемПотребленный,
	|	ВЫБОР
	|		КОГДА ПредоставленныеПоказанияВСрок.ПериодНачисления ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ПредоставленныеПоказанияВСрок.ВСрок
	|	КОНЕЦ КАК ПоказанияВСрок,
	|	ВЫБОР
	|		КОГДА ПредоставленныеПоказанияВСрок.ПериодНачисления ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПоказанияПредоставлены,
	|	ЕСТЬNULL(СреднееПотреблениеМКД.Объем, -1) КАК СреднийОбъем,
	|	ЕСТЬNULL(СреднееПотреблениеМКД.ОбъемПотребленный, -1) КАК СреднийОбъемПотребленный,
	|	ВЫБОР
	|		КОГДА НЕ СтабильныеПериоды.ЗависитОтУслуги = ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(СреднееПотреблениеЗависитОтУслуги.Объем, -1)
	|		ИНАЧЕ -1
	|	КОНЕЦ КАК СреднийОбъемЗависитОтУслуги,
	|	ВЫБОР
	|		КОГДА НЕ СтабильныеПериоды.ЗависитОтУслуги = ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(СреднееПотреблениеЗависитОтУслуги.ОбъемПотребленный, -1)
	|		ИНАЧЕ -1
	|	КОНЕЦ КАК СреднийОбъемПотребленныйЗависитОтУслуги
	|ПОМЕСТИТЬ СтабильныеПериодыПоказания
	|ИЗ
	|	ПериодыШкалыТарифнаяЗона КАК СтабильныеПериоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПериодыПоказаний КАК ПериодыПоказанийНачалоПериодаРегистрации
	|		ПО (ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(СтабильныеПериоды.ДокРегистратор) = ТИП(Документ.энргНачислениеМКД)
	|					ТОГДА ПериодыПоказанийНачалоПериодаРегистрации.ПризнакНачалаПериода
	|				КОГДА ТИПЗНАЧЕНИЯ(СтабильныеПериоды.ДокРегистратор) = ТИП(Документ.энргВводНачальныхОстатковМКД)
	|					ТОГДА ПериодыПоказанийНачалоПериодаРегистрации.ПризнакНачалаПериода
	|				КОГДА ТИПЗНАЧЕНИЯ(СтабильныеПериоды.ДокРегистратор) = ТИП(Документ.энргОткрытиеМКД)
	|					ТОГДА СтабильныеПериоды.ДокРегистратор = ПериодыПоказанийНачалоПериодаРегистрации.ДокРегистратор
	|				КОГДА ТИПЗНАЧЕНИЯ(СтабильныеПериоды.ДокРегистратор) = ТИП(Документ.энргОперацияСПриборомУчетаМКД)
	|					ТОГДА СтабильныеПериоды.ДокРегистратор = ПериодыПоказанийНачалоПериодаРегистрации.ДокРегистратор
	|				КОГДА ТИПЗНАЧЕНИЯ(СтабильныеПериоды.ДокРегистратор) = ТИП(Документ.энргОперацияСУслугамиМКД)
	|					ТОГДА СтабильныеПериоды.ДокРегистратор = ПериодыПоказанийНачалоПериодаРегистрации.ДокРегистратор
	|				ИНАЧЕ СтабильныеПериоды.ПериодРегистрации МЕЖДУ ПериодыПоказанийНачалоПериодаРегистрации.НачалоПериодДействия И ПериодыПоказанийНачалоПериодаРегистрации.ОкончаниеПериодаДействия
	|			КОНЕЦ)
	|			И СтабильныеПериоды.Организация = ПериодыПоказанийНачалоПериодаРегистрации.Организация
	|			И СтабильныеПериоды.ПериодНачисления = ПериодыПоказанийНачалоПериодаРегистрации.ПериодНачисления
	|			И СтабильныеПериоды.Район = ПериодыПоказанийНачалоПериодаРегистрации.Район
	|			И СтабильныеПериоды.МКД = ПериодыПоказанийНачалоПериодаРегистрации.МКД
	|			И СтабильныеПериоды.ПриборУчета = ПериодыПоказанийНачалоПериодаРегистрации.ПриборУчета
	|			И СтабильныеПериоды.Шкала = ПериодыПоказанийНачалоПериодаРегистрации.Шкала
	|			И СтабильныеПериоды.ТарифнаяЗона = ПериодыПоказанийНачалоПериодаРегистрации.ТарифнаяЗона
	
	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПериодыПоказаний КАК ПериодыПоказанийОкончаниеПериодаРегистрации
	|		ПО (ВЫБОР
	|				КОГДА СтабильныеПериоды.РегистрируетОбъем И ПериодыПоказанийОкончаниеПериодаРегистрации.ПризнакНачалаПериода 
	|					ТОГДА ЛОЖЬ
	|				КОГДА ТИПЗНАЧЕНИЯ(СтабильныеПериоды.СледующийРегистратор) = ТИП(Документ.энргНачислениеМКД)
	|					ТОГДА ПериодыПоказанийОкончаниеПериодаРегистрации.ПризнакНачалаПериода
	|				КОГДА ТИПЗНАЧЕНИЯ(СтабильныеПериоды.СледующийРегистратор) = ТИП(Документ.энргВводНачальныхОстатковМКД)
	|					ТОГДА ПериодыПоказанийОкончаниеПериодаРегистрации.ПризнакНачалаПериода
	|				КОГДА ТИПЗНАЧЕНИЯ(СтабильныеПериоды.СледующийРегистратор) = ТИП(Документ.энргОткрытиеМКД)
	|					ТОГДА СтабильныеПериоды.СледующийРегистратор = ПериодыПоказанийОкончаниеПериодаРегистрации.ДокРегистратор
	|				КОГДА ТИПЗНАЧЕНИЯ(СтабильныеПериоды.СледующийРегистратор) = ТИП(Документ.энргОперацияСПриборомУчетаМКД)
	|					ТОГДА СтабильныеПериоды.СледующийРегистратор = ПериодыПоказанийОкончаниеПериодаРегистрации.ДокРегистратор
	|				КОГДА ТИПЗНАЧЕНИЯ(СтабильныеПериоды.СледующийРегистратор) = ТИП(Документ.энргОперацияСУслугамиМКД)
	|					ТОГДА СтабильныеПериоды.СледующийРегистратор = ПериодыПоказанийОкончаниеПериодаРегистрации.ДокРегистратор
	|				ИНАЧЕ СтабильныеПериоды.СледующийПериодРегистрации МЕЖДУ ПериодыПоказанийОкончаниеПериодаРегистрации.НачалоПериодДействия И ПериодыПоказанийОкончаниеПериодаРегистрации.ОкончаниеПериодаДействия
	|			КОНЕЦ)
	|			И СтабильныеПериоды.Организация = ПериодыПоказанийОкончаниеПериодаРегистрации.Организация
	|			И СтабильныеПериоды.ПериодНачисления = ПериодыПоказанийОкончаниеПериодаРегистрации.ПериодНачисления
	|			И СтабильныеПериоды.Район = ПериодыПоказанийОкончаниеПериодаРегистрации.Район
	|			И СтабильныеПериоды.МКД = ПериодыПоказанийОкончаниеПериодаРегистрации.МКД
	|			И СтабильныеПериоды.ПриборУчета = ПериодыПоказанийОкончаниеПериодаРегистрации.ПриборУчета
	|			И СтабильныеПериоды.Шкала = ПериодыПоказанийОкончаниеПериодаРегистрации.Шкала
	|			И СтабильныеПериоды.ТарифнаяЗона = ПериодыПоказанийОкончаниеПериодаРегистрации.ТарифнаяЗона	
	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПериодыСезонности КАК ПериодыСезонности
	|		ПО СтабильныеПериоды.Организация = ПериодыСезонности.Организация
	|			И СтабильныеПериоды.ПериодНачисления = ПериодыСезонности.ПериодНачисления
	|			И СтабильныеПериоды.Район = ПериодыСезонности.Район
	|			И СтабильныеПериоды.Сезонность = ПериодыСезонности.Сезонность
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПредоставленныеПоказанияВСрок КАК ПредоставленныеПоказанияВСрок
	|		ПО СтабильныеПериоды.Организация = ПредоставленныеПоказанияВСрок.Организация
	|			И СтабильныеПериоды.ПериодНачисления = ПредоставленныеПоказанияВСрок.ПериодНачисления
	|			И СтабильныеПериоды.Район = ПредоставленныеПоказанияВСрок.Район
	|			И СтабильныеПериоды.МКД = ПредоставленныеПоказанияВСрок.МКД
	|			И СтабильныеПериоды.ПриборУчета = ПредоставленныеПоказанияВСрок.ПриборУчета
	|			И СтабильныеПериоды.Шкала = ПредоставленныеПоказанияВСрок.Шкала
	|			И СтабильныеПериоды.ТарифнаяЗона = ПредоставленныеПоказанияВСрок.ТарифнаяЗона
	|		ЛЕВОЕ СОЕДИНЕНИЕ СреднийОбъемПотребления КАК СреднееПотреблениеМКД
	|		ПО СтабильныеПериоды.Организация = СреднееПотреблениеМКД.Организация
	|			И СтабильныеПериоды.ПериодНачисления = СреднееПотреблениеМКД.ПериодНачисления
	|			И СтабильныеПериоды.Район = СреднееПотреблениеМКД.Район
	|			И СтабильныеПериоды.МКД = СреднееПотреблениеМКД.МКД
	|			И СтабильныеПериоды.ТочкаУчета = СреднееПотреблениеМКД.ТочкаУчета
	|			И СтабильныеПериоды.Услуга = СреднееПотреблениеМКД.Услуга
	|			И СтабильныеПериоды.Шкала = СреднееПотреблениеМКД.Шкала
	|			И СтабильныеПериоды.ТарифнаяЗона = СреднееПотреблениеМКД.ТарифнаяЗона
	|		ЛЕВОЕ СОЕДИНЕНИЕ СреднийОбъемПотребления КАК СреднееПотреблениеЗависитОтУслуги
	|		ПО СтабильныеПериоды.Организация = СреднееПотреблениеЗависитОтУслуги.Организация
	|			И СтабильныеПериоды.ПериодНачисления = СреднееПотреблениеЗависитОтУслуги.ПериодНачисления
	|			И СтабильныеПериоды.Район = СреднееПотреблениеЗависитОтУслуги.Район
	|			И СтабильныеПериоды.МКД = СреднееПотреблениеЗависитОтУслуги.МКД
	|			И СтабильныеПериоды.ТочкаУчета = СреднееПотреблениеЗависитОтУслуги.ТочкаУчета
	|			И СтабильныеПериоды.ЗависитОтУслуги = СреднееПотреблениеЗависитОтУслуги.Услуга
	|			И СтабильныеПериоды.Шкала = СреднееПотреблениеЗависитОтУслуги.Шкала
	|			И СтабильныеПериоды.ТарифнаяЗона = СреднееПотреблениеЗависитОтУслуги.ТарифнаяЗона"; 	
	
	Возврат Текст;
	
КонецФункции

Функция ТекстЗапросаПолучитьДанныеДляРасчетаМКД()	
	Текст  = 
	"ВЫБРАТЬ
	|	" + энргНачисления.СформироватьСтрокуДляЗапроса("энргСтабильныеПериодыМКД","Периоды","",Истина,Ложь) + "	
	|	Периоды.ЗависитОтУслуги КАК ЗависитОтУслуги,
	|	Периоды.НеПрименятьЗависимостьЕслиБольшеОднойТочки,
	|	Периоды.ИспользоватьКоэффициентСдерживанияРостаПлаты,
	|	Периоды.РегистрируетОбъем,
	|	Периоды.МаксимальноВозможныеПоказания,
	|	Периоды.НачалоОП КАК НачалоОП,
	|	Периоды.ЗавершениеОП КАК ЗавершениеОП,
	|	Периоды.ДнейВПериоде КАК ДнейВПериоде,
	|	Периоды.КоэффициентНорматива КАК КоэффициентНорматива,
	|	Периоды.КоэффициентНормативаНеПрименятьСезонность КАК КоэффициентНормативаНеПрименятьСезонность, 
	|	Периоды.КорректироватьГодовойОбъем КАК КорректироватьГодовойОбъем,
	|	Периоды.ОбъемЗаПрошлыйГод КАК ОбъемЗаПрошлыйГод,
	|	Периоды.Сезонность КАК Сезонность,
	|	Периоды.ВидПлощади КАК ВидПлощади,
	|	Периоды.НачислятьЗаПолныйМесяц КАК НачислятьЗаПолныйМесяц,
	|	Периоды.ЕстьПоказанияМКД КАК ЕстьПоказанияМКД,	
	|	Периоды.ТипСхемы КАК ТипСхемы,
	|	Периоды.ВидТепловогоПункта КАК ВидТепловогоПункта,	
	|	Периоды.ПлощадьМОП КАК ПлощадьМОП,
	|	Периоды.ПлощадьАбонентов КАК ПлощадьАбонентов,
	|	Периоды.ПлощадьСобственнаяПоставка КАК ПлощадьСобственнаяПоставка,	
	|	Периоды.ДокументНачисления КАК ДокументНачисления,
	|	Периоды.ДокументНачисленияПометкаУдаления КАК ДокументНачисленияПометкаУдаления,	
	|	Периоды.ВыводПрибораУчета КАК ВыводПрибораУчета,	
	|	Периоды.МКДЗакрытВТекущемПериоде КАК МКДЗакрытВТекущемПериоде,
	|	Периоды.УвеличениеПозиции КАК УвеличениеПозиции,
	|	Периоды.ПериодРегистрации,
	|	Периоды.НачалоПериода КАК НачалоПериода,
	|	Периоды.КонецПериода КАК КонецПериода,	
	|	Периоды.СледующийПериодРегистрации КАК СледующийПериодРегистрации,	
	|	Периоды.СледующийРегистратор КАК СледующийРегистратор,	
	|	Периоды.ВидДифференцированности КАК ВидДифференцированности,
	|	Периоды.ПривязанаКШкале КАК ПривязанаКШкале,
	|	Периоды.ТарифнаяЗона КАК ТарифнаяЗона,			
	|	Периоды.КоэффициентСезоности КАК КоэффициентСезоности,
	|	Периоды.КоэффициентСезоностиОбъемПотребленный КАК КоэффициентСезоностиОбъемПотребленный,
	|	Периоды.ПоказанияВСрок КАК ПоказанияВСрок,
	|	Периоды.ПоказанияПредоставлены КАК ПоказанияПредоставлены,
	|	Периоды.СреднийОбъем КАК СреднийОбъем,
	|	Периоды.СреднийОбъемПотребленный КАК СреднийОбъемПотребленный,
	|	Периоды.СреднийОбъемЗависитОтУслуги КАК СреднийОбъемЗависитОтУслуги,
	|	Периоды.СреднийОбъемПотребленныйЗависитОтУслуги КАК СреднийОбъемПотребленныйЗависитОтУслуги,
	|	Периоды.НачальныеПоказания КАК НачальныеПоказания,
	|	ВЫБОР
	|		КОГДА Периоды.КонецПериода = Периоды.ЗавершениеОП
	|			ТОГДА ЕСТЬNULL(МаксимальныеПоказания.Показания, 0)
	|		ИНАЧЕ Периоды.КонечныеПоказания
	|	КОНЕЦ КАК КонечныеПоказания,
	|	ВЫБОР
	|		КОГДА НЕ Периоды.КорректироватьГодовойОбъем
	|				И НЕ Периоды.Сезонность = ЗНАЧЕНИЕ(Справочник.энргВидыСезонности.ПустаяСсылка)				
	|			ТОГДА Периоды.КоэффициентСезоностиОбъемПотребленный
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК ДополнительныйКоэффициентСезоности,
	|	ВЫБОР
	|		КОГДА НЕ Периоды.КорректироватьГодовойОбъем
	|				И НЕ Периоды.Сезонность = ЗНАЧЕНИЕ(Справочник.энргВидыСезонности.ПустаяСсылка)				
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ Периоды.НеПрименятьСезонность
	|	КОНЕЦ КАК НеПрименятьСезонность,
	|	ВЫБОР
	|		КОГДА Периоды.ДатаПоверки = ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА 0
	|		КОГДА ДОБАВИТЬКДАТЕ(Периоды.ДатаПоверки, МЕСЯЦ, 3) < Периоды.ЗавершениеОП 
	|			ТОГДА 3
	|		КОГДА Периоды.ДатаПоверки < Периоды.ЗавершениеОП
	|			ТОГДА 2
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК УслНаДатуПоверки
	|ПОМЕСТИТЬ ДанныеДляРасчетаПередНормой
	|ИЗ
	|	СтабильныеПериодыПоказания КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ МаксимальныеПоказанияСрезТекущийПериод КАК МаксимальныеПоказания
	|		ПО Периоды.Организация = МаксимальныеПоказания.Организация
	|			И Периоды.ПериодНачисления = МаксимальныеПоказания.ПериодНачисления
	|			И Периоды.Район = МаксимальныеПоказания.Район
	|			И Периоды.МКД = МаксимальныеПоказания.МКД
	|			И Периоды.ПриборУчета = МаксимальныеПоказания.ПриборУчета
	|			И Периоды.Шкала = МаксимальныеПоказания.Шкала
	|			И Периоды.ТарифнаяЗона = МаксимальныеПоказания.ТарифнаяЗона
	|ГДЕ
	|	Периоды.УслугаПодключена";	
	
	Возврат Текст;
	
КонецФункции

Функция ТекстЗапросаРассчитатьОбъемПотребленияМКД()
	Текст  = 
	"ВЫБРАТЬ
	|	ДанныеДляРасчетаПередНормой.Организация КАК Организация,
	|	ДанныеДляРасчетаПередНормой.ПериодНачисления КАК ПериодНачисления,
	|	ДанныеДляРасчетаПередНормой.Район КАК Район,
	|	ДанныеДляРасчетаПередНормой.МКД,
	|	ДанныеДляРасчетаПередНормой.Услуга КАК Услуга,
	|	ДанныеДляРасчетаПередНормой.НачалоПериода КАК НачалоПериода,
	|	ДанныеДляРасчетаПередНормой.КонецПериода КАК КонецПериода,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА НЕ ИСТИНА
	|					И (НЕ ДанныеДляРасчетаПередНормой.ПриборВведен
	|						ИЛИ НЕ ДанныеДляРасчетаПередНормой.ПоказанияВСрок)
	|				ТОГДА 1
	|			КОГДА ЛОЖЬ
	|					И (НЕ ДанныеДляРасчетаПередНормой.ПриборВведен
	|						ИЛИ НЕ ДанныеДляРасчетаПередНормой.ПоказанияВСрок)
	|				ТОГДА 2
	|			КОГДА НЕ ДанныеДляРасчетаПередНормой.ПриборВведен
	|					ИЛИ НЕ ДанныеДляРасчетаПередНормой.ПоказанияВСрок
	|				ТОГДА 3
	|			ИНАЧЕ 4
	|		КОНЕЦ) КАК Приоритет,
	|	МИНИМУМ(ДанныеДляРасчетаПередНормой.ПриборВведен) КАК ПриборВведен,
	|	МИНИМУМ(ДанныеДляРасчетаПередНормой.ПоказанияВСрок) КАК ПоказанияВСрок,
	|	МАКСИМУМ(ДанныеДляРасчетаПередНормой.УслНаДатуПоверки) КАК УслНаДатуПоверки,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеДляРасчетаПередНормой.ТочкаУчета) КАК КоличествоТочекУчета
	|ПОМЕСТИТЬ ПриоритетНормы
	|ИЗ
	|	ДанныеДляРасчетаПередНормой КАК ДанныеДляРасчетаПередНормой
	|ГДЕ
	|	НЕ ДанныеДляРасчетаПередНормой.РасчетПоФормуле
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДляРасчетаПередНормой.Организация,
	|	ДанныеДляРасчетаПередНормой.ПериодНачисления,
	|	ДанныеДляРасчетаПередНормой.Район,
	|	ДанныеДляРасчетаПередНормой.МКД,
	|	ДанныеДляРасчетаПередНормой.Услуга,
	|	ДанныеДляРасчетаПередНормой.НачалоПериода,
	|	ДанныеДляРасчетаПередНормой.КонецПериода
	|
	|ИМЕЮЩИЕ
	|	(МИНИМУМ(ДанныеДляРасчетаПередНормой.ПриборВведен) = ЛОЖЬ
	|		ИЛИ МИНИМУМ(ДанныеДляРасчетаПередНормой.ПоказанияВСрок) = ЛОЖЬ
	|		ИЛИ МИНИМУМ(ДанныеДляРасчетаПередНормой.ОбъемЗаПрошлыйГод) = ИСТИНА
	|		ИЛИ МАКСИМУМ(ДанныеДляРасчетаПередНормой.УслНаДатуПоверки) = 3)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДляРасчетаПередНормой.Организация КАК Организация,
	|	ДанныеДляРасчетаПередНормой.ПериодНачисления КАК ПериодНачисления,
	|	ДанныеДляРасчетаПередНормой.Район КАК Район,
	|	ДанныеДляРасчетаПередНормой.МКД,
	|	ДанныеДляРасчетаПередНормой.Услуга КАК Услуга,
	|	ДанныеДляРасчетаПередНормой.НачалоПериода КАК НачалоПериода,
	|	ДанныеДляРасчетаПередНормой.КонецПериода КАК КонецПериода,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА ДанныеДляРасчетаПередНормой.СреднийОбъем >= 0
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьСреднийПоВсемТочкамУслуги,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА ДанныеДляРасчетаПередНормой.СреднийОбъемПотребленный >= 0
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьСреднийПотребленныйПоВсемТочкамУслуги,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА ДанныеДляРасчетаПередНормой.СреднийОбъемЗависитОтУслуги >= 0
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьСреднийПоВсемТочкамУслугиЗависитОтУслуги,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА ДанныеДляРасчетаПередНормой.СреднийОбъемПотребленныйЗависитОтУслуги >= 0
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьСреднийПотребленныйПоВсемТочкамУслугиЗависитОтУслуги,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеДляРасчетаПередНормой.ТочкаУчета) КАК КоличествоТочекУчета,
	
	|	МИНИМУМ(ДанныеДляРасчетаПередНормой.ПоказанияВСрок) КАК ПоказанияВСрок,
	|   МИНИМУМ(ДанныеДляРасчетаПередНормой.ПриборВведен) КАК ПриборВведен
	
	|ПОМЕСТИТЬ НаличиеСреднегоОбъемаПоРодительскимТочкам
	|ИЗ
	|	ДанныеДляРасчетаПередНормой КАК ДанныеДляРасчетаПередНормой
	|ГДЕ
	|	НЕ ДанныеДляРасчетаПередНормой.РасчетПоФормуле
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДляРасчетаПередНормой.Организация,
	|	ДанныеДляРасчетаПередНормой.ПериодНачисления,
	|	ДанныеДляРасчетаПередНормой.Район,
	|	ДанныеДляРасчетаПередНормой.МКД,
	|	ДанныеДляРасчетаПередНормой.Услуга,
	|	ДанныеДляРасчетаПередНормой.НачалоПериода,
	|	ДанныеДляРасчетаПередНормой.КонецПериода,
	|	ДанныеДляРасчетаПередНормой.ОбъемЗаПрошлыйГод
	|
	|ИМЕЮЩИЕ
	|	(МИНИМУМ(ДанныеДляРасчетаПередНормой.ПриборВведен) = ЛОЖЬ
	|		ИЛИ МИНИМУМ(ДанныеДляРасчетаПередНормой.ПоказанияВСрок) = ЛОЖЬ
	|		ИЛИ МИНИМУМ(ДанныеДляРасчетаПередНормой.ОбъемЗаПрошлыйГод))	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ПериодНачисления КАК ПериодНачисления,
	|	ВложенныйЗапрос.Район КАК Район,
	|	ВложенныйЗапрос.МКД КАК МКД,
	|	ВложенныйЗапрос.Услуга КАК Услуга,
	|	ВложенныйЗапрос.НачалоПериода КАК НачалоПериода,
	|	ВложенныйЗапрос.КонецПериода КАК КонецПериода,
	|	ВложенныйЗапрос.ТочкаУчета КАК ТочкаУчета,
	|	ВложенныйЗапрос.Шкала КАК Шкала,
	|	МАКСИМУМ(ДанныеДляРасчетаПередНормой.ТарифнаяЗона) КАК ТарифнаяЗона
	|ПОМЕСТИТЬ ТочкиНачисленияНормы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеДляРасчетаПередНормой.Организация КАК Организация,
	|		ДанныеДляРасчетаПередНормой.ПериодНачисления КАК ПериодНачисления,
	|		ДанныеДляРасчетаПередНормой.Район КАК Район,
	|		ДанныеДляРасчетаПередНормой.МКД КАК МКД,
	|		ДанныеДляРасчетаПередНормой.Услуга КАК Услуга,
	|		ДанныеДляРасчетаПередНормой.НачалоПериода КАК НачалоПериода,
	|		ДанныеДляРасчетаПередНормой.КонецПериода КАК КонецПериода,
	|		МАКСИМУМ(ДанныеДляРасчетаПередНормой.ТочкаУчета) КАК ТочкаУчета,
	|		МАКСИМУМ(ДанныеДляРасчетаПередНормой.Шкала) КАК Шкала
	|	ИЗ
	|		ДанныеДляРасчетаПередНормой КАК ДанныеДляРасчетаПередНормой
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПриоритетНормы КАК ПриоритетНормы
	|			ПО ДанныеДляРасчетаПередНормой.Организация = ПриоритетНормы.Организация
	|				И ДанныеДляРасчетаПередНормой.ПериодНачисления = ПриоритетНормы.ПериодНачисления
	|				И ДанныеДляРасчетаПередНормой.Район = ПриоритетНормы.Район
	|				И ДанныеДляРасчетаПередНормой.МКД = ПриоритетНормы.МКД
	|				И ДанныеДляРасчетаПередНормой.Услуга = ПриоритетНормы.Услуга
	|				И ДанныеДляРасчетаПередНормой.НачалоПериода = ПриоритетНормы.НачалоПериода
	|				И (НЕ ДанныеДляРасчетаПередНормой.РасчетПоФормуле)
	|				И (ВЫБОР
	|					КОГДА ПриоритетНормы.Приоритет = 1
	|						ТОГДА НЕ ИСТИНА
	|								И (НЕ ДанныеДляРасчетаПередНормой.ПриборВведен
	|									ИЛИ НЕ ДанныеДляРасчетаПередНормой.ПоказанияВСрок)
	|					КОГДА ПриоритетНормы.Приоритет = 2
	|						ТОГДА ЛОЖЬ
	|								И (НЕ ДанныеДляРасчетаПередНормой.ПриборВведен
	|									ИЛИ НЕ ДанныеДляРасчетаПередНормой.ПоказанияВСрок)
	|					КОГДА ПриоритетНормы.Приоритет = 3
	|						ТОГДА НЕ ДанныеДляРасчетаПередНормой.ПриборВведен
	|								ИЛИ НЕ ДанныеДляРасчетаПередНормой.ПоказанияВСрок
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеДляРасчетаПередНормой.Организация,
	|		ДанныеДляРасчетаПередНормой.ПериодНачисления,
	|		ДанныеДляРасчетаПередНормой.Район,
	|		ДанныеДляРасчетаПередНормой.МКД,
	|		ДанныеДляРасчетаПередНормой.Услуга,
	|		ДанныеДляРасчетаПередНормой.НачалоПериода,
	|		ДанныеДляРасчетаПередНормой.КонецПериода) КАК ВложенныйЗапрос
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДляРасчетаПередНормой КАК ДанныеДляРасчетаПередНормой
	|		ПО ВложенныйЗапрос.Организация = ДанныеДляРасчетаПередНормой.Организация
	|			И ВложенныйЗапрос.ПериодНачисления = ДанныеДляРасчетаПередНормой.ПериодНачисления
	|			И ВложенныйЗапрос.Район = ДанныеДляРасчетаПередНормой.Район
	|			И ВложенныйЗапрос.МКД = ДанныеДляРасчетаПередНормой.МКД
	|			И ВложенныйЗапрос.Услуга = ДанныеДляРасчетаПередНормой.Услуга
	|			И ВложенныйЗапрос.НачалоПериода = ДанныеДляРасчетаПередНормой.НачалоПериода
	|			И ВложенныйЗапрос.КонецПериода = ДанныеДляРасчетаПередНормой.КонецПериода
	|			И ВложенныйЗапрос.ТочкаУчета = ДанныеДляРасчетаПередНормой.ТочкаУчета
	|			И ВложенныйЗапрос.Шкала = ДанныеДляРасчетаПередНормой.Шкала
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Организация,
	|	ВложенныйЗапрос.ПериодНачисления,
	|	ВложенныйЗапрос.Район,
	|	ВложенныйЗапрос.МКД,
	|	ВложенныйЗапрос.Услуга,
	|	ВложенныйЗапрос.НачалоПериода,
	|	ВложенныйЗапрос.КонецПериода,
	|	ВложенныйЗапрос.ТочкаУчета,
	|	ВложенныйЗапрос.Шкала	
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	" + энргНачисления.СформироватьСтрокуДляЗапроса("энргСтабильныеПериодыМКД","ДанныеДляРасчетаПередНормой","НомерПозиции,ПериодРегистрации,ДатаРегистратора,ДокРегистратор",Истина,Ложь) + "
	|	ДанныеДляРасчетаПередНормой.РегистрируетОбъем,
	|	ДанныеДляРасчетаПередНормой.МаксимальноВозможныеПоказания,
	|	ДанныеДляРасчетаПередНормой.МКДЗакрытВТекущемПериоде,
	|	ДанныеДляРасчетаПередНормой.ЕстьПоказанияМКД,
	|	ДанныеДляРасчетаПередНормой.КоэффициентНорматива КАК КоэффициентНорматива,
	|	ДанныеДляРасчетаПередНормой.КоэффициентНормативаНеПрименятьСезонность КАК КоэффициентНормативаНеПрименятьСезонность,
	|	ДанныеДляРасчетаПередНормой.КорректироватьГодовойОбъем КАК КорректироватьГодовойОбъем,
	|	ДанныеДляРасчетаПередНормой.ПлощадьМОП КАК ПлощадьМОП,
	|	ДанныеДляРасчетаПередНормой.ПлощадьАбонентов КАК ПлощадьАбонентов,
	|	ДанныеДляРасчетаПередНормой.ПлощадьСобственнаяПоставка КАК ПлощадьСобственнаяПоставка,
	|	ДанныеДляРасчетаПередНормой.НеПрименятьЗависимостьЕслиБольшеОднойТочки,
	|	ДанныеДляРасчетаПередНормой.ИспользоватьКоэффициентСдерживанияРостаПлаты,
	|	ВЫБОР
	|		КОГДА ДанныеДляРасчетаПередНормой.КоэффициентСезоности = 1
	|				И ДанныеДляРасчетаПередНормой.ДополнительныйКоэффициентСезоности = 0
	|				И ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.ЕстьСреднийПоВсемТочкамУслуги, ИСТИНА)
	|			ТОГДА 1
	|		ИНАЧЕ ДанныеДляРасчетаПередНормой.КоэффициентСезоности * ДанныеДляРасчетаПередНормой.ДополнительныйКоэффициентСезоности
	|	КОНЕЦ КАК КоэффициентСезоности,
	|	ВЫБОР
	|		КОГДА ДанныеДляРасчетаПередНормой.ДополнительныйКоэффициентСезоности = 0
	|				И ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.ЕстьСреднийПотребленныйПоВсемТочкамУслуги, ИСТИНА)
	|			ТОГДА 1
	|		ИНАЧЕ ДанныеДляРасчетаПередНормой.КоэффициентСезоностиОбъемПотребленный
	|	КОНЕЦ КАК КоэффициентСезоностиОбъемПотребленный,
	|	ДанныеДляРасчетаПередНормой.ПривязанаКШкале,
	|	ДанныеДляРасчетаПередНормой.ОбъемЗаПрошлыйГод КАК ОбъемЗаПрошлыйГод,
	|	ДанныеДляРасчетаПередНормой.НеПрименятьСезонность, 
	|	ДанныеДляРасчетаПередНормой.ВидПлощади КАК ВидПлощади,
	|	ДанныеДляРасчетаПередНормой.ПоказанияВСрок КАК ПоказанияВСрок,
	|	ДанныеДляРасчетаПередНормой.ПоказанияПредоставлены КАК ПоказанияПредоставлены,
	|	ДанныеДляРасчетаПередНормой.СреднийОбъем КАК СреднийОбъем,
	|	ДанныеДляРасчетаПередНормой.СреднийОбъемПотребленный КАК СреднийОбъемПотребленный,
	|	ДанныеДляРасчетаПередНормой.СреднийОбъемЗависитОтУслуги КАК СреднийОбъемЗависитОтУслуги,
	|	ДанныеДляРасчетаПередНормой.СреднийОбъемПотребленныйЗависитОтУслуги КАК СреднийОбъемПотребленныйЗависитОтУслуги,
	|	ДанныеДляРасчетаПередНормой.НачалоПериода КАК НачалоПериода,
	|	ДанныеДляРасчетаПередНормой.КонецПериода КАК КонецПериода,
	|	ДанныеДляРасчетаПередНормой.ЗавершениеОП КАК ЗавершениеОП,
	|	ДанныеДляРасчетаПередНормой.ДнейВПериоде КАК ДнейВПериоде,
	|	ДанныеДляРасчетаПередНормой.ТарифнаяЗона КАК ТарифнаяЗона,
	|	ДанныеДляРасчетаПередНормой.НачальныеПоказания КАК НачальныеПоказания,
	|	ДанныеДляРасчетаПередНормой.КонечныеПоказания КАК КонечныеПоказания,
	|	ДанныеДляРасчетаПередНормой.ДокументНачисления,
	|	ДанныеДляРасчетаПередНормой.ДокументНачисленияПометкаУдаления КАК ДокументНачисленияПометкаУдаления,
	|	ДанныеДляРасчетаПередНормой.СледующийРегистратор КАК СледующийРегистратор,
	|	ДанныеДляРасчетаПередНормой.ДополнительныйКоэффициентСезоности КАК ДополнительныйКоэффициентСезоности,
	|	ЕСТЬNULL(НастройкаНачисленияГВСМКД.НеНачислять, ЕСТЬNULL(НастройкаНачисленияГВС.НеНачислять, ЛОЖЬ)) КАК ЗакрытаяСхемаГВС,
	|	ВЫБОР
	|		КОГДА ДанныеДляРасчетаПередНормой.РасчетПоФормуле
	|			ТОГДА ИСТИНА
	|		КОГДА НЕ ВЫБОР
	|					КОГДА ДанныеДляРасчетаПередНормой.НеПрименятьЗависимостьЕслиБольшеОднойТочки
	|							И ЕСТЬNULL(ПриоритетНормы.КоличествоТочекУчета, 0) >= 1
	|							И НЕ ДанныеДляРасчетаПередНормой.ЗависитОтУслуги = ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|							И НЕ ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.ЕстьСреднийПоВсемТочкамУслугиЗависитОтУслуги, ИСТИНА)
	|							И НЕ ИСТИНА
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|					КОГДА ДанныеДляРасчетаПередНормой.НеПрименятьЗависимостьЕслиБольшеОднойТочки
	|							И ЕСТЬNULL(ПриоритетНормы.КоличествоТочекУчета, 0) >= 1
	|							И ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.ЕстьСреднийПоВсемТочкамУслуги, ИСТИНА)
	|						ТОГДА НЕОПРЕДЕЛЕНО
	|					КОГДА ЕСТЬNULL(ПриоритетНормы.КоличествоТочекУчета, 0) > 1
	|							И ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.ЕстьСреднийПоВсемТочкамУслуги, ИСТИНА)
	|							И ДанныеДляРасчетаПередНормой.ПриборВведен
	|						ТОГДА НЕОПРЕДЕЛЕНО
	|					КОГДА ЕСТЬNULL(ПриоритетНормы.КоличествоТочекУчета, 0) > 1
	|							И НЕ ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.ЕстьСреднийПоВсемТочкамУслуги, ИСТИНА)
	|							И ДанныеДляРасчетаПередНормой.ПриборВведен
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|					КОГДА НЕ ДанныеДляРасчетаПередНормой.ТочкаУчета = ЕСТЬNULL(ТочкиНачисленияНормы.ТочкаУчета,ЗНАЧЕНИЕ(Справочник.энргТочкиУчета.ПустаяСсылка))
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|					ИНАЧЕ ДанныеДляРасчетаПередНормой.ЗависитОтУслуги
	|				КОНЕЦ = ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		КОГДА ДанныеДляРасчетаПередНормой.ТочкаУчета = ЕСТЬNULL(ТочкиНачисленияНормы.ТочкаУчета,ЗНАЧЕНИЕ(Справочник.энргТочкиУчета.ПустаяСсылка))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НачислятьНорму,		
	|	ВЫБОР
	|		КОГДА ДанныеДляРасчетаПередНормой.НеПрименятьЗависимостьЕслиБольшеОднойТочки
	|				И ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.ЕстьСреднийПоВсемТочкамУслугиЗависитОтУслуги, ИСТИНА)
	|			ТОГДА ДанныеДляРасчетаПередНормой.ЗависитОтУслуги
	|		КОГДА ДанныеДляРасчетаПередНормой.НеПрименятьЗависимостьЕслиБольшеОднойТочки
	|				И ЕСТЬNULL(ПриоритетНормы.КоличествоТочекУчета, 0) >= 1
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|		ИНАЧЕ ДанныеДляРасчетаПередНормой.ЗависитОтУслуги
	|	КОНЕЦ КАК ЗависитОтУслуги,
	|	ВЫБОР
	|		КОГДА НЕ ДанныеДляРасчетаПередНормой.ЗависитОтУслуги = ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|				И ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.ЕстьСреднийПоВсемТочкамУслугиЗависитОтУслуги, ИСТИНА)
	|			ТОГДА ИСТИНА
	|		КОГДА ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.ЕстьСреднийПоВсемТочкамУслуги, ИСТИНА)
	|			ТОГДА ИСТИНА
	|		КОГДА ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.КоличествоТочекУчета, 0) = 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НачислятьПоПрибору,
	|	ВЫБОР
	|		КОГДА НЕ ДанныеДляРасчетаПередНормой.ЗависитОтУслуги = ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|				И ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.ЕстьСреднийПотребленныйПоВсемТочкамУслугиЗависитОтУслуги, ИСТИНА)
	|			ТОГДА ИСТИНА
	|		КОГДА ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.ЕстьСреднийПотребленныйПоВсемТочкамУслуги, ИСТИНА)
	|			ТОГДА ИСТИНА
	|		КОГДА ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.КоличествоТочекУчета, 0) = 0
	|			ТОГДА ИСТИНА
	|		КОГДА ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.ПоказанияВСрок, ИСТИНА)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НачислятьПоПриборуПотребленный,
	|	ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.ЕстьСреднийПоВсемТочкамУслуги, ИСТИНА) КАК ЕстьСреднийПоВсемТочкамУслуги,
	|	ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.ЕстьСреднийПотребленныйПоВсемТочкамУслуги, ИСТИНА) КАК ЕстьСреднийПотребленныйПоВсемТочкамУслуги,
	|	ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.ЕстьСреднийПоВсемТочкамУслугиЗависитОтУслуги, ИСТИНА) КАК ЕстьСреднийПоВсемТочкамУслугиЗависитОтУслуги,
	|	ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.ЕстьСреднийПотребленныйПоВсемТочкамУслугиЗависитОтУслуги, ИСТИНА) КАК ЕстьСреднийПотребленныйПоВсемТочкамУслугиЗависитОтУслуги,
	|	ЕСТЬNULL(ЗначенияТекущихНормПотребления.ЗначениеНорматива, 0) КАК НормаПотребления,
	|	ЕСТЬNULL(НастройкиРасчетаСреднегоПотребления.НачислятьСреднийОбъемНеБолееМесяцев, 0) КАК НачислятьСреднийОбъемНеБолееМесяцев,
	|	ЕСТЬNULL(НастройкиРасчетаСреднегоПотребления.НачислятьСреднийОбъемНеБолееМесяцевОбъемПотребленный, 0) КАК НачислятьСреднийОбъемНеБолееМесяцевОбъемПотребленный,
	|	ДанныеДляРасчетаПередНормой.КоэффициентСезоности * ВЫБОР
	|		КОГДА ДанныеДляРасчетаПередНормой.НеПрименятьСезонность
	|			ТОГДА ДанныеДляРасчетаПередНормой.КоэффициентНормативаНеПрименятьСезонность
	|		ИНАЧЕ ДанныеДляРасчетаПередНормой.КоэффициентНорматива
	|	КОНЕЦ * ДанныеДляРасчетаПередНормой.ДополнительныйКоэффициентСезоности КАК КоэффициентНормативаИСезонности,
	|	ДанныеДляРасчетаПередНормой.УслНаДатуПоверки КАК УслНаДатуПоверки,
	|	ВЫБОР
	|		КОГДА ДанныеДляРасчетаПередНормой.НеПрименятьЗависимостьЕслиБольшеОднойТочки
	|				И ЕСТЬNULL(ПриоритетНормы.КоличествоТочекУчета, 0) >= 1
	|				И НЕ ДанныеДляРасчетаПередНормой.ЗависитОтУслуги = ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|				И НЕ ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.ЕстьСреднийПоВсемТочкамУслугиЗависитОтУслуги, ИСТИНА)
	|				И НЕ ИСТИНА
	|			ТОГДА 0
	|		КОГДА ДанныеДляРасчетаПередНормой.НеПрименятьЗависимостьЕслиБольшеОднойТочки
	|				И ЕСТЬNULL(ПриоритетНормы.КоличествоТочекУчета, 0) >= 1
	|				И ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.ЕстьСреднийПоВсемТочкамУслуги, ИСТИНА)
	|			ТОГДА 1
	|		КОГДА ЕСТЬNULL(ПриоритетНормы.КоличествоТочекУчета, 0) > 1
	|				И ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.ЕстьСреднийПоВсемТочкамУслуги, ИСТИНА)
	|				И ДанныеДляРасчетаПередНормой.ПриборВведен
	|			ТОГДА 2
	|		КОГДА ЕСТЬNULL(ПриоритетНормы.КоличествоТочекУчета, 0) > 1
	|				И НЕ ЕСТЬNULL(НаличиеСреднегоОбъемаПоРодительскимТочкам.ЕстьСреднийПоВсемТочкамУслуги, ИСТИНА)
	|				И ДанныеДляРасчетаПередНормой.ПриборВведен
	|			ТОГДА 3
	|		ИНАЧЕ 4
	|	КОНЕЦ КАК УсловиеНачислятьНорму
	|	,ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ДанныеДляРасчетаПередНормой.ПериодНачисленияВыводаПрибора,МЕСЯЦ),МЕСЯЦ,НачислятьСреднийОбъемНеБолееМесяцев) КАК НачислятьСреднийОбъемДо
	|	,ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ДанныеДляРасчетаПередНормой.ПериодНачисленияВыводаПрибора,МЕСЯЦ),МЕСЯЦ,НачислятьСреднийОбъемНеБолееМесяцевОбъемПотребленный) КАК НачислятьСреднийПотребленныйОбъемДо	
	|ПОМЕСТИТЬ ДанныеДляРасчета
	|ИЗ
	|	ДанныеДляРасчетаПередНормой КАК ДанныеДляРасчетаПередНормой
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТочкиНачисленияНормы КАК ТочкиНачисленияНормы
	|		ПО ДанныеДляРасчетаПередНормой.Организация = ТочкиНачисленияНормы.Организация
	|			И ДанныеДляРасчетаПередНормой.ПериодНачисления = ТочкиНачисленияНормы.ПериодНачисления
	|			И ДанныеДляРасчетаПередНормой.Район = ТочкиНачисленияНормы.Район
	|			И ДанныеДляРасчетаПередНормой.МКД = ТочкиНачисленияНормы.МКД 
	|			И ДанныеДляРасчетаПередНормой.Услуга = ТочкиНачисленияНормы.Услуга
	|			И ДанныеДляРасчетаПередНормой.ТочкаУчета = ТочкиНачисленияНормы.ТочкаУчета
	|			И ДанныеДляРасчетаПередНормой.Шкала = ТочкиНачисленияНормы.Шкала
	|			И ДанныеДляРасчетаПередНормой.ТарифнаяЗона = ТочкиНачисленияНормы.ТарифнаяЗона
	|			И ДанныеДляРасчетаПередНормой.НачалоПериода = ТочкиНачисленияНормы.НачалоПериода
	|			И ДанныеДляРасчетаПередНормой.КонецПериода = ТочкиНачисленияНормы.КонецПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПриоритетНормы КАК ПриоритетНормы
	|		ПО ДанныеДляРасчетаПередНормой.Организация = ПриоритетНормы.Организация
	|			И ДанныеДляРасчетаПередНормой.ПериодНачисления = ПриоритетНормы.ПериодНачисления
	|			И ДанныеДляРасчетаПередНормой.Район = ПриоритетНормы.Район
	|			И ДанныеДляРасчетаПередНормой.МКД = ПриоритетНормы.МКД
	|			И ДанныеДляРасчетаПередНормой.Услуга = ПриоритетНормы.Услуга
	|			И ДанныеДляРасчетаПередНормой.НачалоПериода = ПриоритетНормы.НачалоПериода
	|			И ДанныеДляРасчетаПередНормой.КонецПериода = ПриоритетНормы.КонецПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ НаличиеСреднегоОбъемаПоРодительскимТочкам КАК НаличиеСреднегоОбъемаПоРодительскимТочкам
	|		ПО ДанныеДляРасчетаПередНормой.Организация = НаличиеСреднегоОбъемаПоРодительскимТочкам.Организация
	|			И ДанныеДляРасчетаПередНормой.ПериодНачисления = НаличиеСреднегоОбъемаПоРодительскимТочкам.ПериодНачисления
	|			И ДанныеДляРасчетаПередНормой.Район = НаличиеСреднегоОбъемаПоРодительскимТочкам.Район
	|			И ДанныеДляРасчетаПередНормой.МКД = НаличиеСреднегоОбъемаПоРодительскимТочкам.МКД
	|			И ДанныеДляРасчетаПередНормой.Услуга = НаличиеСреднегоОбъемаПоРодительскимТочкам.Услуга
	|			И ДанныеДляРасчетаПередНормой.НачалоПериода = НаличиеСреднегоОбъемаПоРодительскимТочкам.НачалоПериода
	|			И ДанныеДляРасчетаПередНормой.КонецПериода = НаличиеСреднегоОбъемаПоРодительскимТочкам.КонецПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗначенияТекущихНормПотребления КАК ЗначенияТекущихНормПотребления
	|		ПО ДанныеДляРасчетаПередНормой.Организация = ЗначенияТекущихНормПотребления.Организация
	|			И ДанныеДляРасчетаПередНормой.Район = ЗначенияТекущихНормПотребления.Район
	|			И ДанныеДляРасчетаПередНормой.ПериодНачисления = ЗначенияТекущихНормПотребления.ПериодНачисления
	|			И ДанныеДляРасчетаПередНормой.Услуга = ЗначенияТекущихНормПотребления.Услуга
	|			И ДанныеДляРасчетаПередНормой.КлючНорматива = ЗначенияТекущихНормПотребления.КлючНорматива
	|		ЛЕВОЕ СОЕДИНЕНИЕ НастройкаНачисленияГВСМКД КАК НастройкаНачисленияГВС
	|		ПО ДанныеДляРасчетаПередНормой.Организация = НастройкаНачисленияГВС.Организация
	|			И ДанныеДляРасчетаПередНормой.Район = НастройкаНачисленияГВС.Район
	|			И ДанныеДляРасчетаПередНормой.Услуга = НастройкаНачисленияГВС.Услуга
	|			И (ЗНАЧЕНИЕ(Справочник.энргСтроения.ПустаяСсылка) = НастройкаНачисленияГВС.МКД)
	|			И ДанныеДляРасчетаПередНормой.ТипСхемы = НастройкаНачисленияГВС.ТипСхемы
	|			И ДанныеДляРасчетаПередНормой.ВидТепловогоПункта = НастройкаНачисленияГВС.ПринадлежностьКТепловомуПункту
	|		ЛЕВОЕ СОЕДИНЕНИЕ НастройкаНачисленияГВСМКД КАК НастройкаНачисленияГВСМКД
	|		ПО ДанныеДляРасчетаПередНормой.Организация = НастройкаНачисленияГВСМКД.Организация
	|			И ДанныеДляРасчетаПередНормой.Район = НастройкаНачисленияГВСМКД.Район
	|			И ДанныеДляРасчетаПередНормой.Услуга = НастройкаНачисленияГВСМКД.Услуга
	|			И ДанныеДляРасчетаПередНормой.МКД = НастройкаНачисленияГВСМКД.МКД
	|			И ДанныеДляРасчетаПередНормой.ТипСхемы = НастройкаНачисленияГВСМКД.ТипСхемы
	|			И ДанныеДляРасчетаПередНормой.ВидТепловогоПункта = НастройкаНачисленияГВСМКД.ПринадлежностьКТепловомуПункту
	|			И ДанныеДляРасчетаПередНормой.МКД = НастройкаНачисленияГВСМКД.МКД
	|		ЛЕВОЕ СОЕДИНЕНИЕ НастройкиРасчетаСреднегоПотребления КАК НастройкиРасчетаСреднегоПотребления
	|		ПО ДанныеДляРасчетаПередНормой.Организация = НастройкиРасчетаСреднегоПотребления.Организация
	|			И ДанныеДляРасчетаПередНормой.ПериодНачисления = НастройкиРасчетаСреднегоПотребления.ПериодНачисления
	|			И ДанныеДляРасчетаПередНормой.Район = НастройкиРасчетаСреднегоПотребления.Район
	|			И ДанныеДляРасчетаПередНормой.Услуга = НастройкиРасчетаСреднегоПотребления.Услуга";
	
	Возврат Текст;
	
КонецФункции

#КонецОбласти

#Область КорректировкаПотребленияСезонныхУслугМКД

Функция ТекстЗапросаВспомогательныеДанныеДляКорректировкиПотребленияСезонныхУслугМКД()
	
	Текст  =
	"ВЫБРАТЬ
	|	энргНастройкаСезонностиУслуг.МКД КАК МКД,
	|	энргНастройкаСезонностиУслуг.Услуга КАК Услуга,
	|	энргНастройкаСезонностиУслуг.НеПрименятьСезонность КАК НеПрименятьСезонность,
	|	энргНастройкаСезонностиУслуг.КорректироватьГодовойОбъем КАК КорректироватьГодовойОбъем,
	|	0 КАК Приоритет
	|ПОМЕСТИТЬ УслугиКорректироватьГодовойОбъемНабор
	|ИЗ
	|	РегистрСведений.энргНастройкаСезонностиУслуг.СрезПоследних(
	|			&ПериодНачисления,
	|			Организация = &Организация
	|				И Район = &Район
	|				И НаправлениеИспользованияТУ = ЗНАЧЕНИЕ(Справочник.энргНаправлениеИспользованияТочекУчета.ОсновноеНаправление)
	|				И НЕ МКД = ЗНАЧЕНИЕ(Справочник.энргСтроения.ПустаяСсылка)
	|				И МКД = &МКД) КАК энргНастройкаСезонностиУслуг
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	энргНастройкаСезонностиУслуг.МКД,
	|	энргНастройкаСезонностиУслуг.Услуга,
	|	энргНастройкаСезонностиУслуг.НеПрименятьСезонность,
	|	энргНастройкаСезонностиУслуг.КорректироватьГодовойОбъем,
	|	1
	|ИЗ
	|	РегистрСведений.энргНастройкаСезонностиУслуг.СрезПоследних(
	|			&ПериодНачисления,
	|			Организация = &Организация
	|				И Район = &Район
	|				И НаправлениеИспользованияТУ = ЗНАЧЕНИЕ(Справочник.энргНаправлениеИспользованияТочекУчета.ОсновноеНаправление)
	|				И МКД = ЗНАЧЕНИЕ(Справочник.энргСтроения.ПустаяСсылка)) КАК энргНастройкаСезонностиУслуг
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.МКД КАК МКД,
	|	ВложенныйЗапрос.Услуга КАК Услуга
	|ПОМЕСТИТЬ УслугиКорректироватьГодовойОбъем
	|ИЗ
	|	(ВЫБРАТЬ
	|		УслугиКорректироватьГодовойОбъемНабор.МКД КАК МКД,
	|		УслугиКорректироватьГодовойОбъемНабор.Услуга КАК Услуга,
	|		МИНИМУМ(УслугиКорректироватьГодовойОбъемНабор.Приоритет) КАК Приоритет
	|	ИЗ
	|		УслугиКорректироватьГодовойОбъемНабор КАК УслугиКорректироватьГодовойОбъемНабор
	|	
	|	СГРУППИРОВАТЬ ПО
	|		УслугиКорректироватьГодовойОбъемНабор.МКД,
	|		УслугиКорректироватьГодовойОбъемНабор.Услуга) КАК ВложенныйЗапрос
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ УслугиКорректироватьГодовойОбъемНабор КАК УслугиКорректироватьГодовойОбъемНабор
	|		ПО ВложенныйЗапрос.МКД = УслугиКорректироватьГодовойОбъемНабор.МКД
	|			И ВложенныйЗапрос.Услуга = УслугиКорректироватьГодовойОбъемНабор.Услуга
	|			И ВложенныйЗапрос.Приоритет = УслугиКорректироватьГодовойОбъемНабор.Приоритет
	|ГДЕ
	|	УслугиКорректироватьГодовойОбъемНабор.НеПрименятьСезонность
	|	И УслугиКорректироватьГодовойОбъемНабор.КорректироватьГодовойОбъем
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	энргСтабильныеПериоды.МКД КАК МКД,
	|	энргСтабильныеПериоды.ТочкаУчета КАК ТочкаУчета,
	|	энргСтабильныеПериоды.Услуга КАК Услуга,
	|	ИСТИНА КАК КорректировкаТекущегоПериода
	|ПОМЕСТИТЬ ТочкиДляКорректировкиТекущийПериод
	|ИЗ
	|	РегистрСведений.энргСтабильныеПериодыМКД КАК энргСтабильныеПериоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ УслугиКорректироватьГодовойОбъем КАК УслугиКорректироватьГодовойОбъем
	|		ПО энргСтабильныеПериоды.МКД = УслугиКорректироватьГодовойОбъем.МКД
	|			И энргСтабильныеПериоды.Услуга = УслугиКорректироватьГодовойОбъем.Услуга
	|			И (энргСтабильныеПериоды.Организация = &Организация)
	|			И (энргСтабильныеПериоды.ПериодНачисления = &ПериодНачисления)
	|			И (энргСтабильныеПериоды.Район = &Район)
	|			И (энргСтабильныеПериоды.МКД = &МКД)
	|
	|СГРУППИРОВАТЬ ПО
	|	энргСтабильныеПериоды.МКД,
	|	энргСтабильныеПериоды.ТочкаУчета,
	|	энргСтабильныеПериоды.Услуга
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ энргСтабильныеПериоды.УслугаПодключена) > 1
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.МКД,
	|	ВложенныйЗапрос.ТочкаУчета,
	|	ВложенныйЗапрос.Услуга,
	|	ЛОЖЬ
	|ИЗ
	|	(ВЫБРАТЬ
	|		энргСтабильныеПериоды.МКД КАК МКД,
	|		энргСтабильныеПериоды.ТочкаУчета КАК ТочкаУчета,
	|		энргСтабильныеПериоды.Услуга КАК Услуга
	|	ИЗ
	|		РегистрСведений.энргСтабильныеПериодыМКД КАК энргСтабильныеПериоды
	|			ЛЕВОЕ СОЕДИНЕНИЕ УслугиКорректироватьГодовойОбъемНабор КАК УслугиКорректироватьГодовойОбъемНабор
	|			ПО энргСтабильныеПериоды.Услуга = УслугиКорректироватьГодовойОбъемНабор.Услуга
	|				И энргСтабильныеПериоды.МКД = УслугиКорректироватьГодовойОбъемНабор.МКД
	|	ГДЕ
	|		&ВыполнятьГодовуюКорректировку
	|		И энргСтабильныеПериоды.Организация = &Организация
	|		И энргСтабильныеПериоды.ПериодНачисления = &ПериодНачисления
	|		И энргСтабильныеПериоды.Район = &Район
	|		И энргСтабильныеПериоды.МКД = &МКД
	|		И энргСтабильныеПериоды.НомерПозиции = 0
	|		И УслугиКорректироватьГодовойОбъемНабор.МКД ЕСТЬ NULL) КАК ВложенныйЗапрос
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ УслугиКорректироватьГодовойОбъем КАК УслугиКорректироватьГодовойОбъем
	|		ПО ВложенныйЗапрос.Услуга = УслугиКорректироватьГодовойОбъем.Услуга
	|			И (УслугиКорректироватьГодовойОбъем.МКД = ЗНАЧЕНИЕ(Справочник.энргСтроения.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	энргСтабильныеПериоды.МКД,
	|	энргСтабильныеПериоды.ТочкаУчета,
	|	энргСтабильныеПериоды.Услуга,
	|	ЛОЖЬ
	|ИЗ
	|	РегистрСведений.энргСтабильныеПериодыМКД КАК энргСтабильныеПериоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ УслугиКорректироватьГодовойОбъем КАК УслугиКорректироватьГодовойОбъем
	|		ПО (энргСтабильныеПериоды.Организация = &Организация)
	|			И (энргСтабильныеПериоды.ПериодНачисления = НАЧАЛОПЕРИОДА(&ПериодНачисления, ГОД))
	|			И (энргСтабильныеПериоды.Район = &Район)
	|			И (энргСтабильныеПериоды.МКД = &МКД)
	|			И (энргСтабильныеПериоды.НомерПозиции = 0)
	|			И (энргСтабильныеПериоды.УслугаПодключена)
	|			И (энргСтабильныеПериоды.МКДОткрыт)
	|			И энргСтабильныеПериоды.МКД = УслугиКорректироватьГодовойОбъем.МКД
	|			И энргСтабильныеПериоды.Услуга = УслугиКорректироватьГодовойОбъем.Услуга
	|			И (&ВыполнятьГодовуюКорректировку)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	&ПериодНачисления КАК ПериодНачисления,
	|	&Район КАК Район,
	|	ВложенныйЗапрос.МКД КАК МКД,
	|	ВложенныйЗапрос.Услуга КАК Услуга,
	|	ВложенныйЗапрос.ТочкаУчета КАК ТочкаУчета,
	|	ВложенныйЗапрос.Поставщик КАК Поставщик,
	|	ВложенныйЗапрос.ОбъемУслугиПотребленный - ВложенныйЗапрос.ОбъемУслуги КАК ОбъемКорректировки,
	|	ВложенныйЗапрос.ОбъемУслугиПотребленный КАК ОбъемУслугиПотребленный,
	|	ВложенныйЗапрос.ОбъемУслуги КАК ОбъемУслуги,
	|	&ЗавершениеОП КАК ЗавершениеОП
	|ПОМЕСТИТЬ КорректируемыеОбъемы
	|ИЗ
	|	(ВЫБРАТЬ
	|		энргОбъемНачисленийОбороты.МКД КАК МКД,
	|		энргОбъемНачисленийОбороты.Услуга КАК Услуга,
	|		энргОбъемНачисленийОбороты.ТочкаУчета КАК ТочкаУчета,
	|		энргОбъемНачисленийОбороты.Поставщик КАК Поставщик,
	|		СУММА(энргОбъемНачисленийОбороты.ОбъемУслугиОборот) КАК ОбъемУслуги,
	|		СУММА(энргОбъемНачисленийОбороты.ОбъемУслугиПотребленныйОборот) КАК ОбъемУслугиПотребленный
	|	ИЗ
	|		РегистрНакопления.энргОбъемНачисленийМКД.Обороты(
	|				&ПериодНачисления,
	|				КОНЕЦПЕРИОДА(&ПериодНачисления, МЕСЯЦ),
	|				Месяц,
	|				Организация = &Организация
	|					И Район = &Район
	|					И МКД = &МКД) КАК энргОбъемНачисленийОбороты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТочкиДляКорректировкиТекущийПериод КАК ТочкиДляКорректировки
	|			ПО энргОбъемНачисленийОбороты.МКД = ТочкиДляКорректировки.МКД
	|				И энргОбъемНачисленийОбороты.ТочкаУчета = ТочкиДляКорректировки.ТочкаУчета
	|				И энргОбъемНачисленийОбороты.Услуга = ТочкиДляКорректировки.Услуга
	|				И (ТочкиДляКорректировки.КорректировкаТекущегоПериода)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		энргОбъемНачисленийОбороты.МКД,
	|		энргОбъемНачисленийОбороты.Услуга,
	|		энргОбъемНачисленийОбороты.ТочкаУчета,
	|		энргОбъемНачисленийОбороты.Поставщик
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		энргОбъемНачисленийОбороты.МКД,
	|		энргОбъемНачисленийОбороты.Услуга,
	|		энргОбъемНачисленийОбороты.ТочкаУчета,
	|		энргОбъемНачисленийОбороты.Поставщик,
	|		СУММА(энргОбъемНачисленийОбороты.ОбъемУслугиОборот),
	|		СУММА(энргОбъемНачисленийОбороты.ОбъемУслугиПотребленныйОборот)
	|	ИЗ
	|		РегистрНакопления.энргОбъемНачисленийМКД.Обороты(
	|				НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&ПериодНачисления, ГОД), СЕКУНДА, -1), ГОД),
	|				КОНЕЦПЕРИОДА(НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&ПериодНачисления, ГОД), СЕКУНДА, -1), ГОД), ГОД),
	|				Год,
	|				Организация = &Организация
	|					И Район = &Район
	|					И МКД = &МКД
	|					И &ВыполнятьГодовуюКорректировку) КАК энргОбъемНачисленийОбороты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТочкиДляКорректировкиТекущийПериод КАК ТочкиДляКорректировки
	|			ПО энргОбъемНачисленийОбороты.МКД = ТочкиДляКорректировки.МКД
	|				И энргОбъемНачисленийОбороты.ТочкаУчета = ТочкиДляКорректировки.ТочкаУчета
	|				И энргОбъемНачисленийОбороты.Услуга = ТочкиДляКорректировки.Услуга
	|				И (НЕ ТочкиДляКорректировки.КорректировкаТекущегоПериода)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		энргОбъемНачисленийОбороты.МКД,
	|		энргОбъемНачисленийОбороты.Услуга,
	|		энргОбъемНачисленийОбороты.ТочкаУчета,
	|		энргОбъемНачисленийОбороты.Поставщик) КАК ВложенныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	энргДокументыНачислений.Организация,
	|	энргДокументыНачислений.Район,
	|	энргДокументыНачислений.ПериодНачисления,
	|	энргДокументыНачислений.ДокументНачисления КАК ДокументНачисления,
	|	энргДокументыНачислений.ПометкаУдаления КАК ПометкаУдаления
	|ПОМЕСТИТЬ ДокументыНачислений
	|ИЗ
	|	РегистрСведений.энргДокументыНачислений КАК энргДокументыНачислений
	|ГДЕ
	|	энргДокументыНачислений.Организация = &Организация
	|	И энргДокументыНачислений.ПериодНачисления = &ПериодНачисления
	|	И энргДокументыНачислений.Район = &Район
	|	И энргДокументыНачислений.ВидОперацийНачисления = ЗНАЧЕНИЕ(Перечисление.энргВидыОперацийНачисления.КорректировкаПотребленияСезонныхУслугМКД)
	|	И энргДокументыНачислений.МКД = ЗНАЧЕНИЕ(Справочник.энргСтроения.ПустаяСсылка)";
	
	Возврат Текст;
	
КонецФункции

Функция ТекстЗапросаДанныеДляКорректировкаПотребленияСезонныхУслугМКД()
	
	Текст  = 
	"ВЫБРАТЬ
	|	КорректируемыеОбъемы.Организация КАК Организация,
	|	КорректируемыеОбъемы.ПериодНачисления КАК ПериодНачисления,
	|	КорректируемыеОбъемы.Район КАК Район,
	|	КорректируемыеОбъемы.МКД КАК МКД,
	|	КорректируемыеОбъемы.Услуга КАК Услуга,
	|	КорректируемыеОбъемы.ТочкаУчета КАК ТочкаУчета,
	|	ЗНАЧЕНИЕ(Перечисление.энргВидыНачислений.Перерасчет) КАК ВидНачисления,
	|	ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.КорректировкаСезонныхУслуг) КАК СпособНачисления,
	|	КорректируемыеОбъемы.Поставщик КАК Поставщик,
	|	КорректируемыеОбъемы.ОбъемКорректировки КАК ОбъемУслуги,
	|	ЕСТЬNULL(ДокументыНачислений.ДокументНачисления, ЗНАЧЕНИЕ(Документ.энргПерерасчет.ПустаяСсылка)) КАК ДокументНачисления,
	|	ЕСТЬNULL(ДокументыНачислений.ПометкаУдаления, ЛОЖЬ) КАК ДокументНачисленияПометкаУдаления,
	|	КорректируемыеОбъемы.ЗавершениеОП КАК ЗавершениеОП
	|ИЗ
	|	КорректируемыеОбъемы КАК КорректируемыеОбъемы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДокументыНачислений КАК ДокументыНачислений
	|		ПО КорректируемыеОбъемы.Организация = ДокументыНачислений.Организация
	|			И КорректируемыеОбъемы.Район = ДокументыНачислений.Район
	|			И КорректируемыеОбъемы.ПериодНачисления = ДокументыНачислений.ПериодНачисления";
	
	Возврат Текст;
	
КонецФункции

#КонецОбласти

#Область НачислениеНаОДН_ВспомогательныеПроцедурыИФункции

Функция РезультатЗапросаНачисленияНаОДН(Организация,ПериодНачисления,Район,МКД,ГраницыПериода) 	
	МВТ  = Новый МенеджерВременныхТаблиц;
	РепозиторийНачислениеНаОДН(МВТ,Организация,ПериодНачисления,Район,ГраницыПериода,МКД);
	ПолучитьСтабильныеПериодыМКД(МВТ);
	ПолучитьДанныеДляРасчетаМКД(МВТ);
	Возврат РассчитатьОбъемПотребленияМКД(МВТ);
КонецФункции

Процедура ПолучитьСтабильныеПериодыМКД(МВТ)
	Запрос 							= Новый Запрос(ТекстЗапросаПолучитьСтабильныеПериодыМКД());
	Запрос.МенеджерВременныхТаблиц 	= МВТ;
	Запрос.УстановитьПараметр("ДокументНачисленияПустаяСсылка", Документы.энргНачислениеМКД.ПустаяСсылка());
	Запрос.Выполнить();
КонецПроцедуры

Процедура ПолучитьДанныеДляРасчетаМКД(МВТ)
	Запрос 							= Новый Запрос(ТекстЗапросаПолучитьДанныеДляРасчетаМКД());
	Запрос.МенеджерВременныхТаблиц 	= МВТ;	
	Запрос.Выполнить(); 	
КонецПроцедуры

Процедура ДобавитьСтрокиНачисленияМКДПоФормуле(ПериодНачисления, Организация, Район, МКД, ТочкаУчета, КонецПериодаРасчета, ОписаниеУслуг, НормативыПоУслугам, Набор)
	
 	ТипыРасходов 									= энргНачисления.ТипыРасходовВФормулахРасчета();
	ТипРасходаПоШкале  								= ТипыРасходов["РасходИзмерителяПоШкале"];	
	ТипРасходаНорматив 								= ТипыРасходов["ЗначениеНормативаПоУслуге"];
	
	Для Каждого СтрокаФормулы Из ОписаниеУслуг Цикл			
		ТекФормулаОбъемУслуги	 					= СтрокаФормулы.ФормулаРасчета;
		
		Если Не ЗначениеЗаполнено(ТекФормулаОбъемУслуги) Тогда
			Продолжить;
		КонецЕсли;
		ТекФормулаОбъемУслугиПотребленный			= СтрокаФормулы.ФормулаРасчета;
		ПараметрыФормулы 							= СтрокаФормулы.ПараметрыФормулы;
		Для Каждого КлючЗначениеЧастьУзла Из ПараметрыФормулы Цикл
			Шкалы 									= КлючЗначениеЧастьУзла.Значение;
			КлючЧастьУзлаПриборУчета 				= XMLСтрока(КлючЗначениеЧастьУзла.Ключ); 
			Для Каждого КлючЗначениеШкала Из Шкалы Цикл
				КлючШкалы 							= XMLСтрока(КлючЗначениеШкала.Ключ);
				ОписаниеОбъема 						= КлючЗначениеШкала.Значение;
				Ключ 								= Новый Структура("ТипРасхода, ПриборУчета, Шкала", ТипРасходаПоШкале, КлючЧастьУзлаПриборУчета,КлючШкалы); 
				ТекФормулаОбъемУслуги 				= СтрЗаменить(ТекФормулаОбъемУслуги,"[" + ЗначениеВСтрокуВнутр(Ключ) + "]",ОписаниеОбъема.ОбъемУслуги);
				ТекФормулаОбъемУслугиПотребленный 	= СтрЗаменить(ТекФормулаОбъемУслугиПотребленный,"[" + ЗначениеВСтрокуВнутр(Ключ) + "]",ОписаниеОбъема.ОбъемУслугиПотребленный);
			КонецЦикла; 			
		КонецЦикла;
		
		Для Каждого ПараметрФормулы Из НормативыПоУслугам Цикл			
			Ключ 									= Новый Структура("ТипРасхода, Услуга", ТипРасходаНорматив, XMLСтрока(ПараметрФормулы.Ключ));			
			ТекФормулаОбъемУслуги 					= СтрЗаменить(ТекФормулаОбъемУслуги,"[" + ЗначениеВСтрокуВнутр(Ключ) + "]",ПараметрФормулы.Значение);
			ТекФормулаОбъемУслугиПотребленный 		= СтрЗаменить(ТекФормулаОбъемУслугиПотребленный,"[" + ЗначениеВСтрокуВнутр(Ключ) + "]",ПараметрФормулы.Значение);
		КонецЦикла;
		
		ТекФормулаОбъемУслуги						= СтрЗаменить(ТекФормулаОбъемУслуги," ","");
		ТекФормулаОбъемУслуги						= СтрЗаменить(ТекФормулаОбъемУслуги,Символы.НПП,"");
		ТекФормулаОбъемУслуги						= СтрЗаменить(ТекФормулаОбъемУслуги,",",".");
		РезультатПоФормуламОбъемУслуги				= 0;
		ТекФормулаОбъемУслуги 						= СтрЗаменить(ТекФормулаОбъемУслуги,"[Результат]=","РезультатПоФормуламОбъемУслуги=");
		Выполнить ТекФормулаОбъемУслуги;
		
		ТекФормулаОбъемУслугиПотребленный			= СтрЗаменить(ТекФормулаОбъемУслугиПотребленный," ","");
		ТекФормулаОбъемУслугиПотребленный			= СтрЗаменить(ТекФормулаОбъемУслугиПотребленный,Символы.НПП,"");
		ТекФормулаОбъемУслугиПотребленный			= СтрЗаменить(ТекФормулаОбъемУслугиПотребленный,",",".");
		РезультатПоФормуламОбъемУслугиПотребленный	= 0;
		ТекФормулаОбъемУслугиПотребленный			= СтрЗаменить(ТекФормулаОбъемУслугиПотребленный,"[Результат]=","РезультатПоФормуламОбъемУслугиПотребленный=");
		Выполнить ТекФормулаОбъемУслугиПотребленный;
		
		Если РезультатПоФормуламОбъемУслуги = 0 И РезультатПоФормуламОбъемУслугиПотребленный = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаНабора 								= Набор.добавить();
		СтрокаНабора.Период 						= КонецПериодаРасчета-1;
		СтрокаНабора.Организация 					= Организация;
		СтрокаНабора.Район 							= Район;
		СтрокаНабора.МКД 							= МКД;
		СтрокаНабора.Услуга 						= СтрокаФормулы.Услуга;
		СтрокаНабора.ТочкаУчета 					= ТочкаУчета;
		СтрокаНабора.ВидНачисления 					= Перечисления.энргВидыНачислений.Начисление;
		СтрокаНабора.СпособНачисления 				= СтрокаФормулы.СпособНачисления;
		СтрокаНабора.ПриборУчета 					= СтрокаФормулы.УзелПриборУчета;
		СтрокаНабора.ТарифнаяЗона 					= Справочники.энргТарифныеЗоны.ПустаяСсылка();
		СтрокаНабора.Поставщик 						= СтрокаФормулы.Поставщик;
		СтрокаНабора.ПериодРасчета 					= ПериодНачисления;
		СтрокаНабора.ПериодНачисления 				= ПериодНачисления;
		СтрокаНабора.ОбъемУслуги 					= РезультатПоФормуламОбъемУслуги;		
		СтрокаНабора.ОбъемУслугиПотребленный 		= РезультатПоФормуламОбъемУслугиПотребленный;		
		СтрокаНабора.НачалоПериода 					= СтрокаФормулы.НачалоПериода;
		СтрокаНабора.КонецПериода 					= СтрокаФормулы.КонецПериода;			
		СтрокаНабора.НеПрименятьСезонность			= СтрокаФормулы.НеПрименятьСезонность;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработатьРезультатЗапросаНачисленийМКД(РезультатЗапроса, ГраницыПериода, МКД, Набор)
	перем ДокументОбъект, НаборВыполненные, ТекМКД, ТекУслуга, ТекШкала;
		
	Выборка  														= РезультатЗапроса.выбрать();
			
	ТекТочкаУчета													= Неопределено;
	ТекПриборУчета													= Неопределено;
	ТекНачалоПериода												= Неопределено;
	ТекКонецПериода 												= Неопределено;
	ТекФормулаРасчета												= Неопределено;
	ТекПоставщик  													= Неопределено;
	СпособРасчетаПоПрибору 											= Перечисления.энргСпособНачислений.ПоПриборам;
	СпособРасчетаПоСреднему											= Перечисления.энргСпособНачислений.НачислениеПоСреднему;
	КлючТепловаяСоставляющая 										= энргРаботаСФормуламиРасчетаСервер.ТепловаяСоставляющаяКлюч();
	БезРазбивки														= Справочники.энргТарифныеЗоны.БезРазбивки;
	ФормулыРасчет 													= Неопределено;
	ПараметрыФормулы 												= Неопределено;
	ТекСпособНачисленияПоФормуле 									= Неопределено;
	НачисляемПоФормуле 												= Ложь;	
	СпособРасчетаПоФормуле 											= Неопределено;	
	НормативыПоУслугам 												= Неопределено;
	СтрокаОписанияФормулы 											= Неопределено;
	МассивФормулРасчета												= Неопределено;	
	КлючСтруктурыФормулы 											= "
	|Услуга, ФормулаРасчета, Поставщик,
	|СпособНачисления, ПриборУчета, НеПрименятьСезонность,
	|НачалоПериода, КонецПериода, ОбъемЗаПрошлыйГод";
			
	НачисленияПоУслугамТочки 										= Неопределено;
		
	Ошибки 															= "";
	Если Выборка.Количество() = 0 Тогда
		Возврат;		
	КонецЕсли;
	
	НачатьТранзакцию();

	ЧитатьНаборыЗаписейДокументаНачисленияМКД 						= Набор = Неопределено;
	
	Пока Выборка.следующий() цикл
		
		Если ТекМКД = Неопределено И ЧитатьНаборыЗаписейДокументаНачисленияМКД Тогда
			ПрочитатьНаборыЗаписейДокументаНачисленияМКД(Выборка, МКД, ДокументОбъект, НаборВыполненные, Набор, Перечисления.энргВидыОперацийНачисления.РасчетМКД);
		КонецЕсли;
	
		Если Не ТекМКД = Выборка.МКД Или НЕ ТекТочкаУчета = Выборка.ТочкаУчета ИЛИ Не ТекНачалоПериода = Выборка.НачалоПериода Тогда
			
			Если НЕ ТекМКД = Неопределено Тогда
				СтрокаОписанияФормулы.Вставить("ПараметрыФормулы", ПараметрыФормулы);
				МассивФормулРасчета.Добавить(СтрокаОписанияФормулы); 				
				
				ДобавитьСтрокиНачисленияМКДПоФормуле(Выборка.ПериодНачисления, Выборка.Организация, Выборка.Район, ТекМКД, ТекТочкаУчета, Выборка.ЗавершениеОП-1, МассивФормулРасчета, НормативыПоУслугам, Набор);
			КонецЕсли;
			
			МассивФормулРасчета 									= Новый Массив;
			СтрокаОписанияФормулы 									= Новый Структура(КлючСтруктурыФормулы);
			СтрокаОписанияФормулы.Услуга 							= Выборка.Услуга;
			СтрокаОписанияФормулы.ФормулаРасчета 					= Выборка.ФормулаРасчета;
			СтрокаОписанияФормулы.Поставщик 						= Выборка.Поставщик;
			СтрокаОписанияФормулы.СпособНачисления 					= Выборка.СпособНачисления;
			СтрокаОписанияФормулы.ПриборУчета 						= Выборка.ПриборУчета;
			СтрокаОписанияФормулы.НеПрименятьСезонность 			= Выборка.НеПрименятьСезонность;
			СтрокаОписанияФормулы.НачалоПериода 					= Выборка.НачалоПериода;
			СтрокаОписанияФормулы.КонецПериода 						= Выборка.КонецПериода;
			СтрокаОписанияФормулы.ОбъемЗаПрошлыйГод 				= Выборка.ОбъемЗаПрошлыйГод;
							
			ПараметрыФормулы 										= Новый Соответствие;
			НачисленияПоУслугамТочки 								= Новый Соответствие;
			НачисленияПоШкале 										= Новый Соответствие;
			
			НормативыПоУслугам  									= Новый Соответствие;
			НормативыПоУслугам.Вставить(Выборка.Услуга, 	Выборка.НормаПотребления);			
			
			УдалитьСтрокиПоСреднемуПоНормативу					= Новый Соответствие;
		ИначеЕсли НЕ ТекУслуга = Выборка.Услуга Тогда
			СтрокаОписанияФормулы.Вставить("ПараметрыФормулы", ПараметрыФормулы);
			МассивФормулРасчета.Добавить(СтрокаОписанияФормулы);
			НачисленияПоУслугамТочки.Вставить(ТекУслуга, НачисленияПоШкале);
			
			ПараметрыФормулы 										= Новый Соответствие;
			НачисленияПоШкале 										= Новый Соответствие;
			
			СтрокаОписанияФормулы 									= Новый Структура(КлючСтруктурыФормулы);
			СтрокаОписанияФормулы.Услуга 							= Выборка.Услуга;
			СтрокаОписанияФормулы.ФормулаРасчета 					= Выборка.ФормулаРасчета;
			СтрокаОписанияФормулы.Поставщик 						= Выборка.Поставщик;
			СтрокаОписанияФормулы.СпособНачисления 					= Выборка.СпособНачисления;
			СтрокаОписанияФормулы.ПриборУчета 						= Выборка.ПриборУчета;
			СтрокаОписанияФормулы.НеПрименятьСезонность 			= Выборка.НеПрименятьСезонность;
			СтрокаОписанияФормулы.НачалоПериода 					= Выборка.НачалоПериода;
			СтрокаОписанияФормулы.КонецПериода 						= Выборка.КонецПериода;
			СтрокаОписанияФормулы.ОбъемЗаПрошлыйГод 				= Выборка.ОбъемЗаПрошлыйГод;
					
			НормативыПоУслугам.Вставить(Выборка.Услуга, 		Выборка.НормаПотребления);			
		ИначеЕсли НЕ ТекШкала = Выборка.Шкала Тогда
			НачисленияПоШкале 										= Новый Соответствие;
		КонецЕсли; 
		
		СтрокаНабора 												= Набор.добавить();
		ЗаполнитьЗначенияСвойств(СтрокаНабора,Выборка);
		СтрокаНабора.Период 										= Выборка.ЗавершениеОП-1;
		СтрокаНабора.ВидНачисления 									= Перечисления.энргВидыНачислений.Начисление;
		
		Если ЗначениеЗаполнено(Выборка.ЗависитОтУслуги) и НЕ Выборка.ПривязанаКШкале и НЕ Выборка.РасчетПоФормуле Тогда
			ОбъемУслуги 											= 0;
			ОбъемУслугиПотребленный 								= 0;
			Если НЕ НачисленияПоУслугамТочки[Выборка.ЗависитОтУслуги] = Неопределено Тогда
				Если НЕ НачисленияПоУслугамТочки[Выборка.ЗависитОтУслуги][Выборка.Шкала] = Неопределено Тогда
					ОбъемУслугиОсновной 						= НачисленияПоУслугамТочки[Выборка.ЗависитОтУслуги][Выборка.Шкала];
					ОбъемУслуги 								= ОбъемУслугиОсновной.ОбъемУслуги * Выборка.НормаПотребления;
					ОбъемУслугиПотребленный 					= ОбъемУслугиОсновной.ОбъемУслугиПотребленный * Выборка.НормаПотребления;
				КонецЕсли;
			КонецЕсли;
			СтрокаНабора.ОбъемУслуги 							= ОбъемУслуги;
			СтрокаНабора.ОбъемУслугиПотребленный 				= ОбъемУслугиПотребленный;
		КонецЕсли;
							
		КлючШкалы 														= Выборка.Шкала.УникальныйИдентификатор();
		Если ПараметрыФормулы[КлючШкалы] = Неопределено Тогда 			
			ПараметрыФормулы.Вставить(КлючШкалы, Новый Структура("ОбъемУслуги, ОбъемУслугиПотребленный", Выборка.ОбъемУслуги, Выборка.ОбъемУслугиПотребленный));
		Иначе
			ПараметрыФормулы[КлючШкалы].ОбъемУслуги 					= ПараметрыФормулы[КлючШкалы].ОбъемУслуги + Выборка.ОбъемУслуги;
			ПараметрыФормулы[КлючШкалы].ОбъемУслугиПотребленный 		= ПараметрыФормулы[КлючШкалы].ОбъемУслугиПотребленный + Выборка.ОбъемУслугиПотребленный;
		КонецЕсли; 		
		
		Если НЕ НачисленияПоШкале[Выборка.Шкала] = Неопределено Тогда
			НачисленияПоШкале[Выборка.Шкала].ОбъемУслуги 			 = НачисленияПоШкале[Выборка.Шкала].ОбъемУслуги + Выборка.ОбъемУслуги;
			НачисленияПоШкале[Выборка.Шкала].ОбъемУслугиПотребленный = НачисленияПоШкале[Выборка.Шкала].ОбъемУслугиПотребленный + Выборка.ОбъемУслугиПотребленный;
		Иначе
			НачисленияПоШкале.Вставить(Выборка.Шкала, Новый Структура("ОбъемУслуги, ОбъемУслугиПотребленный", Выборка.ОбъемУслуги, Выборка.ОбъемУслугиПотребленный));
		КонецЕсли;
		
		//закрытая схема
		Если Выборка.ЗакрытаяСхемаГВС Тогда
			СтрокаНабора.ОбъемУслуги = 0;
		КонецЕсли;		 		
		
		ТекМКД 														= Выборка.МКД;
		ТекУслуга 													= Выборка.Услуга;
		ТекНачалоПериода											= Выборка.НачалоПериода;
		ТекКонецПериода												= Выборка.КонецПериода;
		ТекТочкаУчета 												= Выборка.ТочкаУчета;
		ТекШкала 													= Выборка.Шкала;
	КонецЦикла;	
	
	Если Не МассивФормулРасчета = Неопределено Тогда
		СтрокаОписанияФормулы.Вставить("ПараметрыФормулы", ПараметрыФормулы);
		МассивФормулРасчета.Добавить(СтрокаОписанияФормулы);		
		ДобавитьСтрокиНачисленияМКДПоФормуле(Выборка.ПериодНачисления, Выборка.Организация, Выборка.Район, ТекМКД, ТекТочкаУчета, Выборка.ЗавершениеОП-1, МассивФормулРасчета, НормативыПоУслугам, Набор);
	КонецЕсли;
	
	Если ЧитатьНаборыЗаписейДокументаНачисленияМКД Тогда
		ЗаписатьНаборыЗаписейНачислениеМКД(ДокументОбъект, Набор, НаборВыполненные, Ошибки) ;     
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(Ошибки) Тогда
		ВызватьИсключение Ошибки;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПрочитатьНаборыЗаписейДокументаНачисленияМКД(Выборка,МКД,ДокументОбъект,НаборВыполненные,Набор, ВидОперацийНачисления)
	
	ДокументСсылка											= Выборка.ДокументНачисления;
	ПометкаУдаления 										= Выборка.ДокументНачисленияПометкаУдаления;
	
	ДокументОбъект 											= Неопределено;
	НаборВыполненные 										= Неопределено;
	Набор 													= Неопределено;
	
	Если НЕ ЗначениеЗаполнено(ДокументСсылка) Тогда				
		Если ВидОперацийНачисления = Перечисления.энргВидыОперацийНачисления.РасчетМКД Тогда																							   
			ДокументСсылка 									= Документы.энргНачислениеМКД.ПолучитьСсылку(Новый УникальныйИдентификатор());
			ДокументОбъект  								= Документы.энргНачислениеМКД.СоздатьДокумент();																					 
		ИначеЕсли ВидОперацийНачисления = Перечисления.энргВидыОперацийНачисления.КорректировкаПотребленияСезонныхУслугМКД Тогда
			ДокументСсылка 									= Документы.энргПерерасчетМКД.ПолучитьСсылку(Новый УникальныйИдентификатор());															  
			ДокументОбъект  								= Документы.энргПерерасчетМКД.СоздатьДокумент();																										  
			ДокументОбъект.ВидОперации 						= Перечисления.энргВидыОпераций.энргПерерасчетМКД_КорректировкаГодовогоПотребленияСезонныхУслуг;
		Иначе
			ВызватьИсключение "Не указан вид операций начисления";																						 
		КонецЕсли;
		
		ДокументОбъект.район  								= Выборка.Район;
		ДокументОбъект.Дата									= Выборка.ЗавершениеОП-1;
		ДокументОбъект.Организация 							= Выборка.Организация;
		ДокументОбъект.УстановитьСсылкуНового(ДокументСсылка);
		
		НаборВыполненные 									= РегистрыСведений.энргДокументыНачислений.СоздатьНаборЗаписей();
		НаборВыполненныеДопСвойства 						= НаборВыполненные.ДополнительныеСвойства;
		НаборВыполненныеДопСвойства.Вставить("Замещать", Ложь);
		ЗаписьВыполненные									= НаборВыполненные.Добавить();
		ЗаписьВыполненные.Организация 						= Выборка.Организация;
		ЗаписьВыполненные.ПериодНачисления 					= Выборка.ПериодНачисления;
		ЗаписьВыполненные.Район			 					= Выборка.Район;
		ЗаписьВыполненные.ВидОперацийНачисления 			= ВидОперацийНачисления;
		ЗаписьВыполненные.МКД 								= Справочники.энргСтроения.ПустаяСсылка();
		ЗаписьВыполненные.ДокументНачисления 				= ДокументСсылка;							
	ИначеЕсли ПометкаУдаления Тогда
		ДокументОбъект										= ДокументСсылка.ПолучитьОбъект();
		ДокументОбъект.ПометкаУдаления 						= Ложь;
		
		НаборВыполненные 									= РегистрыСведений.энргДокументыНачислений.СоздатьНаборЗаписей();
		НаборВыполненныеДопСвойства 						= НаборВыполненные.ДополнительныеСвойства;
		НаборВыполненныеДопСвойства.Вставить("Замещать", Истина);
		
		НаборВыполненные.Отбор.Организация.Установить(Выборка.Организация);
		НаборВыполненные.Отбор.ПериодНачисления.Установить(Выборка.ПериодНачисления);
		НаборВыполненные.Отбор.Район.Установить(Выборка.Район);
		НаборВыполненные.Отбор.ВидОперацийНачисления.Установить(ВидОперацийНачисления);
		НаборВыполненные.Отбор.МКД.Установить(Справочники.энргСтроения.ПустаяСсылка());  					  
		
		ЗаписьВыполненные									= НаборВыполненные.Добавить();
		ЗаписьВыполненные.Организация 						= Выборка.Организация;
		ЗаписьВыполненные.ПериодНачисления 					= Выборка.ПериодНачисления;
		ЗаписьВыполненные.Район			 					= Выборка.Район;
		ЗаписьВыполненные.ВидОперацийНачисления 			= ВидОперацийНачисления;
		ЗаписьВыполненные.МКД 								= Справочники.энргСтроения.ПустаяСсылка();
		ЗаписьВыполненные.ДокументНачисления 				= ДокументСсылка;
		ЗаписьВыполненные.ПометкаУдаления	 				= Ложь;				
	КонецЕсли;
	
	Набор 													= РегистрыНакопления.энргОбъемНачисленийМКД.СоздатьНаборЗаписей();
	Набор.ДополнительныеСвойства.Вставить("Организация",		Выборка.Организация);
	Набор.ДополнительныеСвойства.Вставить("Район",				Выборка.Район);
	Набор.ДополнительныеСвойства.Вставить("ПериодНачисления",	Выборка.ПериодНачисления);
	Набор.ДополнительныеСвойства.Вставить("ДатаРегистратора",	Выборка.ЗавершениеОП-1);
	Набор.Отбор.Регистратор.Установить(ДокументСсылка);
	
	ОчищатьНабор 											= Ложь;
	
	Если НЕ МКД = Неопределено Тогда
		ОчищатьНабор 										= Истина;
		Набор.ДополнительныеСвойства.Вставить("МКД",	МКД);		
		Набор.Прочитать();
		СтрокиУдалить 										= Новый Массив;
		Для Каждого СтрокаНабора ИЗ Набор Цикл
			Если НЕ СтрокаНабора.МКД = МКД Тогда
				Продолжить;
			КонецЕсли;				
			СтрокиУдалить.Добавить(СтрокаНабора);
		КонецЦикла;
		
		Для Сч = 0 По СтрокиУдалить.ВГраница() Цикл
			Набор.Удалить(СтрокиУдалить[Сч]);
		КонецЦикла;			
	КонецЕсли;	
	
	Если ДокументОбъект = Неопределено Тогда
		Набор.ДополнительныеСвойства.Вставить("ЭтоОчистка",Истина);
		Набор.Записать();
		Набор.ДополнительныеСвойства.Удалить("ЭтоОчистка");
		Если ОчищатьНабор Тогда
			Набор.Очистить();
		КонецЕсли;		
	КонецЕсли;

КонецПроцедуры

Функция РассчитатьОбъемПотребленияМКД(МВТ); 
		
	Запрос  						= Новый Запрос(ТекстЗапросаРассчитатьОбъемПотребленияМКД());
	Запрос.МенеджерВременныхТаблиц 	= МВТ;	
	Запрос.Выполнить();
	
	Схема 							= Неопределено;
	ВыбираемыПоля  					= ВыбираемыеПоляРезультатНачисления();
	ВычисляемыеПоля 				= ВычисляемыеПоляРезультатНачисления();
	
	ДобавитьРасчетОбъемаУслугиПоПриборам(Схема,ВыбираемыПоля,ВычисляемыеПоля,МВТ,"ДанныеДляРасчета");
	ДобавитьРасчетОбъемаПотребленногоПоПриборам(Схема,ВыбираемыПоля,ВычисляемыеПоля,МВТ,"ДанныеДляРасчета");
	
	ДобавитьРасчетОбъемаУслугиПоНормативу(Схема,ВыбираемыПоля,ВычисляемыеПоля,МВТ,"ДанныеДляРасчета");
	ДобавитьРасчетОбъемаПотребленногоПоНормативу(Схема,ВыбираемыПоля,ВычисляемыеПоля,МВТ,"ДанныеДляРасчета");
	
	ДобавитьРасчетОбъемаУслугиПоСреднемуНормативуЗаПрошлыйГод(Схема,ВыбираемыПоля,ВычисляемыеПоля,МВТ,"ДанныеДляРасчета");
	ДобавитьРасчетОбъемаУслугиПоСреднемуНормативу(Схема,ВыбираемыПоля,ВычисляемыеПоля,МВТ,"ДанныеДляРасчета");
	ДобавитьРасчетОбъемаПотребленногоПоСреднемуНормативу(Схема,ВыбираемыПоля,ВычисляемыеПоля,МВТ,"ДанныеДляРасчета");
	
	ДобавитьРасчетОбъемаУслугиПоСреднемуЗаПрошлыйГод(Схема,ВыбираемыПоля,ВычисляемыеПоля,МВТ,"ДанныеДляРасчета");
	ДобавитьРасчетОбъемаУслугиПоСреднему(Схема,ВыбираемыПоля,ВычисляемыеПоля,МВТ,"ДанныеДляРасчета");
	ДобавитьРасчетОбъемаПотребленногоПоСреднему(Схема,ВыбираемыПоля,ВычисляемыеПоля,МВТ,"ДанныеДляРасчета");
	
	ПоляПорядка = Новый Массив;
	ПоляПорядка.Добавить("ПериодНачисления");
	ПоляПорядка.Добавить("Район");
	ПоляПорядка.Добавить("МКД");
	ПоляПорядка.Добавить("НачалоПериода");
	ПоляПорядка.Добавить("КонецПериода");
	ПоляПорядка.Добавить("ЗависитОтУслуги");
	ПоляПорядка.Добавить("ТочкаУчета");
	
	Пакет  							= Схема.ПакетЗапросов[Схема.ПакетЗапросов.Количество() - 1];
	Для Сч = 0 По ПоляПорядка.ВГраница() Цикл
		Пакет.Порядок.Добавить(ПоляПорядка[Сч]);
	КонецЦикла;
	Запрос  						= Новый Запрос(Схема.ПолучитьТекстЗапроса());
	Запрос.МенеджерВременныхТаблиц 	= МВТ;	
	Возврат Запрос.Выполнить();  	
КонецФункции

Функция ВыбираемыеПоляРезультатНачисления()
	
	ВыбираемыПоля = Новый Массив;
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","Организация"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ПериодНачисления"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","Район"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","МКД"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","НачалоПериода"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","КонецПериода"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ЗавершениеОП"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","НачальныеПоказания"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","КонечныеПоказания"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","НормаПотребления"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","Услуга"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ТочкаУчета"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ПриборУчета"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","Шкала"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","РаспределятьНаТочку"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ТарифнаяЗона"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ПриборВведен"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ДокументНачисления"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ДокументНачисленияПометкаУдаления"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","Поставщик"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ЗначениеПлощади"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ВидПлощади"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ПоказанияВСрок"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ФормулаРасчета"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","РасчетПоФормуле"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","СоставнаяУслуга"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","НеПрименятьСезонность"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ОбъемЗаПрошлыйГод"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ЗависитОтУслуги"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ПривязанаКШкале"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ВидБлагоустройства"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","НеРаспределятьНаАбонентов"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ЗакрытаяСхемаГВС"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ПлощадьМОП"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ПлощадьАбонентов"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ПлощадьСобственнаяПоставка"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","КоэффициентНорматива"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","КоэффициентСезоности")); 	
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","КоэффициентПУ"));
	
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ОбъемУслугиПотребленный"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ОбъемУслуги"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","СниматьНачисленныйСредний"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","СпособНачисления"));
	ВыбираемыПоля.Добавить(Новый Структура("Псевдоним,ВыбираемоеПоле","ОбъемУслугиНорматив"));
		
	Возврат ВыбираемыПоля;
		
КонецФункции

Функция ВычисляемыеПоляРезультатНачисления()
	
	ВычисляемыеПоля = Новый Структура;
	ВычисляемыеПоля.Вставить("НачалоПериода",		"НАЧАЛОПЕРИОДА(Псевдоним.НачалоПериода, ДЕНЬ)");
	
	КоличествоДней 	= "РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(Псевдоним.НачалоПериода, ДЕНЬ), НАЧАЛОПЕРИОДА(Псевдоним.КонецПериода, ДЕНЬ), ДЕНЬ)";
		
	ВычисляемыеПоля.Вставить("НормаПотребления", 	"
	|	ВЫРАЗИТЬ(Псевдоним.НормаПотребления  * ВЫБОР
	|		КОГДА Псевдоним.НеПрименятьСезонность
	|			ТОГДА Псевдоним.КоэффициентНормативаНеПрименятьСезонность
	|		ИНАЧЕ Псевдоним.КоэффициентНорматива
	|	КОНЕЦ КАК ЧИСЛО(15,6))");
	
	ВычисляемыеПоля.Вставить("ДлительностьПериодаПоНормативу", 	
	КоличествоДней + " / Псевдоним.ДнейВПериоде");
	
	ВычисляемыеПоля.Вставить("ДлительностьПериодаПоНормативуОбъемПотребленный", 
	КоличествоДней + " / Псевдоним.ДнейВПериоде");	
	
	ВычисляемыеПоля.Вставить("ДлительностьПериода", 
	КоличествоДней + " / Псевдоним.ДнейВПериоде");
	
	ВычисляемыеПоля.Вставить("РасходПоПоказаниям",	"
	|ВЫБОР
	|	КОГДА РегистрируетОбъем
	|			И НЕ КонечныеПоказания = ДанныеДляРасчета.НачальныеПоказания
	|		ТОГДА КонечныеПоказания
	|	КОГДА РегистрируетОбъем
	|		ТОГДА 0
	|	КОГДА КонечныеПоказания < НачальныеПоказания
	|		ТОГДА МаксимальноВозможныеПоказания - НачальныеПоказания + КонечныеПоказания
	|	ИНАЧЕ КонечныеПоказания - НачальныеПоказания
	|КОНЕЦ * КоэффициентПУ");
	
	
	ВычисляемыеПоля.Вставить("ОбъемУслугиПоНорме", 
	"Псевдоним.КоэффициентСезоности * ВЫРАЗИТЬ(Псевдоним.НормаПотребления * ВЫБОР
	|		КОГДА Псевдоним.НеПрименятьСезонность
	|			ТОГДА Псевдоним.КоэффициентНормативаНеПрименятьСезонность
	|		ИНАЧЕ Псевдоним.КоэффициентНорматива
	|	КОНЕЦ КАК ЧИСЛО(15,6)) * ВЫБОР
	|		КОГДА НЕ Псевдоним.ВидПлощади = ЗНАЧЕНИЕ(Перечисление.энргВидыПлощадей.ПустаяСсылка)
	|			ТОГДА Псевдоним.ЗначениеПлощади
	|		ИНАЧЕ 1
	|	КОНЕЦ * ВЫБОР
	|		КОГДА Псевдоним.ИспользоватьКоэффициентСдерживанияРостаПлаты
	|				И НЕ Псевдоним.МКД = ЗНАЧЕНИЕ(Справочник.энргСтроения.Пустаяссылка)
	|			ТОГДА ВЫБОР
	|					КОГДА Псевдоним.ПлощадьАбонентов - Псевдоним.ПлощадьСобственнаяПоставка + Псевдоним.ПлощадьМОП = 0
	|						ТОГДА 0
	|					ИНАЧЕ (Псевдоним.ПлощадьАбонентов - Псевдоним.ПлощадьСобственнаяПоставка) / (Псевдоним.ПлощадьАбонентов - Псевдоним.ПлощадьСобственнаяПоставка + Псевдоним.ПлощадьМОП)
	|				КОНЕЦ
	|		ИНАЧЕ 1
	|	КОНЕЦ");
	
	ВычисляемыеПоля.Вставить("ОбъемУслугиПотребленныйПоНорме", 
	"ВЫРАЗИТЬ(Псевдоним.НормаПотребления * Псевдоним.КоэффициентНорматива КАК  ЧИСЛО(15,6)) * ВЫБОР
	|		КОГДА НЕ Псевдоним.ВидПлощади = ЗНАЧЕНИЕ(Перечисление.энргВидыПлощадей.ПустаяСсылка)
	|			ТОГДА Псевдоним.ЗначениеПлощади
	|		ИНАЧЕ 1
	|	КОНЕЦ * ВЫБОР
	|		КОГДА Псевдоним.ИспользоватьКоэффициентСдерживанияРостаПлаты
	|				И НЕ Псевдоним.МКД = ЗНАЧЕНИЕ(Справочник.энргСтроения.Пустаяссылка)
	|			ТОГДА ВЫБОР
	|					КОГДА Псевдоним.ПлощадьАбонентов - Псевдоним.ПлощадьСобственнаяПоставка + Псевдоним.ПлощадьМОП = 0
	|						ТОГДА 0
	|					ИНАЧЕ (Псевдоним.ПлощадьАбонентов - Псевдоним.ПлощадьСобственнаяПоставка) / (Псевдоним.ПлощадьАбонентов - Псевдоним.ПлощадьСобственнаяПоставка + Псевдоним.ПлощадьМОП)
	|				КОНЕЦ
	|		ИНАЧЕ 1
	|	КОНЕЦ");
	
	ВычисляемыеПоля.Вставить("ОбъемУслугиПоСреднему", 
	"ВЫБОР
	|		КОГДА НЕ Псевдоним.ЗависитОтУслуги = ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|			ТОГДА Псевдоним.СреднийОбъемЗависитОтУслуги
	|		ИНАЧЕ Псевдоним.СреднийОбъем
	|	КОНЕЦ * КоэффициентПУ"); 	
	
	ВычисляемыеПоля.Вставить("ОбъемУслугиПотребленныйПоСреднему", 
	"ВЫБОР
	|		КОГДА НЕ Псевдоним.ЗависитОтУслуги = ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|			ТОГДА Псевдоним.СреднийОбъемПотребленныйЗависитОтУслуги
	|		ИНАЧЕ Псевдоним.СреднийОбъемПотребленный
	|	КОНЕЦ * КоэффициентПУ");
	
	
	ВычисляемыеПоля.Вставить("КоэффициентДляНачисленияСреднего", 
	"ВЫБОР
	|	КОГДА Псевдоним.КорректироватьГодовойОбъем
	|			И Псевдоним.НеПрименятьСезонность
	|		ТОГДА 1
	|	ИНАЧЕ 0
	|КОНЕЦ");
	
	Возврат ВычисляемыеПоля;
	
КонецФункции

Функция ДобавитьРасчетОбъемаУслугиПоПриборам(Схема,ВыбираемыеПоля, ВычисляемыеПоля, МВТ, ТаблицаДанныеДляРасчета)
	
	ПереопределяемыеПоля 	= Новый Структура;
	ПереопределяемыеПоля.Вставить("ОбъемУслуги", 				"__РасходПоПоказаниям__");
	ПереопределяемыеПоля.Вставить("ОбъемУслугиПотребленный",	"0");
	ПереопределяемыеПоля.Вставить("СниматьНачисленныйСредний", 	"НЕ НачислятьПоПрибору");
	ПереопределяемыеПоля.Вставить("СпособНачисления", 			"ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.ПоПриборам)");
	ПереопределяемыеПоля.Вставить("ОбъемУслугиНорматив", 		"__ОбъемУслугиПоНорме__");
		
	ПодставитьВычисляемыПоля(Схема, МВТ, ТаблицаДанныеДляРасчета, ВыбираемыеПоля, ВычисляемыеПоля, ПереопределяемыеПоля);
	
	Условия = Новый Массив;
	Условия.Добавить("ПриборВведен");
	Условия.Добавить("ЕстьПоказанияМКД");
	Условия.Добавить("НЕ ОбъемЗаПрошлыйГод");
	Условия.Добавить(
	"ВЫБОР
	|	КОГДА МКДЗакрытВТекущемПериоде 
	|		ТОГДА ИСТИНА
	|	КОГДА РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ДанныеДляРасчета.НачалоПериода, ДЕНЬ), НАЧАЛОПЕРИОДА(ДанныеДляРасчета.КонецПериода, ДЕНЬ), ДЕНЬ) = 0					
	|		ТОГДА __РасходПоПоказаниям__ > 0
	|	ИНАЧЕ ИСТИНА
	|КОНЕЦ");	
		
	Пакет 		= Схема.ПакетЗапросов[Схема.ПакетЗапросов.Количество()-1];
	Оператор 	= Пакет.Операторы[Пакет.Операторы.Количество()-1];
	ДобавитьУсловияОператораЗапроса(Оператор.Отбор,Условия,ВычисляемыеПоля, ТаблицаДанныеДляРасчета);
	
КонецФункции

Функция ДобавитьРасчетОбъемаПотребленногоПоПриборам(Схема,ВыбираемыеПоля, ВычисляемыеПоля, МВТ, ТаблицаДанныеДляРасчета)
	
	ПереопределяемыеПоля 	= Новый Структура;
	ПереопределяемыеПоля.Вставить("ОбъемУслуги", 				"0");
	ПереопределяемыеПоля.Вставить("ОбъемУслугиПотребленный", 	"__РасходПоПоказаниям__");
	ПереопределяемыеПоля.Вставить("СниматьНачисленныйСредний", 	"НЕ НачислятьПоПриборуПотребленный");
	ПереопределяемыеПоля.Вставить("СпособНачисления", 			"ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.ПоПриборам)");
	ПереопределяемыеПоля.Вставить("ОбъемУслугиНорматив", 		"0");
	
	ПодставитьВычисляемыПоля(Схема, МВТ, ТаблицаДанныеДляРасчета, ВыбираемыеПоля, ВычисляемыеПоля, ПереопределяемыеПоля);
	
	Условия 				= Новый Массив;
	Условия.Добавить("ПриборВведен");
	Условия.Добавить("ЕстьПоказанияМКД");
	Условия.Добавить(
	"ВЫБОР
	|	КОГДА МКДЗакрытВТекущемПериоде 
	|		ТОГДА ИСТИНА
	|	КОГДА РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ДанныеДляРасчета.НачалоПериода, ДЕНЬ), НАЧАЛОПЕРИОДА(ДанныеДляРасчета.КонецПериода, ДЕНЬ), ДЕНЬ) = 0					
	|		ТОГДА __РасходПоПоказаниям__ > 0
	|	ИНАЧЕ ИСТИНА
	|КОНЕЦ");	
	
	Пакет 					= Схема.ПакетЗапросов[Схема.ПакетЗапросов.Количество()-1];
	Оператор 				= Пакет.Операторы[Пакет.Операторы.Количество()-1];
	ДобавитьУсловияОператораЗапроса(Оператор.Отбор,Условия,ВычисляемыеПоля, ТаблицаДанныеДляРасчета);
	
КонецФункции

Процедура ДобавитьРасчетОбъемаУслугиПоНормативу(Схема,ВыбираемыеПоля,ВычисляемыеПоля,МВТ,ТаблицаДанныеДляРасчета)
	
	ПереопределяемыеПоля 	= Новый Структура;
	
	ПереопределяемыеПоля.Вставить("ПриборУчета", 				"ЗНАЧЕНИЕ(Справочник.энргПриборыУчетаАбонента.ПустаяСсылка)");
	ПереопределяемыеПоля.Вставить("Шкала", 						"ЗНАЧЕНИЕ(Справочник.энргШкалыПриборовУчета.ПУстаяСсылка)");
	ПереопределяемыеПоля.Вставить("ТарифнаяЗона", 				"ЗНАЧЕНИЕ(Справочник.энргТарифныеЗоны.БезРазбивки)");
	ПереопределяемыеПоля.Вставить("НачальныеПоказания", 		"0");
	ПереопределяемыеПоля.Вставить("КонечныеПоказания", 			"0");
	
	ПереопределяемыеПоля.Вставить("ОбъемУслуги", 				
	"__ОбъемУслугиПоНорме__ * __ДлительностьПериодаПоНормативу__");
	ПереопределяемыеПоля.Вставить("ОбъемУслугиПотребленный",	"0");
	ПереопределяемыеПоля.Вставить("ОбъемУслугиНорматив", 		"__ОбъемУслугиПоНорме__");
	ПереопределяемыеПоля.Вставить("СниматьНачисленныйСредний", 	"ЛОЖЬ");
	ПереопределяемыеПоля.Вставить("СпособНачисления", 			"ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.ПоНормативу)");
	
	ПодставитьВычисляемыПоля(Схема, МВТ, ТаблицаДанныеДляРасчета, ВыбираемыеПоля, ВычисляемыеПоля, ПереопределяемыеПоля);
	
	Условия = Новый Массив;
	Условия.Добавить("НЕ КоэффициентСезоности = 0");
	Условия.Добавить(
	"ВЫБОР
	|		КОГДА Псевдоним.ОбъемЗаПрошлыйГод
	|				И ВЫБОР
	|					КОГДА Псевдоним.ЗависитОтУслуги = ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|						ТОГДА Псевдоним.ЕстьСреднийПоВсемТочкамУслуги
	|					ИНАЧЕ Псевдоним.ЕстьСреднийПоВсемТочкамУслугиЗависитОтУслуги
	|				КОНЕЦ
	|			ТОГДА ЛОЖЬ
	|		КОГДА Псевдоним.ПриборВведен
	|			ТОГДА ЛОЖЬ
	|		КОГДА Псевдоним.НачислятьСреднийОбъемДо >= Псевдоним.ПериодНачисления
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ");
	Условия.Добавить("НачислятьНорму 
	|ИЛИ НЕ ЗависитОтУслуги = ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)");
	Условия.Добавить("РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(НачалоПериода, ДЕНЬ), НАЧАЛОПЕРИОДА(КонецПериода, ДЕНЬ), ДЕНЬ) >= 1");
	
	Пакет 		= Схема.ПакетЗапросов[Схема.ПакетЗапросов.Количество()-1];
	Оператор 	= Пакет.Операторы[Пакет.Операторы.Количество()-1];
	ДобавитьУсловияОператораЗапроса(Оператор.Отбор,Условия,ВычисляемыеПоля, ТаблицаДанныеДляРасчета);
	
КонецПроцедуры

Процедура ДобавитьРасчетОбъемаПотребленногоПоНормативу(Схема,ВыбираемыеПоля,ВычисляемыеПоля,МВТ,ТаблицаДанныеДляРасчета)
	
	ПереопределяемыеПоля 	= Новый Структура;
		
	ПереопределяемыеПоля.Вставить("ПриборУчета", 				"ЗНАЧЕНИЕ(Справочник.энргПриборыУчетаАбонента.ПустаяСсылка)");
	ПереопределяемыеПоля.Вставить("Шкала", 						"ЗНАЧЕНИЕ(Справочник.энргШкалыПриборовУчета.ПУстаяСсылка)");
	ПереопределяемыеПоля.Вставить("ТарифнаяЗона", 				"ЗНАЧЕНИЕ(Справочник.энргТарифныеЗоны.БезРазбивки)");
	ПереопределяемыеПоля.Вставить("НачальныеПоказания", 		"0");
	ПереопределяемыеПоля.Вставить("КонечныеПоказания", 			"0");
	
	ПереопределяемыеПоля.Вставить("ОбъемУслуги", 				"0");
	ПереопределяемыеПоля.Вставить("ОбъемУслугиПотребленный",	
	"__ОбъемУслугиПотребленныйПоНорме__ * __ДлительностьПериодаПоНормативуОбъемПотребленный__");
	ПереопределяемыеПоля.Вставить("ОбъемУслугиНорматив", 		"0");
	ПереопределяемыеПоля.Вставить("СниматьНачисленныйСредний", 	"ЛОЖЬ");
	ПереопределяемыеПоля.Вставить("СпособНачисления", 			"ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.ПоНормативу)");
	ПереопределяемыеПоля.Вставить("НормаПотребления", 			"ВЫРАЗИТЬ(Псевдоним.НормаПотребления * Псевдоним.КоэффициентНорматива КАК  ЧИСЛО(15,6))");
		
	ПодставитьВычисляемыПоля(Схема, МВТ, ТаблицаДанныеДляРасчета, ВыбираемыеПоля, ВычисляемыеПоля, ПереопределяемыеПоля);
	
	Условия = Новый Массив;
	Условия.Добавить("НЕ КоэффициентСезоностиОбъемПотребленный = 0");
	Условия.Добавить("
	|ВЫБОР
	|	КОГДА ПриборВведен
	|		ТОГДА ЛОЖЬ
	|	КОГДА НачислятьСреднийПотребленныйОбъемДо >= ПериодНачисления
	|		ТОГДА ЛОЖЬ
	|	ИНАЧЕ ИСТИНА 
	|КОНЕЦ");
	Условия.Добавить("НачислятьНорму 
	|ИЛИ НЕ ЗависитОтУслуги = ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)");
	Условия.Добавить("РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(НачалоПериода, ДЕНЬ), НАЧАЛОПЕРИОДА(КонецПериода, ДЕНЬ), ДЕНЬ) >= 1");
		
	Пакет 		= Схема.ПакетЗапросов[Схема.ПакетЗапросов.Количество()-1];
	Оператор 	= Пакет.Операторы[Пакет.Операторы.Количество()-1];
	ДобавитьУсловияОператораЗапроса(Оператор.Отбор,Условия,ВычисляемыеПоля, ТаблицаДанныеДляРасчета);
	
КонецПроцедуры

Функция ДобавитьРасчетОбъемаУслугиПоСреднемуНормативуЗаПрошлыйГод(Схема,ВыбираемыеПоля, ВычисляемыеПоля, МВТ, ТаблицаДанныеДляРасчета)
	
	ПереопределяемыеПоля 	= Новый Структура;
		
	ПереопределяемыеПоля.Вставить("ОбъемУслуги", 				
	"__ОбъемУслугиПоНорме__ * __ДлительностьПериодаПоНормативу__");// * __КоэффициентДляНачисленияСреднего__");
	ПереопределяемыеПоля.Вставить("ОбъемУслугиПотребленный",	"0");
	ПереопределяемыеПоля.Вставить("ОбъемУслугиНорматив", 		"__ОбъемУслугиПоНорме__");
	ПереопределяемыеПоля.Вставить("СниматьНачисленныйСредний", 	"ЛОЖЬ");
	ПереопределяемыеПоля.Вставить("СпособНачисления", 			"ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.СреднееПоНормативу)");
	ПереопределяемыеПоля.Вставить("НачальныеПоказания", 		"0");
	ПереопределяемыеПоля.Вставить("КонечныеПоказания", 			"0");
		
	ПодставитьВычисляемыПоля(Схема, МВТ, ТаблицаДанныеДляРасчета, ВыбираемыеПоля, ВычисляемыеПоля, ПереопределяемыеПоля);
		
	Условия 				= Новый Массив;
	Условия.Добавить("НЕ КоэффициентСезоности = 0");
	Условия.Добавить("ОбъемЗаПрошлыйГод");
	Условия.Добавить("НачислятьНорму");
	Условия.Добавить("ПриборВведен");
	Условия.Добавить("РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(НачалоПериода, ДЕНЬ), НАЧАЛОПЕРИОДА(КонецПериода, ДЕНЬ), ДЕНЬ) >= 1");
	Условия.Добавить(
	"ВЫБОР
	|		КОГДА Псевдоним.ЗависитОтУслуги = ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|			ТОГДА НЕ Псевдоним.ЕстьСреднийПоВсемТочкамУслуги
	|		ИНАЧЕ НЕ Псевдоним.ЕстьСреднийПоВсемТочкамУслугиЗависитОтУслуги
	|	КОНЕЦ");
	
	Пакет 		= Схема.ПакетЗапросов[Схема.ПакетЗапросов.Количество()-1];
	Оператор 	= Пакет.Операторы[Пакет.Операторы.Количество()-1];
	ДобавитьУсловияОператораЗапроса(Оператор.Отбор,Условия,ВычисляемыеПоля,ТаблицаДанныеДляРасчета);
	
КонецФункции

Функция ДобавитьРасчетОбъемаУслугиПоСреднемуНормативу(Схема,ВыбираемыеПоля, ВычисляемыеПоля, МВТ, ТаблицаДанныеДляРасчета)
	
	ПереопределяемыеПоля 	= Новый Структура;
		
	ПереопределяемыеПоля.Вставить("ОбъемУслуги", 				
	"__ОбъемУслугиПоНорме__ * __ДлительностьПериодаПоНормативу__");// * __КоэффициентДляНачисленияСреднего__");
	ПереопределяемыеПоля.Вставить("ОбъемУслугиПотребленный",	"0");
	ПереопределяемыеПоля.Вставить("ОбъемУслугиНорматив", 		"0");
	ПереопределяемыеПоля.Вставить("СниматьНачисленныйСредний", 	"ИСТИНА");
	ПереопределяемыеПоля.Вставить("СпособНачисления", 			"ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.СреднееПоНормативу)");
	ПереопределяемыеПоля.Вставить("НачальныеПоказания", 		"0");
	ПереопределяемыеПоля.Вставить("КонечныеПоказания", 			"0");
	ПереопределяемыеПоля.Вставить("ТарифнаяЗона",		 		"ЗНАЧЕНИЕ(Справочник.энргТарифныеЗоны.БезРазбивки)");
		
	ПодставитьВычисляемыПоля(Схема, МВТ, ТаблицаДанныеДляРасчета, ВыбираемыеПоля, ВычисляемыеПоля, ПереопределяемыеПоля);
		
	Условия 				= Новый Массив;
	Условия.Добавить("НЕ КоэффициентСезоности = 0");
	Условия.Добавить("НЕ ОбъемЗаПрошлыйГод");
	Условия.Добавить("ПриборВведен");
	Условия.Добавить("НачислятьНорму 
	|ИЛИ НЕ ЗависитОтУслуги = ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)");
	Условия.Добавить("Не ПоказанияВСрок");
	Условия.Добавить("РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(НачалоПериода, ДЕНЬ), НАЧАЛОПЕРИОДА(КонецПериода, ДЕНЬ), ДЕНЬ) >= 1");
	Условия.Добавить(
	"ВЫБОР
	|		КОГДА Псевдоним.ЗависитОтУслуги = ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|			ТОГДА НЕ Псевдоним.ЕстьСреднийПоВсемТочкамУслуги
	|		ИНАЧЕ НЕ Псевдоним.ЕстьСреднийПоВсемТочкамУслугиЗависитОтУслуги
	|	КОНЕЦ");
		
	Пакет 		= Схема.ПакетЗапросов[Схема.ПакетЗапросов.Количество()-1];
	Оператор 	= Пакет.Операторы[Пакет.Операторы.Количество()-1];
	ДобавитьУсловияОператораЗапроса(Оператор.Отбор,Условия,ВычисляемыеПоля,ТаблицаДанныеДляРасчета);
	
КонецФункции

Функция ДобавитьРасчетОбъемаПотребленногоПоСреднемуНормативу(Схема,ВыбираемыеПоля, ВычисляемыеПоля, МВТ, ТаблицаДанныеДляРасчета)
	
	ПереопределяемыеПоля 	= Новый Структура;
		
	ПереопределяемыеПоля.Вставить("ОбъемУслуги", 				"0");
	ПереопределяемыеПоля.Вставить("ОбъемУслугиПотребленный",	
	"__ОбъемУслугиПотребленныйПоНорме__ * __ДлительностьПериодаПоНормативу__");// * __КоэффициентДляНачисленияСреднего__");
	ПереопределяемыеПоля.Вставить("ОбъемУслугиНорматив", 		"0");
	ПереопределяемыеПоля.Вставить("СниматьНачисленныйСредний", 	"ИСТИНА");
	ПереопределяемыеПоля.Вставить("СпособНачисления", 			"ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.СреднееПоНормативу)");
	ПереопределяемыеПоля.Вставить("НачальныеПоказания", 		"0");
	ПереопределяемыеПоля.Вставить("КонечныеПоказания", 			"0");
	ПереопределяемыеПоля.Вставить("ПовыщающийКоэффициент", 		"1");
	ПереопределяемыеПоля.Вставить("ТарифнаяЗона",		 		"ЗНАЧЕНИЕ(Справочник.энргТарифныеЗоны.БезРазбивки)");
		
	ПодставитьВычисляемыПоля(Схема, МВТ, ТаблицаДанныеДляРасчета, ВыбираемыеПоля, ВычисляемыеПоля, ПереопределяемыеПоля);
		
	Условия 	= Новый Массив;
	Условия.Добавить("НЕ КоэффициентСезоностиОбъемПотребленный = 0");
	Условия.Добавить("ПриборВведен");
	Условия.Добавить("НачислятьНорму 
	|ИЛИ НЕ ЗависитОтУслуги = ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)");
	Условия.Добавить("Не ПоказанияВСрок");
	Условия.Добавить("РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(НачалоПериода, ДЕНЬ), НАЧАЛОПЕРИОДА(КонецПериода, ДЕНЬ), ДЕНЬ) >= 1");
	Условия.Добавить(
	"ВЫБОР
	|		КОГДА Псевдоним.ЗависитОтУслуги = ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|			ТОГДА НЕ Псевдоним.ЕстьСреднийПотребленныйПоВсемТочкамУслуги
	|		ИНАЧЕ НЕ Псевдоним.ЕстьСреднийПотребленныйПоВсемТочкамУслугиЗависитОтУслуги
	|	КОНЕЦ");
		
	Пакет 		= Схема.ПакетЗапросов[Схема.ПакетЗапросов.Количество()-1];
	Оператор 	= Пакет.Операторы[Пакет.Операторы.Количество()-1];
	ДобавитьУсловияОператораЗапроса(Оператор.Отбор,Условия, ВычисляемыеПоля,ТаблицаДанныеДляРасчета);
	
КонецФункции

Функция ДобавитьРасчетОбъемаУслугиПоСреднемуЗаПрошлыйГод(Схема,ВыбираемыеПоля, ВычисляемыеПоля, МВТ, ТаблицаДанныеДляРасчета)
	
	ПереопределяемыеПоля 	= Новый Структура;
		
	ПереопределяемыеПоля.Вставить("ОбъемУслуги", 					"__ОбъемУслугиПоСреднему__ * __ДлительностьПериода__");// * __КоэффициентДляНачисленияСреднего__");
	ПереопределяемыеПоля.Вставить("ОбъемУслугиПотребленный",		"0");
	ПереопределяемыеПоля.Вставить("ОбъемУслугиНорматив", 			"__ОбъемУслугиПоНорме__");
	ПереопределяемыеПоля.Вставить("СниматьНачисленныйСредний", 		"ЛОЖЬ");
	ПереопределяемыеПоля.Вставить("СпособНачисления", 				"ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.НачислениеПоСреднему)");
	ПереопределяемыеПоля.Вставить("НачальныеПоказания", 			"0");
	ПереопределяемыеПоля.Вставить("КонечныеПоказания", 				"0");
				
	ПодставитьВычисляемыПоля(Схема, МВТ, ТаблицаДанныеДляРасчета, ВыбираемыеПоля, ВычисляемыеПоля, ПереопределяемыеПоля);
		
	Условия 	= Новый Массив;
	Условия.Добавить("НЕ КоэффициентСезоности = 0");
	Условия.Добавить("ОбъемЗаПрошлыйГод");
	Условия.Добавить("РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(НачалоПериода, ДЕНЬ), НАЧАЛОПЕРИОДА(КонецПериода, ДЕНЬ), ДЕНЬ) >= 1");
	Условия.Добавить(
	"ВЫБОР
	|		КОГДА Псевдоним.ЗависитОтУслуги = ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|			ТОГДА Псевдоним.ЕстьСреднийПоВсемТочкамУслуги
	|		ИНАЧЕ Псевдоним.ЕстьСреднийПоВсемТочкамУслугиЗависитОтУслуги
	|	КОНЕЦ");
		
	Пакет 		= Схема.ПакетЗапросов[Схема.ПакетЗапросов.Количество()-1];
	Оператор 	= Пакет.Операторы[Пакет.Операторы.Количество()-1];
	ДобавитьУсловияОператораЗапроса(Оператор.Отбор,Условия,ВычисляемыеПоля,ТаблицаДанныеДляРасчета);
	
КонецФункции

Функция ДобавитьРасчетОбъемаУслугиПоСреднему(Схема,ВыбираемыеПоля, ВычисляемыеПоля, МВТ, ТаблицаДанныеДляРасчета)
	
	ПереопределяемыеПоля 	= Новый Структура;
		
	ПереопределяемыеПоля.Вставить("ОбъемУслуги", 				"__ОбъемУслугиПоСреднему__ * __ДлительностьПериода__");// * __КоэффициентДляНачисленияСреднего__");
	ПереопределяемыеПоля.Вставить("ОбъемУслугиПотребленный",	"0");
	ПереопределяемыеПоля.Вставить("ОбъемУслугиНорматив", 		"__ОбъемУслугиПоНорме__");
	ПереопределяемыеПоля.Вставить("СниматьНачисленныйСредний", 	
	"ВЫБОР 
	|		КОГДА НЕ ПриборВведен И НачислятьСреднийОбъемДо >= ПериодНачисления
	|			ТОГДА ЛОЖЬ 
	|		ИНАЧЕ ИСТИНА 
	|	КОНЕЦ");
	ПереопределяемыеПоля.Вставить("СпособНачисления", 			"ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.НачислениеПоСреднему)");
	ПереопределяемыеПоля.Вставить("НачальныеПоказания", 		"0");
	ПереопределяемыеПоля.Вставить("КонечныеПоказания", 			"0");
			
	ПодставитьВычисляемыПоля(Схема, МВТ, ТаблицаДанныеДляРасчета, ВыбираемыеПоля, ВычисляемыеПоля, ПереопределяемыеПоля);
		
	Условия 				= Новый Массив;
	Условия.Добавить("НЕ КоэффициентСезоности = 0");
	Условия.Добавить("НЕ ОбъемЗаПрошлыйГод");
	Условия.Добавить("
	|ВЫБОР
	|	КОГДА ПриборВведен
	|		ТОГДА НЕ ДанныеДляРасчета.ПоказанияВСрок
	|	КОГДА НачислятьСреднийОбъемДо >= ПериодНачисления
	|		ТОГДА ДанныеДляРасчета.СреднийОбъем > 0
	|	ИНАЧЕ ЛОЖЬ 
	|КОНЕЦ");	
	Условия.Добавить("РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(НачалоПериода, ДЕНЬ), НАЧАЛОПЕРИОДА(КонецПериода, ДЕНЬ), ДЕНЬ) >= 1");
	Условия.Добавить(
	"ВЫБОР
	|		КОГДА Псевдоним.ЗависитОтУслуги = ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|			ТОГДА Псевдоним.ЕстьСреднийПоВсемТочкамУслуги
	|		ИНАЧЕ Псевдоним.ЕстьСреднийПоВсемТочкамУслугиЗависитОтУслуги
	|	КОНЕЦ");	
		
	Пакет 		= Схема.ПакетЗапросов[Схема.ПакетЗапросов.Количество()-1];
	Оператор 	= Пакет.Операторы[Пакет.Операторы.Количество()-1];
	ДобавитьУсловияОператораЗапроса(Оператор.Отбор,Условия,ВычисляемыеПоля,ТаблицаДанныеДляРасчета);
	
КонецФункции

Функция ДобавитьРасчетОбъемаПотребленногоПоСреднему(Схема,ВыбираемыеПоля, ВычисляемыеПоля, МВТ, ТаблицаДанныеДляРасчета)
	
	ПереопределяемыеПоля 	= Новый Структура;
		
	ПереопределяемыеПоля.Вставить("ОбъемУслуги", 				"0");
	ПереопределяемыеПоля.Вставить("ОбъемУслугиПотребленный",	"__ОбъемУслугиПотребленныйПоСреднему__ * __ДлительностьПериода__");// * __КоэффициентДляНачисленияСреднего__");
	ПереопределяемыеПоля.Вставить("ОбъемУслугиНорматив", 		"0");
	ПереопределяемыеПоля.Вставить("СниматьНачисленныйСредний", 	
	"ВЫБОР 
	|		КОГДА НЕ ПриборВведен И НачислятьСреднийПотребленныйОбъемДо >= ПериодНачисления
	|			ТОГДА ЛОЖЬ 
	|		ИНАЧЕ ИСТИНА 
	|	КОНЕЦ");
	ПереопределяемыеПоля.Вставить("СпособНачисления", 			"ЗНАЧЕНИЕ(Перечисление.энргСпособНачислений.НачислениеПоСреднему)");
	ПереопределяемыеПоля.Вставить("НачальныеПоказания", 		"0");
	ПереопределяемыеПоля.Вставить("КонечныеПоказания", 			"0");
		
	ПодставитьВычисляемыПоля(Схема, МВТ, ТаблицаДанныеДляРасчета, ВыбираемыеПоля, ВычисляемыеПоля, ПереопределяемыеПоля);
		
	Условия 				= Новый Массив;
	Условия.Добавить("НЕ КоэффициентСезоностиОбъемПотребленный = 0");
	Условия.Добавить("
	|ВЫБОР
	|	КОГДА ПриборВведен
	|		ТОГДА НЕ ДанныеДляРасчета.ПоказанияВСрок
	|	КОГДА НачислятьСреднийПотребленныйОбъемДо >= ПериодНачисления
	|		ТОГДА ДанныеДляРасчета.СреднийОбъемПотребленный > 0
	|	ИНАЧЕ ЛОЖЬ 
	|КОНЕЦ");
	Условия.Добавить("РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(НачалоПериода, ДЕНЬ), НАЧАЛОПЕРИОДА(КонецПериода, ДЕНЬ), ДЕНЬ) >= 1");
	Условия.Добавить(
	"ВЫБОР
	|		КОГДА Псевдоним.ЗависитОтУслуги = ЗНАЧЕНИЕ(Справочник.энргВидыУслуг.ПустаяСсылка)
	|			ТОГДА Псевдоним.ЕстьСреднийПотребленныйПоВсемТочкамУслуги
	|		ИНАЧЕ Псевдоним.ЕстьСреднийПотребленныйПоВсемТочкамУслугиЗависитОтУслуги
	|	КОНЕЦ");
		
	Пакет 		= Схема.ПакетЗапросов[Схема.ПакетЗапросов.Количество()-1];
	Оператор 	= Пакет.Операторы[Пакет.Операторы.Количество()-1];
	ДобавитьУсловияОператораЗапроса(Оператор.Отбор,Условия, ВычисляемыеПоля,ТаблицаДанныеДляРасчета);
	
КонецФункции

Процедура ПодставитьВычисляемыПоля(Схема, МВТ, ТаблицаДанныеДляРасчета, ВыбираемыеПоля, ВычисляемыеПоля, ПереопределяемыеПоля)
	
	НоваяСхема  				= Ложь;
	Если Схема = Неопределено Тогда
		Схема					= Новый СхемаЗапроса;
		НоваяСхема 				= Истина;
	КонецЕсли;
	
	Пакет  						= Схема.ПакетЗапросов[Схема.ПакетЗапросов.Количество() - 1];
	Если Не НоваяСхема  Тогда
		
		Пакет.Операторы.Добавить();
	КонецЕсли;
	
	Оператор 					= Пакет.Операторы[Пакет.Операторы.Количество()-1];
	Источник 					= Оператор.Источники.Добавить(Тип("ОписаниеВременнойТаблицыСхемыЗапроса"),ТаблицаДанныеДляРасчета,ТаблицаДанныеДляРасчета).Источник;
	
	Для Каждого Колонка Из МВТ.Таблицы[ТаблицаДанныеДляРасчета].Колонки Цикл
		Источник.ДоступныеПоля.Добавить(Колонка.Имя,Колонка.ТипЗначения);
	КонецЦикла;   	
		
	Для Сч = 0 По ВыбираемыеПоля.ВГраница() Цикл
		ИндексКолонки 			= Неопределено;
		Если Не НоваяСхема Тогда
			Колонка 			= Пакет.Колонки[Сч];
			ИндексКолонки 		= Пакет.Колонки.Индекс(Колонка);
		КонецЕсли;
		
		ОписаниеКолонки 		= ВыбираемыеПоля[Сч];
		ИмяКолонки 				= ?(ОписаниеКолонки.ВыбираемоеПоле = Неопределено ИЛИ ПустаяСтрока(ОписаниеКолонки.ВыбираемоеПоле),ОписаниеКолонки.Псевдоним,ОписаниеКолонки.ВыбираемоеПоле );
		
		Если ПереопределяемыеПоля.Свойство(ИмяКолонки) Тогда 			
			ЗначениеПоля 		= ПодставитьПараметрыВФормулу(ПереопределяемыеПоля[ИмяКолонки],ВычисляемыеПоля, ТаблицаДанныеДляРасчета);			
		ИначеЕсли ВычисляемыеПоля.Свойство(ИмяКолонки) Тогда			
			ЗначениеПоля 		= ПодставитьПараметрыВФормулу(ВычисляемыеПоля[ИмяКолонки],ВычисляемыеПоля, ТаблицаДанныеДляРасчета);						
		Иначе 			
			ЗначениеПоля 		=  ИмяКолонки; 			
		КонецЕсли;
				
		Если ИндексКолонки = Неопределено Тогда
			Оператор.ВыбираемыеПоля.Добавить(ЗначениеПоля);	
		Иначе
			Оператор.ВыбираемыеПоля.Добавить(ЗначениеПоля,ИндексКолонки);			
		КонецЕсли; 	
		
		Если НоваяСхема Тогда
			Колонка 			= Пакет.Колонки[Пакет.Колонки.Количество()-1];
			Колонка.Псевдоним 	= ОписаниеКолонки.Псевдоним;
		КонецЕсли;		
	КонецЦикла;
КонецПроцедуры

Процедура ДобавитьУсловияОператораЗапроса(Отбор,Условия,ВычисляемыеПоля, ТаблицаДанныеДляРасчета)
	
	Для Сч = 0 По Условия.ВГраница() Цикл		
		Формула	= ПодставитьПараметрыВФормулу(Условия[Сч],ВычисляемыеПоля, ТаблицаДанныеДляРасчета); 		
		Отбор.Добавить(Формула);
	КонецЦикла;	
	
КонецПроцедуры

Функция ПодставитьПараметрыВФормулу(Знач Формула, ВычисляемыеПоля, ТаблицаДанныеДляРасчета)
	
	Результат 						= Формула; 	
	Если НЕ СтрНайти(Формула,"__") = 0  Тогда				
		ТекущаяПозиция 				= 1;
		НачалоПараметра  			= СтрНайти(Результат,"__",,1,1);
		ОкончаниеПараметра 			= СтрНайти(Результат,"__",,1,2);
		Пока НЕ ОкончаниеПараметра = 0 Цикл 										
			КлючВычисляемогоПоля 	= Сред(Результат,НачалоПараметра+2,ОкончаниеПараметра-НачалоПараметра-2);
			врФормула  				= ВычисляемыеПоля[КлючВычисляемогоПоля];
			Результат 				= СтрЗаменить(Результат,"__" + КлючВычисляемогоПоля + "__" , врФормула);
			НачалоПараметра  		= СтрНайти(Результат,"__",,ОкончаниеПараметра+1,1);
			ОкончаниеПараметра 		= СтрНайти(Результат,"__",,ОкончаниеПараметра+1,2);
		КонецЦикла;
						
	КонецЕсли;
	
	Результат 						= СтрЗаменить(Результат,"Псевдоним." , ТаблицаДанныеДляРасчета + ".");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область КорректировкаПотребленияСезонныхУслугМКД

Процедура ЗаписатьНаборыЗаписейНачислениеМКД(ДокументОбъект, Набор, НаборВыполненные, Ошибки)
	
	Попытка
		Если НЕ ДокументОбъект = Неопределено Тогда
			ДокументОбъект.ДополнительныеСвойства.Вставить("ПроведениеРазрешено",Истина);
			ДокументОбъект.записать(РежимЗаписиДокумента.Запись);
		КонецЕсли;														
		
		Если НЕ НаборВыполненные = Неопределено Тогда
			НаборВыполненные.Записать(НаборВыполненные.ДополнительныеСвойства.Замещать);
		КонецЕсли;
										
		Набор.Записать(Ложь);		
		
		ЗафиксироватьТранзакцию();
	Исключение						
		ОтменитьТранзакцию();
		ИнформацияОбОшибке  					= ИнформацияОбОшибке();
		Ошибки 									= Ошибки +
		Символы.ПС + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке);
	КонецПопытки;

КонецПроцедуры

Процедура ПрочитатьВспомогательныеДанныеДляКорректировкиПотребленияСезонныхУслугМКД(МВТ,ГраницыПериода,Организация,ПериодНачисления,Район,ГодоваяКорректировка,МКД)
	
	Запрос 							= Новый Запрос();	
	Текст 							= ТекстЗапросаВспомогательныеДанныеДляКорректировкиПотребленияСезонныхУслугМКД();
			
	Если Не МКД = Неопределено Тогда
		Запрос.УстановитьПараметр("МКД",МКД);			
	Иначе
		Текст 						= СтрЗаменить(Текст,"И МКД = &МКД","");
		Текст 						= СтрЗаменить(Текст,"И (энргСтабильныеПериоды.МКД = &МКД)","");
		Текст 						= СтрЗаменить(Текст,"И энргСтабильныеПериоды.МКД = &МКД","");
		Текст 						= СтрЗаменить(Текст,"И энргДокументыНачислений.МКД = &МКД","");	
	КонецЕсли;
	Запрос.Текст 					= Текст; 	
	Запрос.МенеджерВременныхТаблиц 	= МВТ;
	Запрос.УстановитьПараметр("Организация", 					Организация);
	Запрос.УстановитьПараметр("ПериодНачисления", 				ПериодНачисления);
	Запрос.УстановитьПараметр("НачалоГода", 					НачалоГода(ПериодНачисления));
	Запрос.УстановитьПараметр("ОкончаниеГода", 					КонецМесяца(ПериодНачисления));
	Запрос.УстановитьПараметр("Район", 							Район);
	Запрос.УстановитьПараметр("ЗавершениеОП", 					ГраницыПериода.ЗавершениеОП);
	Запрос.Выполнить();
	
КонецПроцедуры

#КонецОбласти

Процедура РепозиторийНачислениеНаОДН(МВТ,Организация,ПериодНачисления,Район,ГраницыПериода,МКД) 
	
	НачалоПериодаРасчета	= ГраницыПериода.НачалоОП;
	КонецПериодаРасчета		= ГраницыПериода.ЗавершениеОП;
	ДнейВПериоде  			= ГраницыПериода.ДнейВПериоде;
	
	Схема 					= Неопределено;
	
	ПараметрыВТ 			= Новый Массив;
	ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипРавно(Новый Структура("Организация,Район","Организация","Район")));
	ПараметрыСхемы 			= Новый Структура;
	ПараметрыСхемы.Вставить("ПараметрыВТ", ПараметрыВТ);
	ПараметрыСхемы.Вставить("Период", энргФормированиеТекстовЗапроса.ПараметрПериодРавно("ЗавершениеПериодаРасчета"));	
	РегистрыСведений.энргЗначенияНормативовПотребления.ЗаполнитьСхемуЗначенияНормПотребленияМКД(Схема, ПараметрыСхемы, "ЗначенияТекущихНормПотребления");
	ДобавитьПолеПараметра(Схема,"&ПериодНачисления","ПериодНачисления");
	
	ПараметрыВТ 			= Новый Массив;
	ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипРавно(Новый Структура("Организация,Район,НаправлениеИспользованияТУ","Организация","Район","ОсновноеНаправление")));
	ПараметрыСхемы 			= Новый Структура;
	ПараметрыСхемы.Вставить("ПараметрыВТ", ПараметрыВТ);
	ПараметрыСхемы.Вставить("Период", энргФормированиеТекстовЗапроса.ПараметрПериодРавно("ЗавершениеПериодаРасчета"));	
	РегистрыСведений.энргНастройкиРасчетаСреднегоПотребления.НастройкиРасчетаСреднегоПотребления(Схема, ПараметрыСхемы, "НастройкиРасчетаСреднегоПотребления");
	ДобавитьПолеПараметра(Схема,"&ПериодНачисления","ПериодНачисления");
	
	ПараметрыВТ 			= Новый Массив;
	ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипРавно(Новый Структура("Организация,Район","Организация","Район")));
	ПараметрыСхемы 			= Новый Структура;
	ПараметрыСхемы.Вставить("ПараметрыВТ", ПараметрыВТ);
	ПараметрыСхемы.Вставить("Период", энргФормированиеТекстовЗапроса.ПараметрПериодРавно("ЗавершениеПериодаРасчета"));	
	РегистрыСведений.энргСостояниеФиксированныхОбъемовМКД.МКДСФиксированнымиОбъемами(Схема, ПараметрыСхемы, "МКДСФиксированнымиОбъемами");
	
	ПараметрыВТ 			= Новый Массив;
	ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипРавно(Новый Структура("Организация,Район,НаправлениеИспользованияТУ","Организация","Район","ОсновноеНаправление")));
	ПараметрыСхемы 			= Новый Структура;
	ПараметрыСхемы.Вставить("ПараметрыВТ", 	ПараметрыВТ);
	ПараметрыСхемы.Вставить("Период", энргФормированиеТекстовЗапроса.ПараметрПериодРавно("ЗавершениеПериодаРасчета"));
	РегистрыСведений.энргСпособыРасчетаПоНаправлениям.СпособыРасчетаПоНаправлениям(Схема,ПараметрыСхемы,"СпособыРасчетаПоНаправлениям");
	ДобавитьПолеПараметра(Схема,"&ПериодНачисления","ПериодНачисления");
	
	ПараметрыВТ 			= Новый Массив;
	ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипРавно(Новый Структура("Организация,Район","Организация","Район")));
	ПараметрыСхемы 			= Новый Структура;
	ПараметрыСхемы.Вставить("ПараметрыВТ", ПараметрыВТ);
	ПараметрыСхемы.Вставить("Период", энргФормированиеТекстовЗапроса.ПараметрПериодРавно("ЗавершениеПериодаРасчета"));	
	РегистрыСведений.энргФиксированныеОбъемыМКД.АктуальныеФиксированныеОбъемыМКД(Схема, ПараметрыСхемы, "АктуальныеФиксированныеОбъемыМКД");
	
	ПараметрыВТ 			= Новый Массив;
	ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипРавно(Новый Структура("Организация,Район,НаправлениеИспользованияТУ","Организация","Район", "ОсновноеНаправление")));
	ПараметрыСхемы 			= Новый Структура;
	ПараметрыСхемы.Вставить("ПараметрыВТ", ПараметрыВТ);
	ПараметрыСхемы.Вставить("Период", энргФормированиеТекстовЗапроса.ПараметрПериодРавно("ЗавершениеПериодаРасчета"));
	РегистрыСведений.энргНастройкаСезонностиУслуг.НастройкаСезонностиУслуг(Схема, ПараметрыСхемы, "НастройкаСезонностиУслуг"); 
	ДобавитьПолеПараметра(Схема,"&ПериодНачисления","ПериодНачисления");	
	
	ПараметрыВТ 			= Новый Массив;
	ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипРавно(Новый Структура("Организация,Район","Организация","Район")));
	ПараметрыСхемы 			= Новый Структура;
	ПараметрыСхемы.Вставить("ПараметрыВТ", ПараметрыВТ);
	ПараметрыСхемы.Вставить("Период", энргФормированиеТекстовЗапроса.ПараметрПериодРавно("ЗавершениеПериодаРасчета"));
	РегистрыСведений.энргНастройкаНачисленияГВСМКД.НастройкаНачисленияГВСМКД(Схема, ПараметрыСхемы, "НастройкаНачисленияГВСМКД");
		
	ПараметрыВТ 			= Новый Массив;
	ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипРавно(Новый Структура("Организация,Район","Организация","Район")));
	ПараметрыСхемы 			= Новый Структура;
	ПараметрыСхемы.Вставить("ПараметрыВТ", ПараметрыВТ);
	ПараметрыСхемы.Вставить("Период", энргФормированиеТекстовЗапроса.ПараметрПериодРавно("НачалоПериодаРасчета"));
	РегистрыСведений.энргДлительностиПериодов.ПериодыСезонности(Схема,ПараметрыСхемы,"ПериодыСезонности");
		
	ПараметрыВТ 			= Новый Массив;
	ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипРавно(Новый Структура("Организация,Район,ПериодНачисления","Организация","Район", "ПериодНачисления")));
	Если Не МКД = Неопределено и ТипЗнч(МКД) = Тип("Массив") Тогда
		ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипВСписке(Новый Структура("МКД","МКД")));
	ИначеЕсли Не МКД = Неопределено Тогда 
		ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипРавно(Новый Структура("МКД","МКД")));
	КонецЕсли;	
	ПараметрыСхемы 			= Новый Структура;
	ПараметрыСхемы.Вставить("ПараметрыВТ", ПараметрыВТ);
	РегистрыСведений.энргСреднийОбъемПотребленияМКД.СреднийОбъемПотребленияМКД(Схема,ПараметрыСхемы,"СреднийОбъемПотребления");
	 	
	ПараметрыВТ 			= Новый Массив;
	ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипРавно(Новый Структура("Организация,Район,ПериодНачисления","Организация","Район", "ПериодНачисления")));
	Если Не МКД = Неопределено и ТипЗнч(МКД) = Тип("Массив") Тогда
		ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипВСписке(Новый Структура("МКД","МКД")));
	ИначеЕсли Не МКД = Неопределено Тогда 
		ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипРавно(Новый Структура("МКД","МКД")));
	КонецЕсли;
	ПараметрыСхемы 			= Новый Структура;
	ПараметрыСхемы.Вставить("ПараметрыВТ", ПараметрыВТ);
	РегистрыСведений.энргСтабильныеПериодыМКД.ЗначениеПлощадейМКД(Схема, ПараметрыСхемы, "ЗначениеПлощадейМКД");
	
	ПараметрыВТ 			= Новый Массив;
	ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипРавно(Новый Структура("Организация,Район,ПериодНачисления","Организация","Район", "ПериодНачисления")));
	Если Не МКД = Неопределено и ТипЗнч(МКД) = Тип("Массив") Тогда
		ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипВСписке(Новый Структура("МКД","МКД")));
	ИначеЕсли Не МКД = Неопределено Тогда 
		ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипРавно(Новый Структура("МКД","МКД")));
	КонецЕсли;
	ПараметрыСхемы 			= Новый Структура;
	ПараметрыСхемы.Вставить("ПараметрыВТ", ПараметрыВТ);
	ЗаполнитьСхемуЗначениИндивидуальныхПлощадей(Схема, "ЗначениеИндивидуальныхПлощадей", ПараметрыСхемы);
		
	ПараметрыВТ 			= Новый Массив;
	ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипРавно(Новый Структура("Организация,Район,ПериодНачисления","Организация","Район", "ПериодНачисления")));
	Если Не МКД = Неопределено и ТипЗнч(МКД) = Тип("Массив") Тогда
		ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипВСписке(Новый Структура("МКД","МКД")));
	ИначеЕсли Не МКД = Неопределено Тогда 
		ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипРавно(Новый Структура("МКД","МКД")));
	КонецЕсли;
	ПараметрыСхемы 			= Новый Структура;
	ПараметрыСхемы.Вставить("ПараметрыВТ", ПараметрыВТ);
	РегистрыСведений.энргСтабильныеПериодыМКД.СтабильныеПериодыШкалы(Схема, ПараметрыСхемы, "СтабильныеПериодыШкалы");
	  	
	ПараметрыВТ 			= Новый Массив;
	ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипРавно(Новый Структура("Организация,Район,ПериодНачисления","Организация","Район", "ПериодНачисления")));
	Если Не МКД = Неопределено и ТипЗнч(МКД) = Тип("Массив") Тогда
		ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипВСписке(Новый Структура("МКД","МКД")));
	ИначеЕсли Не МКД = Неопределено Тогда 
		ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипРавно(Новый Структура("МКД","МКД")));
	КонецЕсли;
	ПараметрыСхемы 			= Новый Структура;
	ПараметрыСхемы.Вставить("ПараметрыВТ", ПараметрыВТ);
	РегистрыСведений.энргСтабильныеПериодыМКД.СтабильныеПериодыМКД(Схема, ПараметрыСхемы, "СтабильныеПериодыНачало");
	ДобавитьПолеПараметра(Схема,"&НачалоПериодаРасчета", 			"НачалоОП");
	ДобавитьПолеПараметра(Схема,"&ЗавершениеПериодаРасчета", 		"ЗавершениеОП");
	ДобавитьПолеПараметра(Схема,"&ДнейВПериоде", 					"ДнейВПериоде");
	
	ПараметрыВТ 			= Новый Массив;
	ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипРавно(Новый Структура("Организация,Район,ПериодНачисления","Организация","Район", "ПериодНачисления")));
	Если Не МКД = Неопределено и ТипЗнч(МКД) = Тип("Массив") Тогда
		ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипВСписке(Новый Структура("МКД","МКД")));
	ИначеЕсли Не МКД = Неопределено Тогда
		ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипРавно(Новый Структура("МКД","МКД")));
	КонецЕсли;
	ПараметрыСхемы 			= Новый Структура;
	ПараметрыСхемы.Вставить("ПараметрыВТ", ПараметрыВТ);
	РегистрыСведений.энргПредоставленныеПоказанияМКД.ПредоставленныеПоказания(Схема, ПараметрыСхемы, "ПредоставленныеПоказания");
		
	ПараметрыВТ 			= Новый Массив;
	ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипРавно(Новый Структура("Организация,Район,ПериодНачисления","Организация","Район", "ПредыдущийПериодНачисления")));
	Если Не МКД = Неопределено и ТипЗнч(МКД) = Тип("Массив") Тогда
		ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипВСписке(Новый Структура("МКД","МКД")));
	ИначеЕсли Не МКД = Неопределено Тогда
		ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипРавно(Новый Структура("МКД","МКД")));
	КонецЕсли;
	ПараметрыСхемы 			= Новый Структура;
	ПараметрыСхемы.Вставить("ПараметрыВТ", ПараметрыВТ); 	
	РегистрыСведений.энргПредоставленныеПоказанияМКД.МаксимальныеПоказанияСрез(Схема,ПараметрыСхемы,"МаксимальныеПоказанияСрезПредыдущийПериод"); 
		
	ПараметрыВТ 			= Новый Массив;
	ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипРавно(Новый Структура("Организация,Район,ПериодНачисления","Организация","Район", "ПериодНачисления")));
	Если Не МКД = Неопределено и ТипЗнч(МКД) = Тип("Массив") Тогда
		ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипВСписке(Новый Структура("МКД","МКД")));
	ИначеЕсли Не МКД = Неопределено Тогда
		ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипРавно(Новый Структура("МКД","МКД")));
	КонецЕсли;
	ПараметрыСхемы 			= Новый Структура;
	ПараметрыСхемы.Вставить("ПараметрыВТ", ПараметрыВТ); 	
	РегистрыСведений.энргПредоставленныеПоказанияМКД.МаксимальныеПоказанияСрез(Схема,ПараметрыСхемы,"МаксимальныеПоказанияСрезТекущийПериод");
	
	ПараметрыВТ 			= Новый Массив;
	ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипРавно(Новый Структура("Организация,Район,ПериодНачисления","Организация","Район", "ПериодНачисления")));
	Если Не МКД = Неопределено и ТипЗнч(МКД) = Тип("Массив") Тогда
		ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипВСписке(Новый Структура("МКД","МКД")));
	ИначеЕсли Не МКД = Неопределено Тогда
		ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипРавно(Новый Структура("МКД","МКД")));
	КонецЕсли;
	ПараметрыСхемы 			= Новый Структура;
	ПараметрыСхемы.Вставить("ПараметрыВТ", ПараметрыВТ); 	
	РегистрыСведений.энргВыводПриборовУчетаМКД.ДанныеВыводаПрибораУчета(Схема,ПараметрыСхемы,"ДанныеВыводаПрибораУчета");
		
	ПараметрыВТ 			= Новый Массив;
	ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипРавно(Новый Структура("Организация,Район","Организация","Район")));
	Если Не МКД = Неопределено и ТипЗнч(МКД) = Тип("Массив") Тогда
		ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипВСписке(Новый Структура("МКД","МКД")));
	ИначеЕсли Не МКД = Неопределено Тогда
		ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипРавно(Новый Структура("МКД","МКД")));
	КонецЕсли;
	ПараметрыСхемы 			= Новый Структура;
	ПараметрыСхемы.Вставить("ПараметрыВТ", 	ПараметрыВТ);
	ПараметрыСхемы.Вставить("Период", 		энргФормированиеТекстовЗапроса.ПараметрПериодРавно("ЗавершениеПериодаРасчета"));
	РегистрыСведений.энргТипСхемыГВС.ТипСхемыГВС(Схема,ПараметрыСхемы,"ТипСхемыГВС");	
	ДобавитьПолеПараметра(Схема,"&ПериодНачисления","ПериодНачисления");
	
	ПараметрыВТ 			= Новый Массив;
	ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипРавно(Новый Структура("Организация,Район","Организация","Район")));
	Если Не МКД = Неопределено и ТипЗнч(МКД) = Тип("Массив") Тогда
		ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипВСписке(Новый Структура("МКД","МКД")));
	ИначеЕсли Не МКД = Неопределено Тогда
		ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипРавно(Новый Структура("МКД","МКД")));
	КонецЕсли;
	ПараметрыСхемы 			= Новый Структура;
	ПараметрыСхемы.Вставить("ПараметрыВТ", 	ПараметрыВТ);
	ПараметрыСхемы.Вставить("Период", 		энргФормированиеТекстовЗапроса.ПараметрПериодРавно("ЗавершениеПериодаРасчета"));
	РегистрыСведений.энргТипПринадлежностиМКД.ТипПринадлежностиМКД(Схема,ПараметрыСхемы,"ВидыТепловыхПунктов");
	ДобавитьПолеПараметра(Схема,"&ПериодНачисления","ПериодНачисления");
	
	ПараметрыВТ 			= Новый Массив;
	ПараметрыВТ.Добавить(энргФормированиеТекстовЗапроса.ПараметрТипРавно(Новый Структура("Организация,Район,ПериодНачисления,ВидОперацийНачисления","Организация","Район","ПериодНачисления","ВидОперацийНачисленияМКД")));
	ПараметрыСхемы 			= Новый Структура;
	ПараметрыСхемы.Вставить("ПараметрыВТ", 	ПараметрыВТ);
	РегистрыСведений.энргДокументыНачислений.ДокументыНачислений(Схема,ПараметрыСхемы,"ДокументыНачислений");
	
	Справочники.энргВидыДифференцированности.ЗаполнитьСхемуТарифныеЗоныВидовДифференцированности(Схема,Новый Структура,"ВидыДифференцированностиТарифныеЗоны");
	
	ПараметрыЗапроса 		= Новый Структура;
	ПараметрыЗапроса.Вставить("Организация", 					Организация);
	ПараметрыЗапроса.Вставить("ПериодНачисления", 				ПериодНачисления);
	ПараметрыЗапроса.Вставить("ПредыдущийПериодНачисления", 	ДобавитьМесяц(ПериодНачисления,-1));
	ПараметрыЗапроса.Вставить("ЗавершениеПериодаРасчета", 		КонецПериодаРасчета);
	ПараметрыЗапроса.Вставить("НачалоПериодаРасчета", 			НачалоПериодаРасчета);
	ПараметрыЗапроса.Вставить("ДнейВПериоде", 					ДнейВПериоде);	
	ПараметрыЗапроса.Вставить("Район", 							Район);
	ПараметрыЗапроса.Вставить("СтроениеПустаяСсылка", 			Справочники.энргСтроения.ПустаяСсылка());
	ПараметрыЗапроса.Вставить("ОсновноеНаправление", 			Справочники.энргНаправлениеИспользованияТочекУчета.ОсновноеНаправление);
	ПараметрыЗапроса.Вставить("ВидОперацийНачисленияМКД", 		Перечисления.энргВидыОперацийНачисления.РасчетМКД);
	
	Если Не МКД = Неопределено Тогда
		ПараметрыЗапроса.Вставить("МКД", 					МКД);
	КонецЕсли;
	
	энргСхемаЗапросаСервер.ВыполнитьЗапрос(Схема,ПараметрыЗапроса,МВТ); 
	
КонецПроцедуры

Процедура ЗаполнитьСхемуЗначениИндивидуальныхПлощадей(Схема,ТаблицаДляПомещения, ПараметрыСхемы)
	     	
	врСхема 					= Неопределено;
	
	РегистрыСведений.энргСтабильныеПериоды.ЗначениеИндивидуальныхПлощадейМКД(врСхема,ПараметрыСхемы,"");
	Если ОбщегоНазначения.ПодсистемаСуществует("бестБиллингПроект") Тогда
		РегистрыСведений.бестСтабильныеПериодыНП.ЗначениеИндивидуальныхПлощадейМКД(врСхема,ПараметрыСхемы,"");
	Иначе
		ВызватьИсключение "Метод не реализован";
	КонецЕсли;
	
	ТекстПомещения  			= врСхема.ПакетЗапросов[0].ПолучитьТекстЗапроса();
	
	ТекстНежилые  				= врСхема.ПакетЗапросов[1].ПолучитьТекстЗапроса();
	ТекстОбъединения 			= "ВЫБРАТЬ * ИЗ (" + ТекстПомещения + Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ " + Символы.ПС + ТекстНежилые + ") КАК ВложенныйЗапрос";
	
	Пакет 						= Схема.ПакетЗапросов.Добавить(Тип("ЗапросВыбораСхемыЗапроса")); 			
	Пакет.УстановитьТекстЗапроса(ТекстОбъединения);
	Пакет.ТаблицаДляПомещения 	= ТаблицаДляПомещения;
	ОператорВыбора  			= Пакет.Операторы[0];
	ОператорВыбора.ВыбираемыеПоля.Очистить();
	
	ОператорВыбора.ВыбираемыеПоля.Добавить("Организация");
	ОператорВыбора.ВыбираемыеПоля.Добавить("&ПериодНачисления");
	
	КолонкаЗапроса  			= Пакет.Колонки[Пакет.Колонки.Количество()-1];
	КолонкаЗапроса.Псевдоним 	= "ПериодНачисления";
	
	ОператорВыбора.ВыбираемыеПоля.Добавить("Район");
	ОператорВыбора.ВыбираемыеПоля.Добавить("МКД");
	ОператорВыбора.ВыбираемыеПоля.Добавить("Услуга");
	ОператорВыбора.ВыбираемыеПоля.Добавить("СУММА(ВложенныйЗапрос.ПлощадьАбонента)");
	Пакет.Колонки[ОператорВыбора.ВыбираемыеПоля.Количество()-1].Псевдоним = "ПлощадьАбонентов"; 		
	ОператорВыбора.ВыбираемыеПоля.Добавить("СУММА(ВложенныйЗапрос.ПлощадьСобственнаяПоставка)");   		
	Пакет.Колонки[ОператорВыбора.ВыбираемыеПоля.Количество()-1].Псевдоним = "ПлощадьСобственнаяПоставка";
	
КонецПроцедуры

Процедура ДобавитьПолеПараметра(Схема,ВыбираемоеПоле,Псевдоним)
	Пакет 					= Схема.ПакетЗапросов[Схема.ПакетЗапросов.Количество()-1];
	Для Каждого Оператор Из Пакет.Операторы Цикл
		Оператор.ВыбираемыеПоля.Добавить(ВыбираемоеПоле);		
	КонецЦикла;
	КолонкаЗапроса  						= Пакет.Колонки[Пакет.Колонки.Количество()-1];
	КолонкаЗапроса.Псевдоним 				= Псевдоним;
КонецПроцедуры
